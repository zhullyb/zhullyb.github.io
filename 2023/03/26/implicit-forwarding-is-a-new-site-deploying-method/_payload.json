[{"data":1,"prerenderedAt":293},["ShallowReactive",2],{"post-2023-03-26-implicit-forwarding-is-a-new-site-deploying-method":3,"surround-2023-03-26-implicit-forwarding-is-a-new-site-deploying-method":281,"randomIndex/2023/03/26/implicit-forwarding-is-a-new-site-deploying-method/":292},{"id":4,"title":5,"body":6,"date":269,"description":12,"extension":270,"meta":271,"navigation":272,"path":273,"rawbody":274,"seo":275,"stem":276,"sticky":277,"tags":278,"__hash__":280},"posts/posts/implicit-forwarding-is-a-new-site-deploying-method.md","隐式转发——骚套路建站方案",{"type":7,"value":8,"toc":266},"minimark",[9,13,20,23,33,55,58,155,158,164,171,176,179,186,191,195,198,201,217,220,238,241,262],[10,11,12],"p",{},"其实很久以前就接触到了国内 DNS 解析服务商提供的这个「隐式 URL」 这种 “DNS 记录类型”了，但我域名没有备案，一直没有机会去体验。",[10,14,15],{},[16,17],"img",{"alt":18,"src":19},"DNSPOD 的解析面板中提供的记录类型","https://static.031130.xyz/uploads/2024/08/12/641f1e2cd8809.webp",[10,21,22],{},"今天社团内某个同学在折腾自己博客的时候又用到了「隐式 URL」，于是就借此机会了解了一下相关内容。",[10,24,25,32],{},[26,27,31],"a",{"href":28,"rel":29},"https://docs.dnspod.cn/dns/help-redirect-url/",[30],"nofollow","DNSPOD 文档的描述","如下",[34,35,36],"blockquote",{},[10,37,38,42,43,47,48,51,52,54],{},[39,40,41],"strong",{},"隐性转发","：用的是 iframe 框架技术、非重定向技术，效果为浏览器地址栏输入 ",[44,45,46],"code",{},"http://www.dnspod.cn"," 回车，打开网站内容是目标地址 ",[44,49,50],{},"http://cloud.tencent.com/"," 的网站内容，但地址栏显示当前地址 ",[44,53,46],{}," 。",[10,56,57],{},"也就是说，所谓「隐式 URL」，只不过是域名解析的服务商用他们的服务器去响应了访客的请求，并回应了一段使用了 iframe 的 html 。这段代码打开了一个大小为 100% 的窗口去请求了被“隐式代理”的站点。我这位同学域名是备案在阿里云下的，阿里云所使用的 html 代码如下:",[59,60,65],"pre",{"className":61,"code":62,"language":63,"meta":64,"style":64},"language-html shiki shiki-themes one-light one-dark-pro","\u003C!doctype html>\u003Chtml>\u003Cframeset rows=\"100%\">\u003Cframe src=\"http://example.com\">\u003Cnoframes>\u003Ca href=\"http://example.com\">Click here\u003C/a>\u003C/noframes>\u003C/frameset>\u003C/html>\n","html","",[44,66,67],{"__ignoreMap":64},[68,69,72,76,80,84,87,89,91,95,98,101,105,107,110,113,115,118,120,123,125,127,130,132,134,137,139,142,144,146,148,150,152],"span",{"class":70,"line":71},"line",1,[68,73,75],{"class":74},"s5ixo","\u003C!",[68,77,79],{"class":78},"sJa8x","doctype",[68,81,83],{"class":82},"sAGMh"," html",[68,85,86],{"class":74},">\u003C",[68,88,63],{"class":78},[68,90,86],{"class":74},[68,92,94],{"class":93},"s-dj3","frameset",[68,96,97],{"class":82}," rows",[68,99,100],{"class":74},"=",[68,102,104],{"class":103},"sDhpE","\"100%\"",[68,106,86],{"class":74},[68,108,109],{"class":93},"frame",[68,111,112],{"class":82}," src",[68,114,100],{"class":74},[68,116,117],{"class":103},"\"http://example.com\"",[68,119,86],{"class":74},[68,121,122],{"class":93},"noframes",[68,124,86],{"class":74},[68,126,26],{"class":78},[68,128,129],{"class":82}," href",[68,131,100],{"class":74},[68,133,117],{"class":103},[68,135,136],{"class":74},">Click here\u003C/",[68,138,26],{"class":78},[68,140,141],{"class":74},">\u003C/",[68,143,122],{"class":93},[68,145,141],{"class":74},[68,147,94],{"class":93},[68,149,141],{"class":74},[68,151,63],{"class":78},[68,153,154],{"class":74},">\n",[10,156,157],{},"在下图中，我通过更改 hosts 文件实现将百度的域名在本地被解析到 localhost，并使用 iframe 标签将 b 站嵌入到页面中。当然，这并不能说明什么事情，不过是我个人的恶趣味罢了。",[10,159,160],{},[16,161],{"alt":162,"src":163},"example","https://static.031130.xyz/uploads/2024/08/12/641f2272ab7fb.webp",[10,165,166,167,170],{},"将 ",[44,168,169],{},"http://example.com","改为目标站点，我们完全可以摆脱国内云服务商，在自己的服务器上直接实现「隐式代理」的效果。",[10,172,173],{},[39,174,175],{},"而这种方案，恰巧可以用于在境内机子上建站，尤其是针对未备案的域名。",[10,177,178],{},"碍于 Github Pages 在境内的访问体验并不好，所以直接把博客部署在 Github Pages 下一直都不是首选，因此很多人都会选择去购买一台境内的小鸡，带宽虽然不大，但跑个博客什么的其实没什么大问题，但备案就很麻烦了。",[10,180,181,182,185],{},"我们可以通过在 Github Pages（或者其他境外的服务器） 上挂一个 ",[44,183,184],{},"index.html"," ，html 中使用 iframe 嵌套一个部署在境内小鸡上的网页来规避掉备案的问题。而境内小鸡可以选用非标准端口去监听请求。",[16,187],{"src":188,"alt":189,"style":190},"https://static.031130.xyz/uploads/2024/08/12/642014b05bb43.webp","使用隐式转发","zoom:67%;",[16,192],{"src":193,"alt":194,"style":190},"https://static.031130.xyz/uploads/2024/08/12/642014519ce2a.webp","2.drawio.png",[10,196,197],{},"这样带来的好处是访客只需要从境外的服务器上获取一个不到 1 KB 大小的 html ，随后的所有请求都是指向境内云服务器的，所以网页打开时的体验会得到改善。",[10,199,200],{},"隐式转发拥有以下优势：",[202,203,204,208,211,214],"ul",{},[205,206,207],"li",{},"直接向境内的云服务器发送请求，速度会得到改善 （相比于直接部署在境外服务器上的方案）",[205,209,210],{},"不怎么消耗境外服务器的流量 （相比于使用境外服务器反向代理的方案）",[205,212,213],{},"浏览器的地址栏不会直接显示 ip 或端口号（相比于未备案使用境内服务器的非标准端口的方案）",[205,215,216],{},"不需要备案（相比于备案后使用境内服务器的 80/443 端口的方案）",[10,218,219],{},"但也存在以下劣势：",[202,221,222,225,232,235],{},[205,223,224],{},"移动端设备访问时好像还是会展示 PC 端的界面（存疑",[205,226,227,228,231],{},"现代浏览器访问时可能会有 ",[44,229,230],{},"strict-origin-when-cross-origin"," 的问题（一般好像是出现在 iframe 的 html 是 https 访问，而目标站点是 http 访问的情况？）",[205,233,234],{},"一些古老的浏览器可能不支持 iframe （？",[205,236,237],{},"访问目标站点的其他路径时，浏览器地址栏的显示的地址不会变",[239,240],"hr",{},[10,242,243,244,249,250,255,256,261],{},"那么应",[26,245,248],{"href":246,"rel":247},"https://static.031130.xyz/uploads/2024/08/12/64201607999e3.webp",[30],"某些群友的要求","，本文的第二作者为 ",[26,251,254],{"href":252,"rel":253},"https://blog.f1nley.xyz",[30],"Finley","，通信作者为 ",[26,257,260],{"href":258,"rel":259},"https://blog.chordvers.com/",[30],"LanStarD","。",[263,264,265],"style",{},"html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html pre.shiki code .sJa8x, html code.shiki .sJa8x{--shiki-default:#E45649;--shiki-dark:#E06C75}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}html pre.shiki code .s-dj3, html code.shiki .s-dj3{--shiki-default:#000000;--shiki-dark:#FFFFFF}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":64,"searchDepth":267,"depth":267,"links":268},2,[],"2023-03-26 00:10:02","md",{},true,"/2023/03/26/implicit-forwarding-is-a-new-site-deploying-method","---\ntitle: 隐式转发——骚套路建站方案\ndate: 2023-03-26 00:10:02\nsticky:\ntags:\n- Network\n---\n\n其实很久以前就接触到了国内 DNS 解析服务商提供的这个「隐式 URL」 这种 “DNS 记录类型”了，但我域名没有备案，一直没有机会去体验。\n\n![DNSPOD 的解析面板中提供的记录类型](https://static.031130.xyz/uploads/2024/08/12/641f1e2cd8809.webp)\n\n今天社团内某个同学在折腾自己博客的时候又用到了「隐式 URL」，于是就借此机会了解了一下相关内容。\n\n[DNSPOD 文档的描述](https://docs.dnspod.cn/dns/help-redirect-url/)如下\n\n> **隐性转发**：用的是 iframe 框架技术、非重定向技术，效果为浏览器地址栏输入 `http://www.dnspod.cn` 回车，打开网站内容是目标地址 `http://cloud.tencent.com/` 的网站内容，但地址栏显示当前地址 `http://www.dnspod.cn` 。\n\n也就是说，所谓「隐式 URL」，只不过是域名解析的服务商用他们的服务器去响应了访客的请求，并回应了一段使用了 iframe 的 html 。这段代码打开了一个大小为 100% 的窗口去请求了被“隐式代理”的站点。我这位同学域名是备案在阿里云下的，阿里云所使用的 html 代码如下:\n\n```html\n\u003C!doctype html>\u003Chtml>\u003Cframeset rows=\"100%\">\u003Cframe src=\"http://example.com\">\u003Cnoframes>\u003Ca href=\"http://example.com\">Click here\u003C/a>\u003C/noframes>\u003C/frameset>\u003C/html>\n```\n\n在下图中，我通过更改 hosts 文件实现将百度的域名在本地被解析到 localhost，并使用 iframe 标签将 b 站嵌入到页面中。当然，这并不能说明什么事情，不过是我个人的恶趣味罢了。\n\n![example](https://static.031130.xyz/uploads/2024/08/12/641f2272ab7fb.webp)\n\n将 `http://example.com`改为目标站点，我们完全可以摆脱国内云服务商，在自己的服务器上直接实现「隐式代理」的效果。\n\n**而这种方案，恰巧可以用于在境内机子上建站，尤其是针对未备案的域名。**\n\n碍于 Github Pages 在境内的访问体验并不好，所以直接把博客部署在 Github Pages 下一直都不是首选，因此很多人都会选择去购买一台境内的小鸡，带宽虽然不大，但跑个博客什么的其实没什么大问题，但备案就很麻烦了。\n\n我们可以通过在 Github Pages（或者其他境外的服务器） 上挂一个 `index.html` ，html 中使用 iframe 嵌套一个部署在境内小鸡上的网页来规避掉备案的问题。而境内小鸡可以选用非标准端口去监听请求。\n\n\u003Cimg src=\"https://static.031130.xyz/uploads/2024/08/12/642014b05bb43.webp\" alt=\"使用隐式转发\" style=\"zoom:67%;\" />\n\n\u003Cimg src=\"https://static.031130.xyz/uploads/2024/08/12/642014519ce2a.webp\" alt=\"2.drawio.png\" style=\"zoom:67%;\" />\n\n这样带来的好处是访客只需要从境外的服务器上获取一个不到 1 KB 大小的 html ，随后的所有请求都是指向境内云服务器的，所以网页打开时的体验会得到改善。\n\n隐式转发拥有以下优势：\n\n- 直接向境内的云服务器发送请求，速度会得到改善 （相比于直接部署在境外服务器上的方案）\n- 不怎么消耗境外服务器的流量 （相比于使用境外服务器反向代理的方案）\n- 浏览器的地址栏不会直接显示 ip 或端口号（相比于未备案使用境内服务器的非标准端口的方案）\n- 不需要备案（相比于备案后使用境内服务器的 80/443 端口的方案）\n\n但也存在以下劣势：\n\n- 移动端设备访问时好像还是会展示 PC 端的界面（存疑\n- 现代浏览器访问时可能会有 `strict-origin-when-cross-origin` 的问题（一般好像是出现在 iframe 的 html 是 https 访问，而目标站点是 http 访问的情况？）\n- 一些古老的浏览器可能不支持 iframe （？\n- 访问目标站点的其他路径时，浏览器地址栏的显示的地址不会变\n\n***\n\n那么应[某些群友的要求](https://static.031130.xyz/uploads/2024/08/12/64201607999e3.webp)，本文的第二作者为 [Finley](https://blog.f1nley.xyz)，通信作者为 [LanStarD](https://blog.chordvers.com/)。\n\n",{"title":5,"description":12},"posts/implicit-forwarding-is-a-new-site-deploying-method",false,[279],"Network","DGA2lrJTmSYmjs685oU_KZK5EYl_geY8pEVw1e9DUNU",[282,287],{"title":283,"path":284,"stem":285,"date":286,"children":-1},"执行 repo sync 后将 git-lfs 中的资源文件 checkout","/2023/05/03/checkout-lfs-file-after-repo-sync","posts/checkout-lfs-file-after-repo-sync","2023-05-03 01:15:35",{"title":288,"path":289,"stem":290,"date":291,"children":-1},"在 vps 上配合 caddy 部署 siteproxy","/2023/02/01/deploy-siteproxy-with-caddy-on-vps","posts/deploy-siteproxy-with-caddy-on-vps","2023-02-01 22:33:53",18,1761738776535]