[{"data":1,"prerenderedAt":504},["ShallowReactive",2],{"post-2023-02-01-deploy-siteproxy-with-caddy-on-vps":3,"surround-2023-02-01-deploy-siteproxy-with-caddy-on-vps":492,"randomIndex/2023/02/01/deploy-siteproxy-with-caddy-on-vps/":503},{"id":4,"title":5,"body":6,"date":477,"description":478,"extension":479,"meta":480,"navigation":481,"path":482,"rawbody":483,"seo":484,"stem":485,"sticky":486,"tags":487,"__hash__":491},"posts/posts/deploy-siteproxy-with-caddy-on-vps.md","在 vps 上配合 caddy 部署 siteproxy",{"type":7,"value":8,"toc":466},"minimark",[9,21,29,32,49,52,57,73,144,155,159,174,177,184,187,190,236,269,275,278,365,369,376,389,396,399,412,419,426,429,432,440,447,451,458,462],[10,11,12,13,20],"p",{},"之前趁着春节活动的时候在某 vps 服务商买了 1 年的 vps，线路不算太好，但勉强够用，于是打算在上面部署一些反代程序。在群友的推荐下，发现了这款名为 ",[14,15,19],"a",{"href":16,"rel":17},"https://github.com/netptop/siteproxy",[18],"nofollow","siteproxy"," 的开源项目。",[10,22,23,24,28],{},"siteproxy 相较于我在 ",[25,26,27],"code",{},"r.zhullyb.top"," 部署的那个反代，其特点是可以运行在 vps 上，且将会替换被反代页面上的所有 url，因此遇到使用相对路径的网页也可以从容应对。",[10,30,31],{},"在项目的 README 中介绍了一种部署方案，但我仍有以下几点不太满意",[33,34,35,39,46],"ul",{},[36,37,38],"li",{},"README 中的方案仅支持 nginx 部署，但我希望使用 caddy",[36,40,41,42,45],{},"README 中的方案使用 npm 安装了 ",[25,43,44],{},"forever"," 来达到保活的目的，甚至为此安装了 nvm，但我一不希望使用 npm 在系统上安装软件、二不希望安装 nvm 与 forever",[36,47,48],{},"原项目把根目录页做成了一个导航，指向了一些比较敏感的站点，而我希望换掉这个网页。",[10,50,51],{},"因此这篇博客也就应运而生。",[53,54,56],"h2",{"id":55},"反代-8011-端口","反代 8011 端口",[10,58,59,60,63,64,68,69,72],{},"根据项目 README 的描述，我们应当使用 nginx 去反代 ",[25,61,62],{},"127.0.0.1:8011"," 端口，但我是 caddy 用户，此前也",[14,65,67],{"href":66},"/2022/05/30/use-caddy-to-proxy-wikipedia/","有过使用 caddy 反代","的经验，所以很容易写出一段使得程序可以正确运行的 ",[25,70,71],{},"Caddyfile","。",[74,75,80],"pre",{"className":76,"code":77,"language":78,"meta":79,"style":79},"language-nginx shiki shiki-themes one-light one-dark-pro","example.com {\n        reverse_proxy   127.0.0.1:8011 {\n                header_up Host {upstream_hostport}\n                header_up X-Real-IP {http.request.remote.host}\n                header_up X-Forwarded-For {http.request.remote.host}\n                header_up X-Forwarded-Port {http.request.port}\n                header_up X-Forwarded-Proto {http.request.scheme}\n                header_up Accept-Encoding identity\n        }\n}\n","nginx","",[25,81,82,90,96,102,108,114,120,126,132,138],{"__ignoreMap":79},[83,84,87],"span",{"class":85,"line":86},"line",1,[83,88,89],{},"example.com {\n",[83,91,93],{"class":85,"line":92},2,[83,94,95],{},"        reverse_proxy   127.0.0.1:8011 {\n",[83,97,99],{"class":85,"line":98},3,[83,100,101],{},"                header_up Host {upstream_hostport}\n",[83,103,105],{"class":85,"line":104},4,[83,106,107],{},"                header_up X-Real-IP {http.request.remote.host}\n",[83,109,111],{"class":85,"line":110},5,[83,112,113],{},"                header_up X-Forwarded-For {http.request.remote.host}\n",[83,115,117],{"class":85,"line":116},6,[83,118,119],{},"                header_up X-Forwarded-Port {http.request.port}\n",[83,121,123],{"class":85,"line":122},7,[83,124,125],{},"                header_up X-Forwarded-Proto {http.request.scheme}\n",[83,127,129],{"class":85,"line":128},8,[83,130,131],{},"                header_up Accept-Encoding identity\n",[83,133,135],{"class":85,"line":134},9,[83,136,137],{},"        }\n",[83,139,141],{"class":85,"line":140},10,[83,142,143],{},"}\n",[10,145,146,147,150,151,154],{},"将 ",[25,148,149],{},"example.com"," 的 A 记录解析到 vps 主机的 ip，并使用 ",[25,152,153],{},"systemctl"," 重新启动 caddy，这一步就算完成了。",[53,156,158],{"id":157},"安装-nodejs","安装 nodejs",[10,160,161,162,165,166,169,170,173],{},"我在 vps 上安装的发行版是 Archlinux，所以直接 ",[25,163,164],{},"pacman -S nodejs"," 安装完就是了，别的发行版应该也可以直接调用系统默认的包管理器安装 ",[25,167,168],{},"node"," 或者 ",[25,171,172],{},"nodejs"," 完成这一步。",[53,175,176],{"id":176},"下载程序",[10,178,179,180,183],{},"首先，我们需要一个地方来存放我们下载的程序，我使用的是 ",[25,181,182],{},"/opt"," 路径。",[10,185,186],{},"我们可以直接根据 README 所说的，直接 clone 整个项目，但我本人并不想这么做，项目里似乎有太多对于 vps 用户没有用的东西了。此外，整个项目首页我也不想要，首页的导航指向了一些比较敏感的网站，而我的反代就想安安心心的一个人用。",[10,188,189],{},"综合以上需求，我所需要的文件一共就五个:",[74,191,195],{"className":192,"code":193,"language":194,"meta":79,"style":79},"language-bash shiki shiki-themes one-light one-dark-pro","├── config.js\n├── index.js\n├── logger.js\n├── package.json\n└── Proxy.js\n","bash",[25,196,197,207,214,221,228],{"__ignoreMap":79},[83,198,199,203],{"class":85,"line":86},[83,200,202],{"class":201},"sAdtL","├──",[83,204,206],{"class":205},"sDhpE"," config.js\n",[83,208,209,211],{"class":85,"line":92},[83,210,202],{"class":201},[83,212,213],{"class":205}," index.js\n",[83,215,216,218],{"class":85,"line":98},[83,217,202],{"class":201},[83,219,220],{"class":205}," logger.js\n",[83,222,223,225],{"class":85,"line":104},[83,224,202],{"class":201},[83,226,227],{"class":205}," package.json\n",[83,229,230,233],{"class":85,"line":110},[83,231,232],{"class":201},"└──",[83,234,235],{"class":205}," Proxy.js\n",[74,237,239],{"className":192,"code":238,"language":194,"meta":79,"style":79},"mkdir -p /opt/siteproxy\ncd /opt/siteproxy\nwget https://raw.githubusercontent.com/netptop/siteproxy/master/{config.js,index.js,logger.js,package.json,Proxy.js}\n",[25,240,241,253,261],{"__ignoreMap":79},[83,242,243,246,250],{"class":85,"line":86},[83,244,245],{"class":201},"mkdir",[83,247,249],{"class":248},"sAGMh"," -p",[83,251,252],{"class":205}," /opt/siteproxy\n",[83,254,255,259],{"class":85,"line":92},[83,256,258],{"class":257},"s_Sar","cd",[83,260,252],{"class":205},[83,262,263,266],{"class":85,"line":98},[83,264,265],{"class":201},"wget",[83,267,268],{"class":205}," https://raw.githubusercontent.com/netptop/siteproxy/master/{config.js,index.js,logger.js,package.json,Proxy.js}\n",[10,270,271,272],{},"然后补上一个 ",[25,273,274],{},"index.html",[10,276,277],{},"我这边选择直接使用 JavaScript 将对于 / 的访问直接重定向到我的博客。",[74,279,283],{"className":280,"code":281,"language":282,"meta":79,"style":79},"language-javascript shiki shiki-themes one-light one-dark-pro","\u003Chtml>\u003Chead>\u003Cmeta http-equiv=\"refresh\" content=\"0; url=https://zhul.in/\" />\u003C/head>\u003Cbody>Redirect to \u003Ca href=\"\">https://zhul.in/\u003C/a>\u003C/body>\u003C/html>\n","javascript",[25,284,285],{"__ignoreMap":79},[83,286,287,291,295,298,301,303,306,310,314,317,320,322,325,328,330,332,335,338,340,343,345,348,351,353,356,358,360,362],{"class":85,"line":86},[83,288,290],{"class":289},"s5ixo","\u003C",[83,292,294],{"class":293},"sJa8x","html",[83,296,297],{"class":289},">\u003C",[83,299,300],{"class":293},"head",[83,302,297],{"class":289},[83,304,305],{"class":293},"meta",[83,307,309],{"class":308},"so_Uh"," http-equiv",[83,311,313],{"class":312},"sknuh","=",[83,315,316],{"class":205},"\"refresh\"",[83,318,319],{"class":308}," content",[83,321,313],{"class":312},[83,323,324],{"class":205},"\"0; url=https://zhul.in/\"",[83,326,327],{"class":289}," />\u003C/",[83,329,300],{"class":293},[83,331,297],{"class":289},[83,333,334],{"class":293},"body",[83,336,337],{"class":289},">Redirect to \u003C",[83,339,14],{"class":293},[83,341,342],{"class":308}," href",[83,344,313],{"class":312},[83,346,347],{"class":205},"\"\"",[83,349,350],{"class":289},">https://zhul.in/\u003C/",[83,352,14],{"class":293},[83,354,355],{"class":289},">\u003C/",[83,357,334],{"class":293},[83,359,355],{"class":289},[83,361,294],{"class":293},[83,363,364],{"class":289},">\n",[366,367,368],"h3",{"id":368},"安装依赖",[10,370,371,372,375],{},"在 ",[25,373,374],{},"/opt/siteproxy"," 目录下执行",[74,377,379],{"className":192,"code":378,"language":194,"meta":79,"style":79},"npm install\n",[25,380,381],{"__ignoreMap":79},[83,382,383,386],{"class":85,"line":86},[83,384,385],{"class":201},"npm",[83,387,388],{"class":205}," install\n",[10,390,391,392,395],{},"npm 将会根据 ",[25,393,394],{},"package.json"," 的内容自动安装所需的依赖。",[53,397,398],{"id":398},"修改配置文件",[74,400,402],{"className":192,"code":401,"language":194,"meta":79,"style":79},"$EDITOR /opt/siteproxy/config.js\n",[25,403,404],{"__ignoreMap":79},[83,405,406,409],{"class":85,"line":86},[83,407,408],{"class":293},"$EDITOR",[83,410,411],{"class":289}," /opt/siteproxy/config.js\n",[10,413,414,415,418],{},"按照 README 所说，修改 ",[25,416,417],{},"serverName"," 字段",[10,420,421],{},[422,423],"img",{"alt":424,"src":425},"需要修改的 serverName 字段","https://static.031130.xyz/uploads/2024/08/12/63da866e26712.webp",[53,427,428],{"id":428},"设置开机自启动",[10,430,431],{},"这里我选择使用 systemd 帮助我实现 siteproxy 程序的开机自启动，service 文件是我直接根据 frp 程序提供的 service 改的。",[74,433,438],{"className":434,"code":436,"language":437},[435],"language-text","cat /usr/lib/systemd/system/siteproxy.service \n-----\n[Unit]\nDescription=SiteProxy\nAfter=network-online.target\nWants=network-online.target\n\n[Service]\nType=simple\nUser=nobody\nRestart=on-failure\nRestartSec=5s\nEnvironment=\"NODE_PATH=/opt/siteproxy/\"\nExecStart=node --tls-min-v1.0 /opt/siteproxy/index.js \n\n[Install]\nWantedBy=multi-user.target\n","text",[25,439,436],{"__ignoreMap":79},[10,441,442,443,446],{},"随后使用 ",[25,444,445],{},"systemctl enable siteproxy --now"," 启动即可访问。",[53,448,450],{"id":449},"为反代站点添加访问密码可选","为反代站点添加访问密码（可选）",[10,452,453,454,72],{},"参考",[14,455,457],{"href":456},"/2021/10/21/picuploader-on-archlinux-with-caddy/#%E8%AE%BE%E7%BD%AE%E8%AE%BF%E9%97%AE%E5%AF%86%E7%A0%81%EF%BC%88%E5%8F%AF%E9%80%89%EF%BC%89","我的另一篇博客",[53,459,461],{"id":460},"使用防火墙程序禁止-8011-的公网访问可选","使用防火墙程序禁止 8011 的公网访问（可选）",[463,464,465],"style",{},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}html pre.shiki code .s_Sar, html code.shiki .s_Sar{--shiki-default:#0184BC;--shiki-dark:#56B6C2}html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html pre.shiki code .sJa8x, html code.shiki .sJa8x{--shiki-default:#E45649;--shiki-dark:#E06C75}html pre.shiki code .so_Uh, html code.shiki .so_Uh{--shiki-default:#986801;--shiki-default-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic}html pre.shiki code .sknuh, html code.shiki .sknuh{--shiki-default:#383A42;--shiki-dark:#56B6C2}",{"title":79,"searchDepth":92,"depth":92,"links":467},[468,469,470,473,474,475,476],{"id":55,"depth":92,"text":56},{"id":157,"depth":92,"text":158},{"id":176,"depth":92,"text":176,"children":471},[472],{"id":368,"depth":98,"text":368},{"id":398,"depth":92,"text":398},{"id":428,"depth":92,"text":428},{"id":449,"depth":92,"text":450},{"id":460,"depth":92,"text":461},"2023-02-01 22:33:53","之前趁着春节活动的时候在某 vps 服务商买了 1 年的 vps，线路不算太好，但勉强够用，于是打算在上面部署一些反代程序。在群友的推荐下，发现了这款名为 siteproxy 的开源项目。","md",{},true,"/2023/02/01/deploy-siteproxy-with-caddy-on-vps","---\ntitle: 在 vps 上配合 caddy 部署 siteproxy\ndate: 2023-02-01 22:33:53\nsticky:\ntags:\n- OpenSource Project\n- siteproxy\n- Archlinux\n- nodejs\n- Caddy\n---\n\n之前趁着春节活动的时候在某 vps 服务商买了 1 年的 vps，线路不算太好，但勉强够用，于是打算在上面部署一些反代程序。在群友的推荐下，发现了这款名为 [siteproxy](https://github.com/netptop/siteproxy) 的开源项目。\n\nsiteproxy 相较于我在 `r.zhullyb.top` 部署的那个反代，其特点是可以运行在 vps 上，且将会替换被反代页面上的所有 url，因此遇到使用相对路径的网页也可以从容应对。\n\n在项目的 README 中介绍了一种部署方案，但我仍有以下几点不太满意\n\n- README 中的方案仅支持 nginx 部署，但我希望使用 caddy\n- README 中的方案使用 npm 安装了 `forever` 来达到保活的目的，甚至为此安装了 nvm，但我一不希望使用 npm 在系统上安装软件、二不希望安装 nvm 与 forever\n- 原项目把根目录页做成了一个导航，指向了一些比较敏感的站点，而我希望换掉这个网页。\n\n因此这篇博客也就应运而生。\n\n## 反代 8011 端口\n\n根据项目 README 的描述，我们应当使用 nginx 去反代 `127.0.0.1:8011` 端口，但我是 caddy 用户，此前也[有过使用 caddy 反代](/2022/05/30/use-caddy-to-proxy-wikipedia/)的经验，所以很容易写出一段使得程序可以正确运行的 `Caddyfile`。\n\n```nginx\nexample.com {\n        reverse_proxy   127.0.0.1:8011 {\n                header_up Host {upstream_hostport}\n                header_up X-Real-IP {http.request.remote.host}\n                header_up X-Forwarded-For {http.request.remote.host}\n                header_up X-Forwarded-Port {http.request.port}\n                header_up X-Forwarded-Proto {http.request.scheme}\n                header_up Accept-Encoding identity\n        }\n}\n```\n\n将 `example.com` 的 A 记录解析到 vps 主机的 ip，并使用 `systemctl` 重新启动 caddy，这一步就算完成了。\n\n## 安装 nodejs\n\n我在 vps 上安装的发行版是 Archlinux，所以直接 `pacman -S nodejs` 安装完就是了，别的发行版应该也可以直接调用系统默认的包管理器安装 `node` 或者 `nodejs` 完成这一步。\n\n## 下载程序\n\n首先，我们需要一个地方来存放我们下载的程序，我使用的是 `/opt` 路径。\n\n我们可以直接根据 README 所说的，直接 clone 整个项目，但我本人并不想这么做，项目里似乎有太多对于 vps 用户没有用的东西了。此外，整个项目首页我也不想要，首页的导航指向了一些比较敏感的网站，而我的反代就想安安心心的一个人用。\n\n综合以上需求，我所需要的文件一共就五个: \n\n```bash\n├── config.js\n├── index.js\n├── logger.js\n├── package.json\n└── Proxy.js\n```\n\n```bash\nmkdir -p /opt/siteproxy\ncd /opt/siteproxy\nwget https://raw.githubusercontent.com/netptop/siteproxy/master/{config.js,index.js,logger.js,package.json,Proxy.js}\n```\n\n然后补上一个 `index.html`\n\n我这边选择直接使用 JavaScript 将对于 / 的访问直接重定向到我的博客。\n\n```javascript\n\u003Chtml>\u003Chead>\u003Cmeta http-equiv=\"refresh\" content=\"0; url=https://zhul.in/\" />\u003C/head>\u003Cbody>Redirect to \u003Ca href=\"\">https://zhul.in/\u003C/a>\u003C/body>\u003C/html>\n```\n\n### 安装依赖\n\n在 `/opt/siteproxy` 目录下执行\n\n```bash\nnpm install\n```\n\nnpm 将会根据 `package.json` 的内容自动安装所需的依赖。\n\n## 修改配置文件\n\n```bash\n$EDITOR /opt/siteproxy/config.js\n```\n\n按照 README 所说，修改 `serverName` 字段\n\n![需要修改的 serverName 字段](https://static.031130.xyz/uploads/2024/08/12/63da866e26712.webp)\n\n## 设置开机自启动\n\n这里我选择使用 systemd 帮助我实现 siteproxy 程序的开机自启动，service 文件是我直接根据 frp 程序提供的 service 改的。\n\n```\ncat /usr/lib/systemd/system/siteproxy.service \n-----\n[Unit]\nDescription=SiteProxy\nAfter=network-online.target\nWants=network-online.target\n\n[Service]\nType=simple\nUser=nobody\nRestart=on-failure\nRestartSec=5s\nEnvironment=\"NODE_PATH=/opt/siteproxy/\"\nExecStart=node --tls-min-v1.0 /opt/siteproxy/index.js \n\n[Install]\nWantedBy=multi-user.target\n```\n\n随后使用 `systemctl enable siteproxy --now` 启动即可访问。\n\n## 为反代站点添加访问密码（可选）\n\n参考[我的另一篇博客](/2021/10/21/picuploader-on-archlinux-with-caddy/#%E8%AE%BE%E7%BD%AE%E8%AE%BF%E9%97%AE%E5%AF%86%E7%A0%81%EF%BC%88%E5%8F%AF%E9%80%89%EF%BC%89)。\n\n## 使用防火墙程序禁止 8011 的公网访问（可选）\n",{"title":5,"description":478},"posts/deploy-siteproxy-with-caddy-on-vps",false,[488,19,489,172,490],"OpenSource Project","Archlinux","Caddy","hI22FWVo2eGb9S8qMjmHCjXzxwSyg_inskH4rXf3rBk",[493,498],{"title":494,"path":495,"stem":496,"date":497,"children":-1},"隐式转发——骚套路建站方案","/2023/03/26/implicit-forwarding-is-a-new-site-deploying-method","posts/implicit-forwarding-is-a-new-site-deploying-method","2023-03-26 00:10:02",{"title":499,"path":500,"stem":501,"date":502,"children":-1},"onedrive(by abraunegg) —— 一个 Linux 下的开源 OneDrive 客户端(cli)","/2022/12/24/onedrive-abraunegg-recommendation","posts/onedrive-abraunegg-recommendation","2022-12-24 22:40:13",24,1761837274818]