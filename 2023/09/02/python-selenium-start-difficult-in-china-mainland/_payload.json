[{"data":1,"prerenderedAt":341},["ShallowReactive",2],{"post-2023-09-02-python-selenium-start-difficult-in-china-mainland":3,"surround-2023-09-02-python-selenium-start-difficult-in-china-mainland":330,"randomIndex/2023/09/02/python-selenium-start-difficult-in-china-mainland/":62},{"id":4,"title":5,"body":6,"date":316,"description":317,"extension":318,"meta":319,"navigation":107,"path":320,"rawbody":321,"seo":322,"stem":323,"sticky":324,"tags":325,"__hash__":329},"posts/posts/python-selenium-start-difficult-in-china-mainland.md","手动指定 python-selenium 的 driver path 以解决在中国大陆网络环境下启动卡住的问题",{"type":7,"value":8,"toc":314},"minimark",[9,21,24,172,180,186,189,202,210,258,261,307,310],[10,11,12,13,20],"p",{},"之前因为学校社团迎新的需求，就临时写了一个 QQ Bot，最近又给 bot 加上了 ",[14,15,19],"a",{"href":16,"rel":17},"https://github.com/zhullyb/qq-quote-generator",[18],"nofollow","/q 的功能","，原理是通过 python 的 selenium 去启动一个 headless Firefox 去截由 jinja2 模板引擎生成的 html 的图。",[10,22,23],{},"每次这个 bot 重启的时候都因为 selenium 而需要花费好几秒的时间，甚至经常概率性启动失败。我就寻思者应该把这个图片生成的 generator 从 bot 中抽出来，这样就不至于每次重启 bot 都要遭此一劫。但就在我将 generator 打包成 docker 部署上云服务器的时候，发现居然无法启动。于是手动进 docker 的 shell 开 python 的交互式终端，发现在创建 firefox 的 webdriver 对象的时候异常缓慢，等了半分钟以后蹲到一个报错如下:",[25,26,31],"pre",{"className":27,"code":28,"language":29,"meta":30,"style":30},"language-pyth shiki shiki-themes one-light one-dark-pro","Traceback (most recent call last):\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/common/driver_finder.py\", line 38, in get_path\n    path = SeleniumManager().driver_location(options) if path is None else path\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/common/selenium_manager.py\", line 95, in driver_location\n    output = self.run(args)\n             ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/common/selenium_manager.py\", line 141, in run\n    raise WebDriverException(f\"Unsuccessful command executed: {command}.\\n{result}{stderr}\")\nselenium.common.exceptions.WebDriverException: Message: Unsuccessful command executed: /usr/local/lib/python3.11/site-packages/selenium/webdriver/common/linux/selenium-manager --browser firefox --output json.\n{'code': 65, 'message': 'error sending request for url (https://github.com/mozilla/geckodriver/releases/latest): connection error: unexpected end of file', 'driver_path': '', 'browser_path': ''}\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"\u003Cstdin>\", line 1, in \u003Cmodule>\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/firefox/webdriver.py\", line 59, in __init__\n    self.service.path = DriverFinder.get_path(self.service, options)\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/common/driver_finder.py\", line 41, in get_path\n    raise NoSuchDriverException(msg) from err\nselenium.common.exceptions.NoSuchDriverException: Message: Unable to obtain driver for firefox using Selenium Manager.; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location\n","pyth","",[32,33,34,42,48,54,60,66,72,78,84,90,96,102,109,114,120,125,130,136,142,148,154,160,166],"code",{"__ignoreMap":30},[35,36,39],"span",{"class":37,"line":38},"line",1,[35,40,41],{},"Traceback (most recent call last):\n",[35,43,45],{"class":37,"line":44},2,[35,46,47],{},"  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/common/driver_finder.py\", line 38, in get_path\n",[35,49,51],{"class":37,"line":50},3,[35,52,53],{},"    path = SeleniumManager().driver_location(options) if path is None else path\n",[35,55,57],{"class":37,"line":56},4,[35,58,59],{},"           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",[35,61,63],{"class":37,"line":62},5,[35,64,65],{},"  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/common/selenium_manager.py\", line 95, in driver_location\n",[35,67,69],{"class":37,"line":68},6,[35,70,71],{},"    output = self.run(args)\n",[35,73,75],{"class":37,"line":74},7,[35,76,77],{},"             ^^^^^^^^^^^^^^\n",[35,79,81],{"class":37,"line":80},8,[35,82,83],{},"  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/common/selenium_manager.py\", line 141, in run\n",[35,85,87],{"class":37,"line":86},9,[35,88,89],{},"    raise WebDriverException(f\"Unsuccessful command executed: {command}.\\n{result}{stderr}\")\n",[35,91,93],{"class":37,"line":92},10,[35,94,95],{},"selenium.common.exceptions.WebDriverException: Message: Unsuccessful command executed: /usr/local/lib/python3.11/site-packages/selenium/webdriver/common/linux/selenium-manager --browser firefox --output json.\n",[35,97,99],{"class":37,"line":98},11,[35,100,101],{},"{'code': 65, 'message': 'error sending request for url (https://github.com/mozilla/geckodriver/releases/latest): connection error: unexpected end of file', 'driver_path': '', 'browser_path': ''}\n",[35,103,105],{"class":37,"line":104},12,[35,106,108],{"emptyLinePlaceholder":107},true,"\n",[35,110,112],{"class":37,"line":111},13,[35,113,108],{"emptyLinePlaceholder":107},[35,115,117],{"class":37,"line":116},14,[35,118,119],{},"The above exception was the direct cause of the following exception:\n",[35,121,123],{"class":37,"line":122},15,[35,124,108],{"emptyLinePlaceholder":107},[35,126,128],{"class":37,"line":127},16,[35,129,41],{},[35,131,133],{"class":37,"line":132},17,[35,134,135],{},"  File \"\u003Cstdin>\", line 1, in \u003Cmodule>\n",[35,137,139],{"class":37,"line":138},18,[35,140,141],{},"  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/firefox/webdriver.py\", line 59, in __init__\n",[35,143,145],{"class":37,"line":144},19,[35,146,147],{},"    self.service.path = DriverFinder.get_path(self.service, options)\n",[35,149,151],{"class":37,"line":150},20,[35,152,153],{},"                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",[35,155,157],{"class":37,"line":156},21,[35,158,159],{},"  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/common/driver_finder.py\", line 41, in get_path\n",[35,161,163],{"class":37,"line":162},22,[35,164,165],{},"    raise NoSuchDriverException(msg) from err\n",[35,167,169],{"class":37,"line":168},23,[35,170,171],{},"selenium.common.exceptions.NoSuchDriverException: Message: Unable to obtain driver for firefox using Selenium Manager.; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location\n",[10,173,174,175,179],{},"我才发现 selenium 试图访问 ",[14,176,177],{"href":177,"rel":178},"https://github.com/mozilla/geckodriver/releases/latest",[18]," 且访问失败了。仔细阅读了 selenium 项目的文档发现新版本的 selenium 会尝试自动下载 webdriver:",[181,182,183],"blockquote",{},[10,184,185],{},"As of Selenium 4.6, Selenium downloads the correct driver for you. You shouldn’t need to do anything.",[10,187,188],{},"表面上看上去我不需要做任何事情，但项目组忽略了中国大陆的网络环境。",[10,190,191,192,197,198,201],{},"服务是要在境内的云服务器上跑的，我也不敢开代理，现在比较靠谱的方案是我去手动指定 Firefox 的 geckodriver，避免 selenium 去帮我自动下载一份。在 ",[14,193,196],{"href":194,"rel":195},"https://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.firefox.webdriver",[18],"python-selenium 的官方文档","中是让我们创建 Firefox 的 webdriver 时去传入一个 ",[32,199,200],{},"executable_path='geckodriver'"," 的关键词参数，可惜这是过时的用法，应该是维护者还没来得及更新文档。",[10,203,204,205],{},"随后便在 stackoverflow 上找到了新版 selenium ",[14,206,209],{"href":207,"rel":208},"https://stackoverflow.com/questions/76550506/typeerror-webdriver-init-got-an-unexpected-keyword-argument-executable-p",[18],"手动指定 Chrome 的 chromedriver 的方法",[181,211,212],{},[25,213,217],{"className":214,"code":215,"language":216,"meta":30,"style":30},"language-python shiki shiki-themes one-light one-dark-pro","from selenium import webdriver\nfrom selenium.webdriver.chrome.service import Service\n\nservice = Service(executable_path='chromedriver.exe') \noptions = webdriver.ChromeOptions()\ndriver = webdriver.Chrome(service=service, options=options)\n# ...\ndriver.quit()\n","python",[32,218,219,224,229,233,238,243,248,253],{"__ignoreMap":30},[35,220,221],{"class":37,"line":38},[35,222,223],{},"from selenium import webdriver\n",[35,225,226],{"class":37,"line":44},[35,227,228],{},"from selenium.webdriver.chrome.service import Service\n",[35,230,231],{"class":37,"line":50},[35,232,108],{"emptyLinePlaceholder":107},[35,234,235],{"class":37,"line":56},[35,236,237],{},"service = Service(executable_path='chromedriver.exe') \n",[35,239,240],{"class":37,"line":62},[35,241,242],{},"options = webdriver.ChromeOptions()\n",[35,244,245],{"class":37,"line":68},[35,246,247],{},"driver = webdriver.Chrome(service=service, options=options)\n",[35,249,250],{"class":37,"line":74},[35,251,252],{},"# ...\n",[35,254,255],{"class":37,"line":80},[35,256,257],{},"driver.quit()\n",[10,259,260],{},"原文给的是 chrome 的方案，但 Firefox 的方案基本也是一致的，应该也是去创建一个 service 对象，猜一猜就能猜到。",[25,262,264],{"className":214,"code":263,"language":216,"meta":30,"style":30},"from selenium import webdriver\nfrom selenium.webdriver.firefox.service import Service\nfrom selenium.webdriver.firefox.options import Options\n\nservice = Service(executable_path='/root/geckodriver') # 我这里是 docker 打包，懒得创建一个普通用户了，就直接用了 root 用户的 home 目录\noptions = Options(\"--headless\")\ndriver = webdriver.Firefox(service=service, options=options)\n# ...\ndriver.quit()\n",[32,265,266,270,275,280,284,289,294,299,303],{"__ignoreMap":30},[35,267,268],{"class":37,"line":38},[35,269,223],{},[35,271,272],{"class":37,"line":44},[35,273,274],{},"from selenium.webdriver.firefox.service import Service\n",[35,276,277],{"class":37,"line":50},[35,278,279],{},"from selenium.webdriver.firefox.options import Options\n",[35,281,282],{"class":37,"line":56},[35,283,108],{"emptyLinePlaceholder":107},[35,285,286],{"class":37,"line":62},[35,287,288],{},"service = Service(executable_path='/root/geckodriver') # 我这里是 docker 打包，懒得创建一个普通用户了，就直接用了 root 用户的 home 目录\n",[35,290,291],{"class":37,"line":68},[35,292,293],{},"options = Options(\"--headless\")\n",[35,295,296],{"class":37,"line":74},[35,297,298],{},"driver = webdriver.Firefox(service=service, options=options)\n",[35,300,301],{"class":37,"line":80},[35,302,252],{},[35,304,305],{"class":37,"line":86},[35,306,257],{},[10,308,309],{},"手动指定 geckodriver 后，在我 1 核 1 G 的小主机上创建 webdriver 对象，基本都可以秒完成。",[311,312,313],"style",{},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":30,"searchDepth":44,"depth":44,"links":315},[],"2023-09-02 01:59:18","之前因为学校社团迎新的需求，就临时写了一个 QQ Bot，最近又给 bot 加上了 /q 的功能，原理是通过 python 的 selenium 去启动一个 headless Firefox 去截由 jinja2 模板引擎生成的 html 的图。","md",{},"/2023/09/02/python-selenium-start-difficult-in-china-mainland","---\ntitle: 手动指定 python-selenium 的 driver path 以解决在中国大陆网络环境下启动卡住的问题\ndate: 2023-09-02 01:59:18\nsticky:\ntags:\n- Python\n- selenium\n- Linux \n---\n\n之前因为学校社团迎新的需求，就临时写了一个 QQ Bot，最近又给 bot 加上了 [/q 的功能](https://github.com/zhullyb/qq-quote-generator)，原理是通过 python 的 selenium 去启动一个 headless Firefox 去截由 jinja2 模板引擎生成的 html 的图。\n\n每次这个 bot 重启的时候都因为 selenium 而需要花费好几秒的时间，甚至经常概率性启动失败。我就寻思者应该把这个图片生成的 generator 从 bot 中抽出来，这样就不至于每次重启 bot 都要遭此一劫。但就在我将 generator 打包成 docker 部署上云服务器的时候，发现居然无法启动。于是手动进 docker 的 shell 开 python 的交互式终端，发现在创建 firefox 的 webdriver 对象的时候异常缓慢，等了半分钟以后蹲到一个报错如下:\n\n```pyth\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/common/driver_finder.py\", line 38, in get_path\n    path = SeleniumManager().driver_location(options) if path is None else path\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/common/selenium_manager.py\", line 95, in driver_location\n    output = self.run(args)\n             ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/common/selenium_manager.py\", line 141, in run\n    raise WebDriverException(f\"Unsuccessful command executed: {command}.\\n{result}{stderr}\")\nselenium.common.exceptions.WebDriverException: Message: Unsuccessful command executed: /usr/local/lib/python3.11/site-packages/selenium/webdriver/common/linux/selenium-manager --browser firefox --output json.\n{'code': 65, 'message': 'error sending request for url (https://github.com/mozilla/geckodriver/releases/latest): connection error: unexpected end of file', 'driver_path': '', 'browser_path': ''}\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"\u003Cstdin>\", line 1, in \u003Cmodule>\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/firefox/webdriver.py\", line 59, in __init__\n    self.service.path = DriverFinder.get_path(self.service, options)\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/common/driver_finder.py\", line 41, in get_path\n    raise NoSuchDriverException(msg) from err\nselenium.common.exceptions.NoSuchDriverException: Message: Unable to obtain driver for firefox using Selenium Manager.; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location\n```\n\n我才发现 selenium 试图访问 https://github.com/mozilla/geckodriver/releases/latest 且访问失败了。仔细阅读了 selenium 项目的文档发现新版本的 selenium 会尝试自动下载 webdriver:\n\n> As of Selenium 4.6, Selenium downloads the correct driver for you. You shouldn’t need to do anything.\n\n表面上看上去我不需要做任何事情，但项目组忽略了中国大陆的网络环境。\n\n服务是要在境内的云服务器上跑的，我也不敢开代理，现在比较靠谱的方案是我去手动指定 Firefox 的 geckodriver，避免 selenium 去帮我自动下载一份。在 [python-selenium 的官方文档](https://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.firefox.webdriver)中是让我们创建 Firefox 的 webdriver 时去传入一个 `executable_path='geckodriver'` 的关键词参数，可惜这是过时的用法，应该是维护者还没来得及更新文档。\n\n随后便在 stackoverflow 上找到了新版 selenium [手动指定 Chrome 的 chromedriver 的方法](https://stackoverflow.com/questions/76550506/typeerror-webdriver-init-got-an-unexpected-keyword-argument-executable-p)\n\n>```python\n>from selenium import webdriver\n>from selenium.webdriver.chrome.service import Service\n>\n>service = Service(executable_path='chromedriver.exe') \n>options = webdriver.ChromeOptions()\n>driver = webdriver.Chrome(service=service, options=options)\n># ...\n>driver.quit()\n>```\n\n原文给的是 chrome 的方案，但 Firefox 的方案基本也是一致的，应该也是去创建一个 service 对象，猜一猜就能猜到。\n\n```python\nfrom selenium import webdriver\nfrom selenium.webdriver.firefox.service import Service\nfrom selenium.webdriver.firefox.options import Options\n\nservice = Service(executable_path='/root/geckodriver') # 我这里是 docker 打包，懒得创建一个普通用户了，就直接用了 root 用户的 home 目录\noptions = Options(\"--headless\")\ndriver = webdriver.Firefox(service=service, options=options)\n# ...\ndriver.quit()\n```\n\n手动指定 geckodriver 后，在我 1 核 1 G 的小主机上创建 webdriver 对象，基本都可以秒完成。\n",{"title":5,"description":317},"posts/python-selenium-start-difficult-in-china-mainland",false,[326,327,328],"Python","selenium","Linux","ctRpOlTs1sfmF6XJKSR6ZwkwNahPNxGBAMkQEdQBA_0",[331,336],{"title":332,"path":333,"stem":334,"date":335,"children":-1},"jinja2 中如何优雅地实现换行","/2023/09/03/jinja2-nl-to-br","posts/jinja2-nl-to-br","2023-09-03 13:37:35",{"title":337,"path":338,"stem":339,"date":340,"children":-1},"从零开始的静态网页部署（到个人云服务器）","/2023/08/04/static-webpage-deployment-for-a-beginner","posts/static-webpage-deployment-for-a-beginner","2023-08-04 01:19:22",1761897609704]