[{"data":1,"prerenderedAt":480},["ShallowReactive",2],{"post-2023-11-02-integrating-sunflower-smart-socket-with-mi-home-via-bemfa-cloud":3,"surround-2023-11-02-integrating-sunflower-smart-socket-with-mi-home-via-bemfa-cloud":469,"randomIndex/2023/11/02/integrating-sunflower-smart-socket-with-mi-home-via-bemfa-cloud/":235},{"id":4,"title":5,"body":6,"date":451,"description":452,"extension":453,"meta":454,"navigation":156,"path":455,"rawbody":456,"seo":457,"stem":458,"sticky":459,"tags":460,"__hash__":468},"posts/posts/integrating-sunflower-smart-socket-with-mi-home-via-bemfa-cloud.md","通过巴法云将向日葵智能插座接入米家，实现小爱同学远程控制",{"type":7,"value":8,"toc":448},"minimark",[9,19,29,38,47,53,56,63,66,69,109,115,118,124,127,130,133,415,419,444],[10,11,12,13,18],"p",{},"在",[14,15,17],"a",{"href":16},"/2023/11/01/unveiling-sunflower-smart-adapter-api-intercepting-utilizing-api-android-packet-sniffing/","上一篇博客","中，我们介绍了如何在本地局域网中通过发送 http 请求控制向日葵智能插座 C2 的开关状态。但这还远远不够，我自己是小米生态链的忠实用户，在宿舍里也接入了四五个米家的智能设备，因此我想把这个智能插座接入米家，实现离家时一键关闭。",[10,20,21,22,28],{},"在阅读",[14,23,27],{"href":24,"rel":25},"https://iot.mi.com/",[26],"nofollow","小米IoT开发者平台","的接入文档后，我发现米家对于个人开发者并不友好，接入文档大部分要完成企业认证以后才能实现。在谷歌一番搜索过后，我发现了通过假设 Home Assistant 后通过巴法云接入米家的方案。但我眼下就这一个非米家的智能家具，暂时还不想去碰 Home Assistant 那套体系。",[10,30,31,32,37],{},"因此我便找上了",[14,33,36],{"href":34,"rel":35},"https://cloud.bemfa.com/",[26],"巴法云","。在巴法云的官网中提到，他们是「专注物联网设备接入&一站式解决方案」，对于个人开发者，目前平台免费使用。网站的文档虽然并不优雅美观，却透露出实用主义的气息，针对接入提供了 TCP 长连接和 MQTT 两种方案，看着就很适合实现我的需求。",[10,39,40,41,46],{},"在巴法云文档中的「",[14,42,45],{"href":43,"rel":44},"https://cloud.bemfa.com/docs/#/?id=_21-%e8%ae%a2%e9%98%85%e5%8f%91%e5%b8%83%e6%a8%a1%e5%bc%8f",[26],"五分钟入门","」那一栏介绍了远程控制的业务逻辑:",[48,49,50],"blockquote",{},[10,51,52],{},"如果单片机订阅了一个主题，手机往这个主题推送个消息指令，单片机由于订阅了这个主题，就可以收到发往这个主题的消息，就可以达到手机控制单片机的目的。",[10,54,55],{},"所以我需要在巴法云的控制台创建一个针对于智能插座的主题，让我局域网内的一台设备订阅这个主题。接入米家以后，米家需要控制向日葵的智能插座时就向巴法云的这个主题推送一条消息，局域网内的设备就能接收到推送消息，进而调用智能插座的 api 实现远程开关。在这里，我选择使用一台刷了 Armbian 的 N1 作为局域网内的转发器。整个控制流程看上去是下面这个样子:",[10,57,58],{},[59,60],"img",{"alt":61,"src":62},"控制流程图","https://static.031130.xyz/uploads/2024/08/12/65430fbf56dee.webp",[10,64,65],{},"我并不知道 tcp 长连接的数据传输应该如何实现，但看起来 MQTT 是一个比较成熟的协议，因此我选择使用 MQTT 作为巴法云和 N1 之间的通讯协议。",[10,67,68],{},"在巴法云的控制台，选择 MQTT 设备云，创建一个新的主题，注意需要以 001~009 结尾，否则在米家里看不见创建的这个主题。",[48,70,71,76,81,86,91,96,101,106],{},[48,72,73],{},[10,74,75],{},"当主题名字后三位是001时为插座设备。",[48,77,78],{},[10,79,80],{},"当主题名字后三位是002时为灯泡设备。",[48,82,83],{},[10,84,85],{},"当主题名字后三位是003时为风扇设备。",[48,87,88],{},[10,89,90],{},"当主题名字后三位是004时为传感器设备。",[48,92,93],{},[10,94,95],{},"当主题名字后三位是005时为空调设备。",[48,97,98],{},[10,99,100],{},"当主题名字后三位是006时为开关设备。",[48,102,103],{},[10,104,105],{},"当主题名字后三位是009时为窗帘设备。",[10,107,108],{},"当主题名字为其他时，默认为普通主题节点，不会同步到米家。",[10,110,111],{},[59,112],{"alt":113,"src":114},"创建新主题","https://static.031130.xyz/uploads/2024/08/12/654310bb3133b.webp",[10,116,117],{},"此时，我便可以在手机的米家中找到巴法云并接入这个插座。",[10,119,120],{},[59,121],{"alt":122,"src":123},"米家找连接巴法云","https://static.031130.xyz/uploads/2024/08/12/654312974e393.webp",[10,125,126],{},"至此，米家那边的接入已经完成了，虽然没法在米家中找到对应设备的卡片，但是可以在小爱同学的小爱训练计划中找到对应的设备。",[10,128,129],{},"我们还需要让本地的 N1 盒子使用 MQTT 协议订阅巴法云的消息。",[10,131,132],{},"参考代码如下:",[134,135,140],"pre",{"className":136,"code":137,"language":138,"meta":139,"style":139},"language-python shiki shiki-themes github-light github-dark","#!/usr/bin/python3\n\nimport paho.mqtt.client as mqtt\nimport requests\n\n# 智能插座相关\nhost = ''\nsn = ''\nkey = ''\ntime = ''\n\n# 巴法云相关\nclient_id = ''\ntheme = ''\n\ndef set_adapter_status(status: bool):\n    url = 'http://' + host + '/plug'\n    requests.get(url, params={\n        \"status\": 1 if status else 0,\n        \"sn\": sn,\n        \"key\": key,\n        \"_api\": \"set_plug_status\",\n        \"time\": time,\n        \"index\": 0\n    })\n\ndef on_connect(client, userdata, flags, rc):\n    print(\"Connection returned with result code:\" + str(rc))\n    client.subscribe(theme, qos=1)\n\ndef on_message(client, userdata, msg):\n    if msg.payload.decode(\"utf-8\") == 'on':\n        set_adapter_status(True)\n    elif msg.payload.decode(\"utf-8\") == 'off':\n        set_adapter_status(False)\n\ndef on_subscribe(client, userdata, mid, granted_qos):\n    print(\"Subscribed: \" + str(mid) + \" \" + str(granted_qos))\n    \nclient = mqtt.Client(client_id=client_id, clean_session=False, protocol=mqtt.MQTTv311)\nclient.on_connect = on_connect\nclient.on_message = on_message\nclient.on_subscribe = on_subscribe\n\nclient.connect(\"bemfa.com\", 9501, 60)\nclient.loop_forever()\n","python","",[141,142,143,151,158,164,170,175,181,187,193,199,205,210,216,222,228,233,239,245,251,257,263,269,275,281,287,293,298,304,310,316,321,327,333,339,345,351,356,362,368,374,380,386,392,398,403,409],"code",{"__ignoreMap":139},[144,145,148],"span",{"class":146,"line":147},"line",1,[144,149,150],{},"#!/usr/bin/python3\n",[144,152,154],{"class":146,"line":153},2,[144,155,157],{"emptyLinePlaceholder":156},true,"\n",[144,159,161],{"class":146,"line":160},3,[144,162,163],{},"import paho.mqtt.client as mqtt\n",[144,165,167],{"class":146,"line":166},4,[144,168,169],{},"import requests\n",[144,171,173],{"class":146,"line":172},5,[144,174,157],{"emptyLinePlaceholder":156},[144,176,178],{"class":146,"line":177},6,[144,179,180],{},"# 智能插座相关\n",[144,182,184],{"class":146,"line":183},7,[144,185,186],{},"host = ''\n",[144,188,190],{"class":146,"line":189},8,[144,191,192],{},"sn = ''\n",[144,194,196],{"class":146,"line":195},9,[144,197,198],{},"key = ''\n",[144,200,202],{"class":146,"line":201},10,[144,203,204],{},"time = ''\n",[144,206,208],{"class":146,"line":207},11,[144,209,157],{"emptyLinePlaceholder":156},[144,211,213],{"class":146,"line":212},12,[144,214,215],{},"# 巴法云相关\n",[144,217,219],{"class":146,"line":218},13,[144,220,221],{},"client_id = ''\n",[144,223,225],{"class":146,"line":224},14,[144,226,227],{},"theme = ''\n",[144,229,231],{"class":146,"line":230},15,[144,232,157],{"emptyLinePlaceholder":156},[144,234,236],{"class":146,"line":235},16,[144,237,238],{},"def set_adapter_status(status: bool):\n",[144,240,242],{"class":146,"line":241},17,[144,243,244],{},"    url = 'http://' + host + '/plug'\n",[144,246,248],{"class":146,"line":247},18,[144,249,250],{},"    requests.get(url, params={\n",[144,252,254],{"class":146,"line":253},19,[144,255,256],{},"        \"status\": 1 if status else 0,\n",[144,258,260],{"class":146,"line":259},20,[144,261,262],{},"        \"sn\": sn,\n",[144,264,266],{"class":146,"line":265},21,[144,267,268],{},"        \"key\": key,\n",[144,270,272],{"class":146,"line":271},22,[144,273,274],{},"        \"_api\": \"set_plug_status\",\n",[144,276,278],{"class":146,"line":277},23,[144,279,280],{},"        \"time\": time,\n",[144,282,284],{"class":146,"line":283},24,[144,285,286],{},"        \"index\": 0\n",[144,288,290],{"class":146,"line":289},25,[144,291,292],{},"    })\n",[144,294,296],{"class":146,"line":295},26,[144,297,157],{"emptyLinePlaceholder":156},[144,299,301],{"class":146,"line":300},27,[144,302,303],{},"def on_connect(client, userdata, flags, rc):\n",[144,305,307],{"class":146,"line":306},28,[144,308,309],{},"    print(\"Connection returned with result code:\" + str(rc))\n",[144,311,313],{"class":146,"line":312},29,[144,314,315],{},"    client.subscribe(theme, qos=1)\n",[144,317,319],{"class":146,"line":318},30,[144,320,157],{"emptyLinePlaceholder":156},[144,322,324],{"class":146,"line":323},31,[144,325,326],{},"def on_message(client, userdata, msg):\n",[144,328,330],{"class":146,"line":329},32,[144,331,332],{},"    if msg.payload.decode(\"utf-8\") == 'on':\n",[144,334,336],{"class":146,"line":335},33,[144,337,338],{},"        set_adapter_status(True)\n",[144,340,342],{"class":146,"line":341},34,[144,343,344],{},"    elif msg.payload.decode(\"utf-8\") == 'off':\n",[144,346,348],{"class":146,"line":347},35,[144,349,350],{},"        set_adapter_status(False)\n",[144,352,354],{"class":146,"line":353},36,[144,355,157],{"emptyLinePlaceholder":156},[144,357,359],{"class":146,"line":358},37,[144,360,361],{},"def on_subscribe(client, userdata, mid, granted_qos):\n",[144,363,365],{"class":146,"line":364},38,[144,366,367],{},"    print(\"Subscribed: \" + str(mid) + \" \" + str(granted_qos))\n",[144,369,371],{"class":146,"line":370},39,[144,372,373],{},"    \n",[144,375,377],{"class":146,"line":376},40,[144,378,379],{},"client = mqtt.Client(client_id=client_id, clean_session=False, protocol=mqtt.MQTTv311)\n",[144,381,383],{"class":146,"line":382},41,[144,384,385],{},"client.on_connect = on_connect\n",[144,387,389],{"class":146,"line":388},42,[144,390,391],{},"client.on_message = on_message\n",[144,393,395],{"class":146,"line":394},43,[144,396,397],{},"client.on_subscribe = on_subscribe\n",[144,399,401],{"class":146,"line":400},44,[144,402,157],{"emptyLinePlaceholder":156},[144,404,406],{"class":146,"line":405},45,[144,407,408],{},"client.connect(\"bemfa.com\", 9501, 60)\n",[144,410,412],{"class":146,"line":411},46,[144,413,414],{},"client.loop_forever()\n",[416,417,418],"h2",{"id":418},"参考链接",[420,421,422,430,437],"ul",{},[423,424,425],"li",{},[14,426,429],{"href":427,"rel":428},"https://cloud.bemfa.com/docs/#/",[26],"巴法开放平台",[423,431,432],{},[14,433,436],{"href":434,"rel":435},"https://www.cnblogs.com/Mickey-7/p/17402095.html",[26],"Python MQTT客户端  paho-mqtt",[423,438,439],{},[14,440,443],{"href":441,"rel":442},"https://www.emqx.com/zh/blog/comparision-of-python-mqtt-client",[26],"Python MQTT 客户端对比",[445,446,447],"style",{},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":139,"searchDepth":153,"depth":153,"links":449},[450],{"id":418,"depth":153,"text":418},"2023-11-02 10:17:02","在上一篇博客中，我们介绍了如何在本地局域网中通过发送 http 请求控制向日葵智能插座 C2 的开关状态。但这还远远不够，我自己是小米生态链的忠实用户，在宿舍里也接入了四五个米家的智能设备，因此我想把这个智能插座接入米家，实现离家时一键关闭。","md",{},"/2023/11/02/integrating-sunflower-smart-socket-with-mi-home-via-bemfa-cloud","---\ntitle: 通过巴法云将向日葵智能插座接入米家，实现小爱同学远程控制\ndate: 2023-11-02 10:17:02\nsticky:\ntags:\n- IoT\n- MiAI\n- Network\n- Linux\n- Python\n- Hardware\n- Fun\n---\n\n在[上一篇博客](/2023/11/01/unveiling-sunflower-smart-adapter-api-intercepting-utilizing-api-android-packet-sniffing/)中，我们介绍了如何在本地局域网中通过发送 http 请求控制向日葵智能插座 C2 的开关状态。但这还远远不够，我自己是小米生态链的忠实用户，在宿舍里也接入了四五个米家的智能设备，因此我想把这个智能插座接入米家，实现离家时一键关闭。\n\n在阅读[小米IoT开发者平台](https://iot.mi.com/)的接入文档后，我发现米家对于个人开发者并不友好，接入文档大部分要完成企业认证以后才能实现。在谷歌一番搜索过后，我发现了通过假设 Home Assistant 后通过巴法云接入米家的方案。但我眼下就这一个非米家的智能家具，暂时还不想去碰 Home Assistant 那套体系。\n\n因此我便找上了[巴法云](https://cloud.bemfa.com/)。在巴法云的官网中提到，他们是「专注物联网设备接入&一站式解决方案」，对于个人开发者，目前平台免费使用。网站的文档虽然并不优雅美观，却透露出实用主义的气息，针对接入提供了 TCP 长连接和 MQTT 两种方案，看着就很适合实现我的需求。\n\n在巴法云文档中的「[五分钟入门](https://cloud.bemfa.com/docs/#/?id=_21-%e8%ae%a2%e9%98%85%e5%8f%91%e5%b8%83%e6%a8%a1%e5%bc%8f)」那一栏介绍了远程控制的业务逻辑:\n\n> 如果单片机订阅了一个主题，手机往这个主题推送个消息指令，单片机由于订阅了这个主题，就可以收到发往这个主题的消息，就可以达到手机控制单片机的目的。\n\n所以我需要在巴法云的控制台创建一个针对于智能插座的主题，让我局域网内的一台设备订阅这个主题。接入米家以后，米家需要控制向日葵的智能插座时就向巴法云的这个主题推送一条消息，局域网内的设备就能接收到推送消息，进而调用智能插座的 api 实现远程开关。在这里，我选择使用一台刷了 Armbian 的 N1 作为局域网内的转发器。整个控制流程看上去是下面这个样子:\n\n![控制流程图](https://static.031130.xyz/uploads/2024/08/12/65430fbf56dee.webp)\n\n我并不知道 tcp 长连接的数据传输应该如何实现，但看起来 MQTT 是一个比较成熟的协议，因此我选择使用 MQTT 作为巴法云和 N1 之间的通讯协议。\n\n在巴法云的控制台，选择 MQTT 设备云，创建一个新的主题，注意需要以 001~009 结尾，否则在米家里看不见创建的这个主题。\n\n> > 当主题名字后三位是001时为插座设备。\n>\n> > 当主题名字后三位是002时为灯泡设备。\n>\n> > 当主题名字后三位是003时为风扇设备。\n>\n> > 当主题名字后三位是004时为传感器设备。\n>\n> > 当主题名字后三位是005时为空调设备。\n>\n> > 当主题名字后三位是006时为开关设备。\n>\n> > 当主题名字后三位是009时为窗帘设备。\n>\n> 当主题名字为其他时，默认为普通主题节点，不会同步到米家。\n\n![创建新主题](https://static.031130.xyz/uploads/2024/08/12/654310bb3133b.webp)\n\n此时，我便可以在手机的米家中找到巴法云并接入这个插座。\n\n![米家找连接巴法云](https://static.031130.xyz/uploads/2024/08/12/654312974e393.webp)\n\n至此，米家那边的接入已经完成了，虽然没法在米家中找到对应设备的卡片，但是可以在小爱同学的小爱训练计划中找到对应的设备。\n\n我们还需要让本地的 N1 盒子使用 MQTT 协议订阅巴法云的消息。\n\n参考代码如下:\n\n```python\n#!/usr/bin/python3\n\nimport paho.mqtt.client as mqtt\nimport requests\n\n# 智能插座相关\nhost = ''\nsn = ''\nkey = ''\ntime = ''\n\n# 巴法云相关\nclient_id = ''\ntheme = ''\n\ndef set_adapter_status(status: bool):\n    url = 'http://' + host + '/plug'\n    requests.get(url, params={\n        \"status\": 1 if status else 0,\n        \"sn\": sn,\n        \"key\": key,\n        \"_api\": \"set_plug_status\",\n        \"time\": time,\n        \"index\": 0\n    })\n\ndef on_connect(client, userdata, flags, rc):\n    print(\"Connection returned with result code:\" + str(rc))\n\tclient.subscribe(theme, qos=1)\n\ndef on_message(client, userdata, msg):\n    if msg.payload.decode(\"utf-8\") == 'on':\n        set_adapter_status(True)\n    elif msg.payload.decode(\"utf-8\") == 'off':\n        set_adapter_status(False)\n\ndef on_subscribe(client, userdata, mid, granted_qos):\n    print(\"Subscribed: \" + str(mid) + \" \" + str(granted_qos))\n    \nclient = mqtt.Client(client_id=client_id, clean_session=False, protocol=mqtt.MQTTv311)\nclient.on_connect = on_connect\nclient.on_message = on_message\nclient.on_subscribe = on_subscribe\n\nclient.connect(\"bemfa.com\", 9501, 60)\nclient.loop_forever()\n```\n\n## 参考链接\n\n- [巴法开放平台](https://cloud.bemfa.com/docs/#/)\n\n- [Python MQTT客户端  paho-mqtt](https://www.cnblogs.com/Mickey-7/p/17402095.html)\n- [Python MQTT 客户端对比](https://www.emqx.com/zh/blog/comparision-of-python-mqtt-client)\n",{"title":5,"description":452},"posts/integrating-sunflower-smart-socket-with-mi-home-via-bemfa-cloud",false,[461,462,463,464,465,466,467],"IoT","MiAI","Network","Linux","Python","Hardware","Fun","rcKwKPmJ13mmcO0XI4edzxJ5vdjfVS65zMEkqa0qlUc",[470,475],{"title":471,"path":472,"stem":473,"date":474,"children":-1},"【翻译】GLWTPL——祝你好运开源许可证","/2023/11/12/a-introduce-of-glwtpl","posts/a-introduce-of-GLWTPL","2023-11-12 01:09:09",{"title":476,"path":477,"stem":478,"date":479,"children":-1},"使用 Root 后的安卓手机获取向日葵智能插座 C2 的开关 api","/2023/11/01/unveiling-sunflower-smart-adapter-api-intercepting-utilizing-api-android-packet-sniffing","posts/unveiling-sunflower-smart-adapter-api-intercepting-utilizing-api-android-packet-sniffing","2023-11-01 23:46:28",1761699628539]