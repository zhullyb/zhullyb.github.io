[{"data":1,"prerenderedAt":2756},["ShallowReactive",2],{"randomIndex/archives/page/12/":3,"index-page-12":4,"posts-nums-total":2755},24,[5,251,291,335,1558,1677,2002,2087,2197,2590],{"title":6,"date":7,"path":8,"tags":9,"body":10},"使用Chrome的同步api为chromium开启同步功能","2021-04-15","/2021/04/15/login-chromium-with-the-api-of-chrome","笔记",{"type":11,"value":12,"toc":249},"minimark",[13,17,26,38,73,76,82,94,175,189,196,245],[14,15,16],"p",{},"今年两三月的时候，Google限制了chromium的同步api次数，导致各个发行版内置的chromium将不再能继续使用Google的数据同步功能。",[14,18,19,20],{},"今天在翻 archlinuxcn 的群组的时候翻到了一段脚本: ",[21,22,23],"a",{"href":23,"rel":24},"https://gist.github.com/foutrelis/14e339596b89813aa9c37fd1b4e5d9d5",[25],"nofollow",[14,27,28,29,33,34,37],{},"大意就是说，由于Archlinux特殊的chromium启动方式导致我们可以在设置",[30,31,32],"code",{},"oauth2-client-id","和",[30,35,36],{},"oauth2-client-secret","的情况下通过chrome的同步api继续使用Google的同步服务，说得太多了也没必要，毕竟原文就在那里，看不看取决于你，我这里直接给命令吧。",[39,40,45],"pre",{"className":41,"code":42,"language":43,"meta":44,"style":44},"language-shell shiki shiki-themes one-light one-dark-pro","echo \"--oauth2-client-id=77185425430.apps.googleusercontent.com\n--oauth2-client-secret=OTJgUOQcT7lO7GsGZq2G4IlT\" >> ~/.config/chromium-flags.conf\n","shell","",[30,46,47,60],{"__ignoreMap":44},[48,49,52,56],"span",{"class":50,"line":51},"line",1,[48,53,55],{"class":54},"s_Sar","echo",[48,57,59],{"class":58},"sDhpE"," \"--oauth2-client-id=77185425430.apps.googleusercontent.com\n",[48,61,63,66,70],{"class":50,"line":62},2,[48,64,65],{"class":58},"--oauth2-client-secret=OTJgUOQcT7lO7GsGZq2G4IlT\"",[48,67,69],{"class":68},"s5ixo"," >> ",[48,71,72],{"class":58},"~/.config/chromium-flags.conf\n",[14,74,75],{},"再次打开chromium,你就会发现你心心念念的同步功能回来了。",[14,77,78],{},[79,80],"img",{"alt":44,"src":81},"https://static.031130.xyz/uploads/2024/08/12/62f3cafe4a5ec.webp",[14,83,84],{},[85,86,87,88,93],"del",{},"然而，并不是所有的发行版都像 Archlinux 这样考虑到 oauth，我们也不可能像 Archlinux 官方那样有这个闲情雅致为没一个 Chromium 去添加这个 ",[21,89,92],{"href":90,"rel":91},"https://github.com/archlinux/svntogit-packages/blob/packages/chromium/trunk/use-oauth2-client-switches-as-default.patch",[25],"patch"," 以后重新编译一遍，大部分人都是直接用发行版源里的。针对这种情况，我们可以直接手写一个脚本",[39,95,99],{"className":96,"code":97,"language":98,"meta":44,"style":44},"language-bash shiki shiki-themes one-light one-dark-pro","#!/usr/bin/bash\nexport GOOGLE_DEFAULT_CLIENT_ID=77185425430.apps.googleusercontent.com\nexport GOOGLE_DEFAULT_CLIENT_SECRET=OTJgUOQcT7lO7GsGZq2G4IlT\nexec /usr/bin/chromium-browser \"$@\"     # 我用的 Fedora 的启动命令是 chromium-browser，别的发行版用户还请自行调整\n","bash",[30,100,101,107,140,153],{"__ignoreMap":44},[48,102,103],{"class":50,"line":51},[48,104,106],{"class":105},"sW2Sy","#!/usr/bin/bash\n",[48,108,109,113,117,121,124,127,130,132,135,137],{"class":50,"line":62},[48,110,112],{"class":111},"sLKXg","export",[48,114,116],{"class":115},"sJa8x"," GOOGLE_DEFAULT_CLIENT_ID",[48,118,120],{"class":119},"sknuh","=",[48,122,123],{"class":115},"77185425430",[48,125,126],{"class":68},".",[48,128,129],{"class":115},"apps",[48,131,126],{"class":68},[48,133,134],{"class":115},"googleusercontent",[48,136,126],{"class":68},[48,138,139],{"class":115},"com\n",[48,141,143,145,148,150],{"class":50,"line":142},3,[48,144,112],{"class":111},[48,146,147],{"class":115}," GOOGLE_DEFAULT_CLIENT_SECRET",[48,149,120],{"class":119},[48,151,152],{"class":115},"OTJgUOQcT7lO7GsGZq2G4IlT\n",[48,154,156,159,162,165,169,172],{"class":50,"line":155},4,[48,157,158],{"class":54},"exec",[48,160,161],{"class":58}," /usr/bin/chromium-browser",[48,163,164],{"class":58}," \"",[48,166,168],{"class":167},"s8iYz","$@",[48,170,171],{"class":58},"\"",[48,173,174],{"class":105},"     # 我用的 Fedora 的启动命令是 chromium-browser，别的发行版用户还请自行调整\n",[14,176,177,178,181,182,185,186,188],{},"当我满心欢喜地把脚本扔进 ",[30,179,180],{},"$HOME/.local/bin"," 后，我却突然发现 Fedora 官方源中把 chromium 的启动命令写死在了 ",[30,183,184],{},"/usr/bin/chromium-browser","，如果直接去改 ",[30,187,184],{}," 的话，每次更新都会被覆盖。",[14,190,191,195],{},[192,193,194],"strong",{},"正确的做法","应该是把 desktop 文件复制一份到桌面，再去改内容。",[39,197,199],{"className":96,"code":198,"language":98,"meta":44,"style":44},"mkdir -p $HOME/.local/share/applications/\ncp /usr/share/applications/chromium-browser.desktop $HOME/.local/share/applications/\nsed -i \"s|/usr/bin/chromium-browser|GOOGLE_DEFAULT_CLIENT_ID=77185425430.apps.googleusercontent.com GOOGLE_DEFAULT_CLIENT_SECRET=OTJgUOQcT7lO7GsGZq2G4IlT /usr/bin/chromium-browser|g\" $HOME/.local/share/applications/chromium-browser.desktop\n",[30,200,201,217,229],{"__ignoreMap":44},[48,202,203,207,211,214],{"class":50,"line":51},[48,204,206],{"class":205},"sAdtL","mkdir",[48,208,210],{"class":209},"sAGMh"," -p",[48,212,213],{"class":115}," $HOME",[48,215,216],{"class":58},"/.local/share/applications/\n",[48,218,219,222,225,227],{"class":50,"line":62},[48,220,221],{"class":205},"cp",[48,223,224],{"class":58}," /usr/share/applications/chromium-browser.desktop",[48,226,213],{"class":115},[48,228,216],{"class":58},[48,230,231,234,237,240,242],{"class":50,"line":142},[48,232,233],{"class":205},"sed",[48,235,236],{"class":209}," -i",[48,238,239],{"class":58}," \"s|/usr/bin/chromium-browser|GOOGLE_DEFAULT_CLIENT_ID=77185425430.apps.googleusercontent.com GOOGLE_DEFAULT_CLIENT_SECRET=OTJgUOQcT7lO7GsGZq2G4IlT /usr/bin/chromium-browser|g\"",[48,241,213],{"class":115},[48,243,244],{"class":58},"/.local/share/applications/chromium-browser.desktop\n",[246,247,248],"style",{},"html pre.shiki code .s_Sar, html code.shiki .s_Sar{--shiki-default:#0184BC;--shiki-dark:#56B6C2}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sW2Sy, html code.shiki .sW2Sy{--shiki-default:#A0A1A7;--shiki-default-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic}html pre.shiki code .sLKXg, html code.shiki .sLKXg{--shiki-default:#A626A4;--shiki-dark:#C678DD}html pre.shiki code .sJa8x, html code.shiki .sJa8x{--shiki-default:#E45649;--shiki-dark:#E06C75}html pre.shiki code .sknuh, html code.shiki .sknuh{--shiki-default:#383A42;--shiki-dark:#56B6C2}html pre.shiki code .s8iYz, html code.shiki .s8iYz{--shiki-default:#383A42;--shiki-default-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic}html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}",{"title":44,"searchDepth":62,"depth":62,"links":250},[],{"title":252,"date":253,"path":254,"tags":255,"body":256},"Appimage的文件储存在哪里","2021-04-13","/2021/04/13/where-will-appimage-put-its-file","大佬对话笔记",{"type":11,"value":257,"toc":289},[258,261,267,270,275,278],[14,259,260],{},"我不饿：",[262,263,264],"blockquote",{},[14,265,266],{},"有人知道怎么删除appimage的用户数据吗？",[14,268,269],{},"liolok | 李皓奇:",[262,271,272],{},[14,273,274],{},"还是可以在用户的家目录下面乱写的吧",[14,276,277],{},"Lipis Apple:",[262,279,280,283,286],{},[14,281,282],{},"不太讲武德：~/.local/share/(app)",[14,284,285],{},"算讲武德：~/.config/(app)",[14,287,288],{},"不讲武德：~/.(app)",{"title":44,"searchDepth":62,"depth":62,"links":290},[],{"title":292,"date":293,"path":294,"tags":9,"body":295},"使用Motrix接管Firefox的下载","2021-04-11","/2021/04/11/use-motrix-install-of-firefox-to-download",{"type":11,"value":296,"toc":333},[297,302,305,308,311,320,323],[262,298,299],{},[14,300,301],{},"本文是一篇个人笔记，不具有太强的技术性，仅仅是为后来者指个方向。",[14,303,304],{},"熟悉我的人都知道，我是一个Firefox的忠实用户，原因有二：",[14,306,307],{},"​\t一/ Firefox国际版同步功能国内可用",[14,309,310],{},"​\t二/ moz://a（Firefox用户应该能在地址栏直接访问这个链接）",[14,312,313,314,319],{},"但是Motrix没有推出适用于Firefox的接管浏览器下载功能的插件，于是只能用",[21,315,318],{"href":316,"rel":317},"https://addons.mozilla.org/firefox/addon/aria2-integration",[25],"aria2的插件","。这个插件内置了AriaNG,对于aria2用户来说会比较实用，但是对于Motrix用户而言其实功能有些多余且不兼容，比如什么自动启动aria2什么的是无法实现的。",[14,321,322],{},"主要的配置过程我就图解了，退出前记得保存配置。",[14,324,325,329],{},[79,326],{"alt":327,"src":328},"step 1","https://static.031130.xyz/uploads/2024/08/12/62f36d3a79438.webp",[79,330],{"alt":331,"src":332},"step 2","https://static.031130.xyz/uploads/2024/08/12/62f36d3d08a23.webp",{"title":44,"searchDepth":62,"depth":62,"links":334},[],{"title":336,"date":337,"path":338,"tags":339,"body":341},"yay进阶","2021-04-04","/2021/04/04/yay-more",[340],"Archlinux",{"type":11,"value":342,"toc":1540},[343,361,366,371,375,392,397,407,412,423,431,434,439,467,474,484,490,503,506,512,515,521,531,537,540,546,549,555,558,564,567,573,584,590,593,599,605,608,614,625,631,641,647,654,663,669,672,678,681,685,688,694,700,707,713,720,726,729,735,738,744,747,750,753,756,762,765,771,774,780,783,789,792,798,805,811,814,820,823,826,832,835,841,844,850,853,856,862,867,873,879,882,888,891,897,900,911,917,920,926,929,932,935,942,945,951,954,960,966,972,975,978,984,987,993,996,1002,1006,1012,1014,1017,1023,1026,1032,1035,1041,1046,1052,1054,1057,1063,1066,1072,1075,1081,1086,1092,1094,1097,1103,1106,1112,1115,1121,1124,1127,1133,1136,1142,1145,1148,1154,1157,1163,1166,1169,1175,1178,1184,1187,1190,1196,1199,1205,1208,1212,1215,1220,1227,1233,1236,1239,1244,1247,1253,1256,1259,1264,1267,1273,1276,1282,1285,1288,1293,1296,1302,1305,1311,1314,1320,1323,1326,1331,1334,1340,1343,1346,1351,1354,1360,1363,1366,1372,1375,1381,1384,1387,1393,1396,1402,1413,1431,1434,1450,1456,1466,1472,1481,1487,1490,1496,1499,1505,1508,1514,1517,1520,1526,1537],[262,344,345,348,351,354],{},[14,346,347],{},"yay是一个AUR Helper，他可以执行pacman的几乎所有操作，并在此基础上添加了很多额外用法。",[14,349,350],{},"我没有在网络上查找到关于yay的、除了pacman基础用法和安装AUR包以外的中文教程，英文的也几乎没有看到，这也是我写这篇文章的原因所在。",[14,352,353],{},"本文通篇详讲yay的每一个设置/选项（大概就是archwiki那种干涩的行文思路），最后会给出我自己的一些常用命令，但不会做解释。",[14,355,356,357,360],{},"写作时参考了yay的英文使用手册，如果你的arch安装了yay，那么即可通过",[30,358,359],{},"man yay","命令随时查阅它。",[14,362,363],{},[192,364,365],{},"Tips1: 本文中出现的foo一般是指包名，标注*的表示该选项默认启用。",[14,367,368],{},[192,369,370],{},"Tips2: 使用电脑端的访客可以在侧栏以获取目录。",[372,373,374],"h2",{"id":374},"基本用法",[14,376,377,378,381,382,33,385,388,389,391],{},"yay的基本用法是",[30,379,380],{},"yay \u003Coperation> [options] [targets]","、",[30,383,384],{},"yay foo",[30,386,387],{},"yay","，",[30,390,380],{},"的用法可以讨论的点比较多，我会在后文中一一道来。",[393,394,395],"h3",{"id":387},[30,396,387],{},[14,398,399,400,402,403,406],{},"当我们仅执行",[30,401,387],{},"，后面不跟任何参数时，yay会执行操作",[30,404,405],{},"yay -Syu","，他会先调用pacman更新源的数据库、更新所有从源内安装的软件包，并检查你的AUR包有没有更新。",[393,408,410],{"id":409},"yay-foo",[30,411,384],{},[14,413,414,415,418,419,422],{},"通过yay后面直接跟包名的命令会让yay直接在源和AUR内搜索带有",[30,416,417],{},"foo","关键词的包（包名和简介中只要出现foo都会被一网打尽），以下是我执行",[30,420,421],{},"yay dingtalk","的输出",[39,424,429],{"className":425,"code":427,"language":428},[426],"language-text","5 aur/com.dingtalk.deepin 5.0.15deepin7-1 (+0 0.00)\n    Deepin Wine dingtalk\n4 aur/deepin.com.dingtalk.com 5.1.28.12-2 (+1 0.12)\n    DingTalk Client on Deepin Wine\n3 aur/dingtalk 2.1.3-1 (+3 0.00)\n    钉钉桌面版，基于electron和钉钉网页版开发，支持Windows、Linux和macOS\n2 aur/dingtalk-linux 3.5.5-1 (+6 0.12)\n    May be the official Linux experimental version\n1 aur/dingtalk-electron 2.1.9-1 (+9 0.15)\n    钉钉Linux版本\n==> Packages to install (eg: 1 2 3, 1-3 or ^4)\n==\n","text",[30,430,427],{"__ignoreMap":44},[14,432,433],{},"输入每一项对应的序号即可进入相应的安装过程。",[393,435,437],{"id":436},"yay-operation-options-targets",[30,438,380],{},[14,440,441,442,33,445,448,449,451,452,455,456,459,460,33,463,466],{},"在这里，\u003Coperation>每次只能有一个，",[48,443,444],{},"options",[48,446,447],{},"targets","可以有多个，且多个",[48,450,444],{},"可以合起来写在一起。比如",[30,453,454],{},"yay -P -s -f","可以直接写成",[30,457,458],{},"yay -Psf","，顺序也可以颠倒，",[30,461,462],{},"-Psf",[30,464,465],{},"-sPf","没区别。",[468,469,471],"h4",{"id":470},"y-yay",[30,472,473],{},"-Y (--yay)",[14,475,476,477,33,480,483],{},"-Y行为其实是yay的默认行为，当你没有加其他的行为参数时，yay就会执行-Y参数，可以跟",[30,478,479],{},"--gendb",[30,481,482],{},"-c","。",[485,486,488],"h5",{"id":487},"gendb",[30,489,479],{},[14,491,492,493,496],{},"生成AUR数据库。",[192,494,495],{},"仅当从另一个AUR Helper迁移到yay时，才应使用此选项。",[85,497,498,499,502],{},"（根据我的个人理解，是根据你Arch内安装的源内找不到的包的包名去AUR里寻找对应的PKGBUILD，并且把能找到的PKGBUILD给clone到",[30,500,501],{},"~/.cache/yay/","目录下）",[14,504,505],{},"千玄子大佬说：“简单说来就是把在 AUR 的 PKGBUILD 下下来然后比对是否要更新。”",[485,507,509],{"id":508},"c-clean",[30,510,511],{},"-c（--clean）",[14,513,514],{},"清除不再需要的、没有被依赖的包。（相当于apt中的autoremove）",[468,516,518],{"id":517},"p-show",[30,519,520],{},"-P(--show)",[14,522,523,524,527,528],{},"执行特定的Print操作。可以跟的",[48,525,526],{},"option","有",[30,529,530],{},"-c、-f、-d、-g、-n、-s、-u、-w、-q",[485,532,534],{"id":533},"c-complete",[30,535,536],{},"-c(--complete)",[14,538,539],{},"Print所有源内和AUR软件包的列表。这是给命令行操作提供的，并不打算由用户直接使用。（意思是启用了这个选项以后你的终端会出现一大串长常的列表来告诉你你的Arch到底可以从哪里安装哪些包，并不是直接给你用的，是作为数据留给别的命令来玩耍的）",[485,541,543],{"id":542},"f-fish",[30,544,545],{},"-f(--fish)",[14,547,548],{},"在输出结果到终端时，会专门为fish用户做微调。（但是根据SamLukeYes大佬说他用fish体验下来并没有感知到加不加有什么区别，应该是属于感知不强的选项）",[485,550,552],{"id":551},"d-defaultconfig",[30,553,554],{},"-d(--defaultconfig)",[14,556,557],{},"Print默认的yay配置。",[485,559,561],{"id":560},"g-currentconfig",[30,562,563],{},"-g(--currentconfig)",[14,565,566],{},"Print当前的yay配置。",[485,568,570],{"id":569},"n-numberupgrades",[30,571,572],{},"-n(--numberupgrades)",[14,574,575,576,579,580,583],{},"数一数你现在还有多少AUR包待更新。yay作者不推荐你使用呢，他推荐你用",[30,577,578],{},"yay -Qu","或者",[30,581,582],{},"wc -l","来代替它。",[485,585,587],{"id":586},"s-stats",[30,588,589],{},"-s(--stats)",[14,591,592],{},"会展示一大堆信息，如下",[39,594,597],{"className":595,"code":596,"language":428},[426],"[zhullyb@Archlinux ~]$ yay -Ps\n==> Yay version v10.2.0                             #yay版本\n===========================================\n==> Total installed packages: 1240                  #总共安装了多少包\n==> Total foreign installed packages: 24            #多少包不是从源里安装的\n==> Explicitly installed packages: 271              #有多少包是你自己主动安装的(而不是作为依赖安装的)\n==> Total Size occupied by packages: 14.3 GiB       #安装的所有包合在一起一共占了你多少空间\n===========================================\n==> Ten biggest packages:                           #十个体积最大的包\nwps-office-cn: 990.9 MiB\nttf-sarasa-gothic: 855.5 MiB\nlinux-firmware: 652.3 MiB\nbaidunetdisk-bin: 494.7 MiB\ncom.antutu.benchmark: 412.0 MiB\nwine: 402.2 MiB\nlinux-xanmod-cacule-uksm-cjktty: 324.4 MiB\nmicrosoft-edge-dev-bin: 316.4 MiB\nwine-mono: 316.2 MiB\ndeepin-wine5-i386: 259.5 MiB\n===========================================\n:: Querying AUR...\n -> Missing AUR Packages:  zhullyb-archlinux-git    #AUR里找不到的包\n -> Flagged Out Of Date AUR Packages:  xml2         #AUR中被人标注过期的包\n",[30,598,596],{"__ignoreMap":44},[485,600,602],{"id":601},"u-upgrades",[30,603,604],{},"-u(--upgrades)",[14,606,607],{},"展示你所有待更新的包。",[485,609,611],{"id":610},"w-news",[30,612,613],{},"-w(--news)",[14,615,616,617,620,621,624],{},"展示来自archlinux.org的新闻。需要注意的是，这里的新闻是具有时效性的，只有在你的Arch最后一次更新以后发出来的新闻才会被显示出来。如果你不想要yay判断新闻时效性，你可以通过",[30,618,619],{},"yay -Pww","（即两个",[30,622,623],{},"w","）来获取所有能获得的新闻。",[485,626,628],{"id":627},"q-quiet",[30,629,630],{},"-q(--quiet)",[14,632,633,634,637,638,483],{},"在输出新闻的时候，仅输出新闻的标题。该功能需要与",[30,635,636],{},"-w","连用，即",[30,639,640],{},"yay -Pwq",[468,642,644],{"id":643},"g-getpkgbuild",[30,645,646],{},"-G(--getpkgbuild)",[14,648,649,650,653],{},"后跟包名。需要注意的是，如果指定的包不存在于官方源，则无法输出，后跟",[30,651,652],{},"-f、-p","参数。",[14,655,656],{},[657,658,659,660,653],"em",{},"如果希望仅获取来自AUR（即排除第三方源的干扰）的PKGBUILD，后需跟",[30,661,662],{},"-a",[485,664,666],{"id":665},"f-force",[30,667,668],{},"-f(--force)",[14,670,671],{},"强制下载AUR中的PKGBUILD，如果它在yay缓存目录已经存在了，那就覆盖它！",[485,673,675],{"id":674},"p-print",[30,676,677],{},"-p(--print)",[14,679,680],{},"Print指定包的PKGBUILD。",[393,682,684],{"id":683},"pacman-拓展用法","pacman 拓展用法",[14,686,687],{},"yay虽然可以使用pacman的所有\u003Coperation>，但是它远不仅于此。在这一段，我将向你介绍yay中包含的那些pacman不包括的pacman \u003Coperation",[468,689,691],{"id":690},"s",[30,692,693],{},"-S",[485,695,697],{"id":696},"s-si-sl-ss-su-sc-qu",[30,698,699],{},"-S, -Si, -Sl, -Ss, -Su, -Sc, -Qu",[14,701,702,703,706],{},"这些操作pacman都支持，而与pacman不同的是，yay的这些操作可以涵盖到",[192,704,705],{},"官方源/第三方源和AUR","中的所有包。",[468,708,710],{"id":709},"sc",[30,711,712],{},"-Sc",[14,714,715,716,719],{},"yay将会清除AUR包构建时的缓存和没有被track的文件。没有被track的文件在这里指AUR包构建时下载的sources或者构建完成的pkg包，但是vcs sources会被保留（比如.",[30,717,718],{},"git","文件夹）",[468,721,723,724],{"id":722},"全局的options","全局的",[48,725,444],{},[14,727,728],{},"全局是指在所有\u003Coperation>下都可以加啦。",[485,730,732],{"id":731},"repo",[30,733,734],{},"--repo",[14,736,737],{},"假定你给出的包名只存在源里（忽视AUR的存在）",[485,739,741],{"id":740},"a-aur",[30,742,743],{},"-a(--aur)",[14,745,746],{},"假定你给出的包名只存在AUR中（忽视源的存在）",[372,748,749],{"id":749},"配置设置",[14,751,752],{},"原版的man手册排的比较混乱，我这里自己细分了几个类型，或许不是特别专业，但我希望能够帮助你们理解。",[393,754,755],{"id":755},"自定义调用命令型",[485,757,759],{"id":758},"editor-command",[30,760,761],{},"--editor \u003Ccommand>",[14,763,764],{},"设置编辑时调用的编辑器。",[485,766,768],{"id":767},"makepkg-command",[30,769,770],{},"--makepkg \u003Ccommand>",[14,772,773],{},"设置makepkg时需要调用makepkg命令（一般情况下用不到）",[485,775,777],{"id":776},"pacman-command",[30,778,779],{},"--pacman \u003Ccommand>",[14,781,782],{},"设置运行pacman时需要调用pacman命令（一般情况下用不到）",[485,784,786],{"id":785},"tar-command",[30,787,788],{},"--tar \u003Ccommand>",[14,790,791],{},"设置makepkg解压tar资源时调用的tar命令（一般情况下用不到）",[485,793,795],{"id":794},"git-command",[30,796,797],{},"--git \u003Ccommand>",[14,799,800,801,804],{},"设置makepkg clone git资源时调用的git命令（比如你可以安装AUR中的fgit-go，使用",[30,802,803],{},"--git fgit","参数来让fastgit代理clone的过程）",[485,806,808],{"id":807},"gpg-command",[30,809,810],{},"--gpg \u003Ccommand>",[14,812,813],{},"设置gpg验证资源时调用的gpg命令",[485,815,817],{"id":816},"sudo-command",[30,818,819],{},"--sudo \u003Ccommand>",[14,821,822],{},"设置调用sudo获取su权限安装pkg时所调用的sudo命令。",[393,824,825],{"id":825},"自定义配置文件型",[485,827,829],{"id":828},"config-file",[30,830,831],{},"--config \u003Cfile>",[14,833,834],{},"设置读取的pacman配置文件。",[485,836,838],{"id":837},"makepkgconf-file",[30,839,840],{},"--makepkgconf \u003Cfile>",[14,842,843],{},"设置读取的makepkg配置文件。",[485,845,847],{"id":846},"nomakepkgconf",[30,848,849],{},"--nomakepkgconf",[14,851,852],{},"不读取系统中的makepkg.conf，仅使用Arch默认状态下的配置文件。",[393,854,855],{"id":855},"自定义路径类型",[485,857,859],{"id":858},"builddir-dir",[30,860,861],{},"--builddir \u003Cdir>",[14,863,864,865],{},"设置build路径，默认路径为",[30,866,501],{},[485,868,870],{"id":869},"absdir-dir",[30,871,872],{},"--absdir \u003Cdir>",[14,874,875,876],{},"设置abs路径，默认路径为",[30,877,878],{},"~/.cache/yay/abs/",[393,880,881],{"id":881},"参数传递型",[485,883,885],{"id":884},"editorflags-flags",[30,886,887],{},"--editorflags \u003Cflags>",[14,889,890],{},"后跟需要跟随传递给编辑器的参数。如果需要传递多个参数，可以使用引号。",[485,892,894],{"id":893},"mflags-flags",[30,895,896],{},"--mflags \u003Cflags>",[14,898,899],{},"后跟需要跟随传递给makepkg的参数。如果需要传递多个参数，可以使用引号。",[14,901,902,903,906,907,910],{},"这个用的人不多，但其实是非常好用的一个功能。在我们安装",[30,904,905],{},"deepin-wine-tim","等包的时候，很可能会遇到文件明明完整但checksum不通过的情况，这时我们可以跟一个",[30,908,909],{},"--skipchecksums","参数传递给makepkg以跳过checksum的过程。",[485,912,914],{"id":913},"gpgflags-flags",[30,915,916],{},"--gpgflags \u003Cflags>",[14,918,919],{},"后跟需要跟随传递给pgp的参数。如果需要传递多个参数，可以使用引号。",[485,921,923],{"id":922},"sudoflags-flags",[30,924,925],{},"--sudoflags \u003Cflags>",[14,927,928],{},"后跟需要跟随传递给sudo的参数。如果需要传递多个参数，可以使用引号。",[393,930,931],{"id":931},"菜单配置型",[468,933,934],{"id":934},"clean菜单",[485,936,938,939],{"id":937},"cleanmenu","*",[30,940,941],{},"--cleanmenu",[14,943,944],{},"启用清除询问菜单。（询问你是否需要清除已存在的文件）",[485,946,948],{"id":947},"nocleanmenu",[30,949,950],{},"--nocleanmenu",[14,952,953],{},"禁用清除询问菜单。（不询问你是否需要清除已存在的文件）",[485,955,957],{"id":956},"answerclean",[30,958,959],{},"--answerclean",[14,961,962,963,653],{},"自动回答cleanmenu，后跟",[30,964,965],{},"\u003CAll|None|Installed|NotInstalled>",[485,967,938,969],{"id":968},"noanswerclean",[30,970,971],{},"--noanswerclean",[14,973,974],{},"不设置自动回答。",[468,976,977],{"id":977},"diff菜单",[485,979,938,981],{"id":980},"diffmenu",[30,982,983],{},"--diffmenu",[14,985,986],{},"启用对比询问菜单。（询问你是否需要对比本地文件和AUR文件）",[485,988,990],{"id":989},"nodiffmenu",[30,991,992],{},"--nodiffmenu",[14,994,995],{},"禁用对比询问菜单。（不询问你是否需要对比本地文件和AUR文件）",[485,997,999],{"id":998},"answerdiff",[30,1000,1001],{},"--answerdiff",[14,1003,962,1004,653],{},[30,1005,965],{},[485,1007,938,1009],{"id":1008},"noanswerdiff",[30,1010,1011],{},"--noanswerdiff",[14,1013,974],{},[468,1015,1016],{"id":1016},"edit菜单",[485,1018,1020],{"id":1019},"editmenu",[30,1021,1022],{},"--editmenu",[14,1024,1025],{},"启用修改询问菜单。（询问你是否需要修改PKGBUILD以及相关文件）",[485,1027,938,1029],{"id":1028},"noeditmenu",[30,1030,1031],{},"--noeditmenu",[14,1033,1034],{},"禁用修改询问菜单。（不询问你是否需要修改PKGBUILD以及相关文件）",[485,1036,1038],{"id":1037},"answeredit",[30,1039,1040],{},"--answeredit",[14,1042,1043,1044,653],{},"自动回答editmenu，后跟",[30,1045,965],{},[485,1047,938,1049],{"id":1048},"noansweredit",[30,1050,1051],{},"--noansweredit",[14,1053,974],{},[468,1055,1056],{"id":1056},"upgrade菜单",[485,1058,938,1060],{"id":1059},"upgrademenu",[30,1061,1062],{},"--upgrademenu",[14,1064,1065],{},"启用更新询问菜单。（询问你是否需要更新AUR包）",[485,1067,1069],{"id":1068},"noupgrademenu",[30,1070,1071],{},"--noupgrademenu",[14,1073,1074],{},"禁用更新询问菜单。（不询问你是否需要更新AUR包）",[485,1076,1078],{"id":1077},"answerupgrade",[30,1079,1080],{},"--answerupgrade",[14,1082,1083,1084,653],{},"自动回答upgrademenu，后跟",[30,1085,965],{},[485,1087,938,1089],{"id":1088},"noanswerupgrade",[30,1090,1091],{},"--noanswerupgrade",[14,1093,974],{},[468,1095,1096],{"id":1096},"removemake菜单",[485,1098,938,1100],{"id":1099},"askremovemake",[30,1101,1102],{},"--askremovemake",[14,1104,1105],{},"在编译结束后，询问是否删除make depend。",[485,1107,1109],{"id":1108},"removemake",[30,1110,1111],{},"--removemake",[14,1113,1114],{},"在编译结束后，删除make depend。",[485,1116,1118],{"id":1117},"noremovemake",[30,1119,1120],{},"--noremovemake",[14,1122,1123],{},"在编译结束后，不删除make depend。",[468,1125,1126],{"id":1126},"provides菜单",[485,1128,938,1130],{"id":1129},"provides",[30,1131,1132],{},"--provides",[14,1134,1135],{},"搜索AUR包时，一同寻找其在AUR上的依赖程序。 当找到多个提供该依赖的包时，将出现一个菜单，提示您选择一个。尽管这不会引起注意，但这会增加依赖项解决时间。",[485,1137,1139],{"id":1138},"noprovides",[30,1140,1141],{},"--noprovides",[14,1143,1144],{},"搜索AUR包时，不在AUR上寻找其依赖程序。尽管yay不会再次弹出依赖菜单供你选择，yay调用pacman时依然会出现pacman的选择菜单让你选择。",[468,1146,1147],{"id":1147},"pgpfetch菜单",[485,1149,938,1151],{"id":1150},"pgpfetch",[30,1152,1153],{},"--pgpfetch",[14,1155,1156],{},"询问你是否从每个PKGBUILD的validpgpkeys字段导入未知的PGP密钥。",[485,1158,1160],{"id":1159},"nopgpfetch",[30,1161,1162],{},"--nopgpfetch",[14,1164,1165],{},"不自动导入陌生的PGP密钥。",[468,1167,1168],{"id":1168},"useask选项",[485,1170,938,1172],{"id":1171},"useask",[30,1173,1174],{},"--useask",[14,1176,1177],{},"调用pacman的--ask询问用户是否删除系统中与当前包冲突的软件包。",[485,1179,1181],{"id":1180},"nouseask",[30,1182,1183],{},"--nouseask",[14,1185,1186],{},"不调用pacman的--ask询问用户是否删除系统中与当前包冲突的软件包，遇到冲突的软件包时直接报错，由用户来手动解决。",[468,1188,1189],{"id":1189},"combinedupgrade菜单",[485,1191,1193],{"id":1192},"combinedupgrade",[30,1194,1195],{},"--combinedupgrade",[14,1197,1198],{},"在系统更新期间，将源内包和AUR包的更新菜单合并到一起。",[485,1200,938,1202],{"id":1201},"nocombinedupgrade",[30,1203,1204],{},"--nocombinedupgrade",[14,1206,1207],{},"在系统更新期间，先支持源内包的升级，完成后再进行AUR包的升级。",[393,1209,1211],{"id":1210},"t-or-f-型","T or F 型",[468,1213,1214],{"id":1214},"devel",[485,1216,1217],{"id":1214},[30,1218,1219],{},"--devel",[14,1221,1222,1223,1226],{},"在系统更新期间，检查AUR的vcs包是否有更新，当前仅支持AUR的-git包。 devel查询是使用",[30,1224,1225],{},"git ls-remote","对比安装时和现在最新的commit_id完成的。",[485,1228,938,1230],{"id":1229},"nodevel",[30,1231,1232],{},"--nodevel",[14,1234,1235],{},"在系统更新期间， 不检查AUR的vcs包是否有更新。",[468,1237,1238],{"id":1238},"timeupdate",[485,1240,1241],{"id":1238},[30,1242,1243],{},"--timeupdate",[14,1245,1246],{},"在系统更新期间，将已安装软件包的构建时间与每个软件包的AUR的最后修改时间进行比较。",[485,1248,938,1250],{"id":1249},"notimeupdate",[30,1251,1252],{},"--notimeupdate",[14,1254,1255],{},"在系统更新期间，不将已安装软件包的构建时间与每个软件包的AUR的最后修改时间进行比较。",[468,1257,1258],{"id":1258},"redownload",[485,1260,1261],{"id":1258},[30,1262,1263],{},"--redownload",[14,1265,1266],{},"就算PKGBUILD已经存在，也要重新从AUR上获取一份新的PKGBUILD并覆盖原有PKGBUILD。",[485,1268,1270],{"id":1269},"redownloadall",[30,1271,1272],{},"--redownloadall",[14,1274,1275],{},"就算PKGBUILD已经存在，也要重新从AUR上获取所有AUR包的PKGBUILD并覆盖原有PKGBUILD。",[485,1277,938,1279],{"id":1278},"noredownload",[30,1280,1281],{},"--noredownload",[14,1283,1284],{},"当下载PKGBUILD时，，如果发现cache中的PKGBUILD版本＞＝AUR上的版本时，直接使用本地的PKGBUILD。",[468,1286,1287],{"id":1287},"rebuild",[485,1289,1290],{"id":1287},[30,1291,1292],{},"--rebuild",[14,1294,1295],{},"即使在cache中有可用的二进制包的情况下，也始终要重新编译目标软件包。",[485,1297,1299],{"id":1298},"rebuildall",[30,1300,1301],{},"--rebuildall",[14,1303,1304],{},"即使在cache中有可用的二进制包的情况下，也始终要重新编译所有的AUR包。",[485,1306,1308],{"id":1307},"rebuildtree",[30,1309,1310],{},"--rebuildtree",[14,1312,1313],{},"安装AUR包时，以递归方式重新编译并重新安装其所有AUR依赖包，即使已安装的依赖项也是如此。 该选项使您可以轻松地针对当前系统的库重新构建软件包，如果它们变得不兼容。（比如python3.8->3.9）",[485,1315,938,1317],{"id":1316},"norebuild",[30,1318,1319],{},"--norebuild",[14,1321,1322],{},"构建软件包时，如果在缓存中找到该软件包并且该软件包与想要的软件包的版本相同，则跳过软件包的编译过程并使用现有的二进制程序。",[468,1324,1325],{"id":1325},"sudoloop",[485,1327,1328],{"id":1325},[30,1329,1330],{},"--sudoloop",[14,1332,1333],{},"在后台循环调用sudo，以防止sudo授权在长时间构建期间超时。",[485,1335,938,1337],{"id":1336},"nosudoloop",[30,1338,1339],{},"--nosudoloop",[14,1341,1342],{},"不在后台循环调用sudo，可能会导致sudo授权在长时间构建期间超时。",[468,1344,1345],{"id":1345},"batchinstall",[485,1347,1348],{"id":1345},[30,1349,1350],{},"--batchinstall",[14,1352,1353],{},"在构建和安装AUR包时，对每个软件包的安装进行排序，而并非在构建之后立刻安装每个软件包时。 需要注意的是，一旦构建了所有软件包，或者需要构建队列中的软件包作为构建另一个软件包的依赖项，应当在安装队列中安装所有软件包。",[485,1355,938,1357],{"id":1356},"nobatchinstall",[30,1358,1359],{},"--nobatchinstall",[14,1361,1362],{},"在构建AUR包成功后立即安装。",[468,1364,1365],{"id":1365},"clearafter",[485,1367,1369],{"id":1368},"cleanafter",[30,1370,1371],{},"--cleanafter",[14,1373,1374],{},"在构建AUR包完成以后清除cache文件。",[485,1376,938,1378],{"id":1377},"nocleanafter",[30,1379,1380],{},"--nocleanafter",[14,1382,1383],{},"在构建AUR包完成以后不清除cache文件。",[393,1385,1386],{"id":1386},"其他型",[485,1388,1390],{"id":1389},"save",[30,1391,1392],{},"--save",[14,1394,1395],{},"把你这一次执行yay后面跟的配置参数永久保存下来。",[485,1397,1399],{"id":1398},"aururl",[30,1400,1401],{},"--aururl",[14,1403,1404,1405,1409,1410],{},"更改aur源地址（默认为 ",[21,1406,1407],{"href":1407,"rel":1408},"https://aur.archlinux.org",[25]," ），",[85,1411,1412],{},"适用于中国用户，可以使用此参数将AUR的地址设置成清华的反代，具体的配置命令为",[39,1414,1416],{"className":96,"code":1415,"language":98,"meta":44,"style":44},"yay --aururl \"https://aur.tuna.tsinghua.edu.cn\" --save\n",[30,1417,1418],{"__ignoreMap":44},[48,1419,1420,1422,1425,1428],{"class":50,"line":51},[48,1421,387],{"class":205},[48,1423,1424],{"class":209}," --aururl",[48,1426,1427],{"class":58}," \"https://aur.tuna.tsinghua.edu.cn\"",[48,1429,1430],{"class":209}," --save\n",[14,1432,1433],{},"TUNA 的反代已经取消，可以使用如下命令设置回 AUR 官方源",[39,1435,1437],{"className":96,"code":1436,"language":98,"meta":44,"style":44},"yay --aururl \"https://aur.archlinux.org\" --save\n",[30,1438,1439],{"__ignoreMap":44},[48,1440,1441,1443,1445,1448],{"class":50,"line":51},[48,1442,387],{"class":205},[48,1444,1424],{"class":209},[48,1446,1447],{"class":58}," \"https://aur.archlinux.org\"",[48,1449,1430],{"class":209},[485,1451,1453],{"id":1452},"sortby",[30,1454,1455],{},"--sortby",[14,1457,1458,1459,1462,1463,483],{},"在搜索过程中，按特定条件对AUR结果进行排序，后跟",[30,1460,1461],{},"\u003Cvotes|popularity|id|baseid|name|base|submitted|modified","参数，默认为",[30,1464,1465],{},"votes",[485,1467,1469],{"id":1468},"searchby",[30,1470,1471],{},"--searchby",[14,1473,1474,1475,1462,1478,483],{},"通过指定查询类型来搜索AUR软件包，后跟",[30,1476,1477],{},"\u003Cname|name-desc|maintainer|depends|checkdepends|makedepends|optdepends",[30,1479,1480],{},"name-desc",[485,1482,938,1484],{"id":1483},"topdown",[30,1485,1486],{},"--topdown",[14,1488,1489],{},"优先展示源内包，其次才是AUR包",[485,1491,1493],{"id":1492},"bottomup",[30,1494,1495],{},"--bottomup",[14,1497,1498],{},"优先展示AUR包，其次才是源内包",[485,1500,1502],{"id":1501},"requestsplitn-number",[30,1503,1504],{},"--requestsplitn \u003Cnumber>",[14,1506,1507],{},"设置在每次向AUR的请求的最大数值（默认150）。数值越高，请求时间越短，但是单次请求的数值过大会导致error。当这个数值＞500时你应当特别注意这一点。",[485,1509,1511],{"id":1510},"completioninterval-days",[30,1512,1513],{},"--completioninterval \u003Cdays>",[14,1515,1516],{},"刷新完成高速缓存的时间（以天为单位,默认为7）。 将此值设置为0将导致每次刷新缓存，而将其设置为-1将导致永远不刷新缓存。",[372,1518,1519],{"id":1519},"我个人的常用命令",[39,1521,1524],{"className":1522,"code":1523,"language":428},[426],"yay\nyay foo\nyay -Sa foo\nyay -Scc\nyay -Ps\nyay -Pww\nyay -Gpa\nyay -Ga\n",[30,1525,1523],{"__ignoreMap":44},[14,1527,1528],{},[657,1529,1530,1531,1536],{},"本文同时发布于「",[21,1532,1535],{"href":1533,"rel":1534},"https://zhuanlan.zhihu.com/p/363666022",[25],"知乎专栏","」，如果你恰好有知乎帐号的话或许可以考虑帮我点个赞？",[246,1538,1539],{},"html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":44,"searchDepth":62,"depth":62,"links":1541},[1542,1548,1557],{"id":374,"depth":62,"text":374,"children":1543},[1544,1545,1546,1547],{"id":387,"depth":142,"text":387},{"id":409,"depth":142,"text":384},{"id":436,"depth":142,"text":380},{"id":683,"depth":142,"text":684},{"id":749,"depth":62,"text":749,"children":1549},[1550,1551,1552,1553,1554,1555,1556],{"id":755,"depth":142,"text":755},{"id":825,"depth":142,"text":825},{"id":855,"depth":142,"text":855},{"id":881,"depth":142,"text":881},{"id":931,"depth":142,"text":931},{"id":1210,"depth":142,"text":1211},{"id":1386,"depth":142,"text":1386},{"id":1519,"depth":62,"text":1519},{"title":1559,"date":1560,"path":1561,"tags":1562,"body":1563},"抛弃DisplayManager，拥抱startx","2021-03-14","/2021/03/14/lets-fuck-dm-and-use-startx","Linux",{"type":11,"value":1564,"toc":1675},[1565,1568,1571,1593,1596,1613,1616,1631,1634,1640,1648,1653,1656,1662,1665,1672],[14,1566,1567],{},"在正常情况下，我们会给Linux装上一个DisplayManager以方便我们输入账号密码来进入图形化系统，但是我不想要额外装一个DM来启动我的图形化系统（而且之前我一直用的sddm也出过一小阵子的问题）",[14,1569,1570],{},"首先卸载我的sddm",[39,1572,1574],{"className":41,"code":1573,"language":43,"meta":44,"style":44},"sudo pacman -Rsnc sddm sddm-kcm\n",[30,1575,1576],{"__ignoreMap":44},[48,1577,1578,1581,1584,1587,1590],{"class":50,"line":51},[48,1579,1580],{"class":205},"sudo",[48,1582,1583],{"class":58}," pacman",[48,1585,1586],{"class":209}," -Rsnc",[48,1588,1589],{"class":58}," sddm",[48,1591,1592],{"class":58}," sddm-kcm\n",[14,1594,1595],{},"安装startx所在的软件包",[39,1597,1599],{"className":41,"code":1598,"language":43,"meta":44,"style":44},"sudo pacman -S xorg-xinit\n",[30,1600,1601],{"__ignoreMap":44},[48,1602,1603,1605,1607,1610],{"class":50,"line":51},[48,1604,1580],{"class":205},[48,1606,1583],{"class":58},[48,1608,1609],{"class":209}," -S",[48,1611,1612],{"class":58}," xorg-xinit\n",[14,1614,1615],{},"从/etc/X11/xinit/xinitrc拷贝一份.xinitrc",[39,1617,1619],{"className":41,"code":1618,"language":43,"meta":44,"style":44},"cp /etc/X11/xinit/xinitrc ~/.xinitrc\n",[30,1620,1621],{"__ignoreMap":44},[48,1622,1623,1625,1628],{"class":50,"line":51},[48,1624,221],{"class":205},[48,1626,1627],{"class":58}," /etc/X11/xinit/xinitrc",[48,1629,1630],{"class":58}," ~/.xinitrc\n",[14,1632,1633],{},"注释掉最后5行",[39,1635,1638],{"className":1636,"code":1637,"language":428},[426],"#twm &\n#xclock -geometry 50x50-1+1 &\n#xterm -geometry 80x50+494+51 &\n#xterm -geometry 80x20+494-0 &\n#exec xterm -geometry 80x66+0+0 -name login\n",[30,1639,1637],{"__ignoreMap":44},[14,1641,1642,1643],{},"然后需要在结尾处写上我们的配置。我用的桌面是Plasma，查询",[21,1644,1647],{"href":1645,"rel":1646},"https://wiki.archlinux.org/index.php/KDE#From_the_console",[25],"wiki",[262,1649,1650],{},[14,1651,1652],{},"To start Plasma with xinit/startx, append export DESKTOP_SESSION=plasma and exec startplasma-x11 to your .xinitrc file. If you want to start Xorg at login, please see Start X at login.",[14,1654,1655],{},"然后在xinitrx文件末尾处写上我们的配置",[39,1657,1660],{"className":1658,"code":1659,"language":428},[426],"export DESKTOP_SESSION=plasma\nstartplasma-x11\n",[30,1661,1659],{"__ignoreMap":44},[14,1663,1664],{},"Ps: 在第二行中，wiki中让我们使用exec，代表当xorg桌面会话结束后自动退出当前用户，而我不想退出，所以没加",[14,1666,1667,1668,1671],{},"至此，我们的startx就已经配置完成了，重启后只需要在tty界面登录用户后输入",[30,1669,1670],{},"startx","并回车即可进入图形化界面。",[246,1673,1674],{},"html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":44,"searchDepth":62,"depth":62,"links":1676},[],{"title":1678,"date":1679,"path":1680,"tags":1681,"body":1683},"FireFox? IceDoge!!!","2021-02-27","/2021/02/27/change-your-firefox-icon-into-a-bluedoge",[1562,1682],"Fun",{"type":11,"value":1684,"toc":2000},[1685,1688,1718,1721,1727,1734,1737,1740,1997],[14,1686,1687],{},"事情的起因是这样的。",[262,1689,1690,1693,1703],{},[14,1691,1692],{},"Solidot",[14,1694,1695],{},[192,1696,1697,1702],{},[21,1698,1701],{"href":1699,"rel":1700},"https://www.solidot.org/story?sid=67051",[25],"Mozilla 强调 Firefox 的 logo 仍然包含小狐狸 "," 2021-02-27 20:02",[14,1704,1705,1706,1711,1712,1717],{},"#Firefox 过去几天一个广泛流传的 meme 宣称，Firefox 著名的红色小狐狸 logo 正被逐渐简化直至消失。Mozilla 官方博客",[21,1707,1710],{"href":1708,"rel":1709},"https://blog.mozilla.org/firefox/the-fox-is-still-in-the-firefox-logo/",[25],"对此做出了回应","，强调 Firefox 的 logo 将会始终包含小狐狸，他们没有消除狐狸的计划。作为反击这一 meme 行动的一部分，Mozilla 修改了",[21,1713,1716],{"href":1714,"rel":1715},"https://www.mozilla.org/en-US/firefox/nightly/firstrun/",[25],"Firefox Nightly"," 的 logo，将著名的网络 meme 狗币中的柴犬图像与红色小狐狸 logo 整合在一起。如果你下载安装 Nightly 版本，你会看到狗狗在看着你。",[14,1719,1720],{},"这只狗是非常可爱，大概是长下图这个样子。",[14,1722,1723],{},[79,1724],{"alt":1725,"src":1726},"非常可爱对吧","https://www.mozilla.org/media/img/logos/firefox/logo-nightdoge-lg-high-res.14f40a7985fe.png",[14,1728,1729,1730],{},"但是我是一个将Firefox当成主浏览器的用户，咱不可能去用Nightly，所以我就打算把我这里这只稳定版的红色小狐狸",[79,1731],{"alt":1732,"src":1733},"这只我都看烦了的小狐狸","https://www.mozilla.org/media/protocol/img/logos/firefox/browser/logo-lg-high-res.fbc7ffbb50fd.png",[14,1735,1736],{},"换成上面的那只狗。",[14,1738,1739],{},"通过直接写入用户目录下的icon可以在不覆盖浏览器原图标、不给包管理器惹麻烦的情况下实现我们的目标，所以，代码如下",[39,1741,1743],{"className":96,"code":1742,"language":98,"meta":44,"style":44},"#/usr/bin/sh\n\n# This script will change icon of you Firefox Browser into a bluedoge\n# Depend on imagemagick\n\ncd ~\ncurl https://www.mozilla.org/media/img/logos/firefox/logo-nightdoge-lg-high-res.14f40a7985fe.png > logo-nightdoge-lg-high-res.14f40a7985fe.png\n\nfor _resolution in 16 22 24 32 48 64 128 192 256 384\ndo\n    mkdir -p ~/.local/share/icons/hicolor/${_resolution}x${_resolution}/apps/\n    convert -resize \"${_resolution}x${_resolution}\" \"logo-nightdoge-lg-high-res.14f40a7985fe.png\" \"firefox${_resolution}.png\"\n    mv \"firefox${_resolution}.png\" ~/.local/share/icons/hicolor/${_resolution}x${_resolution}/apps/firefox.png\ndone\n\nrm logo-nightdoge-lg-high-res.14f40a7985fe.png\n\n# If you want to change back your icons, run the command bellow\n# rm ~/.local/share/icons/hicolor/*/apps/firefox.png\n",[30,1744,1745,1750,1756,1761,1766,1771,1780,1795,1800,1842,1848,1881,1924,1960,1966,1971,1980,1985,1991],{"__ignoreMap":44},[48,1746,1747],{"class":50,"line":51},[48,1748,1749],{"class":105},"#/usr/bin/sh\n",[48,1751,1752],{"class":50,"line":62},[48,1753,1755],{"emptyLinePlaceholder":1754},true,"\n",[48,1757,1758],{"class":50,"line":142},[48,1759,1760],{"class":105},"# This script will change icon of you Firefox Browser into a bluedoge\n",[48,1762,1763],{"class":50,"line":155},[48,1764,1765],{"class":105},"# Depend on imagemagick\n",[48,1767,1769],{"class":50,"line":1768},5,[48,1770,1755],{"emptyLinePlaceholder":1754},[48,1772,1774,1777],{"class":50,"line":1773},6,[48,1775,1776],{"class":54},"cd",[48,1778,1779],{"class":58}," ~\n",[48,1781,1783,1786,1789,1792],{"class":50,"line":1782},7,[48,1784,1785],{"class":205},"curl",[48,1787,1788],{"class":58}," https://www.mozilla.org/media/img/logos/firefox/logo-nightdoge-lg-high-res.14f40a7985fe.png",[48,1790,1791],{"class":68}," > ",[48,1793,1794],{"class":58},"logo-nightdoge-lg-high-res.14f40a7985fe.png\n",[48,1796,1798],{"class":50,"line":1797},8,[48,1799,1755],{"emptyLinePlaceholder":1754},[48,1801,1803,1806,1809,1812,1815,1818,1821,1824,1827,1830,1833,1836,1839],{"class":50,"line":1802},9,[48,1804,1805],{"class":111},"for",[48,1807,1808],{"class":115}," _resolution",[48,1810,1811],{"class":111}," in",[48,1813,1814],{"class":58}," 16",[48,1816,1817],{"class":58}," 22",[48,1819,1820],{"class":58}," 24",[48,1822,1823],{"class":58}," 32",[48,1825,1826],{"class":58}," 48",[48,1828,1829],{"class":58}," 64",[48,1831,1832],{"class":58}," 128",[48,1834,1835],{"class":58}," 192",[48,1837,1838],{"class":58}," 256",[48,1840,1841],{"class":58}," 384\n",[48,1843,1845],{"class":50,"line":1844},10,[48,1846,1847],{"class":111},"do\n",[48,1849,1851,1854,1856,1859,1863,1866,1869,1872,1874,1876,1878],{"class":50,"line":1850},11,[48,1852,1853],{"class":205},"    mkdir",[48,1855,210],{"class":209},[48,1857,1858],{"class":58}," ~/.local/share/icons/hicolor/",[48,1860,1862],{"class":1861},"sr1Ac","${",[48,1864,1865],{"class":115},"_resolution",[48,1867,1868],{"class":1861},"}",[48,1870,1871],{"class":58},"x",[48,1873,1862],{"class":1861},[48,1875,1865],{"class":115},[48,1877,1868],{"class":1861},[48,1879,1880],{"class":58},"/apps/\n",[48,1882,1884,1887,1890,1892,1895,1897,1899,1901,1903,1905,1907,1909,1912,1915,1917,1919,1921],{"class":50,"line":1883},12,[48,1885,1886],{"class":205},"    convert",[48,1888,1889],{"class":209}," -resize",[48,1891,164],{"class":58},[48,1893,1862],{"class":1894},"sTIpt",[48,1896,1865],{"class":115},[48,1898,1868],{"class":1894},[48,1900,1871],{"class":58},[48,1902,1862],{"class":1894},[48,1904,1865],{"class":115},[48,1906,1868],{"class":1894},[48,1908,171],{"class":58},[48,1910,1911],{"class":58}," \"logo-nightdoge-lg-high-res.14f40a7985fe.png\"",[48,1913,1914],{"class":58}," \"firefox",[48,1916,1862],{"class":1894},[48,1918,1865],{"class":115},[48,1920,1868],{"class":1894},[48,1922,1923],{"class":58},".png\"\n",[48,1925,1927,1930,1932,1934,1936,1938,1941,1943,1945,1947,1949,1951,1953,1955,1957],{"class":50,"line":1926},13,[48,1928,1929],{"class":205},"    mv",[48,1931,1914],{"class":58},[48,1933,1862],{"class":1894},[48,1935,1865],{"class":115},[48,1937,1868],{"class":1894},[48,1939,1940],{"class":58},".png\"",[48,1942,1858],{"class":58},[48,1944,1862],{"class":1861},[48,1946,1865],{"class":115},[48,1948,1868],{"class":1861},[48,1950,1871],{"class":58},[48,1952,1862],{"class":1861},[48,1954,1865],{"class":115},[48,1956,1868],{"class":1861},[48,1958,1959],{"class":58},"/apps/firefox.png\n",[48,1961,1963],{"class":50,"line":1962},14,[48,1964,1965],{"class":111},"done\n",[48,1967,1969],{"class":50,"line":1968},15,[48,1970,1755],{"emptyLinePlaceholder":1754},[48,1972,1974,1977],{"class":50,"line":1973},16,[48,1975,1976],{"class":205},"rm",[48,1978,1979],{"class":58}," logo-nightdoge-lg-high-res.14f40a7985fe.png\n",[48,1981,1983],{"class":50,"line":1982},17,[48,1984,1755],{"emptyLinePlaceholder":1754},[48,1986,1988],{"class":50,"line":1987},18,[48,1989,1990],{"class":105},"# If you want to change back your icons, run the command bellow\n",[48,1992,1994],{"class":50,"line":1993},19,[48,1995,1996],{"class":105},"# rm ~/.local/share/icons/hicolor/*/apps/firefox.png\n",[246,1998,1999],{},"html pre.shiki code .sW2Sy, html code.shiki .sW2Sy{--shiki-default:#A0A1A7;--shiki-default-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic}html pre.shiki code .s_Sar, html code.shiki .s_Sar{--shiki-default:#0184BC;--shiki-dark:#56B6C2}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html pre.shiki code .sLKXg, html code.shiki .sLKXg{--shiki-default:#A626A4;--shiki-dark:#C678DD}html pre.shiki code .sJa8x, html code.shiki .sJa8x{--shiki-default:#E45649;--shiki-dark:#E06C75}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}html pre.shiki code .sr1Ac, html code.shiki .sr1Ac{--shiki-default:#E45649;--shiki-dark:#ABB2BF}html pre.shiki code .sTIpt, html code.shiki .sTIpt{--shiki-default:#E45649;--shiki-dark:#98C379}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":44,"searchDepth":62,"depth":62,"links":2001},[],{"title":2003,"date":2004,"path":2005,"tags":2006,"body":2010},"在Archlinux上解包A/B机型的payload.bin","2021-02-07","/2021/02/07/extract-payload-dot-bin-on-archlinux",[2007,340,2008,2009],"Android","Rom编译","Python",{"type":11,"value":2011,"toc":2085},[2012,2015,2036,2079,2082],[14,2013,2014],{},"解包A/B机型的OTA更新包时，会发现zip文件中只有一个payload.bin文件",[14,2016,2017,2018,2023,2024,33,2027,2030,2031],{},"解包这个文件，我们需要用到这个叫",[21,2019,2022],{"href":2020,"rel":2021},"https://github.com/vm03/payload_dumper/blob/master/payload_dumper.py",[25],"payload_dumper","的python脚本，同时需要安装依赖: ",[30,2025,2026],{},"community/python-google-api-core",[30,2028,2029],{},"python-bsdiff4","，我解包的时候发现缺少python3版本的python-bsdiff4，因此已经打包上传至",[21,2032,2035],{"href":2033,"rel":2034},"https://aur.archlinux.org/packages/python-bsdiff4",[25],"AUR",[39,2037,2039],{"className":96,"code":2038,"language":98,"meta":44,"style":44},"git clone https://github.com/vm03/payload_dumper.git\ncd payload_dumper\nmv path/to/payload.bin payload_dumper\npython payload_dumper.py payload.bin\n",[30,2040,2041,2051,2058,2068],{"__ignoreMap":44},[48,2042,2043,2045,2048],{"class":50,"line":51},[48,2044,718],{"class":205},[48,2046,2047],{"class":58}," clone",[48,2049,2050],{"class":58}," https://github.com/vm03/payload_dumper.git\n",[48,2052,2053,2055],{"class":50,"line":62},[48,2054,1776],{"class":54},[48,2056,2057],{"class":58}," payload_dumper\n",[48,2059,2060,2063,2066],{"class":50,"line":142},[48,2061,2062],{"class":205},"mv",[48,2064,2065],{"class":58}," path/to/payload.bin",[48,2067,2057],{"class":58},[48,2069,2070,2073,2076],{"class":50,"line":155},[48,2071,2072],{"class":205},"python",[48,2074,2075],{"class":58}," payload_dumper.py",[48,2077,2078],{"class":58}," payload.bin\n",[14,2080,2081],{},"然后就可以在该项目文件夹的output路径下找到解包后的img镜像",[246,2083,2084],{},"html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .s_Sar, html code.shiki .s_Sar{--shiki-default:#0184BC;--shiki-dark:#56B6C2}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":44,"searchDepth":62,"depth":62,"links":2086},[],{"title":2088,"date":2089,"path":2090,"tags":2091,"body":2092},"如何解决adb未授权的问题","2021-01-25","/2021/01/25/how-to-solve-the-adb-devices-unauthorized-problem",[2007,1562,2008],{"type":11,"value":2093,"toc":2195},[2094,2097,2107,2110,2192],[14,2095,2096],{},"在调试安卓设备的时候，我们经常会遇到adb未授权的问题，本方案适用于未开机时遇到以下两种情况。",[2098,2099,2100,2104],"ol",{},[2101,2102,2103],"li",{},"当我们编译eng的时候，adb应该会默认授权所有设备，但是有部分Rom并不会。",[2101,2105,2106],{},"当我们编译userdebug的时候，adb就不会授权给所有设备了，如果卡开机，使用adb抓取log将会是非常麻烦的事情。",[14,2108,2109],{},"此时我们需要手动导入我们的adbkey",[2098,2111,2112,2115,2121,2185],{},[2101,2113,2114],{},"手机重启到Recovery模式",[2101,2116,2117,2118],{},"找到你电脑的adbkey公钥，一般叫做",[30,2119,2120],{},"adbkey.pub",[2101,2122,2123,2168,2169],{},[39,2124,2126],{"className":96,"code":2125,"language":98,"meta":44,"style":44},"adb push ${the/location/to/your/key} /data/misc/adb/adb_keys\n",[30,2127,2128],{"__ignoreMap":44},[48,2129,2130,2133,2136,2139,2142,2145,2148,2150,2153,2155,2158,2160,2163,2165],{"class":50,"line":51},[48,2131,2132],{"class":205},"adb",[48,2134,2135],{"class":58}," push",[48,2137,2138],{"class":1861}," ${",[48,2140,2141],{"class":115},"the",[48,2143,2144],{"class":68},"/",[48,2146,2147],{"class":115},"location",[48,2149,2144],{"class":68},[48,2151,2152],{"class":115},"to",[48,2154,2144],{"class":68},[48,2156,2157],{"class":115},"your",[48,2159,2144],{"class":68},[48,2161,2162],{"class":115},"key",[48,2164,1868],{"class":1861},[48,2166,2167],{"class":58}," /data/misc/adb/adb_keys\n","比如我就是",[39,2170,2172],{"className":96,"code":2171,"language":98,"meta":44,"style":44},"adb push ~/.android/adbkey.pub /data/misc/adb/adb_keys\n",[30,2173,2174],{"__ignoreMap":44},[48,2175,2176,2178,2180,2183],{"class":50,"line":51},[48,2177,2132],{"class":205},[48,2179,2135],{"class":58},[48,2181,2182],{"class":58}," ~/.android/adbkey.pub",[48,2184,2167],{"class":58},[2101,2186,2187,2188,2191],{},"重启手机，",[85,2189,2190],{},"愉快","苦逼地去抓log",[246,2193,2194],{},"html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .sr1Ac, html code.shiki .sr1Ac{--shiki-default:#E45649;--shiki-dark:#ABB2BF}html pre.shiki code .sJa8x, html code.shiki .sJa8x{--shiki-default:#E45649;--shiki-dark:#E06C75}html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":44,"searchDepth":62,"depth":62,"links":2196},[],{"title":2198,"date":2199,"path":2200,"tags":2201,"body":2202},"虚拟Python环境","2021-01-20","/2021/01/20/python-virtualenv",[2008,2009,1562],{"type":11,"value":2203,"toc":2573},[2204,2207,2210,2214,2217,2224,2227,2262,2265,2282,2285,2289,2340,2343,2395,2398,2401,2431,2434,2440,2443,2446,2449,2471,2474,2512,2515,2536,2539,2548,2551,2570],[14,2205,2206],{},"在python使用中，我们经常会遇到本地默认python版本与程序所需要的python版本不一致的问题，此时我们需要创建一个虚拟的python环境。",[372,2208,2209],{"id":2209},"安装目标python版本",[393,2211,2213],{"id":2212},"ubuntu系","Ubuntu系",[468,2215,2216],{"id":2216},"主程序",[14,2218,2219,2220],{},"参考",[21,2221,2222],{"href":2222,"rel":2223},"https://www.cnblogs.com/m3721w/articles/10344887.html",[25],[468,2225,2226],{"id":2226},"pip",[39,2228,2230],{"className":96,"code":2229,"language":98,"meta":44,"style":44},"sudo apt isntall python-pip     #python2\nsudo apt isntall python3-pip    #python3\n",[30,2231,2232,2248],{"__ignoreMap":44},[48,2233,2234,2236,2239,2242,2245],{"class":50,"line":51},[48,2235,1580],{"class":205},[48,2237,2238],{"class":58}," apt",[48,2240,2241],{"class":58}," isntall",[48,2243,2244],{"class":58}," python-pip",[48,2246,2247],{"class":105},"     #python2\n",[48,2249,2250,2252,2254,2256,2259],{"class":50,"line":62},[48,2251,1580],{"class":205},[48,2253,2238],{"class":58},[48,2255,2241],{"class":58},[48,2257,2258],{"class":58}," python3-pip",[48,2260,2261],{"class":105},"    #python3\n",[393,2263,340],{"id":2264},"archlinux",[39,2266,2268],{"className":96,"code":2267,"language":98,"meta":44,"style":44},"yay -S python【xx】       #如yay -S python38\n",[30,2269,2270],{"__ignoreMap":44},[48,2271,2272,2274,2276,2279],{"class":50,"line":51},[48,2273,387],{"class":205},[48,2275,1609],{"class":209},[48,2277,2278],{"class":58}," python【xx】",[48,2280,2281],{"class":105},"       #如yay -S python38\n",[393,2283,2284],{"id":2284},"源码安装",[468,2286,2288],{"id":2287},"主程序-1","主程序:",[39,2290,2292],{"className":96,"code":2291,"language":98,"meta":44,"style":44},"wget https://www.python.org/ftp/python/【x.x.x】/Python-【x.x.x】.tgz\ntar xzvf Python-【x.x.x】.tgz\ncd Python-x.x.x\n./configure\nmake\nsudo make install\n",[30,2293,2294,2302,2313,2320,2325,2330],{"__ignoreMap":44},[48,2295,2296,2299],{"class":50,"line":51},[48,2297,2298],{"class":205},"wget",[48,2300,2301],{"class":58}," https://www.python.org/ftp/python/【x.x.x】/Python-【x.x.x】.tgz\n",[48,2303,2304,2307,2310],{"class":50,"line":62},[48,2305,2306],{"class":205},"tar",[48,2308,2309],{"class":58}," xzvf",[48,2311,2312],{"class":58}," Python-【x.x.x】.tgz\n",[48,2314,2315,2317],{"class":50,"line":142},[48,2316,1776],{"class":54},[48,2318,2319],{"class":58}," Python-x.x.x\n",[48,2321,2322],{"class":50,"line":155},[48,2323,2324],{"class":205},"./configure\n",[48,2326,2327],{"class":50,"line":1768},[48,2328,2329],{"class":205},"make\n",[48,2331,2332,2334,2337],{"class":50,"line":1773},[48,2333,1580],{"class":205},[48,2335,2336],{"class":58}," make",[48,2338,2339],{"class":58}," install\n",[468,2341,2226],{"id":2342},"pip-1",[39,2344,2346],{"className":96,"code":2345,"language":98,"meta":44,"style":44},"curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py\nsudo python【x.x】 get-pip.py -i  https://mirrors.bfsu.edu.cn/pypi/web/simple\npip config set global.index-url https://mirrors.bfsu.edu.cn/pypi/web/simple     #换源\n",[30,2347,2348,2361,2376],{"__ignoreMap":44},[48,2349,2350,2352,2355,2358],{"class":50,"line":51},[48,2351,1785],{"class":205},[48,2353,2354],{"class":58}," https://bootstrap.pypa.io/get-pip.py",[48,2356,2357],{"class":209}," -o",[48,2359,2360],{"class":58}," get-pip.py\n",[48,2362,2363,2365,2368,2371,2373],{"class":50,"line":62},[48,2364,1580],{"class":205},[48,2366,2367],{"class":58}," python【x.x】",[48,2369,2370],{"class":58}," get-pip.py",[48,2372,236],{"class":209},[48,2374,2375],{"class":58},"  https://mirrors.bfsu.edu.cn/pypi/web/simple\n",[48,2377,2378,2380,2383,2386,2389,2392],{"class":50,"line":142},[48,2379,2226],{"class":205},[48,2381,2382],{"class":58}," config",[48,2384,2385],{"class":58}," set",[48,2387,2388],{"class":58}," global.index-url",[48,2390,2391],{"class":58}," https://mirrors.bfsu.edu.cn/pypi/web/simple",[48,2393,2394],{"class":105},"     #换源\n",[372,2396,2397],{"id":2397},"安装virtualenv",[393,2399,2400],{"id":2400},"常规发行版",[39,2402,2404],{"className":96,"code":2403,"language":98,"meta":44,"style":44},"pip install virtualenv          #python2\npip3 install virtualenv         #python3\n",[30,2405,2406,2419],{"__ignoreMap":44},[48,2407,2408,2410,2413,2416],{"class":50,"line":51},[48,2409,2226],{"class":205},[48,2411,2412],{"class":58}," install",[48,2414,2415],{"class":58}," virtualenv",[48,2417,2418],{"class":105},"          #python2\n",[48,2420,2421,2424,2426,2428],{"class":50,"line":62},[48,2422,2423],{"class":205},"pip3",[48,2425,2412],{"class":58},[48,2427,2415],{"class":58},[48,2429,2430],{"class":105},"         #python3\n",[393,2432,340],{"id":2433},"archlinux-1",[39,2435,2438],{"className":2436,"code":2437,"language":428},[426],"sudo pacman -S python2-virtualenv   #python2\nsudo pacman -S python-virtualenv    #python3\n",[30,2439,2437],{"__ignoreMap":44},[372,2441,2442],{"id":2442},"使用virtualenv",[393,2444,2445],{"id":2445},"创建virtualenv环境",[468,2447,2400],{"id":2448},"常规发行版-1",[39,2450,2452],{"className":96,"code":2451,"language":98,"meta":44,"style":44},"virtualenv $(TRAGET_PATH) python=python【x.x】\n",[30,2453,2454],{"__ignoreMap":44},[48,2455,2456,2459,2462,2465,2468],{"class":50,"line":51},[48,2457,2458],{"class":205},"virtualenv",[48,2460,2461],{"class":68}," $(",[48,2463,2464],{"class":205},"TRAGET_PATH",[48,2466,2467],{"class":68},") ",[48,2469,2470],{"class":58},"python=python【x.x】\n",[468,2472,340],{"id":2473},"archlinux-2",[39,2475,2477],{"className":96,"code":2476,"language":98,"meta":44,"style":44},"virtualenv2 $(TRAGET_PATH) python=python2.【x】       #python2\nvirtualenv $(TRAGET_PATH) python=python3.【x】        #python3\n",[30,2478,2479,2496],{"__ignoreMap":44},[48,2480,2481,2484,2486,2488,2490,2493],{"class":50,"line":51},[48,2482,2483],{"class":205},"virtualenv2",[48,2485,2461],{"class":68},[48,2487,2464],{"class":205},[48,2489,2467],{"class":68},[48,2491,2492],{"class":58},"python=python2.【x】",[48,2494,2495],{"class":105},"       #python2\n",[48,2497,2498,2500,2502,2504,2506,2509],{"class":50,"line":62},[48,2499,2458],{"class":205},[48,2501,2461],{"class":68},[48,2503,2464],{"class":205},[48,2505,2467],{"class":68},[48,2507,2508],{"class":58},"python=python3.【x】",[48,2510,2511],{"class":105},"        #python3\n",[393,2513,2514],{"id":2514},"启用virtualenv环境",[39,2516,2518],{"className":96,"code":2517,"language":98,"meta":44,"style":44},"source $(TARGET_PATH)/bin/activate\n",[30,2519,2520],{"__ignoreMap":44},[48,2521,2522,2525,2527,2530,2533],{"class":50,"line":51},[48,2523,2524],{"class":54},"source",[48,2526,2461],{"class":68},[48,2528,2529],{"class":205},"TARGET_PATH",[48,2531,2532],{"class":68},")",[48,2534,2535],{"class":58},"/bin/activate\n",[393,2537,2538],{"id":2538},"退出virtualenv环境",[39,2540,2542],{"className":96,"code":2541,"language":98,"meta":44,"style":44},"deactivate\n",[30,2543,2544],{"__ignoreMap":44},[48,2545,2546],{"class":50,"line":51},[48,2547,2541],{"class":205},[393,2549,2550],{"id":2550},"删除virtualenv环境",[39,2552,2554],{"className":96,"code":2553,"language":98,"meta":44,"style":44},"rm -rf $(TRAGET_PATH)\n",[30,2555,2556],{"__ignoreMap":44},[48,2557,2558,2560,2563,2565,2567],{"class":50,"line":51},[48,2559,1976],{"class":205},[48,2561,2562],{"class":209}," -rf",[48,2564,2461],{"class":68},[48,2566,2464],{"class":205},[48,2568,2569],{"class":68},")\n",[246,2571,2572],{},"html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .sW2Sy, html code.shiki .sW2Sy{--shiki-default:#A0A1A7;--shiki-default-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}html pre.shiki code .s_Sar, html code.shiki .s_Sar{--shiki-default:#0184BC;--shiki-dark:#56B6C2}html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}",{"title":44,"searchDepth":62,"depth":62,"links":2574},[2575,2580,2584],{"id":2209,"depth":62,"text":2209,"children":2576},[2577,2578,2579],{"id":2212,"depth":142,"text":2213},{"id":2264,"depth":142,"text":340},{"id":2284,"depth":142,"text":2284},{"id":2397,"depth":62,"text":2397,"children":2581},[2582,2583],{"id":2400,"depth":142,"text":2400},{"id":2433,"depth":142,"text":340},{"id":2442,"depth":62,"text":2442,"children":2585},[2586,2587,2588,2589],{"id":2445,"depth":142,"text":2445},{"id":2514,"depth":142,"text":2514},{"id":2538,"depth":142,"text":2538},{"id":2550,"depth":142,"text":2550},{"title":2591,"date":2592,"path":2593,"tags":1562,"body":2594},"为什么我不推荐Manjaro","2021-01-01","/2021/01/01/why-i-dont-recommend-manjaro",{"type":11,"value":2595,"toc":2750},[2596,2599,2602,2606,2610,2613,2618,2621,2623,2626,2630,2633,2637,2640,2643,2647,2650,2656,2659,2662,2665,2670,2673,2698,2702,2722,2725,2731],[14,2597,2598],{},"说起Linux发行版，很多人都会去推荐Manjaro给新手使用，原因很简单——安装简单、有庞大的AUR和ArchlinuxCN提供软件、有丰富的ArchWiki以供新手查阅。那么，为什么大多数Archlinux用户（包括我）始终不推荐Manjaro作为自己使用的发行版呢。",[2600,2601],"hr",{},[393,2603,2605],{"id":2604},"首先来了解一下两款linux发行版","首先来了解一下两款Linux发行版",[14,2607,2608],{},[192,2609,340],{},[14,2611,2612],{},"Archlinux是一款滚动发行版，所有的软件全部都基于上游最新的源代码进行编译，源内也仅仅保留最新版本，是最为激进的发行版之一，甚至或许没有之一。",[14,2614,2615],{},[192,2616,2617],{},"Manjaro",[14,2619,2620],{},"Manjaro是一款基于Archlinux的滚动发行版，部分软件同样基于上游源代码编译，同时也有部分软件包直接从Archlinux源内直接拿二进制包。与Archlinux不同的是，Manjaro大部分软件更新相比Archlinux会滞后一个星期，一些比较重要的软件甚至会滞后两个星期以上（比如Python3.9就滞后了19天）以保证稳定性。（虽然我目前观察下来这个稳定性就是出现Bug和修复Bug都比Archlinux慢一个礼拜）",[2600,2622],{},[393,2624,2625],{"id":2625},"接下来就是正文",[468,2627,2629],{"id":2628},"archlinux-和-manjaro-都不适合linux小白","Archlinux 和 Manjaro 都不适合Linux小白",[14,2631,2632],{},"Archlinux和Manjaro都是激进的滚动发行版，作为一个滚动发行版都会有滚坏的风险，这就要求用户有一定的Linux使用基础，能够多关注更新动态，在系统罢工后有修复系统的能力，因此我不会给小白推荐Archlinux/Manjaro这样的发行版（虽说能够用纯cli界面安装Archlinux的用户其实已经有一定的水平了）。",[468,2634,2636],{"id":2635},"archwiki-不是-manjarowiki","ArchWiki 不是 ManjaroWiki",[14,2638,2639],{},"Manjaro官方为了最大限度地降低用户的使用门槛，为用户打造了一套开箱即用的环境，这听起来很好。",[14,2641,2642],{},"但是Manjaro官方为了降低用户使用门槛，不得不替用户去做一些选择，写上一些默认配置，在必要的地方对系统进行魔改。因此，ArchWiki上面的解决方案并非在Manjaro上能够100%适用，因此不要指望在系统使用过程中ArchWiki能够解决你所有的问题，有相当一部分问题你需要去查阅纯英文版的ManjaroWiki。",[468,2644,2646],{"id":2645},"aurarchlinux-user-repositoryarchlinuxcn-并不是为-manjaro-准备的","AUR(Archlinux User Repository)&ArchlinuxCN 并不是为 Manjaro 准备的",[14,2648,2649],{},"AUR和ArchlinuxCN源都是Archlinux用户为Archlinux打包的常用软件，因此所有的软件都是选择Archlinux最新的软件作为依赖来编译/打包的。上文中我们提到过，Manjaro源内的软件会滞后更新。因此AUR和ArchlinuxCN内一些对于依赖版本要求比较苛刻的软件会在Manjaro这个更新比较落后的发行版上不工作。",[14,2651,2652],{},[79,2653],{"alt":2654,"src":2655},"我们甚至还有一张表情包来调侃这种情况的","https://static.031130.xyz/uploads/2024/08/12/62f36d8eb724a.webp",[14,2657,2658],{},"我知道这听起来会有些荒唐，不过我可以举出一个就发生在不久之前的生动的例子。",[14,2660,2661],{},"Archlinux在2020年10月17日将grpc从1.30更新到了1.32，qv2ray开发者反应迅速，在几个小时内直接更新了基于grpc-1.32的qv2ray，接着是仍然在使用grpc-1.30的Manjaro用户的一片哀嚎。。。",[14,2663,2664],{},"解决方法有很多，比如临时使用Archlinux源把grpc更新到1.32、通过AppImage安装qv2ray等等，但是如你所见，Manjaro用户使用AUR&ArchlinuxCN确实容易出现问题。",[262,2666,2667],{},[14,2668,2669],{},"附：AUR上需要下载源码的自己编译的包不会碰到依赖的版本问题，但是仍然有部分情况下PKGBUILD会直接因为依赖版本号被写死而编译出错。而ArchlinuxCN清一色是编译好的二进制包，所以Manjaro用户使用ArchlinuxCN相比AUR出问题的几率更加大一点。",[14,2671,2672],{},"此外，他们延迟两周，并不是在测试 Arch 包打包本身的质量，而是在测试他们拿来 Arch 的包和他们自己乱改的核心包之间的兼容性。以下内容来自于一位 Archlinux Trusted User",[262,2674,2675,2678,2686,2689,2692,2695],{},[14,2676,2677],{},"manjaro 這個分三個 channel 延遲兩週的做法，原因出於兩點他們處理打包方面非常存疑的做法",[2098,2679,2680,2683],{},[2101,2681,2682],{},"他們想要自己打包一部分非常核心的包，包括 glibc 內核 驅動 systemd",[2101,2684,2685],{},"他們不想重新打整個發行版所有包，想直接從 Arch 拿二進制來用。",[14,2687,2688],{},"這兩個做法單獨只做一個沒啥事，放一起做就很容易導致他們自己打包的核心包破壞了二進制兼容，以至於他們從 Arch 拿的二進制包壞掉。所以他們延遲兩週，並不是在測試 Arch 包打包本身的質量，而是在測試他們拿來 Arch 的包和他們自己亂改的核心包之間的兼容性。Arch 本身有一套機制保證 Arch 打包放出來的時候是測試好相互兼容的，被他們替換掉幾個核心包之後就不一定兼容了，他們也沒有渠道涉足 Arch 內部打包機制，從 Arch 組織內部了解什麼時候放出包之類的信息。綜合這些情況，對他們來說合理的做法就是延遲一陣子讓他們自己的人測試一下。",[14,2690,2691],{},"所以作為證據你看他們的打包者開發者很少會向 Arch 上游反饋測試打包遇到的問題…因為 manjaro unstable 和 manjaro testing 會遇到的問題大部分都是他們自己造成的問題而不是 Arch 的問題。",[14,2693,2694],{},"要是他們誠實地把這個情況傳達給他們用戶的話我不責怪他們。Arch整個滾動發布的生態也不利於下游發行版。Debian 這種上游打包時可以約定版本兼容性的範圍，可以鎖 abi ，Arch 打包本身就不考慮這些，作為Arch下游就的確很難操作。我反感 manjaro 的點在於他們把這種難看的做法宣傳成他們的優勢，還為了這個看起來是優勢故意去抹黑 Arch 作為上游的打包質量…做法就很難看了。",[14,2696,2697],{},"—— farseerfc",[468,2699,2701],{"id":2700},"manjaro-没有-archive-源","Manjaro 没有 Archive 源",[14,2703,2704,2705,2710,2711,33,2716,2721],{},"Archlinux拥有一个",[21,2706,2709],{"href":2707,"rel":2708},"https://archive.archlinux.org/",[25],"archive源","，通过Archive源，你可以将你的系统滚到任何一天的状态，比如在你不知道更新了什么滚炸了以后，你可以用Archive源回滚到三天前的状态，等bug修复完以后再用回正常的Archlinux源。况且，这个Archive源在国内拥有",[21,2712,2715],{"href":2713,"rel":2714},"https://arch-archive.tuna.tsinghua.edu.cn/",[25],"tuna",[21,2717,2720],{"href":2718,"rel":2719},"https://mirrors.bfsu.edu.cn/archlinux-archive/",[25],"bfsu","两个镜像源（虽然这两个镜像源并不是完整的镜像，而是每隔7天镜像一次），不会存在访问速度过慢的状况。有名的downgrade软件也是基于Archive源使用的。而Manjaro？很遗憾，没有。",[393,2723,2724],{"id":2724},"写在最后",[14,2726,2727,2728,483],{},"如果你有一定的Linux基础，阅读了我上面的科普以后仍然要去使用Manjaro也没有关系，但是记得",[192,2729,2730],{},"遵守以下几点以确保你在Arch社区不会被打死",[2732,2733,2734,2737,2740,2747],"ul",{},[2101,2735,2736],{},"谨慎使用AUR和ArchlinuxCN",[2101,2738,2739],{},"使用AUR和ArchlinuxCN时遇到问题请不要反馈",[2101,2741,2742,2743,2746],{},"在Arch社区提问时请",[192,2744,2745],{},"提前","说明自己在使用Manjaro",[2101,2748,2749],{},"不要根据Manjaro的使用经验随意编辑ArchWiki",{"title":44,"searchDepth":62,"depth":62,"links":2751},[2752,2753,2754],{"id":2604,"depth":142,"text":2605},{"id":2625,"depth":142,"text":2625},{"id":2724,"depth":142,"text":2724},127,1761835687929]