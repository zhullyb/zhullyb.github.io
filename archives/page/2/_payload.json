[{"data":1,"prerenderedAt":8853},["ShallowReactive",2],{"randomIndex/archives/page/2/":3,"index-page-2":4,"posts-nums-total":8852},20,[5,1816,2105,2439,3299,3844,5136,5653,7724,8023],{"title":6,"date":7,"path":8,"tags":9,"body":11},"2025年，前端如何使用 JS 将文本复制到剪切板？","2025-04-21 19:48:05","/2025/04/21/how-we-copy-text-to-clipboard-with-js-in-2025",[10],"JavaScript",{"type":12,"value":13,"toc":1799},"minimark",[14,18,28,39,54,57,326,350,353,361,364,369,393,414,420,431,442,745,758,761,770,777,780,783,788,791,823,827,830,854,859,862,865,873,876,889,892,1009,1012,1015,1022,1034,1037,1074,1077,1085,1100,1321,1325,1328,1336,1343,1647,1655,1668,1676,1682,1690,1700,1703,1706,1709,1712,1715,1796],[15,16,17],"h2",{"id":17},"基础原理",[19,20,21,22],"p",{},"如果你尝试在搜索引擎上检索本文的标题，你搜到的文章大概会让你使用下面两个 API。",[23,24,27],"span",{"className":25},[26],"heimu","我希望你用的搜索引擎不至于像某度一样灵车到 2025 年还在让你使用基于 Flash 的 ZeroClipboard 方案",[29,30,32],"h3",{"id":31},"documentexeccommand",[33,34,38],"a",{"href":35,"rel":36},"https://developer.mozilla.org/zh-CN/docs/Web/API/Document/execCommand",[37],"nofollow","document.execCommand",[19,40,41,42,47,48,53],{},"2012 年不止有世界末日，还有 IE 10。随着 IE 10 在当年 9 月 4 日发布，execCommand 家族迎来了两个新的成员—— copy/cut 命令（此说法来自 ",[33,43,46],{"href":44,"rel":45},"https://developer.chrome.com/blog/cut-and-copy-commands",[37],"Chrome 的博客","，而 ",[33,49,52],{"href":50,"rel":51},"https://web.archive.org/web/20160315042044/https://developer.mozilla.org/zh-CN/docs/Web/API/Document/execCommand",[37],"MDN 认为 IE 9 就已经支持了","）。三年之后，随着 Google Chrome 在 2015 年 4 月 14 日的发布的 42 版本对 execCommand 的 copy/cut 跟进，越来越多的浏览器厂商开始在自家的浏览器中跟进这个实现标准。最终在 2016 年 9 月 13 日发布的 Safari 10 on IOS 后，WEB 开发者们总算获得了历史上第一个非 Flash 实现的 js 复制到剪切板的方案。",[19,55,56],{},"当 document.execCommand 的第一个参数为 copy 时，可以将用户选中的文本复制到剪切板。基于这个 API 实现，很快便有人研究出了当今 web 下最常见的 js 实现——先创建一个不可见的 dom，用 js 操作模拟用户选中文本，并调用 execCommand('copy') 将文本复制到用户的剪切板。大致的代码实现如下：",[58,59,64],"pre",{"className":60,"code":61,"language":62,"meta":63,"style":63},"language-javascript shiki shiki-themes one-light one-dark-pro","// 来自「JS复制文字到剪贴板的坑及完整方案。」一文，本文结尾有跳转链接\n\nconst textArea = document.createElement(\"textArea\");\ntextArea.value = val;\ntextArea.style.width = 0;\ntextArea.style.position = \"fixed\";\ntextArea.style.left = \"-999px\";\ntextArea.style.top = \"10px\";\ntextArea.setAttribute(\"readonly\", \"readonly\");\ndocument.body.appendChild(textArea);\n\ntextArea.select();\ndocument.execCommand(\"copy\");\ndocument.body.removeChild(textArea);\n","javascript","",[65,66,67,75,82,119,140,164,185,206,227,249,271,276,289,306],"code",{"__ignoreMap":63},[23,68,71],{"class":69,"line":70},"line",1,[23,72,74],{"class":73},"sW2Sy","// 来自「JS复制文字到剪贴板的坑及完整方案。」一文，本文结尾有跳转链接\n",[23,76,78],{"class":69,"line":77},2,[23,79,81],{"emptyLinePlaceholder":80},true,"\n",[23,83,85,89,93,97,101,105,109,112,116],{"class":69,"line":84},3,[23,86,88],{"class":87},"sLKXg","const",[23,90,92],{"class":91},"sNmU0"," textArea",[23,94,96],{"class":95},"s_Sar"," =",[23,98,100],{"class":99},"s7GmK"," document",[23,102,104],{"class":103},"s5ixo",".",[23,106,108],{"class":107},"sAdtL","createElement",[23,110,111],{"class":103},"(",[23,113,115],{"class":114},"sDhpE","\"textArea\"",[23,117,118],{"class":103},");\n",[23,120,122,125,127,131,133,137],{"class":69,"line":121},4,[23,123,124],{"class":99},"textArea",[23,126,104],{"class":103},[23,128,130],{"class":129},"sJa8x","value",[23,132,96],{"class":95},[23,134,136],{"class":135},"sz0mV"," val",[23,138,139],{"class":103},";\n",[23,141,143,145,147,151,153,156,158,162],{"class":69,"line":142},5,[23,144,124],{"class":99},[23,146,104],{"class":103},[23,148,150],{"class":149},"s2QsP","style",[23,152,104],{"class":103},[23,154,155],{"class":129},"width",[23,157,96],{"class":95},[23,159,161],{"class":160},"sAGMh"," 0",[23,163,139],{"class":103},[23,165,167,169,171,173,175,178,180,183],{"class":69,"line":166},6,[23,168,124],{"class":99},[23,170,104],{"class":103},[23,172,150],{"class":149},[23,174,104],{"class":103},[23,176,177],{"class":129},"position",[23,179,96],{"class":95},[23,181,182],{"class":114}," \"fixed\"",[23,184,139],{"class":103},[23,186,188,190,192,194,196,199,201,204],{"class":69,"line":187},7,[23,189,124],{"class":99},[23,191,104],{"class":103},[23,193,150],{"class":149},[23,195,104],{"class":103},[23,197,198],{"class":129},"left",[23,200,96],{"class":95},[23,202,203],{"class":114}," \"-999px\"",[23,205,139],{"class":103},[23,207,209,211,213,215,217,220,222,225],{"class":69,"line":208},8,[23,210,124],{"class":99},[23,212,104],{"class":103},[23,214,150],{"class":149},[23,216,104],{"class":103},[23,218,219],{"class":129},"top",[23,221,96],{"class":95},[23,223,224],{"class":114}," \"10px\"",[23,226,139],{"class":103},[23,228,230,232,234,237,239,242,245,247],{"class":69,"line":229},9,[23,231,124],{"class":99},[23,233,104],{"class":103},[23,235,236],{"class":107},"setAttribute",[23,238,111],{"class":103},[23,240,241],{"class":114},"\"readonly\"",[23,243,244],{"class":103},", ",[23,246,241],{"class":114},[23,248,118],{"class":103},[23,250,252,255,257,260,262,265,267,269],{"class":69,"line":251},10,[23,253,254],{"class":99},"document",[23,256,104],{"class":103},[23,258,259],{"class":149},"body",[23,261,104],{"class":103},[23,263,264],{"class":107},"appendChild",[23,266,111],{"class":103},[23,268,124],{"class":135},[23,270,118],{"class":103},[23,272,274],{"class":69,"line":273},11,[23,275,81],{"emptyLinePlaceholder":80},[23,277,279,281,283,286],{"class":69,"line":278},12,[23,280,124],{"class":99},[23,282,104],{"class":103},[23,284,285],{"class":107},"select",[23,287,288],{"class":103},"();\n",[23,290,292,294,296,299,301,304],{"class":69,"line":291},13,[23,293,254],{"class":99},[23,295,104],{"class":103},[23,297,298],{"class":107},"execCommand",[23,300,111],{"class":103},[23,302,303],{"class":114},"\"copy\"",[23,305,118],{"class":103},[23,307,309,311,313,315,317,320,322,324],{"class":69,"line":308},14,[23,310,254],{"class":99},[23,312,104],{"class":103},[23,314,259],{"class":149},[23,316,104],{"class":103},[23,318,319],{"class":107},"removeChild",[23,321,111],{"class":103},[23,323,124],{"class":135},[23,325,118],{"class":103},[19,327,328,329,333,334,339,340,345,346,349],{},"尽管",[330,331,332],"strong",{},"这个 API 早已被 w3c 弃用","，在 MDN 被标注为 Deprecated，但这仍然是市面上最常见的方案。在编写本文的时候，我扒了扒 MDN 的英文原始页面在 archive.org 的存档及其在 Github 的变更记录，这个 API 在 ",[33,335,338],{"href":336,"rel":337},"https://web.archive.org/web/20200221235207/https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand",[37],"2020 年 1~2 月","被首次标记为 Obsolete（过时的），在 ",[33,341,344],{"href":342,"rel":343},"https://github.com/mdn/content/commit/0c31e2bc4d6601a079bc57521e79529539c8cf68#diff-85ef9d1e72565f0ae2ffd8199d10b34c11c615aec5d116057ac2a33c21cc072f",[37],"2021 年 1 月","被首次标记为 Deprecated（已弃用），并附上了红色 Section Background Color 提示开发者该 API 可能",[330,347,348],{},"随时无法正常工作","。但截至本文发布，所有的常用浏览器都保留着对该 API 的兼容，起码在 copy 命令下是这样的。",[19,351,352],{},"这个 API 被广泛应用在了太多站点，以至于移除对该 API 的支持将会导致大量的站点异常，我想各家浏览器内核在短期内恐怕都没有动力以丢失兼容性为代价去移除这个 API，这也意味着这个创建一个不可见的 dom 代替用户选中文本并执行 execCommand 复制到用户剪切板的（看似奇葩的）曲线救国方案已然在前端开发的历史上留下了浓墨重彩的一笔。",[29,354,356],{"id":355},"clipboardwritetext",[33,357,360],{"href":358,"rel":359},"https://developer.mozilla.org/zh-CN/docs/Web/API/Clipboard/writeText",[37],"Clipboard.writeText()",[19,362,363],{},"随着原生 JS 一步步被增强，开发者们总算补上了 Clipboard 这一块的拼图。2018 年 4 月 17 日，Chrome 66 率先迈出了这一步；同年 10 月 23 日，Firefox 跟进了 ClipBoard API 的实现。最终在 2020 年 3 月 24 日，随着 Apple 自家 Safari 13.4 的姗姗来迟，前端开发者门总算喘了口气，再一次得到了一个主流浏览器通用的复制方案。",[19,365,366],{},[330,367,368],{},"那么 execCommand 明明已经实现了纯 js 实现的复制文本到剪切板了，为什么我们还需要 Clipboard API ？或者说，这个特意去实现的 Clipboard API 到底有什么优势？",[370,371,372,376,379,390],"ol",{},[373,374,375],"li",{},"传统的 execCommand 方案在使用的时候通常需要创建一个临时的不可见的 DOM，放入文本、用 JS 选中文本、执行 copy 命令。我们暂且不说这种 hacky 的方式在代码编写时是多么不优雅，但一个使用 JS 去选中文本这个操作就会修改用户当前的文本选择状态，在某些时候导致一些用户体验的下降。",[373,377,378],{},"Clipboard API 是异步的，这意味着其在复制大量文本时不会阻塞主线程。",[373,380,381,382,385,386,389],{},"Clipboard API 提供了更多的能力，比如 ",[65,383,384],{},"write()"," 和 ",[65,387,388],{},"read()"," 允许对剪切板读写更复杂的数据，比如富文本或图片。",[373,391,392],{},"Clipboard API 具有更现代、更明确的权限控制—— write 操作需要由用户的主动操作来调用，read 操作则需要用户在浏览器 UI 上明确授予权限。这些权限控制给予了用户更大的控制权，因此，当 execCommand 退出历史的舞台后，WEB 的安全性将得到进一步提升。",[19,394,395,396,398,399,402,403,406,407,409,410,413],{},"不过在现阶段，",[65,397,360],{}," 未必就能解决所有的问题。抛开旧版浏览器的兼容性问题不谈，",[65,400,401],{},"navigator.clipboard"," ",[330,404,405],{},"仅在通过 https 访问的页面中可用","（或是 localhost），如果你的项目部署在局域网，你试图通过 192.18.1.x 的 ip + port 直接访问，那么 ",[65,408,401],{}," 将会是 ",[65,411,412],{},"undefined"," 状态。",[19,415,416],{},[417,418],"img",{"alt":63,"src":419},"https://static.031130.xyz/uploads/2025/04/19/3437b1c022853.webp",[19,421,422,423,426,427,430],{},"除此之外，",[330,424,425],{},"安卓原生的 Webview"," 还有因为 Permissions API 没实现而",[330,428,429],{},"用不了"," Clipboard API 的问题。",[19,432,433,434,437,438,441],{},"基于以上原因，很多网站现在都会优先尝试使用 ",[65,435,436],{},"navigator.clipboard.writeText()","，失败后再转去使用 ",[65,439,440],{},"execCommand('copy')","。大致的代码实现如下：",[58,443,445],{"className":60,"code":444,"language":62,"meta":63,"style":63},"// 来自「JS复制文字到剪贴板的坑及完整方案。」一文，本文结尾有跳转链接\n\nconst copyText = async val => {\n  if (navigator.clipboard && navigator.permissions) {\n    await navigator.clipboard.writeText(val);\n  } else {\n    const textArea = document.createElement(\"textArea\");\n    textArea.value = val;\n    textArea.style.width = 0;\n    textArea.style.position = \"fixed\";\n    textArea.style.left = \"-999px\";\n    textArea.style.top = \"10px\";\n    textArea.setAttribute(\"readonly\", \"readonly\");\n    document.body.appendChild(textArea);\n\n    textArea.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(textArea);\n  }\n};\n",[65,446,447,451,455,476,506,529,539,560,575,593,611,629,647,665,684,689,700,715,734,740],{"__ignoreMap":63},[23,448,449],{"class":69,"line":70},[23,450,74],{"class":73},[23,452,453],{"class":69,"line":77},[23,454,81],{"emptyLinePlaceholder":80},[23,456,457,459,462,464,467,470,473],{"class":69,"line":84},[23,458,88],{"class":87},[23,460,461],{"class":107}," copyText",[23,463,96],{"class":95},[23,465,466],{"class":87}," async",[23,468,136],{"class":469},"s8iYz",[23,471,472],{"class":87}," =>",[23,474,475],{"class":103}," {\n",[23,477,478,481,484,487,489,492,495,498,500,503],{"class":69,"line":121},[23,479,480],{"class":87},"  if",[23,482,483],{"class":103}," (",[23,485,486],{"class":99},"navigator",[23,488,104],{"class":103},[23,490,491],{"class":129},"clipboard",[23,493,494],{"class":95}," &&",[23,496,497],{"class":99}," navigator",[23,499,104],{"class":103},[23,501,502],{"class":129},"permissions",[23,504,505],{"class":103},") {\n",[23,507,508,511,513,515,517,519,522,524,527],{"class":69,"line":142},[23,509,510],{"class":87},"    await",[23,512,497],{"class":99},[23,514,104],{"class":103},[23,516,491],{"class":149},[23,518,104],{"class":103},[23,520,521],{"class":107},"writeText",[23,523,111],{"class":103},[23,525,526],{"class":135},"val",[23,528,118],{"class":103},[23,530,531,534,537],{"class":69,"line":166},[23,532,533],{"class":103},"  } ",[23,535,536],{"class":87},"else",[23,538,475],{"class":103},[23,540,541,544,546,548,550,552,554,556,558],{"class":69,"line":187},[23,542,543],{"class":87},"    const",[23,545,92],{"class":91},[23,547,96],{"class":95},[23,549,100],{"class":99},[23,551,104],{"class":103},[23,553,108],{"class":107},[23,555,111],{"class":103},[23,557,115],{"class":114},[23,559,118],{"class":103},[23,561,562,565,567,569,571,573],{"class":69,"line":208},[23,563,564],{"class":99},"    textArea",[23,566,104],{"class":103},[23,568,130],{"class":129},[23,570,96],{"class":95},[23,572,136],{"class":135},[23,574,139],{"class":103},[23,576,577,579,581,583,585,587,589,591],{"class":69,"line":229},[23,578,564],{"class":99},[23,580,104],{"class":103},[23,582,150],{"class":149},[23,584,104],{"class":103},[23,586,155],{"class":129},[23,588,96],{"class":95},[23,590,161],{"class":160},[23,592,139],{"class":103},[23,594,595,597,599,601,603,605,607,609],{"class":69,"line":251},[23,596,564],{"class":99},[23,598,104],{"class":103},[23,600,150],{"class":149},[23,602,104],{"class":103},[23,604,177],{"class":129},[23,606,96],{"class":95},[23,608,182],{"class":114},[23,610,139],{"class":103},[23,612,613,615,617,619,621,623,625,627],{"class":69,"line":273},[23,614,564],{"class":99},[23,616,104],{"class":103},[23,618,150],{"class":149},[23,620,104],{"class":103},[23,622,198],{"class":129},[23,624,96],{"class":95},[23,626,203],{"class":114},[23,628,139],{"class":103},[23,630,631,633,635,637,639,641,643,645],{"class":69,"line":278},[23,632,564],{"class":99},[23,634,104],{"class":103},[23,636,150],{"class":149},[23,638,104],{"class":103},[23,640,219],{"class":129},[23,642,96],{"class":95},[23,644,224],{"class":114},[23,646,139],{"class":103},[23,648,649,651,653,655,657,659,661,663],{"class":69,"line":291},[23,650,564],{"class":99},[23,652,104],{"class":103},[23,654,236],{"class":107},[23,656,111],{"class":103},[23,658,241],{"class":114},[23,660,244],{"class":103},[23,662,241],{"class":114},[23,664,118],{"class":103},[23,666,667,670,672,674,676,678,680,682],{"class":69,"line":308},[23,668,669],{"class":99},"    document",[23,671,104],{"class":103},[23,673,259],{"class":149},[23,675,104],{"class":103},[23,677,264],{"class":107},[23,679,111],{"class":103},[23,681,124],{"class":135},[23,683,118],{"class":103},[23,685,687],{"class":69,"line":686},15,[23,688,81],{"emptyLinePlaceholder":80},[23,690,692,694,696,698],{"class":69,"line":691},16,[23,693,564],{"class":99},[23,695,104],{"class":103},[23,697,285],{"class":107},[23,699,288],{"class":103},[23,701,703,705,707,709,711,713],{"class":69,"line":702},17,[23,704,669],{"class":99},[23,706,104],{"class":103},[23,708,298],{"class":107},[23,710,111],{"class":103},[23,712,303],{"class":114},[23,714,118],{"class":103},[23,716,718,720,722,724,726,728,730,732],{"class":69,"line":717},18,[23,719,669],{"class":99},[23,721,104],{"class":103},[23,723,259],{"class":149},[23,725,104],{"class":103},[23,727,319],{"class":107},[23,729,111],{"class":103},[23,731,124],{"class":135},[23,733,118],{"class":103},[23,735,737],{"class":69,"line":736},19,[23,738,739],{"class":103},"  }\n",[23,741,742],{"class":69,"line":3},[23,743,744],{"class":103},"};\n",[29,746,748],{"id":747},"flash-方案zeroclipboard",[749,750,751,752,757],"del",{},"Flash 方案（",[33,753,756],{"href":754,"rel":755},"https://github.com/zeroclipboard/zeroclipboard",[37],"ZeroClipboard","）",[19,759,760],{},"其实上面两个 API 差不多就把基础原理讲完了，不过我在查资料的时候发现，在 execCommand 方案之前，前端居然大多是依靠 Flash 来实现复制文本到剪切板的，这不得拿出来讲讲？",[19,762,763,764,769],{},"目前在 ZeroClipboard 的 Github 仓库能找到的最老的 tag 是 ",[33,765,768],{"href":766,"rel":767},"https://github.com/zeroclipboard/zeroclipboard/releases/tag/v1.0.7",[37],"v1.0.7","，发布于 2012 年 6 月 9 日。我打赌这个项目不是第一个通过 Flash 实现复制文本到剪切板的，在此之前肯定有人使用 Flash 实现过这个功能，只是没单独拎出来作为一个库开源出来。",[19,771,772,773,776],{},"ZeroClipboard 通过创建一个透明的 Flash Movie 覆盖在触发按钮上，当用户点击按钮时，实际上点到的是 Flash Movie，随后 JavaScript 与 Flash Movie 通过 ",[65,774,775],{},"ExternalInterface"," 进行通信，将需要复制的文本传递给 Flash，再经 Flash 的 API 将文本写入用户的剪切板。",[19,778,779],{},"在当时的时代背景下，这是唯一一个能够跨浏览器实现复制文本到剪切板的方案（尽管并不是每台电脑都装有 Flash，尽管 IOS 并不支持 Flash），6.6k star 的 Github 仓库见证了那个各家浏览器抱着各家私有 API 的混沌时代，最终随着 execCommand 方案的崛起，ZeroClipboard 与 Flash 一同落幕。",[29,781,782],{"id":782},"其他不完美的方案",[784,785,787],"h4",{"id":786},"windowclipboarddatasetdata","window.clipboardData.setData",[19,789,790],{},"该 API 主要在 2000 年 —2010 年前后被使用，仅适用于 IE 浏览器。Firefox 在这段时间里还不支持纯 js 实现的复制文本至浏览器的操作；Chrome 第一个版本在 2008 年才发布，尚未成为主流。",[58,792,794],{"className":60,"code":793,"language":62,"meta":63,"style":63},"window.clipboardData.setData(\"Text\", text2copy);\n",[65,795,796],{"__ignoreMap":63},[23,797,798,801,803,806,808,811,813,816,818,821],{"class":69,"line":70},[23,799,800],{"class":99},"window",[23,802,104],{"class":103},[23,804,805],{"class":149},"clipboardData",[23,807,104],{"class":103},[23,809,810],{"class":107},"setData",[23,812,111],{"class":103},[23,814,815],{"class":114},"\"Text\"",[23,817,244],{"class":103},[23,819,820],{"class":135},"text2copy",[23,822,118],{"class":103},[784,824,826],{"id":825},"摆烂prompt","摆烂（prompt）",[19,828,829],{},"调 prompt 弹窗让用户自己复制。",[58,831,833],{"className":60,"code":832,"language":62,"meta":63,"style":63},"prompt('Press Ctrl + C, then Enter to copy to clipboard','copy me')\n",[65,834,835],{"__ignoreMap":63},[23,836,837,840,842,845,848,851],{"class":69,"line":70},[23,838,839],{"class":107},"prompt",[23,841,111],{"class":103},[23,843,844],{"class":114},"'Press Ctrl + C, then Enter to copy to clipboard'",[23,846,847],{"class":103},",",[23,849,850],{"class":114},"'copy me'",[23,852,853],{"class":103},")\n",[19,855,856],{},[417,857],{"alt":63,"src":858},"https://static.031130.xyz/uploads/2025/04/19/7f5310ca03c80.webp",[15,860,861],{"id":861},"第三方库封装",[19,863,864],{},"由于 execCommand 的方案过于抽象，不够优雅，所以我们有一些现成的第三方库对复制到剪切板的代码进行了封装。",[29,866,868],{"id":867},"clipboardjs",[33,869,872],{"href":870,"rel":871},"https://github.com/zenorocha/clipboard.js/",[37],"clipboard.js",[19,874,875],{},"clipboard.js 是最负盛名的一款第三方库，截至本文完成时间，在 Github 共收获 34.1k 的 star。最早的一个 tag 版本发布于 2015 年 10 月 28 日，也就是 Firefox 支持 execCommand、PC 端三大浏览器巨头全面兼容的一个月后。",[19,877,878,879,884,885,888],{},"clipboard.js ",[33,880,883],{"href":881,"rel":882},"https://github.com/zenorocha/clipboard.js/blob/master/src/common/command.js",[37],"仅使用 execCommand"," 实现复制到剪切板的操作，项目的 owner 希望开发者自行使用 ",[65,886,887],{},"ClipboardJS.isSupported()"," 来判断用户的浏览器是否支持 execCommand 方案，并根据命令执行的返回值自行安排成功/失败后的动作。。",[19,890,891],{},"不过让我感到奇怪的是，clipboard.js 在实例化时会要求开发者传入一个 DOM 选择（或者是 HTML 元素/元素列表）。它一定要有一个实体的 html 元素，用设置事件监听器来触发复制操作，而不是提供一个 js 函数让开发者来调用——尽管这不是来自 execCommand 的限制。示例如下",[58,893,897],{"className":894,"code":895,"language":896,"meta":63,"style":63},"language-html shiki shiki-themes one-light one-dark-pro","\u003C!-- Target -->\n\u003Cinput id=\"foo\" value=\"text2copy\" />\n\n\u003C!-- Trigger -->\n\u003Cbutton class=\"btn\" data-clipboard-target=\"#foo\">\u003C/button>\n\n\u003Cscript>\n    new ClipboardJS('.btn');\n\u003C/script>\n","html",[65,898,899,904,932,936,941,972,976,985,1000],{"__ignoreMap":63},[23,900,901],{"class":69,"line":70},[23,902,903],{"class":73},"\u003C!-- Target -->\n",[23,905,906,909,912,915,918,921,924,926,929],{"class":69,"line":77},[23,907,908],{"class":103},"\u003C",[23,910,911],{"class":129},"input",[23,913,914],{"class":160}," id",[23,916,917],{"class":103},"=",[23,919,920],{"class":114},"\"foo\"",[23,922,923],{"class":160}," value",[23,925,917],{"class":103},[23,927,928],{"class":114},"\"text2copy\"",[23,930,931],{"class":103}," />\n",[23,933,934],{"class":69,"line":84},[23,935,81],{"emptyLinePlaceholder":80},[23,937,938],{"class":69,"line":121},[23,939,940],{"class":73},"\u003C!-- Trigger -->\n",[23,942,943,945,948,951,953,956,959,961,964,967,969],{"class":69,"line":142},[23,944,908],{"class":103},[23,946,947],{"class":129},"button",[23,949,950],{"class":160}," class",[23,952,917],{"class":103},[23,954,955],{"class":114},"\"btn\"",[23,957,958],{"class":160}," data-clipboard-target",[23,960,917],{"class":103},[23,962,963],{"class":114},"\"#foo\"",[23,965,966],{"class":103},">\u003C/",[23,968,947],{"class":129},[23,970,971],{"class":103},">\n",[23,973,974],{"class":69,"line":166},[23,975,81],{"emptyLinePlaceholder":80},[23,977,978,980,983],{"class":69,"line":187},[23,979,908],{"class":103},[23,981,982],{"class":129},"script",[23,984,971],{"class":103},[23,986,987,990,993,995,998],{"class":69,"line":208},[23,988,989],{"class":87},"    new",[23,991,992],{"class":107}," ClipboardJS",[23,994,111],{"class":103},[23,996,997],{"class":114},"'.btn'",[23,999,118],{"class":103},[23,1001,1002,1005,1007],{"class":69,"line":229},[23,1003,1004],{"class":103},"\u003C/",[23,1006,982],{"class":129},[23,1008,971],{"class":103},[19,1010,1011],{},"对，就一行 js 就能给所有带有 btn class 的 dom 加上监听器。或许这就是为什么这个仓库能获得 34.1k star 的原因，在 2015 年那个大多数人还在用三件套写前端的时代，clipboard.js 能够降低代码量，不用开发者自行设置监听器。",[19,1013,1014],{},"clipboard.js 当然也提供了很多高级选项来满足不同开发者的需求，比如允许你通过传入一个 function 来获取你需要让用户复制的文本而，或是通过 Event 监听器来反馈是否复制成功，总之灵活性是够用的。",[29,1016,1018],{"id":1017},"copy-to-clipboard",[33,1019,1017],{"href":1020,"rel":1021},"https://github.com/sudodoki/copy-to-clipboard",[37],[19,1023,1024,1025,1030,1031,1033],{},"同样是一款",[33,1026,1029],{"href":1027,"rel":1028},"https://github.com/sudodoki/copy-to-clipboard/blob/main/index.js#L79",[37],"利用 execCommand"," 的第三方库，虽然只有 1.3k star。第一个 tag 版本发布于 2015 年的 5 月 24 日，比 clipboard.js 还要早。相比起 clipboard.js，copy-to-clipboard 不依赖 html 元素，可以直接在 js 中被调用，我个人是比较喜欢这个的。在 vue/react 等现代化的前端框架中，我们一般不直接操作 dom，因此并不是很适合使用 clipboard.js，这个 copy-to-clipboard 就挺好的。此外，除了 execCommand 与方案，copy-to-clipboard 还对老版本的 IE 浏览器针对性的适配了 ",[65,1032,787],{}," 的方案，并且在两者都失败时会调用 prompt 窗口让用户自主复制实现最终的兜底。",[19,1035,1036],{},"示例如下:",[58,1038,1040],{"className":60,"code":1039,"language":62,"meta":63,"style":63},"import copy from 'copy-to-clipboard';\n\ncopy('Text');\n",[65,1041,1042,1058,1062],{"__ignoreMap":63},[23,1043,1044,1047,1050,1053,1056],{"class":69,"line":70},[23,1045,1046],{"class":87},"import",[23,1048,1049],{"class":129}," copy",[23,1051,1052],{"class":87}," from",[23,1054,1055],{"class":114}," 'copy-to-clipboard'",[23,1057,139],{"class":103},[23,1059,1060],{"class":69,"line":77},[23,1061,81],{"emptyLinePlaceholder":80},[23,1063,1064,1067,1069,1072],{"class":69,"line":84},[23,1065,1066],{"class":107},"copy",[23,1068,111],{"class":103},[23,1070,1071],{"class":114},"'Text'",[23,1073,118],{"class":103},[19,1075,1076],{},"相比起 clipboard.js 的使用思路是更加直观了，可惜生不逢时，不如 clipboard.js 出名（也可能有取名的原因在里面）。",[29,1078,1080],{"id":1079},"vueuse-useclipboard",[33,1081,1084],{"href":1082,"rel":1083},"https://vueuse.org/core/useClipboard/",[37],"VueUse - useClipboard",[19,1086,1087,1088,1093,1094,402,1096,1099],{},"VueUse 实现的这个 useClipboard 是令我最为满意的一个。useClipboard 充分考虑了浏览器的兼容性，在检测到满足 navigator.clipboard 的使用条件时",[330,1089,1090,1091],{},"优先使用 ",[65,1092,436],{}," ，在不支持 navigator.clipboard 或者 ",[65,1095,436],{},[330,1097,1098],{},"复制失败时转去使用 execCommand 实现的 legacyCopy","，并且借助 Vue3 中的 Composables 实现了一个 1.5 秒后自动恢复初始状态的 copied 变量，算是很有心了。",[58,1101,1105],{"className":1102,"code":1103,"language":1104,"meta":63,"style":63},"language-vue shiki shiki-themes one-light one-dark-pro","const { text, copy, copied, isSupported } = useClipboard({ source })\n\u003C/script>\n\n\u003Ctemplate>\n  \u003Cdiv v-if=\"isSupported\">\n    \u003Cbutton @click=\"copy(source)\">\n      \u003C!-- by default, `copied` will be reset in 1.5s -->\n      \u003Cspan v-if=\"!copied\">Copy\u003C/span>\n      \u003Cspan v-else>Copied!\u003C/span>\n    \u003C/button>\n    \u003Cp>Current copied: \u003Ccode>{{ text || 'none' }}\u003C/code>\u003C/p>\n  \u003C/div>\n  \u003Cp v-else>\n    Your browser does not support Clipboard API\n  \u003C/p>\n\u003C/template>\n","vue",[65,1106,1107,1112,1120,1124,1133,1153,1164,1196,1215,1232,1241,1281,1290,1300,1305,1313],{"__ignoreMap":63},[23,1108,1109],{"class":69,"line":70},[23,1110,1111],{"class":103},"const { text, copy, copied, isSupported } = useClipboard({ source })\n",[23,1113,1114,1116,1118],{"class":69,"line":77},[23,1115,1004],{"class":103},[23,1117,982],{"class":129},[23,1119,971],{"class":103},[23,1121,1122],{"class":69,"line":84},[23,1123,81],{"emptyLinePlaceholder":80},[23,1125,1126,1128,1131],{"class":69,"line":121},[23,1127,908],{"class":103},[23,1129,1130],{"class":129},"template",[23,1132,971],{"class":103},[23,1134,1135,1138,1141,1145,1148,1151],{"class":69,"line":142},[23,1136,1137],{"class":103},"  \u003C",[23,1139,1140],{"class":129},"div",[23,1142,1144],{"class":1143},"so_Uh"," v-if",[23,1146,917],{"class":1147},"sknuh",[23,1149,1150],{"class":114},"\"isSupported\"",[23,1152,971],{"class":103},[23,1154,1155,1158,1160],{"class":69,"line":166},[23,1156,1157],{"class":103},"    \u003C",[23,1159,947],{"class":129},[23,1161,1163],{"class":1162},"sUNH4"," @click=\"copy(source)\">\n",[23,1165,1166,1169,1172,1175,1178,1181,1184,1187,1190,1193],{"class":69,"line":187},[23,1167,1168],{"class":1162},"      \u003C!--",[23,1170,1171],{"class":1143}," by",[23,1173,1174],{"class":1162}," default,",[23,1176,1177],{"class":1162}," `copied`",[23,1179,1180],{"class":1143}," will",[23,1182,1183],{"class":1143}," be",[23,1185,1186],{"class":1143}," reset",[23,1188,1189],{"class":1143}," in",[23,1191,1192],{"class":1162}," 1.5s",[23,1194,1195],{"class":1162}," -->\n",[23,1197,1198,1201,1203,1205,1208,1211,1213],{"class":69,"line":208},[23,1199,1200],{"class":1162},"      \u003Cspan",[23,1202,1144],{"class":1143},[23,1204,917],{"class":1147},[23,1206,1207],{"class":114},"\"!copied\"",[23,1209,1210],{"class":103},">Copy\u003C/",[23,1212,23],{"class":129},[23,1214,971],{"class":103},[23,1216,1217,1220,1222,1225,1228,1230],{"class":69,"line":229},[23,1218,1219],{"class":103},"      \u003C",[23,1221,23],{"class":129},[23,1223,1224],{"class":1143}," v-else",[23,1226,1227],{"class":103},">Copied!\u003C/",[23,1229,23],{"class":129},[23,1231,971],{"class":103},[23,1233,1234,1237,1239],{"class":69,"line":251},[23,1235,1236],{"class":103},"    \u003C/",[23,1238,947],{"class":129},[23,1240,971],{"class":103},[23,1242,1243,1245,1247,1250,1252,1255,1259,1262,1265,1268,1271,1273,1275,1277,1279],{"class":69,"line":273},[23,1244,1157],{"class":103},[23,1246,19],{"class":129},[23,1248,1249],{"class":103},">Current copied: \u003C",[23,1251,65],{"class":129},[23,1253,1254],{"class":103},">",[23,1256,1258],{"class":1257},"sAOjX","{",[23,1260,1261],{"class":103},"{ text || ",[23,1263,1264],{"class":114},"'none'",[23,1266,1267],{"class":103}," }",[23,1269,1270],{"class":1257},"}",[23,1272,1004],{"class":103},[23,1274,65],{"class":129},[23,1276,966],{"class":103},[23,1278,19],{"class":129},[23,1280,971],{"class":103},[23,1282,1283,1286,1288],{"class":69,"line":278},[23,1284,1285],{"class":103},"  \u003C/",[23,1287,1140],{"class":129},[23,1289,971],{"class":103},[23,1291,1292,1294,1296,1298],{"class":69,"line":291},[23,1293,1137],{"class":103},[23,1295,19],{"class":129},[23,1297,1224],{"class":1143},[23,1299,971],{"class":103},[23,1301,1302],{"class":69,"line":308},[23,1303,1304],{"class":103},"    Your browser does not support Clipboard API\n",[23,1306,1307,1309,1311],{"class":69,"line":686},[23,1308,1285],{"class":103},[23,1310,19],{"class":129},[23,1312,971],{"class":103},[23,1314,1315,1317,1319],{"class":69,"line":691},[23,1316,1004],{"class":95},[23,1318,1130],{"class":135},[23,1320,971],{"class":95},[29,1322,1324],{"id":1323},"react-相关生态","React 相关生态",[19,1326,1327],{},"React 这边不像 VueUse 一家独大，出现了很多可用的 hooks 库，那就全都过一遍",[784,1329,1331],{"id":1330},"react-use-usecopytoclipboard",[33,1332,1335],{"href":1333,"rel":1334},"https://github.com/streamich/react-use",[37],"react-use - useCopyToClipboard",[19,1337,1338,1339,1342],{},"react-use 是我能搜到的目前最大的 React Hooks 库，42.9k star。采用的复制方案是直接依赖上面介绍过的 ",[33,1340,1017],{"href":1020,"rel":1341},[37],"，也就是 execCommand 方案。",[58,1344,1348],{"className":1345,"code":1346,"language":1347,"meta":63,"style":63},"language-jsx shiki shiki-themes one-light one-dark-pro","const Demo = () => {\n  const [text, setText] = React.useState('');\n  const [state, copyToClipboard] = useCopyToClipboard();\n\n  return (\n    \u003Cdiv>\n      \u003Cinput value={text} onChange={e => setText(e.target.value)} />\n      \u003Cbutton type=\"button\" onClick={() => copyToClipboard(text)}>copy text\u003C/button>\n      {state.error\n        ? \u003Cp>Unable to copy value: {state.error.message}\u003C/p>\n        : state.value && \u003Cp>Copied {state.value}\u003C/p>}\n    \u003C/div>\n  )\n}\n","jsx",[65,1349,1350,1367,1403,1426,1430,1438,1446,1498,1542,1554,1590,1630,1638,1643],{"__ignoreMap":63},[23,1351,1352,1354,1357,1359,1362,1365],{"class":69,"line":70},[23,1353,88],{"class":87},[23,1355,1356],{"class":107}," Demo",[23,1358,96],{"class":95},[23,1360,1361],{"class":103}," () ",[23,1363,1364],{"class":87},"=>",[23,1366,475],{"class":103},[23,1368,1369,1372,1375,1378,1380,1383,1386,1388,1391,1393,1396,1398,1401],{"class":69,"line":77},[23,1370,1371],{"class":87},"  const",[23,1373,1374],{"class":103}," [",[23,1376,1377],{"class":91},"text",[23,1379,244],{"class":103},[23,1381,1382],{"class":91},"setText",[23,1384,1385],{"class":103},"] ",[23,1387,917],{"class":95},[23,1389,1390],{"class":99}," React",[23,1392,104],{"class":103},[23,1394,1395],{"class":107},"useState",[23,1397,111],{"class":103},[23,1399,1400],{"class":114},"''",[23,1402,118],{"class":103},[23,1404,1405,1407,1409,1412,1414,1417,1419,1421,1424],{"class":69,"line":84},[23,1406,1371],{"class":87},[23,1408,1374],{"class":103},[23,1410,1411],{"class":91},"state",[23,1413,244],{"class":103},[23,1415,1416],{"class":91},"copyToClipboard",[23,1418,1385],{"class":103},[23,1420,917],{"class":95},[23,1422,1423],{"class":107}," useCopyToClipboard",[23,1425,288],{"class":103},[23,1427,1428],{"class":69,"line":121},[23,1429,81],{"emptyLinePlaceholder":80},[23,1431,1432,1435],{"class":69,"line":142},[23,1433,1434],{"class":87},"  return",[23,1436,1437],{"class":103}," (\n",[23,1439,1440,1442,1444],{"class":69,"line":166},[23,1441,1157],{"class":103},[23,1443,1140],{"class":129},[23,1445,971],{"class":103},[23,1447,1448,1450,1452,1454,1456,1459,1461,1463,1466,1468,1470,1473,1475,1478,1480,1482,1484,1487,1489,1491,1494,1496],{"class":69,"line":187},[23,1449,1219],{"class":103},[23,1451,911],{"class":129},[23,1453,923],{"class":1143},[23,1455,917],{"class":1147},[23,1457,1258],{"class":1458},"sblXP",[23,1460,1377],{"class":135},[23,1462,1270],{"class":1458},[23,1464,1465],{"class":1143}," onChange",[23,1467,917],{"class":1147},[23,1469,1258],{"class":1458},[23,1471,1472],{"class":469},"e",[23,1474,472],{"class":87},[23,1476,1477],{"class":107}," setText",[23,1479,111],{"class":103},[23,1481,1472],{"class":99},[23,1483,104],{"class":103},[23,1485,1486],{"class":149},"target",[23,1488,104],{"class":103},[23,1490,130],{"class":129},[23,1492,1493],{"class":103},")",[23,1495,1270],{"class":1458},[23,1497,931],{"class":103},[23,1499,1500,1502,1504,1507,1509,1512,1515,1517,1519,1522,1524,1527,1529,1531,1533,1535,1538,1540],{"class":69,"line":208},[23,1501,1219],{"class":103},[23,1503,947],{"class":129},[23,1505,1506],{"class":1143}," type",[23,1508,917],{"class":1147},[23,1510,1511],{"class":114},"\"button\"",[23,1513,1514],{"class":1143}," onClick",[23,1516,917],{"class":1147},[23,1518,1258],{"class":1458},[23,1520,1521],{"class":103},"() ",[23,1523,1364],{"class":87},[23,1525,1526],{"class":107}," copyToClipboard",[23,1528,111],{"class":103},[23,1530,1377],{"class":135},[23,1532,1493],{"class":103},[23,1534,1270],{"class":1458},[23,1536,1537],{"class":103},">copy text\u003C/",[23,1539,947],{"class":129},[23,1541,971],{"class":103},[23,1543,1544,1547,1549,1551],{"class":69,"line":229},[23,1545,1546],{"class":1257},"      {",[23,1548,1411],{"class":99},[23,1550,104],{"class":103},[23,1552,1553],{"class":129},"error\n",[23,1555,1556,1560,1563,1565,1568,1570,1572,1574,1577,1579,1582,1584,1586,1588],{"class":69,"line":251},[23,1557,1559],{"class":1558},"s7DPa","        ?",[23,1561,1562],{"class":103}," \u003C",[23,1564,19],{"class":129},[23,1566,1567],{"class":103},">Unable to copy value: ",[23,1569,1258],{"class":1257},[23,1571,1411],{"class":99},[23,1573,104],{"class":103},[23,1575,1576],{"class":149},"error",[23,1578,104],{"class":103},[23,1580,1581],{"class":129},"message",[23,1583,1270],{"class":1257},[23,1585,1004],{"class":103},[23,1587,19],{"class":129},[23,1589,971],{"class":103},[23,1591,1592,1595,1598,1600,1602,1604,1606,1608,1611,1613,1615,1617,1619,1621,1623,1625,1627],{"class":69,"line":273},[23,1593,1594],{"class":1558},"        :",[23,1596,1597],{"class":99}," state",[23,1599,104],{"class":103},[23,1601,130],{"class":129},[23,1603,494],{"class":95},[23,1605,1562],{"class":103},[23,1607,19],{"class":129},[23,1609,1610],{"class":103},">Copied ",[23,1612,1258],{"class":1257},[23,1614,1411],{"class":99},[23,1616,104],{"class":103},[23,1618,130],{"class":129},[23,1620,1270],{"class":1257},[23,1622,1004],{"class":103},[23,1624,19],{"class":129},[23,1626,1254],{"class":103},[23,1628,1629],{"class":1257},"}\n",[23,1631,1632,1634,1636],{"class":69,"line":278},[23,1633,1236],{"class":103},[23,1635,1140],{"class":129},[23,1637,971],{"class":103},[23,1639,1640],{"class":69,"line":291},[23,1641,1642],{"class":103},"  )\n",[23,1644,1645],{"class":69,"line":308},[23,1646,1629],{"class":103},[784,1648,1650],{"id":1649},"ant-design-typography",[33,1651,1654],{"href":1652,"rel":1653},"https://ant.design/components/typography-cn#typography-demo-copyable",[37],"Ant Design - Typography",[19,1656,1657,1658,1663,1664,1667],{},"ahooks 是",[33,1659,1662],{"href":1660,"rel":1661},"https://site.j10ccc.xyz/",[37],"小麦茶","第一个报出来的 react hooks 库，由 Ant Design 原班人马维护。不过其在仓库中并没有对剪贴板的封装，因此在小麦茶的建议下我跑去翻了 Ant Design 中的 Typography 对复制能力的实现。和上面的 react-use 一样，都是直接用 ",[33,1665,1017],{"href":1020,"rel":1666},[37],"，属于 execCommand 方案。",[784,1669,1671],{"id":1670},"usehooks-usecopytoclipboard",[33,1672,1675],{"href":1673,"rel":1674},"https://usehooks.com/usecopytoclipboard",[37],"usehooks - useCopyToClipboard",[19,1677,1678,1679,1681],{},"这个库是我问 llm 知道的，现在有 10.5k star。非常逆天的一点在于它的所有逻辑代码都是在 index.js 这样一个单文件里实现的，属实是看不懂了。会先采用 ",[65,1680,436],{}," 尝试写入，失败后再换用 execCommand 的方案。hooks 的用法和上面的 react-use 大差不差。",[784,1683,1685],{"id":1684},"usehooks-ts-usecopytoclipboard",[33,1686,1689],{"href":1687,"rel":1688},"https://usehooks-ts.com/react-hook/use-copy-to-clipboard",[37],"usehooks-ts - useCopyToClipboard",[19,1691,1692,1693,1695,1696,1699],{},"不知道是不是为了解决上面那玩意儿不支持 ts 才开的库。只使用 ",[65,1694,436],{}," 尝试写入剪切板，失败后直接 ",[65,1697,1698],{},"console.warn"," 报错，没有 fallback 方案。",[15,1701,1702],{"id":1702},"结语",[19,1704,1705],{},"从结果上来看，VueUse 的封装无疑是最令我满意的。优先尝试性能最好的 Clipboard API，再尝试 execCommand 作为回落，同时辅以多个响应式变量帮助开发，但又不擅作主张地使用 prompt 作为保底，最大程度地把操作空间留给开发者。",[19,1707,1708],{},"站在 2025 年的节点回望，前端剪切板操作技术的演进轨迹清晰可见：从早期依赖 Flash 的脆弱方案，到 execCommand 的曲线救国，最终迈向标准化 Clipboard API 的优雅实现。这段历程不仅是技术迭代的缩影，更折射出前端开发中独特的「妥协艺术」。",[19,1710,1711],{},"在未来的很长一段时间里，或许我们还是会在「优雅实现」与「向下兼容」之间寻找平衡点、在浏览器沙箱里戴着镣铐跳芭蕾，但那些为兼容性而生的临时方案，终将成为见证前端进化史的珍贵注脚。",[15,1713,1714],{"id":1714},"参见",[1716,1717,1718,1725,1732,1738,1745,1751,1757,1763,1770,1776,1782,1789],"ul",{},[373,1719,1720],{},[33,1721,1724],{"href":1722,"rel":1723},"https://liruifengv.com/posts/copy-text/",[37],"JS复制文字到剪贴板的坑及完整方案。",[373,1726,1727],{},[33,1728,1731],{"href":1729,"rel":1730},"https://jiongks.name/blog/zeroclipboard-intro",[37],"ZeroClipboard 学习笔记 | 囧克斯",[373,1733,1734],{},[33,1735,1737],{"href":44,"rel":1736},[37],"Cut and copy commands  |  Blog  |  Chrome for Developers",[373,1739,1740],{},[33,1741,1744],{"href":1742,"rel":1743},"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/platform-apis/ms536419(v=vs.85)",[37],"execCommand method (Internet Explorer) | Microsoft Learn",[373,1746,1747],{},[33,1748,1750],{"href":1020,"rel":1749},[37],"sudodoki/copy-to-clipboard",[373,1752,1753],{},[33,1754,1756],{"href":870,"rel":1755},[37],"zenorocha/clipboard.js",[373,1758,1759],{},[33,1760,1762],{"href":1082,"rel":1761},[37],"useClipboard | VueUse",[373,1764,1765],{},[33,1766,1769],{"href":1767,"rel":1768},"https://streamich.github.io/react-use/?path=/story/side-effects-usecopytoclipboard--docs",[37],"Side-effects / useCopyToClipboard - Docs ⋅ Storybook",[373,1771,1772],{},[33,1773,1775],{"href":35,"rel":1774},[37],"document.execCommand - Web API | MDN",[373,1777,1778],{},[33,1779,1781],{"href":358,"rel":1780},[37],"Clipboard.writeText() - Web API | MDN",[373,1783,1784],{},[33,1785,1788],{"href":1786,"rel":1787},"https://www.sitepoint.com/community/t/onclick-select-all-and-copy-to-clipboard/3837/2",[37],"Onclick Select All and Copy to Clipboard? - JavaScript - SitePoint Forums | Web Development & Design Community",[373,1790,1791],{},[33,1792,1795],{"href":1793,"rel":1794},"https://stackoverflow.com/questions/16526814/how-would-i-implement-copy-url-to-clipboard-from-a-link-or-button-using-javasc",[37],"How would I implement 'copy url to clipboard' from a link or button using javascript or dojo without flash - Stack Overflow",[150,1797,1798],{},"html pre.shiki code .sW2Sy, html code.shiki .sW2Sy{--shiki-default:#A0A1A7;--shiki-default-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic}html pre.shiki code .sLKXg, html code.shiki .sLKXg{--shiki-default:#A626A4;--shiki-dark:#C678DD}html pre.shiki code .sNmU0, html code.shiki .sNmU0{--shiki-default:#986801;--shiki-dark:#E5C07B}html pre.shiki code .s_Sar, html code.shiki .s_Sar{--shiki-default:#0184BC;--shiki-dark:#56B6C2}html pre.shiki code .s7GmK, html code.shiki .s7GmK{--shiki-default:#383A42;--shiki-dark:#E5C07B}html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .sJa8x, html code.shiki .sJa8x{--shiki-default:#E45649;--shiki-dark:#E06C75}html pre.shiki code .sz0mV, html code.shiki .sz0mV{--shiki-default:#383A42;--shiki-dark:#E06C75}html pre.shiki code .s2QsP, html code.shiki .s2QsP{--shiki-default:#E45649;--shiki-dark:#E5C07B}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .s8iYz, html code.shiki .s8iYz{--shiki-default:#383A42;--shiki-default-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic}html pre.shiki code .so_Uh, html code.shiki .so_Uh{--shiki-default:#986801;--shiki-default-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic}html pre.shiki code .sknuh, html code.shiki .sknuh{--shiki-default:#383A42;--shiki-dark:#56B6C2}html pre.shiki code .sUNH4, html code.shiki .sUNH4{--shiki-default:white;--shiki-dark:#FFFFFF}html pre.shiki code .sAOjX, html code.shiki .sAOjX{--shiki-default:#CA1243;--shiki-dark:#C678DD}html pre.shiki code .sblXP, html code.shiki .sblXP{--shiki-default:#383A42;--shiki-dark:#C678DD}html pre.shiki code .s7DPa, html code.shiki .s7DPa{--shiki-default:#0184BC;--shiki-dark:#C678DD}",{"title":63,"searchDepth":77,"depth":77,"links":1800},[1801,1808,1814,1815],{"id":17,"depth":77,"text":17,"children":1802},[1803,1804,1805,1807],{"id":31,"depth":84,"text":38},{"id":355,"depth":84,"text":360},{"id":747,"depth":84,"text":1806},"Flash 方案（ZeroClipboard）",{"id":782,"depth":84,"text":782},{"id":861,"depth":77,"text":861,"children":1809},[1810,1811,1812,1813],{"id":867,"depth":84,"text":872},{"id":1017,"depth":84,"text":1017},{"id":1079,"depth":84,"text":1084},{"id":1323,"depth":84,"text":1324},{"id":1702,"depth":77,"text":1702},{"id":1714,"depth":77,"text":1714},{"title":1817,"date":1818,"path":1819,"tags":1820,"body":1827},"ssh 拯救世界——通过 ssh 隧道在内网服务器执行 APT 更新","2025-03-30 21:45:24","/2025/03/30/apt-upgrade-on-internal-server-via-ssh-tunnel-and-reverse-proxy",[1821,1822,1823,1824,1825,1826],"Apt","Network","OpenSSH","Caddy","Linux","Debian",{"type":12,"value":1828,"toc":2099},[1829,1838,1843,1846,1849,1861,1864,1873,1876,1907,1910,1931,1936,1939,1944,1950,1954,1957,1976,1985,1988,1991,2004,2009,2012,2015,2028,2033,2045,2073,2079,2085,2088,2093,2096],[19,1830,1831,1832,1837],{},"事情的起因是因为精弘的",[33,1833,1836],{"href":1834,"rel":1835},"https://blog.cnpatrickstar.com/",[37],"前技术总监","抱怨学校的内网服务器无法连接外网，从而导致 apt 安装与更新异常困难，需要手动从源中下载软件包、软件包的依赖及其依赖的依赖。。。然后将这些包通过 sftp/rsync 一类的手段传到服务器上手动安装。",[19,1839,1840],{},[417,1841],{"alt":63,"src":1842},"https://static.031130.xyz/uploads/2025/03/30/0447b7d64886a.webp",[19,1844,1845],{},"于是本文应运而生，我们可以在本机使用 Caddy （Nginx 当然也行）反代一个 APT 源镜像站，通过 ssh 隧道建立端口转发，这样就可以在内网服务器上访问到本地的 Caddy 服务器，进而访问到外网的镜像站。",[15,1847,1848],{"id":1848},"前提条件",[1716,1850,1851,1854],{},[373,1852,1853],{},"主控机（你自己的电脑）能够通过 ssh 直接连接电脑（可以是使用一些网络工具），而不是先通过 ssh 登陆到一台中转机，再从中转机登陆到目标服务器。后面这种情况当然也可以使用类似的手段实现我们的目标，但会更复杂一些。",[373,1855,1856,1857,1860],{},"主控机（你自己的电脑）在连接内网服务器的同时，能够连接公网镜像站（",[749,1858,1859],{},"不行的话要不然你提前本地同步一份镜像做离线镜像站","）。",[15,1862,1863],{"id":1863},"反代镜像站",[19,1865,1866,1867,1872],{},"我这里选择了 Caddy 而非 Nginx，一方面是 Caddy 的配置文件写起来简单，另一方面 Caddy 是 Golang 编写，一个二进制走天下，Windows 也能直接",[33,1868,1871],{"href":1869,"rel":1870},"https://caddyserver.com/download",[37],"下载","运行。",[19,1874,1875],{},"我们以最常见的清华 tuna 镜像站为例，一个简单的 caddy 配置文件是这样的",[58,1877,1881],{"className":1878,"code":1879,"language":1880,"meta":63,"style":63},"language-nginx shiki shiki-themes one-light one-dark-pro",":8080 {\n    reverse_proxy https://mirrors.tuna.tsinghua.edu.cn {\n        header_up Host {http.reverse_proxy.upstream.hostport}\n    }\n}\n","nginx",[65,1882,1883,1888,1893,1898,1903],{"__ignoreMap":63},[23,1884,1885],{"class":69,"line":70},[23,1886,1887],{},":8080 {\n",[23,1889,1890],{"class":69,"line":77},[23,1891,1892],{},"    reverse_proxy https://mirrors.tuna.tsinghua.edu.cn {\n",[23,1894,1895],{"class":69,"line":84},[23,1896,1897],{},"        header_up Host {http.reverse_proxy.upstream.hostport}\n",[23,1899,1900],{"class":69,"line":121},[23,1901,1902],{},"    }\n",[23,1904,1905],{"class":69,"line":142},[23,1906,1629],{},[19,1908,1909],{},"将上面这段代码保存为 Caddyfile 文件名，随后使用 caddy 命令在保存路径运行",[58,1911,1915],{"className":1912,"code":1913,"language":1914,"meta":63,"style":63},"language-bash shiki shiki-themes one-light one-dark-pro","caddy run --config ./Caddyfile\n","bash",[65,1916,1917],{"__ignoreMap":63},[23,1918,1919,1922,1925,1928],{"class":69,"line":70},[23,1920,1921],{"class":107},"caddy",[23,1923,1924],{"class":114}," run",[23,1926,1927],{"class":160}," --config",[23,1929,1930],{"class":114}," ./Caddyfile\n",[19,1932,1933],{},[417,1934],{"alt":63,"src":1935},"https://static.031130.xyz/uploads/2025/03/30/8ef15a08e4852.webp",[19,1937,1938],{},"如果没有报错，那你应该能在本地的 8080 端口看到清华的镜像站",[19,1940,1941],{},[417,1942],{"alt":63,"src":1943},"https://static.031130.xyz/uploads/2025/03/30/a9083c95c07a2.webp",[1945,1946,1947],"blockquote",{},[19,1948,1949],{},"你可能注意到，反代后的页面和清华的镜像站有些许差异，没有清华的 logo，这大概是因为页面的 js 对 host 进行了判断，如果不是清华或者北外的页面，就不会添加学校的名称，但这不影响我们从这些镜像站获取更新。",[15,1951,1953],{"id":1952},"建立-ssh-隧道","建立 ssh 隧道",[19,1955,1956],{},"建立隧道时，需要使用如下的命令",[58,1958,1960],{"className":1912,"code":1959,"language":1914,"meta":63,"style":63},"ssh -R 8085:localhost:8080 root@remote.example.com\n",[65,1961,1962],{"__ignoreMap":63},[23,1963,1964,1967,1970,1973],{"class":69,"line":70},[23,1965,1966],{"class":107},"ssh",[23,1968,1969],{"class":160}," -R",[23,1971,1972],{"class":114}," 8085:localhost:8080",[23,1974,1975],{"class":114}," root@remote.example.com\n",[19,1977,1978,1979,1984],{},"-R 表示建立反向隧道，其他的参数选项可以参考这一篇博客「",[33,1980,1983],{"href":1981,"rel":1982},"https://www.entropy-tree.top/2024/04/18/ssh-tunneling-techniques/",[37],"SSH 隧道技术","」，也是精弘的学长写的。",[19,1986,1987],{},"此时，我们建立了一个内网服务器 8085 端口到本机 8080 端口的 ssh 端口转发。（使用 8085 端口是我为了区分其和 8080 端口，实际上可以使用任何空余端口）",[19,1989,1990],{},"我们可以在服务器上使用 curl 来测试一下是否能够正常访问，我这里简单访问了下 Debian 源根目录下的一个 README 文件。",[58,1992,1994],{"className":1912,"code":1993,"language":1914,"meta":63,"style":63},"curl http://localhost:8085/debian/README\n",[65,1995,1996],{"__ignoreMap":63},[23,1997,1998,2001],{"class":69,"line":70},[23,1999,2000],{"class":107},"curl",[23,2002,2003],{"class":114}," http://localhost:8085/debian/README\n",[19,2005,2006],{},[417,2007],{"alt":63,"src":2008},"https://static.031130.xyz/uploads/2025/03/30/597c4af0d398d.webp",[15,2010,2011],{"id":2011},"换源",[19,2013,2014],{},"所以现在我们在内网服务器的 8085 端口上有一个清华开源镜像站的反代，我们可以通过 8085 端口访问镜像站中的所有内容。",[19,2016,2017,2018,2023,2024,2027],{},"先遵循",[33,2019,2022],{"href":2020,"rel":2021},"https://mirrors.tuna.tsinghua.edu.cn/help/debian/",[37],"清华开源镜像站的指示","，进行换源，",[330,2025,2026],{},"记得一定要勾选「强制安全更新使用镜像」","。",[19,2029,2030],{},[417,2031],{"alt":63,"src":2032},"https://static.031130.xyz/uploads/2025/03/30/46e3c7030ded4.webp",[19,2034,2035,2036,2040,2041],{},"随后，我们将源中的所有 ",[33,2037,2038],{"href":2038,"rel":2039},"https://mirrors.tuna.tsinghua.edu.cn",[37]," 替换成 ",[33,2042,2043],{"href":2043,"rel":2044},"http://localhost:8085",[37],[58,2046,2048],{"className":1912,"code":2047,"language":1914,"meta":63,"style":63},"sed -i 's|https\\?://mirrors\\.tuna\\.tsinghua\\.edu\\.cn|http://localhost:8085|g' `grep -rlE 'http(s)?://mirrors\\.tuna\\.tsinghua\\.edu\\.cn' /etc/apt/`\n",[65,2049,2050],{"__ignoreMap":63},[23,2051,2052,2055,2058,2061,2064,2067,2070],{"class":69,"line":70},[23,2053,2054],{"class":107},"sed",[23,2056,2057],{"class":160}," -i",[23,2059,2060],{"class":114}," 's|https\\?://mirrors\\.tuna\\.tsinghua\\.edu\\.cn|http://localhost:8085|g'",[23,2062,2063],{"class":114}," `",[23,2065,2066],{"class":107},"grep",[23,2068,2069],{"class":160}," -rlE",[23,2071,2072],{"class":114}," 'http(s)?://mirrors\\.tuna\\.tsinghua\\.edu\\.cn' /etc/apt/`\n",[19,2074,2075],{},[417,2076],{"alt":2077,"src":2078},"执行 apt update","https://static.031130.xyz/uploads/2025/03/30/a8f0c70d48f5b.webp",[19,2080,2081],{},[417,2082],{"alt":2083,"src":2084},"使用 apt 安装 unzip","https://static.031130.xyz/uploads/2025/03/30/07919bf939e92.webp",[19,2086,2087],{},"可以看到，我们通过 ssh 隧道实现了在内网服务器执行 APT 更新及安装软件。",[1945,2089,2090],{},[19,2091,2092],{},"温馨提示，ssh 隧道在本世纪 10 年代初经常被用来进行搭建一些跨境访问，但因为其独特的流量特征很快淡出了历史舞台，因此不要使用 ssh 进行大量的跨境网络传输，容易被封禁。",[19,2094,2095],{},"当然，实现这一目标的方法是很多的，其他一些例如 frp 的工具同样能做到这种效果，只不过 ssh 隧道这种方案随开随用，随关随停，不需要更多的配置，因此我主要推荐。",[150,2097,2098],{},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}",{"title":63,"searchDepth":77,"depth":77,"links":2100},[2101,2102,2103,2104],{"id":1848,"depth":77,"text":1848},{"id":1863,"depth":77,"text":1863},{"id":1952,"depth":77,"text":1953},{"id":2011,"depth":77,"text":2011},{"title":2106,"date":2107,"path":2108,"tags":2109,"body":2115},"Cudy TR3000 吃鹅(daed)记","2025-02-28 21:18:34","/2025/02/28/cudy-tr3000-daed-install-record",[2110,2111,1822,2112,2113,2114],"OpenSource Project","Hardware","Router","OpenWRT","ImmortalWRT",{"type":12,"value":2116,"toc":2428},[2117,2120,2128,2133,2136,2142,2151,2154,2157,2164,2169,2172,2175,2178,2185,2188,2193,2197,2200,2205,2208,2213,2216,2222,2225,2230,2235,2239,2245,2250,2256,2262,2267,2270,2289,2294,2298,2301,2308,2314,2319,2322,2327,2338,2343,2346,2351,2354,2359,2365,2371,2374,2380,2386,2388,2425],[15,2118,2119],{"id":2119},"缘起",[19,2121,2122,2123,2127],{},"前不久在京东自营看到我馋了很久的 Cudy TR3000 有 ￥153 的折扣价，虽然比起 ￥130 的史低价（甚至 ￥110 的凑单史低价）还有些距离，但已经到我的可接受范围内了，于是果断下单剁手了这台我心心念念的 Cudy TR3000 迷你路由器，以此来缓解我的",[23,2124,2126],{"className":2125},[26],"开学前综合症","（一种精神性疾病）",[19,2129,2130],{},[417,2131],{"alt":63,"src":2132},"https://static.031130.xyz/uploads/2025/02/23/8b0a4d5812179.webp",[19,2134,2135],{},"这台路由器使用 Type-C 供电，拥有一个 2.5Gbps 的 WAN 口和一个 1Gbps 的 LAN 口，在此基础上还有一个 USB 口可用于打印机共享、挂载外接存储、安卓手机 USB 共享网络等多种用途。更让我心动的地方在于其小巧的体型，非常适合出差、旅行、短期租房等场景。考虑到接下来一段实习可能会有租房需求，于是便趁此机会果断下单了。",[19,2137,2138],{},[417,2139],{"alt":2140,"src":2141},"与一台小米8的宽高对比","https://static.031130.xyz/uploads/2025/02/23/ef2b394e6fc0d.webp",[19,2143,2144,2145,2150],{},"官方系统是基于 openwrt 定制的，功能比较单一，因此考虑刷入 openwrt 原版系统增加可玩性。在恩山无限论坛上发现已经有人编译了",[33,2146,2149],{"href":2147,"rel":2148},"https://www.right.com.cn/forum/forum.php?mod=viewthread&tid=8418091",[37],"基于 Linux 6.6 版本的 OpenWRT 系统","，这已经满足了 dae 的 Bind to LAN 功能的内核版本要求（ >= 5.17 ），且 512MB 的内存大小刚好达到了推荐的最小内存大小，于是这 dae 肯定是要试着吃一吃的。如果成功了，这就是我手上第一台吃上大鹅的硬路由。",[2152,2153],"hr",{},[15,2155,2156],{"id":2156},"开始刷机",[19,2158,2159,2160,2163],{},"路由器官方系统的后台管理地址是 192.168.10.1，初次进入会要求你设置密码，然后就是一路随便点，完成初始化，随后就进入到主页。我手上这台的 FW 版本号是 ",[65,2161,2162],{},"2.3.2-20241226","，不清楚后续的版本能不能仍然使用这套方案。",[19,2165,2166],{},[417,2167],{"alt":63,"src":2168},"https://static.031130.xyz/uploads/2025/02/28/1c066cb1dab3f.webp",[29,2170,2171],{"id":2171},"过渡固件",[19,2173,2174],{},"首先我们需要先刷入所谓的「过渡固件」。刷入过渡固件的意义在于，这个过渡固件能被官方系统的升级程序所承认，这样就允许我们进行后续的操作。",[19,2176,2177],{},"过渡固件的文件名和 md5 值如下:",[58,2179,2183],{"className":2180,"code":2182,"language":1377},[2181],"language-text","b8333d8eebd067fcb43bec855ac22364  cudy_tr3000-v1-sysupgrade.bin\n",[65,2184,2182],{"__ignoreMap":63},[19,2186,2187],{},"随后我们可以在路由器的管理页面的基本设置中找到固件升级的地方，在本地更新一栏中选择过渡固件上传更新即可。",[19,2189,2190],{},[417,2191],{"alt":63,"src":2192},"https://static.031130.xyz/uploads/2025/02/28/3582e569954a6.webp",[29,2194,2196],{"id":2195},"刷入解锁-fip-分区写入权限的固件","刷入解锁 FIP 分区写入权限的固件",[19,2198,2199],{},"刷入过渡固件后稍等大约一分钟，路由器的 DHCP 重新工作，我们就可以通过 192.168.1.1 进入过渡固件的管理页面。",[19,2201,2202],{},[417,2203],{"alt":63,"src":2204},"https://static.031130.xyz/uploads/2025/02/28/6fe8107a87e87.webp",[19,2206,2207],{},"初次登陆时没有密码，随便输就能登陆成功。考虑到后续可能会有恢复出厂的需求，建议在这一步对 FIP 分区进行备份。",[19,2209,2210],{},[417,2211],{"alt":63,"src":2212},"https://static.031130.xyz/uploads/2025/02/28/79caf5f643689.webp",[19,2214,2215],{},"这次我们需要刷入下面这个 LEDE 固件来解锁 FIP 分区的写入权限，文件名和 md5 仍然放在下面",[58,2217,2220],{"className":2218,"code":2219,"language":1377},[2181],"4af5129368cbf0d556061f682b1614f2  openwrt-mediatek-filogic-cudy_tr3000-v1-squashfs-sysupgrade.bin\n",[65,2221,2219],{"__ignoreMap":63},[19,2223,2224],{},"在下方选择刷入固件，上传我们本次需要刷入的固件，刷入。",[19,2226,2227],{},[417,2228],{"alt":63,"src":2229},"https://static.031130.xyz/uploads/2025/02/28/79d300bb33d21.webp",[19,2231,2232],{},[417,2233],{"alt":63,"src":2234},"https://static.031130.xyz/uploads/2025/02/28/bc29dc9cad24a.webp",[29,2236,2238],{"id":2237},"刷入-uboot","刷入 uboot",[19,2240,2241,2242],{},"再等待一分钟左右，电脑重新连接上路由器后，我们可以进入到这个解锁了 FIP 分区写入权限的固件，默认密码是 ",[65,2243,2244],{},"password",[19,2246,2247],{},[417,2248],{"alt":63,"src":2249},"https://static.031130.xyz/uploads/2025/02/28/f98051faba608.webp",[19,2251,2252,2253],{},"在侧栏选择文件传输，将本次要刷入的 uboot 上传，文件名和 md5 还是放在下面。",[330,2254,2255],{},"注意 zip 包要解压",[58,2257,2260],{"className":2258,"code":2259,"language":1377},[2181],"e5ff31bac07108b6ac6cd63189b4d113  dhcp-mt7981_cudy_tr3000-fip-fixed-parts-multi-layout.bin\n",[65,2261,2259],{"__ignoreMap":63},[19,2263,2264],{},[417,2265],{"alt":63,"src":2266},"https://static.031130.xyz/uploads/2025/02/28/547c5d324f0a0.webp",[19,2268,2269],{},"随后侧栏进入 TTYD 终端，输入默认的用户名密码 root / password，执行命令刷入 uboot",[58,2271,2273],{"className":1912,"code":2272,"language":1914,"meta":63,"style":63},"mtd write /tmp/upload/dhcp-mt7981_cudy_tr3000-fip-fixed-parts-multi-layout.bin FIP\n",[65,2274,2275],{"__ignoreMap":63},[23,2276,2277,2280,2283,2286],{"class":69,"line":70},[23,2278,2279],{"class":107},"mtd",[23,2281,2282],{"class":114}," write",[23,2284,2285],{"class":114}," /tmp/upload/dhcp-mt7981_cudy_tr3000-fip-fixed-parts-multi-layout.bin",[23,2287,2288],{"class":114}," FIP\n",[19,2290,2291],{},[417,2292],{"alt":63,"src":2293},"https://static.031130.xyz/uploads/2025/02/28/46b4fc5be8c82.webp",[29,2295,2297],{"id":2296},"刷入自编译的-immortalwrt","刷入自编译的 immortalwrt",[19,2299,2300],{},"刷入 uboot 以后，给路由器断电，确保网线分别连接电脑和路由器 LAN 口后，按住 reset 键再插入电源键，直至白灯闪烁四次后转为红灯后松开 reset 键，即可进入 uboot。",[19,2302,2303,2304,2307],{},"我编译的是 112m 的布局，因此需要选择 ",[65,2305,2306],{},"mod-112m"," 这个 mtd 布局后上传固件刷入。",[58,2309,2312],{"className":2310,"code":2311,"language":1377},[2181],"8c9a44f29c8c5a0617e61d49bf8ad45d  112m-immortalwrt-cudy_tr3000-ebpf_by_zhullyb_20250325-squashfs-sysupgrade.bin\n",[65,2313,2311],{"__ignoreMap":63},[19,2315,2316],{},[417,2317],{"alt":63,"src":2318},"https://static.031130.xyz/uploads/2025/02/28/41c250db91756.webp",[19,2320,2321],{},"再次等待电脑重新连接路由器，这是最终吃上 daed 的系统了，依然是没有默认密码，随便输入即可进入。在连接上网络后，在系统 - 软件包页面，更新软件包列表。",[19,2323,2324],{},[417,2325],{"alt":63,"src":2326},"https://static.031130.xyz/uploads/2025/02/28/e56084ff09a5d.webp",[19,2328,2329,2330,2333,2334,2337],{},"随后就可以安装 dae / daed 相关软件了，可视需求选择 ",[65,2331,2332],{},"luci-i18n-dae-zh-cn"," 或者 ",[65,2335,2336],{},"luci-i18n-daed-zh-cn","，其他包会作为依赖一同被安装。我这里安装的是 daed。",[19,2339,2340],{},[417,2341],{"alt":63,"src":2342},"https://static.031130.xyz/uploads/2025/02/28/dc4fa4a688cf5.webp",[19,2344,2345],{},"安装后刷新界面，我们就可以在顶栏的服务板块看到 daed。",[19,2347,2348],{},[417,2349],{"alt":63,"src":2350},"https://static.031130.xyz/uploads/2025/02/28/551f1f2eb9ab4.webp",[19,2352,2353],{},"daed 正常运行，能正常跑满我家的 300Mbps 宽带下行（单线程实测 250Mbps），速度峰值时 CPU 占用图如下。",[19,2355,2356],{},[417,2357],{"alt":63,"src":2358},"https://static.031130.xyz/uploads/2025/02/28/651bed7ad4aba.webp",[19,2360,2361],{},[417,2362],{"alt":2363,"src":2364},"多线程测速","https://static.031130.xyz/uploads/2025/03/01/9fcee79afa63b.png",[19,2366,2367],{},[417,2368],{"alt":2369,"src":2370},"单线程测速","https://static.031130.xyz/uploads/2025/03/01/6716d723a2b0d.png",[15,2372,2373],{"id":2373},"文章中提到的文件",[19,2375,2376],{},[33,2377,2378],{"href":2378,"rel":2379},"https://www.123684.com/s/gfprVv-wEQ8d",[37],[19,2381,2382],{},[33,2383,2384],{"href":2384,"rel":2385},"https://www.123912.com/s/gfprVv-wEQ8d",[37],[15,2387,1714],{"id":1714},[1716,2389,2390,2397,2404,2411,2418],{},[373,2391,2392],{},[33,2393,2396],{"href":2394,"rel":2395},"https://www.right.com.cn/forum/forum.php?mod=viewthread&tid=8410353",[37],"Cudy TR3000 刷机教程指北",[373,2398,2399],{},[33,2400,2403],{"href":2401,"rel":2402},"https://abxy.fun/post/immortalwrt-dae/",[37],"使用 ImmortalWrt+Dae 为 Windows 配置透明代理",[373,2405,2406],{},[33,2407,2410],{"href":2408,"rel":2409},"https://www.right.com.cn/forum/forum.php?mod=viewthread&tid=8415351",[37],"cudy tr3000 v1中文三分区DHCP uboot第二版",[373,2412,2413],{},[33,2414,2417],{"href":2415,"rel":2416},"https://blog.imouto.in/#/posts/10",[37],"使用 hanwckf/bl-mt798x 引导主线 OpenWrt 固件",[373,2419,2420],{},[33,2421,2424],{"href":2422,"rel":2423},"https://github.com/QiuSimons/luci-app-daed",[37],"QiuSimons/luci-app-daed",[150,2426,2427],{},"html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":63,"searchDepth":77,"depth":77,"links":2429},[2430,2431,2437,2438],{"id":2119,"depth":77,"text":2119},{"id":2156,"depth":77,"text":2156,"children":2432},[2433,2434,2435,2436],{"id":2171,"depth":84,"text":2171},{"id":2195,"depth":84,"text":2196},{"id":2237,"depth":84,"text":2238},{"id":2296,"depth":84,"text":2297},{"id":2373,"depth":77,"text":2373},{"id":1714,"depth":77,"text":1714},{"title":2440,"date":2441,"path":2442,"tags":2443,"body":2446},"使用 Cloudflare Workers 监控 Fedora Copr 构建状态","2025-02-23 12:12:53","/2025/02/23/monitor-copr-build-state-with-cloudflare-workers",[10,2444,2445],"Cloudflare","Fedora",{"type":12,"value":2447,"toc":3297},[2448,2455,2463,2477,2490,2495,2498,2501,2724,2727,2916,2919,3276,3279,3284,3294],[1945,2449,2450],{},[19,2451,2452],{},[749,2453,2454],{},"确信，是 cloudflare workers 用上瘾了",[19,2456,2457,2458,2462],{},"在",[33,2459,2461],{"href":2460},"/2024/04/29/update-a-rpm-spec-by-github-action/","「使用 Github Action 更新用于 rpm 打包的 spec 文件」","一文中，我利用 Github Action 实现了自动化的 spec 版本号更新，配合 Fedora Copr 的 webhook 就可以实现 Copr 软件包更新的自动化构建。看似很完美，但缺少了一个构建状态的监控机制，这导致出现构建错误的时候我不能及时得到通知（无论构建错误是 spec 本身的问题或者是构建时的网络环境问题）。",[19,2464,2465,2470,2471,2476],{},[33,2466,2469],{"href":2467,"rel":2468},"https://yanqiyu.info",[37],"西木野羰基"," 提出 ",[33,2472,2475],{"href":2473,"rel":2474},"https://notifications.fedoraproject.org/",[37],"notifications.fedoraproject.org"," 可以配置通知，Filters 的 Applications 选项中有 copr，但很可惜，实测没有效果。这里的通知配置的似乎只是邮件的过滤规则——如果 copr 本来就没打算构建失败的时候给你发邮件，那即使建立了过滤规则，依然是不可能收到邮件的。",[19,2478,2479,2480,2485,2486,2489],{},"不过好在 Fedora Copr 本身有非常完备的 ",[33,2481,2484],{"href":2482,"rel":2483},"https://copr.fedorainfracloud.org/api_3/docs",[37],"api 文档","，",[65,2487,2488],{},"/monitor"," 这个 API 能用来获取软件包最新的构建情况。",[19,2491,2492],{},[417,2493],{"alt":63,"src":2494},"https://static.031130.xyz/uploads/2025/02/23/637811d2d85f6.webp",[19,2496,2497],{},"因此，我们就可以通过 Cloudflare 的 cronjob 定时请求这个接口，查询是否有软件包构建失败。",[19,2499,2500],{},"先来编写打请求的部分",[58,2502,2504],{"className":60,"code":2503,"language":62,"meta":63,"style":63},"async function fetchCopr() {\n    const ownername = \"zhullyb\";\n    const projectname = \"v2rayA\";\n\n    const url = new URL(\"https://copr.fedorainfracloud.org/api_3/monitor\")\n    url.searchParams.set(\"ownername\", ownername)\n    url.searchParams.set(\"projectname\", projectname)\n    const response = await fetch(url)\n    const data = await response.json()\n    if (data.output !== \"ok\") {\n        throw new Error(\"Failed to fetch COPR data\")\n    }\n    return data\n}\n",[65,2505,2506,2520,2534,2548,2552,2574,2601,2625,2647,2668,2691,2708,2712,2720],{"__ignoreMap":63},[23,2507,2508,2511,2514,2517],{"class":69,"line":70},[23,2509,2510],{"class":87},"async",[23,2512,2513],{"class":87}," function",[23,2515,2516],{"class":107}," fetchCopr",[23,2518,2519],{"class":103},"() {\n",[23,2521,2522,2524,2527,2529,2532],{"class":69,"line":77},[23,2523,543],{"class":87},[23,2525,2526],{"class":91}," ownername",[23,2528,96],{"class":95},[23,2530,2531],{"class":114}," \"zhullyb\"",[23,2533,139],{"class":103},[23,2535,2536,2538,2541,2543,2546],{"class":69,"line":84},[23,2537,543],{"class":87},[23,2539,2540],{"class":91}," projectname",[23,2542,96],{"class":95},[23,2544,2545],{"class":114}," \"v2rayA\"",[23,2547,139],{"class":103},[23,2549,2550],{"class":69,"line":121},[23,2551,81],{"emptyLinePlaceholder":80},[23,2553,2554,2556,2559,2561,2564,2567,2569,2572],{"class":69,"line":142},[23,2555,543],{"class":87},[23,2557,2558],{"class":91}," url",[23,2560,96],{"class":95},[23,2562,2563],{"class":87}," new",[23,2565,2566],{"class":107}," URL",[23,2568,111],{"class":103},[23,2570,2571],{"class":114},"\"https://copr.fedorainfracloud.org/api_3/monitor\"",[23,2573,853],{"class":103},[23,2575,2576,2579,2581,2584,2586,2589,2591,2594,2596,2599],{"class":69,"line":166},[23,2577,2578],{"class":99},"    url",[23,2580,104],{"class":103},[23,2582,2583],{"class":149},"searchParams",[23,2585,104],{"class":103},[23,2587,2588],{"class":107},"set",[23,2590,111],{"class":103},[23,2592,2593],{"class":114},"\"ownername\"",[23,2595,244],{"class":103},[23,2597,2598],{"class":135},"ownername",[23,2600,853],{"class":103},[23,2602,2603,2605,2607,2609,2611,2613,2615,2618,2620,2623],{"class":69,"line":187},[23,2604,2578],{"class":99},[23,2606,104],{"class":103},[23,2608,2583],{"class":149},[23,2610,104],{"class":103},[23,2612,2588],{"class":107},[23,2614,111],{"class":103},[23,2616,2617],{"class":114},"\"projectname\"",[23,2619,244],{"class":103},[23,2621,2622],{"class":135},"projectname",[23,2624,853],{"class":103},[23,2626,2627,2629,2632,2634,2637,2640,2642,2645],{"class":69,"line":208},[23,2628,543],{"class":87},[23,2630,2631],{"class":91}," response",[23,2633,96],{"class":95},[23,2635,2636],{"class":87}," await",[23,2638,2639],{"class":107}," fetch",[23,2641,111],{"class":103},[23,2643,2644],{"class":135},"url",[23,2646,853],{"class":103},[23,2648,2649,2651,2654,2656,2658,2660,2662,2665],{"class":69,"line":229},[23,2650,543],{"class":87},[23,2652,2653],{"class":91}," data",[23,2655,96],{"class":95},[23,2657,2636],{"class":87},[23,2659,2631],{"class":99},[23,2661,104],{"class":103},[23,2663,2664],{"class":107},"json",[23,2666,2667],{"class":103},"()\n",[23,2669,2670,2673,2675,2678,2680,2683,2686,2689],{"class":69,"line":251},[23,2671,2672],{"class":87},"    if",[23,2674,483],{"class":103},[23,2676,2677],{"class":99},"data",[23,2679,104],{"class":103},[23,2681,2682],{"class":129},"output",[23,2684,2685],{"class":95}," !==",[23,2687,2688],{"class":114}," \"ok\"",[23,2690,505],{"class":103},[23,2692,2693,2696,2698,2701,2703,2706],{"class":69,"line":273},[23,2694,2695],{"class":87},"        throw",[23,2697,2563],{"class":87},[23,2699,2700],{"class":107}," Error",[23,2702,111],{"class":103},[23,2704,2705],{"class":114},"\"Failed to fetch COPR data\"",[23,2707,853],{"class":103},[23,2709,2710],{"class":69,"line":278},[23,2711,1902],{"class":103},[23,2713,2714,2717],{"class":69,"line":291},[23,2715,2716],{"class":87},"    return",[23,2718,2719],{"class":135}," data\n",[23,2721,2722],{"class":69,"line":308},[23,2723,1629],{"class":103},[19,2725,2726],{},"随后编写通知部分，我这里采用的是飞书的 webhook 机器人",[58,2728,2730],{"className":60,"code":2729,"language":62,"meta":63,"style":63},"async function notify(text) {\n    const webhook = \"https://open.feishu.cn/open-apis/bot/v2/hook/ffffffff-ffff-ffff-ffff-ffffffffffff\"\n    const body = {\n        msg_type: \"text\",\n        content: {\n            text: text\n        }\n    }\n    const response = await fetch(webhook, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n    })\n    console.log(response)\n}\n",[65,2731,2732,2747,2759,2770,2785,2794,2804,2809,2813,2833,2845,2854,2864,2869,2890,2895,2912],{"__ignoreMap":63},[23,2733,2734,2736,2738,2741,2743,2745],{"class":69,"line":70},[23,2735,2510],{"class":87},[23,2737,2513],{"class":87},[23,2739,2740],{"class":107}," notify",[23,2742,111],{"class":103},[23,2744,1377],{"class":469},[23,2746,505],{"class":103},[23,2748,2749,2751,2754,2756],{"class":69,"line":77},[23,2750,543],{"class":87},[23,2752,2753],{"class":91}," webhook",[23,2755,96],{"class":95},[23,2757,2758],{"class":114}," \"https://open.feishu.cn/open-apis/bot/v2/hook/ffffffff-ffff-ffff-ffff-ffffffffffff\"\n",[23,2760,2761,2763,2766,2768],{"class":69,"line":84},[23,2762,543],{"class":87},[23,2764,2765],{"class":91}," body",[23,2767,96],{"class":95},[23,2769,475],{"class":103},[23,2771,2772,2775,2779,2782],{"class":69,"line":121},[23,2773,2774],{"class":129},"        msg_type",[23,2776,2778],{"class":2777},"st7oF",":",[23,2780,2781],{"class":114}," \"text\"",[23,2783,2784],{"class":103},",\n",[23,2786,2787,2790,2792],{"class":69,"line":142},[23,2788,2789],{"class":129},"        content",[23,2791,2778],{"class":2777},[23,2793,475],{"class":103},[23,2795,2796,2799,2801],{"class":69,"line":166},[23,2797,2798],{"class":129},"            text",[23,2800,2778],{"class":2777},[23,2802,2803],{"class":135}," text\n",[23,2805,2806],{"class":69,"line":187},[23,2807,2808],{"class":103},"        }\n",[23,2810,2811],{"class":69,"line":208},[23,2812,1902],{"class":103},[23,2814,2815,2817,2819,2821,2823,2825,2827,2830],{"class":69,"line":229},[23,2816,543],{"class":87},[23,2818,2631],{"class":91},[23,2820,96],{"class":95},[23,2822,2636],{"class":87},[23,2824,2639],{"class":107},[23,2826,111],{"class":103},[23,2828,2829],{"class":135},"webhook",[23,2831,2832],{"class":103},", {\n",[23,2834,2835,2838,2840,2843],{"class":69,"line":251},[23,2836,2837],{"class":129},"        method",[23,2839,2778],{"class":2777},[23,2841,2842],{"class":114}," \"POST\"",[23,2844,2784],{"class":103},[23,2846,2847,2850,2852],{"class":69,"line":273},[23,2848,2849],{"class":129},"        headers",[23,2851,2778],{"class":2777},[23,2853,475],{"class":103},[23,2855,2856,2859,2861],{"class":69,"line":278},[23,2857,2858],{"class":114},"            \"Content-Type\"",[23,2860,2778],{"class":2777},[23,2862,2863],{"class":114}," \"application/json\"\n",[23,2865,2866],{"class":69,"line":291},[23,2867,2868],{"class":103},"        },\n",[23,2870,2871,2874,2876,2879,2881,2884,2886,2888],{"class":69,"line":308},[23,2872,2873],{"class":129},"        body",[23,2875,2778],{"class":2777},[23,2877,2878],{"class":91}," JSON",[23,2880,104],{"class":103},[23,2882,2883],{"class":107},"stringify",[23,2885,111],{"class":103},[23,2887,259],{"class":135},[23,2889,853],{"class":103},[23,2891,2892],{"class":69,"line":686},[23,2893,2894],{"class":103},"    })\n",[23,2896,2897,2900,2902,2905,2907,2910],{"class":69,"line":691},[23,2898,2899],{"class":99},"    console",[23,2901,104],{"class":103},[23,2903,2904],{"class":107},"log",[23,2906,111],{"class":103},[23,2908,2909],{"class":135},"response",[23,2911,853],{"class":103},[23,2913,2914],{"class":69,"line":702},[23,2915,1629],{"class":103},[19,2917,2918],{},"最后就是 cronjob 的调用部分和构建状态解析部分",[58,2920,2922],{"className":60,"code":2921,"language":62,"meta":63,"style":63},"export default {\n    async fetch(request, env, ctx) {\n      return new Response('Hello World!');\n    },\n\n    async scheduled(event, env, ctx) {\n        const data = await fetchCopr()\n        const errorPackages = new Array()\n\n        for (const pkg of data.packages) {\n            for (const chroot of Object.values(pkg.chroots)) {\n                if (chroot.state == \"failed\") {\n                    errorPackages.push(pkg.name)\n                    break\n                }\n            }\n        }\n\n        if (errorPackages.length > 0) {\n            await notify(`COPR 以下包发生构建失败:\\n${errorPackages.join(\"\\n\")}`)\n        } else {\n            console.log(\"COPR 所有包构建成功\")\n        }\n    }\n};\n",[65,2923,2924,2935,2959,2976,2981,2985,3007,3022,3038,3042,3066,3101,3123,3144,3149,3154,3159,3163,3167,3189,3234,3244,3261,3266,3271],{"__ignoreMap":63},[23,2925,2926,2929,2933],{"class":69,"line":70},[23,2927,2928],{"class":87},"export",[23,2930,2932],{"class":2931},"sq3v1"," default",[23,2934,475],{"class":103},[23,2936,2937,2940,2942,2944,2947,2949,2952,2954,2957],{"class":69,"line":77},[23,2938,2939],{"class":87},"    async",[23,2941,2639],{"class":107},[23,2943,111],{"class":103},[23,2945,2946],{"class":469},"request",[23,2948,244],{"class":103},[23,2950,2951],{"class":469},"env",[23,2953,244],{"class":103},[23,2955,2956],{"class":469},"ctx",[23,2958,505],{"class":103},[23,2960,2961,2964,2966,2969,2971,2974],{"class":69,"line":84},[23,2962,2963],{"class":87},"      return",[23,2965,2563],{"class":87},[23,2967,2968],{"class":107}," Response",[23,2970,111],{"class":103},[23,2972,2973],{"class":114},"'Hello World!'",[23,2975,118],{"class":103},[23,2977,2978],{"class":69,"line":121},[23,2979,2980],{"class":103},"    },\n",[23,2982,2983],{"class":69,"line":142},[23,2984,81],{"emptyLinePlaceholder":80},[23,2986,2987,2989,2992,2994,2997,2999,3001,3003,3005],{"class":69,"line":166},[23,2988,2939],{"class":87},[23,2990,2991],{"class":107}," scheduled",[23,2993,111],{"class":103},[23,2995,2996],{"class":469},"event",[23,2998,244],{"class":103},[23,3000,2951],{"class":469},[23,3002,244],{"class":103},[23,3004,2956],{"class":469},[23,3006,505],{"class":103},[23,3008,3009,3012,3014,3016,3018,3020],{"class":69,"line":187},[23,3010,3011],{"class":87},"        const",[23,3013,2653],{"class":91},[23,3015,96],{"class":95},[23,3017,2636],{"class":87},[23,3019,2516],{"class":107},[23,3021,2667],{"class":103},[23,3023,3024,3026,3029,3031,3033,3036],{"class":69,"line":208},[23,3025,3011],{"class":87},[23,3027,3028],{"class":91}," errorPackages",[23,3030,96],{"class":95},[23,3032,2563],{"class":87},[23,3034,3035],{"class":107}," Array",[23,3037,2667],{"class":103},[23,3039,3040],{"class":69,"line":229},[23,3041,81],{"emptyLinePlaceholder":80},[23,3043,3044,3047,3049,3051,3054,3057,3059,3061,3064],{"class":69,"line":251},[23,3045,3046],{"class":87},"        for",[23,3048,483],{"class":103},[23,3050,88],{"class":87},[23,3052,3053],{"class":91}," pkg",[23,3055,3056],{"class":87}," of",[23,3058,2653],{"class":99},[23,3060,104],{"class":103},[23,3062,3063],{"class":129},"packages",[23,3065,505],{"class":103},[23,3067,3068,3071,3073,3075,3078,3080,3083,3085,3088,3090,3093,3095,3098],{"class":69,"line":273},[23,3069,3070],{"class":87},"            for",[23,3072,483],{"class":103},[23,3074,88],{"class":87},[23,3076,3077],{"class":91}," chroot",[23,3079,3056],{"class":87},[23,3081,3082],{"class":99}," Object",[23,3084,104],{"class":103},[23,3086,3087],{"class":107},"values",[23,3089,111],{"class":103},[23,3091,3092],{"class":99},"pkg",[23,3094,104],{"class":103},[23,3096,3097],{"class":129},"chroots",[23,3099,3100],{"class":103},")) {\n",[23,3102,3103,3106,3108,3111,3113,3115,3118,3121],{"class":69,"line":278},[23,3104,3105],{"class":87},"                if",[23,3107,483],{"class":103},[23,3109,3110],{"class":99},"chroot",[23,3112,104],{"class":103},[23,3114,1411],{"class":129},[23,3116,3117],{"class":95}," ==",[23,3119,3120],{"class":114}," \"failed\"",[23,3122,505],{"class":103},[23,3124,3125,3128,3130,3133,3135,3137,3139,3142],{"class":69,"line":291},[23,3126,3127],{"class":99},"                    errorPackages",[23,3129,104],{"class":103},[23,3131,3132],{"class":107},"push",[23,3134,111],{"class":103},[23,3136,3092],{"class":99},[23,3138,104],{"class":103},[23,3140,3141],{"class":129},"name",[23,3143,853],{"class":103},[23,3145,3146],{"class":69,"line":308},[23,3147,3148],{"class":87},"                    break\n",[23,3150,3151],{"class":69,"line":686},[23,3152,3153],{"class":103},"                }\n",[23,3155,3156],{"class":69,"line":691},[23,3157,3158],{"class":103},"            }\n",[23,3160,3161],{"class":69,"line":702},[23,3162,2808],{"class":103},[23,3164,3165],{"class":69,"line":717},[23,3166,81],{"emptyLinePlaceholder":80},[23,3168,3169,3172,3174,3177,3179,3182,3185,3187],{"class":69,"line":736},[23,3170,3171],{"class":87},"        if",[23,3173,483],{"class":103},[23,3175,3176],{"class":99},"errorPackages",[23,3178,104],{"class":103},[23,3180,3181],{"class":129},"length",[23,3183,3184],{"class":95}," >",[23,3186,161],{"class":160},[23,3188,505],{"class":103},[23,3190,3191,3194,3196,3198,3201,3204,3207,3209,3212,3215,3217,3221,3223,3225,3227,3229,3232],{"class":69,"line":3},[23,3192,3193],{"class":87},"            await",[23,3195,2740],{"class":107},[23,3197,111],{"class":103},[23,3199,3200],{"class":114},"`COPR 以下包发生构建失败:",[23,3202,3203],{"class":95},"\\n",[23,3205,3206],{"class":1257},"${",[23,3208,3176],{"class":99},[23,3210,104],{"class":3211},"sMj0N",[23,3213,3214],{"class":107},"join",[23,3216,111],{"class":103},[23,3218,3220],{"class":3219},"sWwuK","\"",[23,3222,3203],{"class":95},[23,3224,3220],{"class":3219},[23,3226,1493],{"class":103},[23,3228,1270],{"class":1257},[23,3230,3231],{"class":114},"`",[23,3233,853],{"class":103},[23,3235,3237,3240,3242],{"class":69,"line":3236},21,[23,3238,3239],{"class":103},"        } ",[23,3241,536],{"class":87},[23,3243,475],{"class":103},[23,3245,3247,3250,3252,3254,3256,3259],{"class":69,"line":3246},22,[23,3248,3249],{"class":99},"            console",[23,3251,104],{"class":103},[23,3253,2904],{"class":107},[23,3255,111],{"class":103},[23,3257,3258],{"class":114},"\"COPR 所有包构建成功\"",[23,3260,853],{"class":103},[23,3262,3264],{"class":69,"line":3263},23,[23,3265,2808],{"class":103},[23,3267,3269],{"class":69,"line":3268},24,[23,3270,1902],{"class":103},[23,3272,3274],{"class":69,"line":3273},25,[23,3275,744],{"class":103},[19,3277,3278],{},"随后在 Cloudflare Workers 的 Settings 部分设置好 Cron 表达式即可，我这里选择在每小时的 55 分进行一次检测，这样下来一天只会消耗 24 次 workers 次数，简直毫无压力。",[19,3280,3281],{},[417,3282],{"alt":63,"src":3283},"https://static.031130.xyz/uploads/2025/02/23/c38edfd637934.webp",[19,3285,3286,3289,3290,3293],{},[330,3287,3288],{},"缺点:"," 我懒得使用持久化数据库记录软件包构建的成功状态，这会导致出现一个包构建失败后，每隔 1 小时都会有一条提醒，",[749,3291,3292],{},"什么夺命连环 call","。我目前不想修复这个问题，要不然还是降低 cron 的触发频率好了。",[150,3295,3296],{},"html pre.shiki code .sLKXg, html code.shiki .sLKXg{--shiki-default:#A626A4;--shiki-dark:#C678DD}html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html pre.shiki code .sNmU0, html code.shiki .sNmU0{--shiki-default:#986801;--shiki-dark:#E5C07B}html pre.shiki code .s_Sar, html code.shiki .s_Sar{--shiki-default:#0184BC;--shiki-dark:#56B6C2}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .s7GmK, html code.shiki .s7GmK{--shiki-default:#383A42;--shiki-dark:#E5C07B}html pre.shiki code .s2QsP, html code.shiki .s2QsP{--shiki-default:#E45649;--shiki-dark:#E5C07B}html pre.shiki code .sz0mV, html code.shiki .sz0mV{--shiki-default:#383A42;--shiki-dark:#E06C75}html pre.shiki code .sJa8x, html code.shiki .sJa8x{--shiki-default:#E45649;--shiki-dark:#E06C75}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .s8iYz, html code.shiki .s8iYz{--shiki-default:#383A42;--shiki-default-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic}html pre.shiki code .st7oF, html code.shiki .st7oF{--shiki-default:#0184BC;--shiki-dark:#ABB2BF}html pre.shiki code .sq3v1, html code.shiki .sq3v1{--shiki-default:#E45649;--shiki-dark:#C678DD}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}html pre.shiki code .sAOjX, html code.shiki .sAOjX{--shiki-default:#CA1243;--shiki-dark:#C678DD}html pre.shiki code .sMj0N, html code.shiki .sMj0N{--shiki-default:#50A14F;--shiki-dark:#ABB2BF}html pre.shiki code .sWwuK, html code.shiki .sWwuK{--shiki-default:#CA1243;--shiki-dark:#98C379}",{"title":63,"searchDepth":77,"depth":77,"links":3298},[],{"title":3300,"date":3301,"path":3302,"tags":3303,"body":3305},"基于 Cloudflare Workers 实现的在线服务状态检测告警系统","2025-01-18 02:00:08","/2025/01/18/service-status-monitor-based-on-cloudflare-workers",[2444,10,3304,1822],"crontab",{"type":12,"value":3306,"toc":3833},[3307,3310,3317,3320,3326,3342,3345,3359,3362,3373,3380,3387,3393,3397,3410,3413,3421,3440,3451,3457,3464,3467,3484,3491,3518,3521,3627,3630,3653,3656,3662,3665,3674,3750,3753,3756,3768,3771,3783,3786,3793,3798,3801,3807,3809,3816,3823,3830],[15,3308,3309],{"id":3309},"起因",[19,3311,3312,3313,3316],{},"受一些客观因素的影响，微精弘前一阵子针对学校教务系统的数据爬取服务状态出现了非常不稳定的状态，而后端在设计初并没有考虑到异常告警机制，恰逢现任员工都身陷期末周的痛苦之中，我这种计院 Lite 专业的精弘老人就打算实现一个针对「",[330,3314,3315],{},"微精弘主后端 \u003C->  funnel 爬虫服务 \u003C-> 教务系统","」这一条链路的告警机制。旨在短期内（即期末周结束之前）填补微精弘的后端服务告警机制的空白，让运维人员能够及时收到并处理排查后端网络链路的异常情况，尽最大努力保证服务在线率，保障工大本科生在期末周内使用体验。",[15,3318,3319],{"id":3319},"需求分析",[19,3321,3322],{},[417,3323],{"alt":3324,"src":3325},"微精弘的技术架构图","https://static.031130.xyz/uploads/2025/01/19/74362573e371d.webp",[1945,3327,3328],{},[19,3329,3330,3331,3336,3337,2027],{},"如果你不知道微精弘的具体架构实现，这里有一篇由前技术总监提笔并由现任技术总监完善的架构杂谈「",[33,3332,3335],{"href":3333,"rel":3334},"https://mp.weixin.qq.com/s/8d6JAPsLa4TzLr50uDG8uw",[37],"微精弘 | 架构杂谈","」，原文最初发表于前者的",[33,3338,3341],{"href":3339,"rel":3340},"https://blog.cnpatrickstar.com/posts/wejh-architecture/",[37],"博客",[19,3343,3344],{},"基于上述客观条件以及我个人在服务监控告警领域近乎为 0 的经验，我一拍脑袋提出了以下几点需求：",[370,3346,3347,3350,3353,3356],{},[373,3348,3349],{},"稳定性。告警服务本身必须要比我们的主后端更加稳定，这是告警服务的基础。",[373,3351,3352],{},"针对现有服务的侵入性低。告警服务不能影响到现有服务，最好能够完全分离开来，不应当部署在同一台服务器上。",[373,3354,3355],{},"开发快速。整个服务需要尽快落地，因为现有的服务在一周内出现了三次故障，且由于主动的监控告警机制的缺失，我们每次都要等服务 down 机的两小时后才意识到服务挂掉了，如果真在考试周这个使用高峰期内再出现这样的故障不容允许的（用户需要查询考场信息）。",[373,3357,3358],{},"尽可能低的运维成本。没什么好解释的，谁也不希望一个告警服务占用太多的运维成本，无论是人力上的还是资源上的。",[15,3360,3361],{"id":3361},"技术选型",[19,3363,3364,3365,3368,3369,3372],{},"结合我已有的经验，我选用了 ",[330,3366,3367],{},"Cloudflare Worker"," 来完成这个任务。Cloudflare Workers 本身是支持 ",[330,3370,3371],{},"cron job"," 的，能够以分钟级为单位的间隔对服务进行主动探测。Cloudflare 每天都有 10w 次免费的 Workers 调用额度，本身的服务在线率也过硬，唯一的缺点可能就是海外节点访问国内服务器的延迟过高了。不过考虑到我们探测的是在线情况而非延迟情况，倒也不是不能接受。",[19,3374,3375,3376,3379],{},"由于服务特性的关系，我们容许一定的访问失败概率。比如五次访问中如果有两三次失败，我们也认为线路是通的，",[749,3377,3378],{},"可能只是教务系统的土豆快熟了","。因此并不是每一次失败的探测都需要进行告警。另外，我们还需要记录当前的服务状态，一旦服务被认定为下线状态，后续探测失败我们就不再进行告警，直到我们重新判定服务状态为上线（即每段连续的下线时间都只触发一次告警）。Cloudflare Worker 是一种 serverless 服务，且每次执行探测任务的可能都不是同一个 Cloudflare 的边缘节点，因此我们没法使用变量在内存中记录目前的服务状态，需要引入外部数据库来完成短期内的数据存储。",[19,3381,3382,3383,3386],{},"在数据库上，我们必须选择 Cloudflare 自家的在线数据库服务，通过 Cloudflare 自己内部的网络传输数据库查询结果才能得到尽可能低的延迟。在一番考量过后，KV 数据库和 SQL 数据库中，我果断选择了 ",[330,3384,3385],{},"Cloudflare D1"," 这个 SQL 数据库（本质是 SQLite），D1 数据库以更长的查询时间换取数据的实时性。Cloudflare 为免费用户提供了每天 500w 行读取和 10w 行写入的免费额度，只要好好加以利用，就不太可能超出限额。后续我还考虑通过这些数据库的数据使用 Cloudflare Worker 构建 uptime status 的后端 API，实现一个类似 status.openai.com 的在线服务状态可视化界面。",[19,3388,3389],{},[417,3390],{"alt":3391,"src":3392},"OpenAI 的 uptime status","https://static.031130.xyz/uploads/2025/01/19/f817539504140.webp",[15,3394,3396],{"id":3395},"登陆-wrangler","登陆 wrangler",[58,3398,3400],{"className":1912,"code":3399,"language":1914,"meta":63,"style":63},"wrangler login\n",[65,3401,3402],{"__ignoreMap":63},[23,3403,3404,3407],{"class":69,"line":70},[23,3405,3406],{"class":107},"wrangler",[23,3408,3409],{"class":114}," login\n",[15,3411,3412],{"id":3412},"项目初始化",[19,3414,3415,3416,3420],{},"由于之前有过一些编写 Cloudflare Workers 的经验，我深知在 Cloudflare 网页的 code server 编辑器上编辑单文件的 worker.js 的不便，选择使用 Cloudflare 官方推出的工具 ",[33,3417,3406],{"href":3418,"rel":3419},"https://developers.cloudflare.com/workers/wrangler/",[37]," 进行项目的初始化。",[58,3422,3424],{"className":1912,"code":3423,"language":1914,"meta":63,"style":63},"npm create cloudflare@latest wjh-monitor\n",[65,3425,3426],{"__ignoreMap":63},[23,3427,3428,3431,3434,3437],{"class":69,"line":70},[23,3429,3430],{"class":107},"npm",[23,3432,3433],{"class":114}," create",[23,3435,3436],{"class":114}," cloudflare@latest",[23,3438,3439],{"class":114}," wjh-monitor\n",[1945,3441,3442,3445,3448],{},[19,3443,3444],{},"Q: What would you like to start with?\nA: Hello World example",[19,3446,3447],{},"Q: Which template would you like to use?\nA: Hello World Worker",[19,3449,3450],{},"Q: Which language do you want to use?\nA: TypeScript",[19,3452,3453],{},[417,3454],{"alt":3455,"src":3456},"得到的项目结构","https://static.031130.xyz/uploads/2025/01/20/bf105c9fc18a3.webp",[19,3458,3459,3460,3463],{},"我们只需要在 ",[65,3461,3462],{},"index.ts"," 中编写我们的主要逻辑即可。",[15,3465,3466],{"id":3466},"数据库初始化",[58,3468,3470],{"className":1912,"code":3469,"language":1914,"meta":63,"style":63},"wrangler d1 create wjh-monitor-db\n",[65,3471,3472],{"__ignoreMap":63},[23,3473,3474,3476,3479,3481],{"class":69,"line":70},[23,3475,3406],{"class":107},[23,3477,3478],{"class":114}," d1",[23,3480,3433],{"class":114},[23,3482,3483],{"class":114}," wjh-monitor-db\n",[19,3485,3486,3487,3490],{},"随后会输出这些内容，我们需要把这些配置文件写入项目的 ",[65,3488,3489],{},"wrangler.toml"," 文件中",[58,3492,3496],{"className":3493,"code":3494,"language":3495,"meta":63,"style":63},"language-toml shiki shiki-themes one-light one-dark-pro","[[d1_databases]]\nbinding = \"DB\"\ndatabase_name = \"wjh-monitor-db\"\ndatabase_id = \"ffffffff-ffff-ffff-ffff-ffffffffffff\"\n","toml",[65,3497,3498,3503,3508,3513],{"__ignoreMap":63},[23,3499,3500],{"class":69,"line":70},[23,3501,3502],{},"[[d1_databases]]\n",[23,3504,3505],{"class":69,"line":77},[23,3506,3507],{},"binding = \"DB\"\n",[23,3509,3510],{"class":69,"line":84},[23,3511,3512],{},"database_name = \"wjh-monitor-db\"\n",[23,3514,3515],{"class":69,"line":121},[23,3516,3517],{},"database_id = \"ffffffff-ffff-ffff-ffff-ffffffffffff\"\n",[19,3519,3520],{},"编写一个 sql 文件创建数据表，并通过 wrangler 创建它",[58,3522,3526],{"className":3523,"code":3524,"language":3525,"meta":63,"style":63},"language-sql shiki shiki-themes one-light one-dark-pro","// schema.sql\nCREATE TABLE IF NOT EXISTS DATA (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    check_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    check_item VARCHAR(10),\n    response_time INTEGER NOT NULL,\n    success BOOLEAN NOT NULL,\n    online_status BOOLEAN NOT NULL,\n    notify BOOLEAN DEFAULT FALSE,\n    other TEXT,\n    INDEX check_time_idx (check_time)\n);\nINSERT INTO DATA (\n        response_time,\n        success,\n        online_status,\n        notify,\n        other\n    )\nVALUES (100, 1, 1, 0, 'initial');\n","sql",[65,3527,3528,3533,3538,3543,3548,3553,3558,3563,3568,3573,3578,3583,3587,3592,3597,3602,3607,3612,3617,3622],{"__ignoreMap":63},[23,3529,3530],{"class":69,"line":70},[23,3531,3532],{},"// schema.sql\n",[23,3534,3535],{"class":69,"line":77},[23,3536,3537],{},"CREATE TABLE IF NOT EXISTS DATA (\n",[23,3539,3540],{"class":69,"line":84},[23,3541,3542],{},"    id INTEGER PRIMARY KEY AUTOINCREMENT,\n",[23,3544,3545],{"class":69,"line":121},[23,3546,3547],{},"    check_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n",[23,3549,3550],{"class":69,"line":142},[23,3551,3552],{},"    check_item VARCHAR(10),\n",[23,3554,3555],{"class":69,"line":166},[23,3556,3557],{},"    response_time INTEGER NOT NULL,\n",[23,3559,3560],{"class":69,"line":187},[23,3561,3562],{},"    success BOOLEAN NOT NULL,\n",[23,3564,3565],{"class":69,"line":208},[23,3566,3567],{},"    online_status BOOLEAN NOT NULL,\n",[23,3569,3570],{"class":69,"line":229},[23,3571,3572],{},"    notify BOOLEAN DEFAULT FALSE,\n",[23,3574,3575],{"class":69,"line":251},[23,3576,3577],{},"    other TEXT,\n",[23,3579,3580],{"class":69,"line":273},[23,3581,3582],{},"    INDEX check_time_idx (check_time)\n",[23,3584,3585],{"class":69,"line":278},[23,3586,118],{},[23,3588,3589],{"class":69,"line":291},[23,3590,3591],{},"INSERT INTO DATA (\n",[23,3593,3594],{"class":69,"line":308},[23,3595,3596],{},"        response_time,\n",[23,3598,3599],{"class":69,"line":686},[23,3600,3601],{},"        success,\n",[23,3603,3604],{"class":69,"line":691},[23,3605,3606],{},"        online_status,\n",[23,3608,3609],{"class":69,"line":702},[23,3610,3611],{},"        notify,\n",[23,3613,3614],{"class":69,"line":717},[23,3615,3616],{},"        other\n",[23,3618,3619],{"class":69,"line":736},[23,3620,3621],{},"    )\n",[23,3623,3624],{"class":69,"line":3},[23,3625,3626],{},"VALUES (100, 1, 1, 0, 'initial');\n",[19,3628,3629],{},"使用 sql 文件创建远程数据表",[58,3631,3633],{"className":1912,"code":3632,"language":1914,"meta":63,"style":63},"wrangler d1 execute wjh-monitor-db --remote --file=./schema.sql\n",[65,3634,3635],{"__ignoreMap":63},[23,3636,3637,3639,3641,3644,3647,3650],{"class":69,"line":70},[23,3638,3406],{"class":107},[23,3640,3478],{"class":114},[23,3642,3643],{"class":114}," execute",[23,3645,3646],{"class":114}," wjh-monitor-db",[23,3648,3649],{"class":160}," --remote",[23,3651,3652],{"class":160}," --file=./schema.sql\n",[19,3654,3655],{},"随后我们可以使用 wrangler 在远程数据库上执行 query 命令，并获得相应的结果",[58,3657,3660],{"className":3658,"code":3659,"language":1377},[2181],"wrangler d1 execute wjh-monitor-db --remote --command='SELECT * FROM DATA'\n",[65,3661,3659],{"__ignoreMap":63},[15,3663,3664],{"id":3664},"主体逻辑编写",[19,3666,3667,3668,3673],{},"说实话，代码部分没什么太多好说的，正要了解思路直接去看",[33,3669,3672],{"href":3670,"rel":3671},"https://github.com/zhullyb/wjh-monitor",[37],"源码","就好。我在这里简单提两点。",[370,3675,3676,3686,3696],{},[373,3677,3678,3679,3682,3683,3685],{},"目录下的 ",[65,3680,3681],{},"worker-configuration.d.ts"," 定义了 env 变量的类型定义，如果我们在项目中绑定了一些变量（比如我们在 ",[65,3684,3489],{}," 中绑定了 d1 数据库，变量名为 DB），需要在这里声明以防止后续 TypeScript 的报错。",[373,3687,3688,3689,3692,3693,3695],{},"在 ",[65,3690,3691],{},"export default {}"," 中是将会被导出的主要函数，Hello World 项目编写了 fetch 函数，这是在 workers 被通过 http 方式访问时所调用的，如果要使用 cron job 功能，我们需要编写 scheduled 函数来被 workers 调用，并在 ",[65,3694,3489],{}," 中配置好 crontab 触发器。",[373,3697,3698,3699,3701,3702,3707,3708],{},"我们在 ",[65,3700,3489],{}," 中绑定了 DB 变量作为数据库的快捷访问方式，因此我们可以在代码中通过 ",[33,3703,3706],{"href":3704,"rel":3705},"https://developers.cloudflare.com/d1/worker-api/",[37],"D1 数据库的 Workers Binding API"," 来实现针对数据库的快捷操作，如",[58,3709,3711],{"className":60,"code":3710,"language":62,"meta":63,"style":63},"const res = await env.DB.prepare(\"SELECT * FROM DATA ORDER BY check_time DESC LIMIT 4\").run();\n",[65,3712,3713],{"__ignoreMap":63},[23,3714,3715,3717,3720,3722,3724,3727,3729,3732,3734,3737,3739,3742,3745,3748],{"class":69,"line":70},[23,3716,88],{"class":87},[23,3718,3719],{"class":91}," res",[23,3721,96],{"class":95},[23,3723,2636],{"class":87},[23,3725,3726],{"class":99}," env",[23,3728,104],{"class":103},[23,3730,3731],{"class":149},"DB",[23,3733,104],{"class":103},[23,3735,3736],{"class":107},"prepare",[23,3738,111],{"class":103},[23,3740,3741],{"class":114},"\"SELECT * FROM DATA ORDER BY check_time DESC LIMIT 4\"",[23,3743,3744],{"class":103},").",[23,3746,3747],{"class":107},"run",[23,3749,288],{"class":103},[19,3751,3752],{},"需要注意的是，workers 不存在上下文，每一次访问的处理都是前后独立的，如果你需要临时存储一些数据，不要使用变量，一定要存入持久化存储的数据库。",[19,3754,3755],{},"预览:",[58,3757,3759],{"className":1912,"code":3758,"language":1914,"meta":63,"style":63},"wrangler dev\n",[65,3760,3761],{"__ignoreMap":63},[23,3762,3763,3765],{"class":69,"line":70},[23,3764,3406],{"class":107},[23,3766,3767],{"class":114}," dev\n",[19,3769,3770],{},"部署:",[58,3772,3774],{"className":1912,"code":3773,"language":1914,"meta":63,"style":63},"wrangler deploy\n",[65,3775,3776],{"__ignoreMap":63},[23,3777,3778,3780],{"class":69,"line":70},[23,3779,3406],{"class":107},[23,3781,3782],{"class":114}," deploy\n",[15,3784,3785],{"id":3785},"小插曲",[19,3787,3788,3789,3792],{},"由于我对后端经验的缺乏，我在编写 sql 语句时没有意识到建立索引的重要性。我在查询时使用了 ",[65,3790,3791],{},"ORDER BY \u003C未建立索引字段> LIMIT 5"," 的方式来查询最近五次的记录，这导致数据库不得不在我每次查询时都完整遍历一遍整张表。随着 cronjob 每分钟运行时插入一条新数据，记录的行数随时间增加，每次查询的成本也逐渐增加，最终造成了单日访问八百多万行的记录，超出了 Cloudflare 的免费额度，一度造成了项目被迫下线的风险。",[19,3794,3795],{},[417,3796],{"alt":63,"src":3797},"https://static.031130.xyz/uploads/2025/01/20/fb463f45038ac.webp",[19,3799,3800],{},"所幸 Cloudflare 没有给我停机，而我也及时定位到了问题并补建了索引，使每日的读取量回到了正常的状态。",[19,3802,3803],{},[417,3804],{"alt":3805,"src":3806},"蓝色线条为读取，黄色线条为写入","https://static.031130.xyz/uploads/2025/01/19/83f69aff3a7b4.webp",[15,3808,1714],{"id":1714},[19,3810,3811],{},[33,3812,3815],{"href":3813,"rel":3814},"https://developers.cloudflare.com/d1/",[37],"Cloudflare D1 · Cloudflare D1 docs",[19,3817,3818],{},[33,3819,3822],{"href":3820,"rel":3821},"https://developers.cloudflare.com/workers/configuration/cron-triggers/",[37],"Cron Triggers · Cloudflare Workers docs",[19,3824,3825],{},[33,3826,3829],{"href":3827,"rel":3828},"https://blog.sww.moe/post/cloudflare-d1/",[37],"Cloudflare D1 使用记录",[150,3831,3832],{},"html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}html pre.shiki code .sLKXg, html code.shiki .sLKXg{--shiki-default:#A626A4;--shiki-dark:#C678DD}html pre.shiki code .sNmU0, html code.shiki .sNmU0{--shiki-default:#986801;--shiki-dark:#E5C07B}html pre.shiki code .s_Sar, html code.shiki .s_Sar{--shiki-default:#0184BC;--shiki-dark:#56B6C2}html pre.shiki code .s7GmK, html code.shiki .s7GmK{--shiki-default:#383A42;--shiki-dark:#E5C07B}html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html pre.shiki code .s2QsP, html code.shiki .s2QsP{--shiki-default:#E45649;--shiki-dark:#E5C07B}",{"title":63,"searchDepth":77,"depth":77,"links":3834},[3835,3836,3837,3838,3839,3840,3841,3842,3843],{"id":3309,"depth":77,"text":3309},{"id":3319,"depth":77,"text":3319},{"id":3361,"depth":77,"text":3361},{"id":3395,"depth":77,"text":3396},{"id":3412,"depth":77,"text":3412},{"id":3466,"depth":77,"text":3466},{"id":3664,"depth":77,"text":3664},{"id":3785,"depth":77,"text":3785},{"id":1714,"depth":77,"text":1714},{"title":3845,"date":3846,"path":3847,"tags":3848,"body":3850},"构建部署在 Cloudflare Workers 上的 TG Bot","2024-12-30 19:45:43","/2024/12/30/tg-bot-hosted-on-cloudflare-workers",[3849,2444],"Bot",{"type":12,"value":3851,"toc":5125},[3852,3854,3865,3877,3880,3884,3892,3900,3903,3905,3908,3911,3914,3917,3924,3971,3974,3977,4206,4209,4212,4676,4679,5099,5103,5106,5109,5114,5117,5122],[15,3853,3309],{"id":3309},[19,3855,3856,3857,3861,3862],{},"早在去年 10 月，我就写过一篇",[33,3858,3860],{"href":3859},"/2023/10/29/create-b23tv-remover-bot/","《创建 b23.tv 追踪参数移除 bot》","。记录了部署 b23.tv 的追踪参数移除 Bot 的部署方案。其中提到的 TG Bot 随着服务器到期不再续费也一同落灰了——",[330,3863,3864],{},"公益服务总是这样，开始时满腔热血，随着时间散去没有多少人能坚持投入成本，徒留下一地鸡毛。",[19,3866,3867,3868,3873,3874],{},"大概半个月前，我在群里看见 ",[33,3869,3872],{"href":3870,"rel":3871},"https://asukaminato.eu.org/",[37],"Asuka Minato"," 开发的群消息总结 Bot，整体部署在 Cloudflare Workers 上，在保证零运营成本的情况下有着相当非常不错的在线率保证，因此便考虑将这个 Bot 迁移到 Cloudflare Workers 上。",[330,3875,3876],{},"选用免费的 serverless 能够有效延长服务的可持续性，它不需要额外投入时间精力和财力进行维护，通常可以活很久。",[19,3878,3879],{},"之所以可以把 TG Bot 部署到 Cloudflare Workers 上，主要是得益于 TG 平台支持 webhook 的方式让 Bot 程序提供服务。我们所需要提供的是一个公网能访问的 http 地址，在成功注册 webhook 服务后，TG 的官方服务器会将所有 Bot 所在群或者和所有对个人的对话以 http 请求的方式打到这个 url 上，而 Cloudflare Workers 平台就能提供一个 workers.dev 结尾的公网 url 作为 webhook 提供给 TG 服务器。",[15,3881,3883],{"id":3882},"怎么做","怎么做？",[19,3885,3886,3891],{},[33,3887,3890],{"href":3888,"rel":3889},"https://github.com/cvzi/telegram-bot-cloudflare",[37],"在这个 Github 仓库中","，给出了不少例子，用以讲述如何利用 Cloudflare Workers 构建 TG Bot。",[19,3893,3688,3894,3899],{},[33,3895,3898],{"href":3896,"rel":3897},"https://github.com/cvzi/telegram-bot-cloudflare/blob/main/bot.js",[37],"bot.js"," 这个文件中编写了一个最简单的 TG Bot，其功能是: 将受到的所有消息在头部添加「Echo:」字符串，并发送回刚才的对话。",[19,3901,3902],{},"例: 用户发送 「Hello」，bot 回复 「Echo: Hello」",[2152,3904],{},[15,3906,3907],{"id":3907},"代码分析",[19,3909,3910],{},"代码整体分为四个部分",[29,3912,3913],{"id":3913},"顶部变量",[19,3915,3916],{},"文件顶部定义了 Bot 的 token、webhook 的 url 路径以及一个简易的 webhook 密码。",[19,3918,3919,3920,3923],{},"TOKEN 是从 botfather 那里获得的 bot token，SECRET 是自己设置的 webhook 密码，TG 的 webhook 服务器会通过把这个字段添加到名为 ",[65,3921,3922],{},"X-Telegram-Bot-Api-Secret-Token"," 的请求头中来证明自己的官方身份。",[58,3925,3927],{"className":60,"code":3926,"language":62,"meta":63,"style":63},"const TOKEN = ENV_BOT_TOKEN // Get it from @BotFather https://core.telegram.org/bots#6-botfather\nconst WEBHOOK = '/endpoint'\nconst SECRET = ENV_BOT_SECRET // A-Z, a-z, 0-9, _ and -\n",[65,3928,3929,3944,3956],{"__ignoreMap":63},[23,3930,3931,3933,3936,3938,3941],{"class":69,"line":70},[23,3932,88],{"class":87},[23,3934,3935],{"class":91}," TOKEN",[23,3937,96],{"class":95},[23,3939,3940],{"class":91}," ENV_BOT_TOKEN",[23,3942,3943],{"class":73}," // Get it from @BotFather https://core.telegram.org/bots#6-botfather\n",[23,3945,3946,3948,3951,3953],{"class":69,"line":77},[23,3947,88],{"class":87},[23,3949,3950],{"class":91}," WEBHOOK",[23,3952,96],{"class":95},[23,3954,3955],{"class":114}," '/endpoint'\n",[23,3957,3958,3960,3963,3965,3968],{"class":69,"line":84},[23,3959,88],{"class":87},[23,3961,3962],{"class":91}," SECRET",[23,3964,96],{"class":95},[23,3966,3967],{"class":91}," ENV_BOT_SECRET",[23,3969,3970],{"class":73}," // A-Z, a-z, 0-9, _ and -\n",[29,3972,3973],{"id":3973},"简易路由",[19,3975,3976],{},"紧接着定义了一个简易的路由",[58,3978,3980],{"className":60,"code":3979,"language":62,"meta":63,"style":63},"addEventListener('fetch', event => {\n  const url = new URL(event.request.url)\n  if (url.pathname === WEBHOOK) {\n    event.respondWith(handleWebhook(event))\n  } else if (url.pathname === '/registerWebhook') {\n    event.respondWith(registerWebhook(event, url, WEBHOOK, SECRET))\n  } else if (url.pathname === '/unRegisterWebhook') {\n    event.respondWith(unRegisterWebhook(event))\n  } else {\n    event.respondWith(new Response('No handler for this request'))\n  }\n})\n",[65,3981,3982,4000,4026,4046,4068,4092,4125,4148,4167,4175,4197,4201],{"__ignoreMap":63},[23,3983,3984,3987,3989,3992,3994,3996,3998],{"class":69,"line":70},[23,3985,3986],{"class":107},"addEventListener",[23,3988,111],{"class":103},[23,3990,3991],{"class":114},"'fetch'",[23,3993,244],{"class":103},[23,3995,2996],{"class":469},[23,3997,472],{"class":87},[23,3999,475],{"class":103},[23,4001,4002,4004,4006,4008,4010,4012,4014,4016,4018,4020,4022,4024],{"class":69,"line":77},[23,4003,1371],{"class":87},[23,4005,2558],{"class":91},[23,4007,96],{"class":95},[23,4009,2563],{"class":87},[23,4011,2566],{"class":107},[23,4013,111],{"class":103},[23,4015,2996],{"class":99},[23,4017,104],{"class":103},[23,4019,2946],{"class":149},[23,4021,104],{"class":103},[23,4023,2644],{"class":129},[23,4025,853],{"class":103},[23,4027,4028,4030,4032,4034,4036,4039,4042,4044],{"class":69,"line":84},[23,4029,480],{"class":87},[23,4031,483],{"class":103},[23,4033,2644],{"class":99},[23,4035,104],{"class":103},[23,4037,4038],{"class":129},"pathname",[23,4040,4041],{"class":95}," ===",[23,4043,3950],{"class":91},[23,4045,505],{"class":103},[23,4047,4048,4051,4053,4056,4058,4061,4063,4065],{"class":69,"line":121},[23,4049,4050],{"class":99},"    event",[23,4052,104],{"class":103},[23,4054,4055],{"class":107},"respondWith",[23,4057,111],{"class":103},[23,4059,4060],{"class":107},"handleWebhook",[23,4062,111],{"class":103},[23,4064,2996],{"class":135},[23,4066,4067],{"class":103},"))\n",[23,4069,4070,4072,4074,4077,4079,4081,4083,4085,4087,4090],{"class":69,"line":142},[23,4071,533],{"class":103},[23,4073,536],{"class":87},[23,4075,4076],{"class":87}," if",[23,4078,483],{"class":103},[23,4080,2644],{"class":99},[23,4082,104],{"class":103},[23,4084,4038],{"class":129},[23,4086,4041],{"class":95},[23,4088,4089],{"class":114}," '/registerWebhook'",[23,4091,505],{"class":103},[23,4093,4094,4096,4098,4100,4102,4105,4107,4109,4111,4113,4115,4118,4120,4123],{"class":69,"line":166},[23,4095,4050],{"class":99},[23,4097,104],{"class":103},[23,4099,4055],{"class":107},[23,4101,111],{"class":103},[23,4103,4104],{"class":107},"registerWebhook",[23,4106,111],{"class":103},[23,4108,2996],{"class":135},[23,4110,244],{"class":103},[23,4112,2644],{"class":135},[23,4114,244],{"class":103},[23,4116,4117],{"class":91},"WEBHOOK",[23,4119,244],{"class":103},[23,4121,4122],{"class":91},"SECRET",[23,4124,4067],{"class":103},[23,4126,4127,4129,4131,4133,4135,4137,4139,4141,4143,4146],{"class":69,"line":187},[23,4128,533],{"class":103},[23,4130,536],{"class":87},[23,4132,4076],{"class":87},[23,4134,483],{"class":103},[23,4136,2644],{"class":99},[23,4138,104],{"class":103},[23,4140,4038],{"class":129},[23,4142,4041],{"class":95},[23,4144,4145],{"class":114}," '/unRegisterWebhook'",[23,4147,505],{"class":103},[23,4149,4150,4152,4154,4156,4158,4161,4163,4165],{"class":69,"line":208},[23,4151,4050],{"class":99},[23,4153,104],{"class":103},[23,4155,4055],{"class":107},[23,4157,111],{"class":103},[23,4159,4160],{"class":107},"unRegisterWebhook",[23,4162,111],{"class":103},[23,4164,2996],{"class":135},[23,4166,4067],{"class":103},[23,4168,4169,4171,4173],{"class":69,"line":229},[23,4170,533],{"class":103},[23,4172,536],{"class":87},[23,4174,475],{"class":103},[23,4176,4177,4179,4181,4183,4185,4188,4190,4192,4195],{"class":69,"line":251},[23,4178,4050],{"class":99},[23,4180,104],{"class":103},[23,4182,4055],{"class":107},[23,4184,111],{"class":103},[23,4186,4187],{"class":87},"new",[23,4189,2968],{"class":107},[23,4191,111],{"class":103},[23,4193,4194],{"class":114},"'No handler for this request'",[23,4196,4067],{"class":103},[23,4198,4199],{"class":69,"line":273},[23,4200,739],{"class":103},[23,4202,4203],{"class":69,"line":278},[23,4204,4205],{"class":103},"})\n",[29,4207,4208],{"id":4208},"核心功能",[19,4210,4211],{},"随后的三个函数，会先进行 SECRET 的校验，并将 message 类型消息从 TG 的所有消息类型中分离开单独处理",[58,4213,4215],{"className":60,"code":4214,"language":62,"meta":63,"style":63},"/**\n * Handle requests to WEBHOOK\n * https://core.telegram.org/bots/api#update\n */\nasync function handleWebhook (event) {\n  // Check secret\n  if (event.request.headers.get('X-Telegram-Bot-Api-Secret-Token') !== SECRET) {\n    return new Response('Unauthorized', { status: 403 })\n  }\n\n  // Read request body synchronously\n  const update = await event.request.json()\n  // Deal with response asynchronously\n  event.waitUntil(onUpdate(update))\n\n  return new Response('Ok')\n}\n\n/**\n * Handle incoming Update\n * https://core.telegram.org/bots/api#update\n */\nasync function onUpdate (update) {\n  if ('message' in update) {\n    await onMessage(update.message)\n  }\n}\n\n/**\n * Handle incoming Message\n * https://core.telegram.org/bots/api#message\n */\nfunction onMessage (message) {\n  return sendPlainText(message.chat.id, 'Echo:\\n' + message.text)\n}\n\n/**\n * Send plain text message\n * https://core.telegram.org/bots/api#sendmessage\n */\nasync function sendPlainText (chatId, text) {\n  return (await fetch(apiUrl('sendMessage', {\n    chat_id: chatId,\n    text\n  }))).json()\n",[65,4216,4217,4222,4227,4232,4237,4252,4257,4294,4321,4325,4329,4334,4358,4363,4385,4389,4404,4408,4412,4416,4421,4425,4429,4444,4459,4476,4481,4486,4491,4496,4502,4508,4513,4527,4571,4576,4581,4586,4592,4598,4603,4623,4647,4660,4666],{"__ignoreMap":63},[23,4218,4219],{"class":69,"line":70},[23,4220,4221],{"class":73},"/**\n",[23,4223,4224],{"class":69,"line":77},[23,4225,4226],{"class":73}," * Handle requests to WEBHOOK\n",[23,4228,4229],{"class":69,"line":84},[23,4230,4231],{"class":73}," * https://core.telegram.org/bots/api#update\n",[23,4233,4234],{"class":69,"line":121},[23,4235,4236],{"class":73}," */\n",[23,4238,4239,4241,4243,4246,4248,4250],{"class":69,"line":142},[23,4240,2510],{"class":87},[23,4242,2513],{"class":87},[23,4244,4245],{"class":107}," handleWebhook",[23,4247,483],{"class":103},[23,4249,2996],{"class":469},[23,4251,505],{"class":103},[23,4253,4254],{"class":69,"line":166},[23,4255,4256],{"class":73},"  // Check secret\n",[23,4258,4259,4261,4263,4265,4267,4269,4271,4274,4276,4279,4281,4284,4287,4290,4292],{"class":69,"line":187},[23,4260,480],{"class":87},[23,4262,483],{"class":103},[23,4264,2996],{"class":99},[23,4266,104],{"class":103},[23,4268,2946],{"class":149},[23,4270,104],{"class":103},[23,4272,4273],{"class":149},"headers",[23,4275,104],{"class":103},[23,4277,4278],{"class":107},"get",[23,4280,111],{"class":103},[23,4282,4283],{"class":114},"'X-Telegram-Bot-Api-Secret-Token'",[23,4285,4286],{"class":103},") ",[23,4288,4289],{"class":95},"!==",[23,4291,3962],{"class":91},[23,4293,505],{"class":103},[23,4295,4296,4298,4300,4302,4304,4307,4310,4313,4315,4318],{"class":69,"line":208},[23,4297,2716],{"class":87},[23,4299,2563],{"class":87},[23,4301,2968],{"class":107},[23,4303,111],{"class":103},[23,4305,4306],{"class":114},"'Unauthorized'",[23,4308,4309],{"class":103},", { ",[23,4311,4312],{"class":129},"status",[23,4314,2778],{"class":2777},[23,4316,4317],{"class":160}," 403",[23,4319,4320],{"class":103}," })\n",[23,4322,4323],{"class":69,"line":229},[23,4324,739],{"class":103},[23,4326,4327],{"class":69,"line":251},[23,4328,81],{"emptyLinePlaceholder":80},[23,4330,4331],{"class":69,"line":273},[23,4332,4333],{"class":73},"  // Read request body synchronously\n",[23,4335,4336,4338,4341,4343,4345,4348,4350,4352,4354,4356],{"class":69,"line":278},[23,4337,1371],{"class":87},[23,4339,4340],{"class":91}," update",[23,4342,96],{"class":95},[23,4344,2636],{"class":87},[23,4346,4347],{"class":99}," event",[23,4349,104],{"class":103},[23,4351,2946],{"class":149},[23,4353,104],{"class":103},[23,4355,2664],{"class":107},[23,4357,2667],{"class":103},[23,4359,4360],{"class":69,"line":291},[23,4361,4362],{"class":73},"  // Deal with response asynchronously\n",[23,4364,4365,4368,4370,4373,4375,4378,4380,4383],{"class":69,"line":308},[23,4366,4367],{"class":99},"  event",[23,4369,104],{"class":103},[23,4371,4372],{"class":107},"waitUntil",[23,4374,111],{"class":103},[23,4376,4377],{"class":107},"onUpdate",[23,4379,111],{"class":103},[23,4381,4382],{"class":135},"update",[23,4384,4067],{"class":103},[23,4386,4387],{"class":69,"line":686},[23,4388,81],{"emptyLinePlaceholder":80},[23,4390,4391,4393,4395,4397,4399,4402],{"class":69,"line":691},[23,4392,1434],{"class":87},[23,4394,2563],{"class":87},[23,4396,2968],{"class":107},[23,4398,111],{"class":103},[23,4400,4401],{"class":114},"'Ok'",[23,4403,853],{"class":103},[23,4405,4406],{"class":69,"line":702},[23,4407,1629],{"class":103},[23,4409,4410],{"class":69,"line":717},[23,4411,81],{"emptyLinePlaceholder":80},[23,4413,4414],{"class":69,"line":736},[23,4415,4221],{"class":73},[23,4417,4418],{"class":69,"line":3},[23,4419,4420],{"class":73}," * Handle incoming Update\n",[23,4422,4423],{"class":69,"line":3236},[23,4424,4231],{"class":73},[23,4426,4427],{"class":69,"line":3246},[23,4428,4236],{"class":73},[23,4430,4431,4433,4435,4438,4440,4442],{"class":69,"line":3263},[23,4432,2510],{"class":87},[23,4434,2513],{"class":87},[23,4436,4437],{"class":107}," onUpdate",[23,4439,483],{"class":103},[23,4441,4382],{"class":469},[23,4443,505],{"class":103},[23,4445,4446,4448,4450,4453,4455,4457],{"class":69,"line":3268},[23,4447,480],{"class":87},[23,4449,483],{"class":103},[23,4451,4452],{"class":114},"'message'",[23,4454,1189],{"class":87},[23,4456,4340],{"class":135},[23,4458,505],{"class":103},[23,4460,4461,4463,4466,4468,4470,4472,4474],{"class":69,"line":3273},[23,4462,510],{"class":87},[23,4464,4465],{"class":107}," onMessage",[23,4467,111],{"class":103},[23,4469,4382],{"class":99},[23,4471,104],{"class":103},[23,4473,1581],{"class":129},[23,4475,853],{"class":103},[23,4477,4479],{"class":69,"line":4478},26,[23,4480,739],{"class":103},[23,4482,4484],{"class":69,"line":4483},27,[23,4485,1629],{"class":103},[23,4487,4489],{"class":69,"line":4488},28,[23,4490,81],{"emptyLinePlaceholder":80},[23,4492,4494],{"class":69,"line":4493},29,[23,4495,4221],{"class":73},[23,4497,4499],{"class":69,"line":4498},30,[23,4500,4501],{"class":73}," * Handle incoming Message\n",[23,4503,4505],{"class":69,"line":4504},31,[23,4506,4507],{"class":73}," * https://core.telegram.org/bots/api#message\n",[23,4509,4511],{"class":69,"line":4510},32,[23,4512,4236],{"class":73},[23,4514,4516,4519,4521,4523,4525],{"class":69,"line":4515},33,[23,4517,4518],{"class":87},"function",[23,4520,4465],{"class":107},[23,4522,483],{"class":103},[23,4524,1581],{"class":469},[23,4526,505],{"class":103},[23,4528,4530,4532,4535,4537,4539,4541,4544,4546,4549,4551,4554,4556,4559,4562,4565,4567,4569],{"class":69,"line":4529},34,[23,4531,1434],{"class":87},[23,4533,4534],{"class":107}," sendPlainText",[23,4536,111],{"class":103},[23,4538,1581],{"class":99},[23,4540,104],{"class":103},[23,4542,4543],{"class":149},"chat",[23,4545,104],{"class":103},[23,4547,4548],{"class":129},"id",[23,4550,244],{"class":103},[23,4552,4553],{"class":114},"'Echo:",[23,4555,3203],{"class":95},[23,4557,4558],{"class":114},"'",[23,4560,4561],{"class":95}," +",[23,4563,4564],{"class":99}," message",[23,4566,104],{"class":103},[23,4568,1377],{"class":129},[23,4570,853],{"class":103},[23,4572,4574],{"class":69,"line":4573},35,[23,4575,1629],{"class":103},[23,4577,4579],{"class":69,"line":4578},36,[23,4580,81],{"emptyLinePlaceholder":80},[23,4582,4584],{"class":69,"line":4583},37,[23,4585,4221],{"class":73},[23,4587,4589],{"class":69,"line":4588},38,[23,4590,4591],{"class":73}," * Send plain text message\n",[23,4593,4595],{"class":69,"line":4594},39,[23,4596,4597],{"class":73}," * https://core.telegram.org/bots/api#sendmessage\n",[23,4599,4601],{"class":69,"line":4600},40,[23,4602,4236],{"class":73},[23,4604,4606,4608,4610,4612,4614,4617,4619,4621],{"class":69,"line":4605},41,[23,4607,2510],{"class":87},[23,4609,2513],{"class":87},[23,4611,4534],{"class":107},[23,4613,483],{"class":103},[23,4615,4616],{"class":469},"chatId",[23,4618,244],{"class":103},[23,4620,1377],{"class":469},[23,4622,505],{"class":103},[23,4624,4626,4628,4630,4633,4635,4637,4640,4642,4645],{"class":69,"line":4625},42,[23,4627,1434],{"class":87},[23,4629,483],{"class":103},[23,4631,4632],{"class":87},"await",[23,4634,2639],{"class":107},[23,4636,111],{"class":103},[23,4638,4639],{"class":107},"apiUrl",[23,4641,111],{"class":103},[23,4643,4644],{"class":114},"'sendMessage'",[23,4646,2832],{"class":103},[23,4648,4650,4653,4655,4658],{"class":69,"line":4649},43,[23,4651,4652],{"class":129},"    chat_id",[23,4654,2778],{"class":2777},[23,4656,4657],{"class":135}," chatId",[23,4659,2784],{"class":103},[23,4661,4663],{"class":69,"line":4662},44,[23,4664,4665],{"class":135},"    text\n",[23,4667,4669,4672,4674],{"class":69,"line":4668},45,[23,4670,4671],{"class":103},"  }))).",[23,4673,2664],{"class":107},[23,4675,2667],{"class":103},[19,4677,4678],{},"我们需要更改的就是这个 onMessage 函数，用户输入的文本信息通过 message.text 获取，我们可以很轻易的把 b23 remover 的逻辑用 js 实现",[58,4680,4682],{"className":60,"code":4681,"language":62,"meta":63,"style":63},"async function onMessage(message) {\n    if (!message.text) {\n        return;\n    }\n    const b23Reg = /b23\\.tv\\/[a-zA-Z0-9]+/g;\n    if (!b23Reg.test(message.text)) {\n        console.log('No match found');\n    }\n    const b23Links = message.text.match(b23Reg);\n    const cleanLinks = [];\n    await Promise.all(\n        b23Links.map(link => b23Remover('https://' + link))\n    ).then(result => {\n        cleanLinks.push(...result);\n    });\n\n    const text2Send = \"Track ID removed:\\n\" + cleanLinks.join(\"\\n\");\n    return sendPlainText(message.chat.id, text2Send);\n}\n\nasync function b23Remover (url) {\n    const r = await fetch(url)\n    const v = r.url\n    const u = new URL(v)\n    return u.origin + u.pathname\n}\n",[65,4683,4684,4698,4715,4722,4726,4763,4789,4805,4809,4835,4847,4863,4895,4912,4930,4935,4939,4973,4998,5002,5006,5020,5039,5055,5075,5095],{"__ignoreMap":63},[23,4685,4686,4688,4690,4692,4694,4696],{"class":69,"line":70},[23,4687,2510],{"class":87},[23,4689,2513],{"class":87},[23,4691,4465],{"class":107},[23,4693,111],{"class":103},[23,4695,1581],{"class":469},[23,4697,505],{"class":103},[23,4699,4700,4702,4704,4707,4709,4711,4713],{"class":69,"line":77},[23,4701,2672],{"class":87},[23,4703,483],{"class":103},[23,4705,4706],{"class":95},"!",[23,4708,1581],{"class":99},[23,4710,104],{"class":103},[23,4712,1377],{"class":129},[23,4714,505],{"class":103},[23,4716,4717,4720],{"class":69,"line":84},[23,4718,4719],{"class":87},"        return",[23,4721,139],{"class":103},[23,4723,4724],{"class":69,"line":121},[23,4725,1902],{"class":103},[23,4727,4728,4730,4733,4735,4739,4742,4745,4748,4751,4755,4758,4761],{"class":69,"line":142},[23,4729,543],{"class":87},[23,4731,4732],{"class":91}," b23Reg",[23,4734,96],{"class":95},[23,4736,4738],{"class":4737},"sDaw7"," /b23",[23,4740,4741],{"class":95},"\\.",[23,4743,4744],{"class":4737},"tv",[23,4746,4747],{"class":95},"\\/",[23,4749,4750],{"class":160},"[a-zA-Z0-9]",[23,4752,4754],{"class":4753},"sYoRg","+",[23,4756,4757],{"class":4737},"/",[23,4759,4760],{"class":87},"g",[23,4762,139],{"class":103},[23,4764,4765,4767,4769,4771,4774,4776,4779,4781,4783,4785,4787],{"class":69,"line":166},[23,4766,2672],{"class":87},[23,4768,483],{"class":103},[23,4770,4706],{"class":95},[23,4772,4773],{"class":99},"b23Reg",[23,4775,104],{"class":103},[23,4777,4778],{"class":107},"test",[23,4780,111],{"class":103},[23,4782,1581],{"class":99},[23,4784,104],{"class":103},[23,4786,1377],{"class":129},[23,4788,3100],{"class":103},[23,4790,4791,4794,4796,4798,4800,4803],{"class":69,"line":187},[23,4792,4793],{"class":99},"        console",[23,4795,104],{"class":103},[23,4797,2904],{"class":107},[23,4799,111],{"class":103},[23,4801,4802],{"class":114},"'No match found'",[23,4804,118],{"class":103},[23,4806,4807],{"class":69,"line":208},[23,4808,1902],{"class":103},[23,4810,4811,4813,4816,4818,4820,4822,4824,4826,4829,4831,4833],{"class":69,"line":229},[23,4812,543],{"class":87},[23,4814,4815],{"class":91}," b23Links",[23,4817,96],{"class":95},[23,4819,4564],{"class":99},[23,4821,104],{"class":103},[23,4823,1377],{"class":149},[23,4825,104],{"class":103},[23,4827,4828],{"class":107},"match",[23,4830,111],{"class":103},[23,4832,4773],{"class":135},[23,4834,118],{"class":103},[23,4836,4837,4839,4842,4844],{"class":69,"line":251},[23,4838,543],{"class":87},[23,4840,4841],{"class":91}," cleanLinks",[23,4843,96],{"class":95},[23,4845,4846],{"class":103}," [];\n",[23,4848,4849,4851,4855,4857,4860],{"class":69,"line":273},[23,4850,510],{"class":87},[23,4852,4854],{"class":4853},"sC09Y"," Promise",[23,4856,104],{"class":103},[23,4858,4859],{"class":107},"all",[23,4861,4862],{"class":103},"(\n",[23,4864,4865,4868,4870,4873,4875,4878,4880,4883,4885,4888,4890,4893],{"class":69,"line":278},[23,4866,4867],{"class":99},"        b23Links",[23,4869,104],{"class":103},[23,4871,4872],{"class":107},"map",[23,4874,111],{"class":103},[23,4876,4877],{"class":469},"link",[23,4879,472],{"class":87},[23,4881,4882],{"class":107}," b23Remover",[23,4884,111],{"class":103},[23,4886,4887],{"class":114},"'https://'",[23,4889,4561],{"class":95},[23,4891,4892],{"class":135}," link",[23,4894,4067],{"class":103},[23,4896,4897,4900,4903,4905,4908,4910],{"class":69,"line":291},[23,4898,4899],{"class":103},"    ).",[23,4901,4902],{"class":107},"then",[23,4904,111],{"class":103},[23,4906,4907],{"class":469},"result",[23,4909,472],{"class":87},[23,4911,475],{"class":103},[23,4913,4914,4917,4919,4921,4923,4926,4928],{"class":69,"line":308},[23,4915,4916],{"class":99},"        cleanLinks",[23,4918,104],{"class":103},[23,4920,3132],{"class":107},[23,4922,111],{"class":103},[23,4924,4925],{"class":2777},"...",[23,4927,4907],{"class":135},[23,4929,118],{"class":103},[23,4931,4932],{"class":69,"line":686},[23,4933,4934],{"class":103},"    });\n",[23,4936,4937],{"class":69,"line":691},[23,4938,81],{"emptyLinePlaceholder":80},[23,4940,4941,4943,4946,4948,4951,4953,4955,4957,4959,4961,4963,4965,4967,4969,4971],{"class":69,"line":702},[23,4942,543],{"class":87},[23,4944,4945],{"class":91}," text2Send",[23,4947,96],{"class":95},[23,4949,4950],{"class":114}," \"Track ID removed:",[23,4952,3203],{"class":95},[23,4954,3220],{"class":114},[23,4956,4561],{"class":95},[23,4958,4841],{"class":99},[23,4960,104],{"class":103},[23,4962,3214],{"class":107},[23,4964,111],{"class":103},[23,4966,3220],{"class":114},[23,4968,3203],{"class":95},[23,4970,3220],{"class":114},[23,4972,118],{"class":103},[23,4974,4975,4977,4979,4981,4983,4985,4987,4989,4991,4993,4996],{"class":69,"line":717},[23,4976,2716],{"class":87},[23,4978,4534],{"class":107},[23,4980,111],{"class":103},[23,4982,1581],{"class":99},[23,4984,104],{"class":103},[23,4986,4543],{"class":149},[23,4988,104],{"class":103},[23,4990,4548],{"class":129},[23,4992,244],{"class":103},[23,4994,4995],{"class":135},"text2Send",[23,4997,118],{"class":103},[23,4999,5000],{"class":69,"line":736},[23,5001,1629],{"class":103},[23,5003,5004],{"class":69,"line":3},[23,5005,81],{"emptyLinePlaceholder":80},[23,5007,5008,5010,5012,5014,5016,5018],{"class":69,"line":3236},[23,5009,2510],{"class":87},[23,5011,2513],{"class":87},[23,5013,4882],{"class":107},[23,5015,483],{"class":103},[23,5017,2644],{"class":469},[23,5019,505],{"class":103},[23,5021,5022,5024,5027,5029,5031,5033,5035,5037],{"class":69,"line":3246},[23,5023,543],{"class":87},[23,5025,5026],{"class":91}," r",[23,5028,96],{"class":95},[23,5030,2636],{"class":87},[23,5032,2639],{"class":107},[23,5034,111],{"class":103},[23,5036,2644],{"class":135},[23,5038,853],{"class":103},[23,5040,5041,5043,5046,5048,5050,5052],{"class":69,"line":3263},[23,5042,543],{"class":87},[23,5044,5045],{"class":91}," v",[23,5047,96],{"class":95},[23,5049,5026],{"class":99},[23,5051,104],{"class":103},[23,5053,5054],{"class":129},"url\n",[23,5056,5057,5059,5062,5064,5066,5068,5070,5073],{"class":69,"line":3268},[23,5058,543],{"class":87},[23,5060,5061],{"class":91}," u",[23,5063,96],{"class":95},[23,5065,2563],{"class":87},[23,5067,2566],{"class":107},[23,5069,111],{"class":103},[23,5071,5072],{"class":135},"v",[23,5074,853],{"class":103},[23,5076,5077,5079,5081,5083,5086,5088,5090,5092],{"class":69,"line":3273},[23,5078,2716],{"class":87},[23,5080,5061],{"class":99},[23,5082,104],{"class":103},[23,5084,5085],{"class":129},"origin",[23,5087,4561],{"class":95},[23,5089,5061],{"class":99},[23,5091,104],{"class":103},[23,5093,5094],{"class":129},"pathname\n",[23,5096,5097],{"class":69,"line":4478},[23,5098,1629],{"class":103},[29,5100,5102],{"id":5101},"webhook-注册相关","webhook 注册相关",[19,5104,5105],{},"后面的 registerWebhook、unRegisterWebhook、apiUrl 在没有特定需求的情况下不需要变动。",[19,5107,5108],{},"在 Cloudflare 部署后，就可以访问 aaa.bbb.workers.dev/registerWebhook 这个 url 注册 TG 的 webhook 服务。收到 Ok 就代表注册好了。",[19,5110,5111],{},[417,5112],{"alt":63,"src":5113},"https://static.031130.xyz/uploads/2024/12/30/5fd442bb18064.webp",[15,5115,5116],{"id":5116},"成果展示",[19,5118,5119],{},[417,5120],{"alt":63,"src":5121},"https://static.031130.xyz/uploads/2024/12/30/3b0b929960840.webp",[150,5123,5124],{},"html pre.shiki code .sLKXg, html code.shiki .sLKXg{--shiki-default:#A626A4;--shiki-dark:#C678DD}html pre.shiki code .sNmU0, html code.shiki .sNmU0{--shiki-default:#986801;--shiki-dark:#E5C07B}html pre.shiki code .s_Sar, html code.shiki .s_Sar{--shiki-default:#0184BC;--shiki-dark:#56B6C2}html pre.shiki code .sW2Sy, html code.shiki .sW2Sy{--shiki-default:#A0A1A7;--shiki-default-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html pre.shiki code .s8iYz, html code.shiki .s8iYz{--shiki-default:#383A42;--shiki-default-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic}html pre.shiki code .s7GmK, html code.shiki .s7GmK{--shiki-default:#383A42;--shiki-dark:#E5C07B}html pre.shiki code .s2QsP, html code.shiki .s2QsP{--shiki-default:#E45649;--shiki-dark:#E5C07B}html pre.shiki code .sJa8x, html code.shiki .sJa8x{--shiki-default:#E45649;--shiki-dark:#E06C75}html pre.shiki code .sz0mV, html code.shiki .sz0mV{--shiki-default:#383A42;--shiki-dark:#E06C75}html pre.shiki code .st7oF, html code.shiki .st7oF{--shiki-default:#0184BC;--shiki-dark:#ABB2BF}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}html pre.shiki code .sDaw7, html code.shiki .sDaw7{--shiki-default:#0184BC;--shiki-dark:#E06C75}html pre.shiki code .sYoRg, html code.shiki .sYoRg{--shiki-default:#0184BC;--shiki-dark:#D19A66}html pre.shiki code .sC09Y, html code.shiki .sC09Y{--shiki-default:#C18401;--shiki-dark:#E5C07B}",{"title":63,"searchDepth":77,"depth":77,"links":5126},[5127,5128,5129,5135],{"id":3309,"depth":77,"text":3309},{"id":3882,"depth":77,"text":3883},{"id":3907,"depth":77,"text":3907,"children":5130},[5131,5132,5133,5134],{"id":3913,"depth":84,"text":3913},{"id":3973,"depth":84,"text":3973},{"id":4208,"depth":84,"text":4208},{"id":5101,"depth":84,"text":5102},{"id":5116,"depth":77,"text":5116},{"title":5137,"date":5138,"path":5139,"tags":5140,"body":5144},"2024年，Firefox 是唯一还在坚持执行在线的 SSL 证书吊销状态检查的主流浏览器","2024-11-19 17:58:14","/2024/11/19/firefox-is-the-only-mainstream-brower-doing-online-certificate-revocation-checks",[5141,5142,5143],"Firefox","SSL","OpenSSL",{"type":12,"value":5145,"toc":5643},[5146,5150,5153,5167,5174,5177,5182,5185,5192,5204,5212,5217,5220,5225,5229,5238,5242,5245,5249,5252,5255,5294,5299,5305,5308,5311,5322,5325,5331,5335,5342,5387,5397,5400,5416,5420,5423,5426,5429,5447,5450,5455,5459,5476,5479,5496,5499,5502,5505,5511,5514,5517,5526,5528,5640],[15,5147,5149],{"id":5148},"小试一下","小试一下？",[19,5151,5152],{},"在开始阅读后面的内容之前，或许你可以试试看你正在使用的浏览器能不能访问下面两个链接:",[1716,5154,5155,5161],{},[373,5156,5157],{},[33,5158,5159],{"href":5159,"rel":5160},"https://digicert-tls-ecc-p384-root-g5-revoked.chain-demos.digicert.com/",[37],[373,5162,5163],{},[33,5164,5165],{"href":5165,"rel":5166},"https://revoked-isrgrootx1.letsencrypt.org/",[37],[19,5168,5169,5170,5173],{},"这两个链接分别是由 digicert 和 Let's Encrypt 维护的，特意维持了一个",[330,5171,5172],{},"证书没过期，但被 CA 吊销","的状态。",[19,5175,5176],{},"在我的 Firefox for Linux 上，两个链接我都无法打开。",[19,5178,5179],{},[417,5180],{"alt":63,"src":5181},"https://static.031130.xyz/uploads/2024/11/19/f7785db60b2c8.webp",[19,5183,5184],{},"这是预期行为。Firefox 在与目标站点建立 https 链接之前，先向 CA 提供的 OCSP 服务器打了一个 http 请求来判断目标站点的 ssl 证书是否有效（是否没有被 CA 主动吊销）。",[19,5186,5187,5188],{},"在 Firefox for Android 上，我无法打开第一个链接，但可以打开第二个，这是因为 Mozilla 给 Android 用户设置的策略为「只对 EV 证书进行 ocsp 校验，跳过 DV 证书和 OV 证书」，",[5189,5190,5191],"em",{},"似乎在竞争更加激烈的移动端，Firefox 为了加载速度做出了安全性上的妥协。",[1140,5193,5194,5198,5201],{},[417,5195],{"src":5196,"style":5197},"https://static.031130.xyz/uploads/2024/11/19/b097e954f766f.webp","zoom:33%;",[23,5199],{"style":5200},"width: 20%;",[417,5202],{"src":5203,"style":5197},"https://static.031130.xyz/uploads/2024/11/19/a5f58dbb50cfe.webp",[19,5205,5206,5207,2027],{},"而在 Google Chrome / Microsoft Edge 上，OCSP 是不被支持的，chromium 团队在 2014 年就禁用了 OCSP 校验，且目前没有设置项允许用户手动开启，目前它只支持",[33,5208,5211],{"href":5209,"rel":5210},"https://www.chromium.org/Home/chromium-security/crlsets/",[37],"本地的 CRLSets 规则集",[19,5213,5214],{},[417,5215],{"alt":63,"src":5216},"https://static.031130.xyz/uploads/2024/11/19/bd84e9aff71d0.webp",[19,5218,5219],{},"Safari 经我本人测试默认只对 EV 证书进行有效性检验。",[19,5221,5222],{},[417,5223],{"alt":63,"src":5224},"https://static.031130.xyz/uploads/2024/11/19/50352339f7473.webp",[15,5226,5228],{"id":5227},"ssl-证书被吊销是怎么回事","SSL 证书被吊销是怎么回事？",[19,5230,5231,5232,5237],{},"在某些情况下（比如用户告知 CA 颁发给自己的证书私钥不慎被泄漏了，或者 ",[33,5233,5236],{"href":5234,"rel":5235},"https://www.trustasia.com/view-security-lets-encrypt/",[37],"CA 的颁发程序出现漏洞被人滥用，需要吊销在此期间发出去的所有证书","），CA 需要吊销一些证书，并通过自己的渠道将被吊销的证书尽快告知所有用户——需要被吊销的证书和正常的证书在外观上没有任何区别，用户的浏览器必须依赖 CA 的外部消息通知才能知道哪些证书是被吊销的。",[15,5239,5241],{"id":5240},"firefox-是如何接收来自-ca-的吊销信息的","Firefox 是如何接收来自 CA 的吊销信息的？",[19,5243,5244],{},"Firefox 通过提供了两种方案，以便用户从 CA 处得知目标站点的证书是否被吊销。",[29,5246,5248],{"id":5247},"ocsp","OCSP",[19,5250,5251],{},"正如我前文所说的，Firefox 的 PC 端在与目标站点建立 https 连接之前，会先通过 http 协议向 CA 的 OCSP 服务器打一个 POST 请求来确认证书是否被吊销。",[19,5253,5254],{},"我们可以通过 openssl 拿到目标站点的 ssl 公钥，查看 CA 指定的 OCSP Server",[58,5256,5258],{"className":1912,"code":5257,"language":1914,"meta":63,"style":63},"openssl s_client -connect example.com:443 -servername example.com | openssl x509 -text -noout\n\n",[65,5259,5260],{"__ignoreMap":63},[23,5261,5262,5265,5268,5271,5274,5277,5280,5283,5285,5288,5291],{"class":69,"line":70},[23,5263,5264],{"class":107},"openssl",[23,5266,5267],{"class":114}," s_client",[23,5269,5270],{"class":160}," -connect",[23,5272,5273],{"class":114}," example.com:443",[23,5275,5276],{"class":160}," -servername",[23,5278,5279],{"class":114}," example.com",[23,5281,5282],{"class":103}," | ",[23,5284,5264],{"class":107},[23,5286,5287],{"class":114}," x509",[23,5289,5290],{"class":160}," -text",[23,5292,5293],{"class":160}," -noout\n",[19,5295,5296],{},[417,5297],{"alt":63,"src":5298},"https://static.031130.xyz/uploads/2024/11/19/32579fb56b77b.webp",[19,5300,5301],{},[417,5302],{"alt":5303,"src":5304},"访问第二个链接时的抓包结果","https://static.031130.xyz/uploads/2024/11/19/244704705924f.webp",[784,5306,5307],{"id":5307},"软失败",[19,5309,5310],{},"这个请求一共有三种结果:",[370,5312,5313,5316,5319],{},[373,5314,5315],{},"请求结果正常，证书没有被吊销：Firefox 继续和目标站点建立 https 连接",[373,5317,5318],{},"请求结果正常，证书被吊销：Firefox 拒绝和目标站点建立 https 连接，如同我在博客开头贴的图",[373,5320,5321],{},"请求结果异常（请求超时）：Firefox 继续和目标站点建立 https 连接",[19,5323,5324],{},"透过在第三种情况，我们可以发现，Firefox 对 OCSP 检查的结果是软失败 (soft fail) 态度——即如果在 OCSP 过程中发生异常，Firefox 将不得不放弃 OCSP 检查并放行。根据 Mozilla Blog 的说法，如今有 9.9% 的 OCSP 检查都是超时的。",[19,5326,5327],{},[417,5328],{"alt":5329,"src":5330},"https://blog.mozilla.org/security/files/2020/01/figure4-ocsp_results.png","https://static.031130.xyz/uploads/2024/11/19/4a6c899a41128.webp",[784,5332,5334],{"id":5333},"firefox-中的相关配置项","Firefox 中的相关配置项",[19,5336,5337,5338,5341],{},"在 Firefox 的 ",[65,5339,5340],{},"about:config"," 配置中搜索，我们可以看到一些关于 OCSP 的配置项",[1716,5343,5344,5361,5375,5381],{},[373,5345,5346,5349,5350],{},[65,5347,5348],{},"security.OCSP.enabled",": 是否开启 OCSP 检查，默认为 1",[1716,5351,5352,5355,5358],{},[373,5353,5354],{},"0: 关闭 OCSP 检查",[373,5356,5357],{},"1: 开启 OCSP 检查",[373,5359,5360],{},"2: 只对 EV 证书进行 OCSP 检查",[373,5362,5363,5366,5367],{},[65,5364,5365],{},"security.OCSP.required",": 是否一定要通过 OCSP 才允许建立连接（即是否不允许“软失败”），默认为 false",[1716,5368,5369,5372],{},[373,5370,5371],{},"false: 允许软失败",[373,5373,5374],{},"true: 不允许软失败",[373,5376,5377,5380],{},[65,5378,5379],{},"security.OCSP.timeoutMilliseconds.hard",": 针对 EV 证书，OCSP 检查的超时时间，默认为 10000 (10 秒)",[373,5382,5383,5386],{},[65,5384,5385],{},"security.OCSP.timeoutMilliseconds.soft",": 针对 DV 和 OV 证书，OCSP 检查的超时时间，默认为 2000（2 秒），移动端为 1 秒。",[19,5388,5389],{},[5189,5390,5391,5392],{},"EV 证书相比 DV 和 OV 有更严苛的申请条件，区别可以参考",[33,5393,5396],{"href":5394,"rel":5395},"https://www.digicert.com/cn/difference-between-dv-ov-and-ev-ssl-certificates",[37],"DV、OV和EV SSL证书之间有什么区别？",[784,5398,5399],{"id":5399},"弊端",[1716,5401,5402,5405,5413],{},[373,5403,5404],{},"ocsp 不能在不增加用户负担的情况下使用硬失败(hard fail)，对于无响应或者超时的 ocsp 验证只能直接放行，这意味着攻击者可以直接屏蔽浏览器和 CA 之间的连接，拖到 ocsp 超时，并不能有效保障用户免受攻击。",[373,5406,5407,5408,2027],{},"在 ocsp server 响应或者连接超时前，与目标站点的 https 连接会被阻塞，这带来了更大的访问延迟。有时还会出现",[33,5409,5412],{"href":5410,"rel":5411},"https://blog.wolfogre.com/posts/letsencrypt-ocsp-breakdown/",[37],"用户与 ocsp server 无法连接的情况",[373,5414,5415],{},"ocsp 是由用户浏览器主动向 CA 发起 http 请求，可能会导致用户隐私泄漏（IP 地址、位置、用户的部分浏览历史记录等）。即使 CA 故意不保留这些信息，地区法律也可能强制 CA 收集这些信息。",[784,5417,5419],{"id":5418},"ocsp-装订-ocsp-stapling","OCSP 装订 (OCSP stapling)",[19,5421,5422],{},"这是一种新的方式，由目标站点的服务器主动向 CA 的 ocsp 服务器缓存 ocsp 信息（有效期最长为 7 天），并将其在用户访问时将相关信息一起提供给用户，避免用户直接向 CA 的服务器发起查询请求，能够规避部分弊端（避免 CA 收集用户信息，规避用户与 CA OCSP 服务器连接性不好等问题）。",[19,5424,5425],{},"目前，caddy 是默认开启 OCSP 装订的，而 nginx 可以在配置后手动开启。",[19,5427,5428],{},"可以采用 openssl 来查询目标站点是否开启了 OCSP 装订：",[58,5430,5432],{"className":1912,"code":5431,"language":1914,"meta":63,"style":63},"openssl s_client -connect example.com:443 -status\n",[65,5433,5434],{"__ignoreMap":63},[23,5435,5436,5438,5440,5442,5444],{"class":69,"line":70},[23,5437,5264],{"class":107},[23,5439,5267],{"class":114},[23,5441,5270],{"class":160},[23,5443,5273],{"class":114},[23,5445,5446],{"class":160}," -status\n",[19,5448,5449],{},"如果开启了 OCSP 装订，那么返回的数据中会有 OCSP Response Data 相关的描述",[19,5451,5452],{},[417,5453],{"alt":63,"src":5454},"https://static.031130.xyz/uploads/2024/11/19/71f252c97e96e.webp",[29,5456,5458],{"id":5457},"crlite-wip","CRLite (WIP)",[19,5460,5461,5466,5467,5472,5473],{},[33,5462,5465],{"href":5463,"rel":5464},"https://obj.umiacs.umd.edu/papers_for_stories/crlite_oakland17.pdf",[37],"CRLite"," 是 ",[33,5468,5471],{"href":5469,"rel":5470},"https://www.ieee-security.org/TC/SP2017/",[37],"2017 年 IEEE 安全和隐私研讨会","上一组研究人员提出的一项技术，该技术可以有效地压缩吊销信息，使 300 兆字节的吊销数据可以变成 1 兆字节。CRLite 数据由 Mozilla 收集处理后推送给浏览器实现证书状态的本地查找，",[5189,5474,5475],{},"这项技术仍然处于开发阶段。",[19,5477,5478],{},"当浏览器使用 CRLite 查询对应站点的 ssl 证书的有效状态时，一般会有 5 种查询结果",[370,5480,5481,5484,5487,5490,5493],{},[373,5482,5483],{},"Certificate Valid，表示 CRLite 权威返回证书有效。",[373,5485,5486],{},"Certificate Revoked，表示 CRLite 权威返回证书已被吊销。",[373,5488,5489],{},"Issuer Not Enrolled, 这意味着正在评估的证书未包含在 CRLite 筛选器集中，可能是因为颁发证书的证书颁发机构 （CA） 未发布 CRL。",[373,5491,5492],{},"Certificate Too New，表示正在评估的证书比 CRLite 筛选器新。",[373,5494,5495],{},"Filter Not Available，这意味着 CRLite 过滤器要么尚未从 Remote Settings 下载，要么已经过时以至于停止服务。",[19,5497,5498],{},"Mozilla 计划每天发布 4 次 CRLite 的更新，以减少第 4 种情况。",[784,5500,5501],{"id":5501},"速度优势",[19,5503,5504],{},"CRLite 的本地数据查询相比起 OCSP 的在线查询拥有天然的优势，99% 的情况下，CRLite 会比 OCSP 快，其中 56% 的情况下，CRLite 会比 OCSP 快 100 毫秒以上。",[19,5506,5507],{},[417,5508],{"alt":5509,"src":5510},"https://blog.mozilla.org/security/files/2020/01/figure3-speedup_vs_ocsp.png","https://static.031130.xyz/uploads/2024/11/19/bfba9ba3515ca.webp",[19,5512,5513],{},"此外，当 CRLite 不可用时，Firefox 仍然可以回退到传统的 OCSP 检测机制。",[15,5515,5516],{"id":5516},"其他",[19,5518,5519,5520,5525],{},"Let's Encrypt 在 2024 年 7 月",[33,5521,5524],{"href":5522,"rel":5523},"https://letsencrypt.org/2024/07/23/replacing-ocsp-with-crls/",[37],"发布博客","，CA/Browser Forum在上一年 8 月通过了一向投票允许 Let's Encrypt 等公开信任的 CA 将设立 OCSP server 作为可选选项。他们计划在未来 6~12 月内宣布关闭 OCSP 服务的时间表。",[15,5527,1714],{"id":1714},[1716,5529,5530,5537,5544,5551,5558,5565,5572,5579,5590,5597,5604,5610,5617,5623,5629,5635],{},[373,5531,5532],{},[33,5533,5536],{"href":5534,"rel":5535},"https://wiki.mozilla.org/CA/Revocation_Checking_in_Firefox",[37],"CA/Revocation Checking in Firefox - MozillaWiki",[373,5538,5539],{},[33,5540,5543],{"href":5541,"rel":5542},"https://discourse.mozilla.org/t/firefox-ocsp-policy/83150",[37],"Firefox OCSP policy - Firefox Development - Mozilla Discourse",[373,5545,5546],{},[33,5547,5550],{"href":5548,"rel":5549},"https://knowledge.digicert.com/nl/nl/quovadis/ssl-certificates/ssl-general-topics/in-which-browsers-is-ocsp-online-certificates-status-protocol-supported-in",[37],"In which browsers is OCSP (Online Certificates Status Protocol) supported in?",[373,5552,5553],{},[33,5554,5557],{"href":5555,"rel":5556},"https://blog.mozilla.org/security/2020/01/09/crlite-part-1-all-web-pki-revocations-compressed/",[37],"Introducing CRLite: All of the Web PKI’s revocations, compressed - Mozilla Security Blog",[373,5559,5560],{},[33,5561,5564],{"href":5562,"rel":5563},"https://blog.mozilla.org/security/2020/01/21/crlite-part-3-speeding-up-secure-browsing/",[37],"CRLite: Speeding Up Secure Browsing - Mozilla Security Blog",[373,5566,5567],{},[33,5568,5571],{"href":5569,"rel":5570},"https://blog.cloudflare.com/high-reliability-ocsp-stapling/",[37],"High-reliability OCSP stapling and why it matters - The Cloudflare Blog",[373,5573,5574],{},[33,5575,5578],{"href":5576,"rel":5577},"https://en.wikipedia.org/wiki/Online_Certificate_Status_Protocol",[37],"Online Certificate Status Protocol - Wikipedia",[373,5580,5581],{},[33,5582,5585,5586,5589],{"href":5583,"rel":5584},"https://bugzilla.mozilla.org/show_bug.cgi?id=1429800",[37],"1429800 - (crlite) ",[23,5587,5588],{},"meta"," Implement a CRLite based revocation mechanism",[373,5591,5592],{},[33,5593,5596],{"href":5594,"rel":5595},"https://bugzilla.mozilla.org/show_bug.cgi?id=1761109",[37],"1761109 - Make check-revocations mode the default CRLite mode",[373,5598,5599],{},[33,5600,5603],{"href":5601,"rel":5602},"https://www.reddit.com/r/browsers/comments/1bb81y8/firefox_the_only_browser_doing_certificate/",[37],"Firefox - The only browser doing certificate revocation checks right : r/browsers",[373,5605,5606],{},[33,5607,5609],{"href":5522,"rel":5608},[37],"Intent to End OCSP Service - Let's Encrypt",[373,5611,5612],{},[33,5613,5616],{"href":5614,"rel":5615},"https://groups.google.com/a/mozilla.org/g/dev-security-policy/c/S6A14e_X-T0/m/T4WxWgajAAAJ",[37],"Revocation checking for EV server certificates in Chrome - Google Groups",[373,5618,5619],{},[33,5620,5622],{"href":5209,"rel":5621},[37],"CRLSets - The Chromium Projects",[373,5624,5625],{},[33,5626,5628],{"href":5234,"rel":5627},[37],"由于Bug，Let's Encrypt决定吊销300多万张证书！",[373,5630,5631],{},[33,5632,5634],{"href":5410,"rel":5633},[37],"Let’s Encrypt OCSP 域名被封",[373,5636,5637],{},[33,5638,5396],{"href":5394,"rel":5639},[37],[150,5641,5642],{},"html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":63,"searchDepth":77,"depth":77,"links":5644},[5645,5646,5647,5651,5652],{"id":5148,"depth":77,"text":5149},{"id":5227,"depth":77,"text":5228},{"id":5240,"depth":77,"text":5241,"children":5648},[5649,5650],{"id":5247,"depth":84,"text":5248},{"id":5457,"depth":84,"text":5458},{"id":5516,"depth":77,"text":5516},{"id":1714,"depth":77,"text":1714},{"title":5654,"date":5655,"path":5656,"tags":5657,"body":5660},"小爱课程表适配不完全指北——以 ZJUT 本科正方教务系统为例","2024-11-18 21:13:56","/2024/11/18/mi-ai-class-schedule-adapter-for-zjut",[10,5658,5659],"MiAI","Fun",{"type":12,"value":5661,"toc":7710},[5662,5665,5668,5671,5674,5682,5690,5693,5696,5707,5720,5727,5739,5742,5745,5754,5757,5760,5765,5768,5773,5776,5779,5782,5785,5790,5793,5796,5801,5807,5811,5814,5819,5822,5973,5976,5987,5990,6024,6027,6030,6129,6132,6135,6138,6145,6150,6154,6160,6163,6169,6188,6195,6550,6553,6749,6752,6834,6838,6841,7065,7068,7119,7122,7129,7132,7208,7211,7326,7333,7337,7346,7670,7673,7680,7683,7688,7691,7696,7699,7704,7707],[15,5663,5664],{"id":5664},"写在前面",[19,5666,5667],{},"一个月前，我发现小爱课程表中针对我学校的教务系统导入系统年久失修，因此我便决定自己另立门户、独立维护一版针对 ZJUT 教务系统课表信息导入的适配项目。",[19,5669,5670],{},"整个流程不难，如果你对于 js 代码和爬虫技术有简单的了解，那么很快就可以上手，我大概只花了 2 小时就完成了 阅读文档-编写代码-自测通过-提交审核 的过程，并在一周内正式上架，得到了身边同学的认可。",[19,5672,5673],{},"在适配过程中，一定要仔细阅读官方文档，所有技术性问题几乎都能通过官方文档解决。这篇博客我尽量详细记录了使用 fetch 打请求获取 json 的正方教务系统适配方案，仅供参考。",[19,5675,5676,5677],{},"官方文档地址: ",[33,5678,5681],{"href":5679,"rel":5680},"https://open-schedule-prod.ai.xiaomi.com/docs/#/help/",[37],"小爱课程表开发者工具使用教程",[19,5683,5684,5685],{},"我的代码: ",[33,5686,5689],{"href":5687,"rel":5688},"https://github.com/zhullyb/ZJUT-Mi-Schedule-Adapter/",[37],"Github",[15,5691,5692],{"id":5692},"运行原理",[19,5694,5695],{},"小爱课表获取课表信息的大致流程如下",[370,5697,5698,5701,5704],{},[373,5699,5700],{},"在你的手机上调用系统 webview 进入你指定的教务系统，让你手动输入账号密码并完成登陆流程",[373,5702,5703],{},"获取含有课表信息的字符串（可以是直接获取页面展示的 html 代码，也可以是利用登陆时获取的 cookie/session 信息直接向后端发送请求拿响应）",[373,5705,5706],{},"解析获取到的字符串，按照小米预先定义好的 json 格式输出",[19,5708,5709,5710,5713,5714,385,5717],{},"作为适配者，我们需要提供三个代码文件，分别是 ",[65,5711,5712],{},"Provider","、",[65,5715,5716],{},"Parser",[65,5718,5719],{},"Timer",[19,5721,5722,385,5724,5726],{},[65,5723,5712],{},[65,5725,5719],{}," 都在本地登陆好教务系统后的 webview 环境中执行，前者需要返回步骤 2 中描述的带有课表信息的字符串，Timer 则返回课程时间、学期周数等信息。",[19,5728,5729,5731,5732,5734,5735,1860],{},[65,5730,5712],{}," 获取到的字符串将会成为 ",[65,5733,5716],{}," 的函数参数，这个函数将会上传到小米的服务器中运行，根据文档所说是为了满足部分开发者保护自己的代码防止被抓包而刻意设计的（虽然我不理解这种东西有什么好闭源的，",[23,5736,5738],{"className":5737},[26],"可能是为了防止友商批量抓包获取解析算法以后直接推出竞品",[15,5740,5741],{"id":5741},"适配实战",[29,5743,5744],{"id":5744},"安装浏览器插件",[19,5746,5747,5748,5753],{},"首先下载小米提供给我们的资源包，目前我拿到的最新的版本是 v0.3.8，",[33,5749,5752],{"href":5750,"rel":5751},"https://open-schedule-prod.ai.xiaomi.com/docs/#/help/?id=%e4%b8%8b%e8%bd%bd",[37],"下载链接","。注意不要被后缀骗了，这不是个 rar 包，我这里后缀改成 tar 后可以被 ark 正确解压，后缀名是 rar 可能是开发者希望 Windows 用户能用 winrar 进行解压？",[19,5755,5756],{},"这里需要一个 Chromium-based 的浏览器安装小米提供的浏览器插件。",[19,5758,5759],{},"然后使用 Chrome 的「加载已解压的扩展程序」安装整个被解压的目录。Chrome 安装后提示 Manifest version 2 将会在 2024 年被弃用，不知道小米能不能在 Chrome 弃用前支持 Manifest version 3，趁着能用我先不管它。",[19,5761,5762],{},[417,5763],{"alt":63,"src":5764},"https://static.031130.xyz/uploads/2024/11/18/f2a063c982a42.webp",[19,5766,5767],{},"随后打开自己学校的教务网站，F12 打开开发者工具，可以看到多了一栏叫「AISchedule」的选项",[19,5769,5770],{},[417,5771],{"alt":63,"src":5772},"https://static.031130.xyz/uploads/2024/11/18/800054d7f4ff8.webp",[19,5774,5775],{},"随后正常登陆自己的小米账号，放一旁备用。",[29,5777,5778],{"id":5778},"抓数据包",[19,5780,5781],{},"随后，登陆自己的教务网站，打开课表页面，查看 F12 开发者工具的网络一览，刷新页面加载自己的课表，查看开发者页面中显示的数据流，找到含有课表信息的那一个。",[19,5783,5784],{},"这个流程我个人用惯了 Firefox 浏览器，因此数据分析这一块的截图都是 Firefox 的截图。",[19,5786,5787],{},[417,5788],{"alt":63,"src":5789},"https://static.031130.xyz/uploads/2024/11/18/7ea6e1e0bbfcf.webp",[19,5791,5792],{},"在我的例子中，第一个请求的响应是一个 html 页面，勾勒出了这个页面的大致轮廓，不过没有样式。这是一个好的迹象，说明这大概率是一个前后端分离的站点，授课数据很可能是通过 json 的数据单独传递给前端的，我们就不需要从 html 中解析我们的课表。",[19,5794,5795],{},"如果能确定是前后端分离的站点，我们可以尝试勾选这里的「XHR」选项，XHR 的全名是 XMLHttpRequest，是一种前端向后端发起请求的方式，前后端的数据一般都会在这里展示。",[19,5797,5798],{},[417,5799],{"alt":63,"src":5800},"https://static.031130.xyz/uploads/2024/11/18/36880519d2109.webp",[19,5802,5803,5804,5806],{},"我在第三个请求中发现了我的课表信息，在已经登陆的情况下，小米的课程表允许我通过 fetch 函数打一个相同的请求给后端，获取这个响应结果作为 ",[65,5805,5712],{}," 部分的输出字符串。",[29,5808,5810],{"id":5809},"调试-fetch-参数","调试 fetch 参数",[19,5812,5813],{},"这个请求的 fetch 函数如何构建？可以直接右键这个请求，在菜单中选择「复制为 Fetch 语句」",[19,5815,5816],{},[417,5817],{"alt":63,"src":5818},"https://static.031130.xyz/uploads/2024/11/18/ff498f0a0957e.webp",[19,5820,5821],{},"复制下来的语句长下面这个样子",[58,5823,5825],{"className":60,"code":5824,"language":62,"meta":63,"style":63},"await fetch(\"http://www.gdjw.zjut.edu.cn/jwglxt/kbcx/xskbcx_cxXsgrkb.html?gnmkdm=N2151\", {\n    \"credentials\": \"include\",\n    \"headers\": {\n        \"User-Agent\": \"Mozilla/5.0 (X11; Linux x86_64; rv:133.0) Gecko/20100101 Firefox/133.0\",\n        \"Accept\": \"*/*\",\n        \"Accept-Language\": \"zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\",\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n        \"X-Requested-With\": \"XMLHttpRequest\"\n    },\n    \"referrer\": \"http://www.gdjw.zjut.edu.cn/jwglxt/kbcx/xskbcx_cxXskbcxIndex.html?gnmkdm=N2151&layout=default\",\n    \"body\": \"xnm=2024&xqm=3&kzlx=ck&xsdm=\",\n    \"method\": \"POST\",\n    \"mode\": \"cors\"\n});\n",[65,5826,5827,5840,5852,5861,5873,5885,5897,5909,5919,5923,5935,5947,5958,5968],{"__ignoreMap":63},[23,5828,5829,5831,5833,5835,5838],{"class":69,"line":70},[23,5830,4632],{"class":87},[23,5832,2639],{"class":107},[23,5834,111],{"class":103},[23,5836,5837],{"class":114},"\"http://www.gdjw.zjut.edu.cn/jwglxt/kbcx/xskbcx_cxXsgrkb.html?gnmkdm=N2151\"",[23,5839,2832],{"class":103},[23,5841,5842,5845,5847,5850],{"class":69,"line":77},[23,5843,5844],{"class":114},"    \"credentials\"",[23,5846,2778],{"class":2777},[23,5848,5849],{"class":114}," \"include\"",[23,5851,2784],{"class":103},[23,5853,5854,5857,5859],{"class":69,"line":84},[23,5855,5856],{"class":114},"    \"headers\"",[23,5858,2778],{"class":2777},[23,5860,475],{"class":103},[23,5862,5863,5866,5868,5871],{"class":69,"line":121},[23,5864,5865],{"class":114},"        \"User-Agent\"",[23,5867,2778],{"class":2777},[23,5869,5870],{"class":114}," \"Mozilla/5.0 (X11; Linux x86_64; rv:133.0) Gecko/20100101 Firefox/133.0\"",[23,5872,2784],{"class":103},[23,5874,5875,5878,5880,5883],{"class":69,"line":142},[23,5876,5877],{"class":114},"        \"Accept\"",[23,5879,2778],{"class":2777},[23,5881,5882],{"class":114}," \"*/*\"",[23,5884,2784],{"class":103},[23,5886,5887,5890,5892,5895],{"class":69,"line":166},[23,5888,5889],{"class":114},"        \"Accept-Language\"",[23,5891,2778],{"class":2777},[23,5893,5894],{"class":114}," \"zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\"",[23,5896,2784],{"class":103},[23,5898,5899,5902,5904,5907],{"class":69,"line":187},[23,5900,5901],{"class":114},"        \"Content-Type\"",[23,5903,2778],{"class":2777},[23,5905,5906],{"class":114}," \"application/x-www-form-urlencoded;charset=utf-8\"",[23,5908,2784],{"class":103},[23,5910,5911,5914,5916],{"class":69,"line":208},[23,5912,5913],{"class":114},"        \"X-Requested-With\"",[23,5915,2778],{"class":2777},[23,5917,5918],{"class":114}," \"XMLHttpRequest\"\n",[23,5920,5921],{"class":69,"line":229},[23,5922,2980],{"class":103},[23,5924,5925,5928,5930,5933],{"class":69,"line":251},[23,5926,5927],{"class":114},"    \"referrer\"",[23,5929,2778],{"class":2777},[23,5931,5932],{"class":114}," \"http://www.gdjw.zjut.edu.cn/jwglxt/kbcx/xskbcx_cxXskbcxIndex.html?gnmkdm=N2151&layout=default\"",[23,5934,2784],{"class":103},[23,5936,5937,5940,5942,5945],{"class":69,"line":273},[23,5938,5939],{"class":114},"    \"body\"",[23,5941,2778],{"class":2777},[23,5943,5944],{"class":114}," \"xnm=2024&xqm=3&kzlx=ck&xsdm=\"",[23,5946,2784],{"class":103},[23,5948,5949,5952,5954,5956],{"class":69,"line":278},[23,5950,5951],{"class":114},"    \"method\"",[23,5953,2778],{"class":2777},[23,5955,2842],{"class":114},[23,5957,2784],{"class":103},[23,5959,5960,5963,5965],{"class":69,"line":291},[23,5961,5962],{"class":114},"    \"mode\"",[23,5964,2778],{"class":2777},[23,5966,5967],{"class":114}," \"cors\"\n",[23,5969,5970],{"class":69,"line":308},[23,5971,5972],{"class":103},"});\n",[19,5974,5975],{},"先看 body 部分",[1716,5977,5978,5981,5984],{},[373,5979,5980],{},"xnm=2024 很明显是年份的意思",[373,5982,5983],{},"xqm 表示学期，这个通过多次尝试获取不同学期的课表可以得出结果，3 表示第一学期，12 表示第二学期，16 表示第三学期（短学期）",[373,5985,5986],{},"其余的参数我不关心，一模一样带上就行",[19,5988,5989],{},"这个函数是可以直接放在 F12 开发者工具的控制台中运行的，通过在 fetch 函数的尾部（分号前）添加一个回调函数就可以打印出函数获取的结果。",[58,5991,5993],{"className":60,"code":5992,"language":62,"meta":63,"style":63},"await fetch(...).then(response => response.json())\n",[65,5994,5995],{"__ignoreMap":63},[23,5996,5997,5999,6001,6003,6005,6007,6009,6011,6013,6015,6017,6019,6021],{"class":69,"line":70},[23,5998,4632],{"class":87},[23,6000,2639],{"class":107},[23,6002,111],{"class":103},[23,6004,4925],{"class":2777},[23,6006,3744],{"class":103},[23,6008,4902],{"class":107},[23,6010,111],{"class":103},[23,6012,2909],{"class":469},[23,6014,472],{"class":87},[23,6016,2631],{"class":99},[23,6018,104],{"class":103},[23,6020,2664],{"class":107},[23,6022,6023],{"class":103},"())\n",[19,6025,6026],{},"这就允许我们去尝试是否可以删减一些 fetch 函数的参数，获得相同的结果。",[19,6028,6029],{},"如删除 headers 中的 User-Agent、删除 referer 等等，我最后精简了一些参数，fetch 函数长这个样子。",[58,6031,6033],{"className":60,"code":6032,"language":62,"meta":63,"style":63},"await fetch(\"http://www.gdjw.zjut.edu.cn/jwglxt/kbcx/xskbcx_cxXsgrkb.html?gnmkdm=N2151\", {\n    \"credentials\": \"include\",\n    \"headers\": {\n        \"Accept\": \"*/*\",\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n        \"X-Requested-With\": \"XMLHttpRequest\"\n    },\n    \"body\": \"xnm=2024&xqm=3&kzlx=ck&xsdm=\",\n    \"method\": \"POST\",\n    \"mode\": \"cors\"\n});\n",[65,6034,6035,6047,6057,6065,6075,6085,6093,6097,6107,6117,6125],{"__ignoreMap":63},[23,6036,6037,6039,6041,6043,6045],{"class":69,"line":70},[23,6038,4632],{"class":87},[23,6040,2639],{"class":107},[23,6042,111],{"class":103},[23,6044,5837],{"class":114},[23,6046,2832],{"class":103},[23,6048,6049,6051,6053,6055],{"class":69,"line":77},[23,6050,5844],{"class":114},[23,6052,2778],{"class":2777},[23,6054,5849],{"class":114},[23,6056,2784],{"class":103},[23,6058,6059,6061,6063],{"class":69,"line":84},[23,6060,5856],{"class":114},[23,6062,2778],{"class":2777},[23,6064,475],{"class":103},[23,6066,6067,6069,6071,6073],{"class":69,"line":121},[23,6068,5877],{"class":114},[23,6070,2778],{"class":2777},[23,6072,5882],{"class":114},[23,6074,2784],{"class":103},[23,6076,6077,6079,6081,6083],{"class":69,"line":142},[23,6078,5901],{"class":114},[23,6080,2778],{"class":2777},[23,6082,5906],{"class":114},[23,6084,2784],{"class":103},[23,6086,6087,6089,6091],{"class":69,"line":166},[23,6088,5913],{"class":114},[23,6090,2778],{"class":2777},[23,6092,5918],{"class":114},[23,6094,6095],{"class":69,"line":187},[23,6096,2980],{"class":103},[23,6098,6099,6101,6103,6105],{"class":69,"line":208},[23,6100,5939],{"class":114},[23,6102,2778],{"class":2777},[23,6104,5944],{"class":114},[23,6106,2784],{"class":103},[23,6108,6109,6111,6113,6115],{"class":69,"line":229},[23,6110,5951],{"class":114},[23,6112,2778],{"class":2777},[23,6114,2842],{"class":114},[23,6116,2784],{"class":103},[23,6118,6119,6121,6123],{"class":69,"line":251},[23,6120,5962],{"class":114},[23,6122,2778],{"class":2777},[23,6124,5967],{"class":114},[23,6126,6127],{"class":69,"line":273},[23,6128,5972],{"class":103},[19,6130,6131],{},"现在，将 fetch 函数自身和其执行后获取的结果复制下来保存到本地备用，我们就可以开始写代码了。",[29,6133,6134],{"id":6134},"安装依赖",[19,6136,6137],{},"在刚刚的压缩包解压出来的目录中，有一个叫 localTools 的文件夹，我们可以把它复制到自己的工作目录下，我们的代码工作主要就是在那里进行。",[19,6139,6140,6141,6144],{},"打开 VSCode，命令行运行 ",[65,6142,6143],{},"pnpm i"," 安装其运行时的依赖，顺便截图给你们看一眼目录结构。",[19,6146,6147],{},[417,6148],{"alt":63,"src":6149},"https://static.031130.xyz/uploads/2024/11/18/d8316deee7e50.webp",[29,6151,6153],{"id":6152},"编写-provider","编写 provider",[19,6155,6156,6157],{},"首先编写 ",[65,6158,6159],{},"code/provider.js",[19,6161,6162],{},"在这个文件中，我们需要执行 fetch 函数，return 其获取到的 json 数据。",[19,6164,6165,6166],{},"按照官方文档，先 ",[65,6167,6168],{},"loadTool",[58,6170,6172],{"className":60,"code":6171,"language":62,"meta":63,"style":63},"await loadTool('AIScheduleTools')\n",[65,6173,6174],{"__ignoreMap":63},[23,6175,6176,6178,6181,6183,6186],{"class":69,"line":70},[23,6177,4632],{"class":87},[23,6179,6180],{"class":107}," loadTool",[23,6182,111],{"class":103},[23,6184,6185],{"class":114},"'AIScheduleTools'",[23,6187,853],{"class":103},[19,6189,6190,6191,6194],{},"随后，我选择使用 ",[65,6192,6193],{},"AISchedulePrompt"," 这个小米封装的工具让用户手动输入需要导入课表的学年和学期信息，并对输入数据进行简单校验。",[58,6196,6198],{"className":60,"code":6197,"language":62,"meta":63,"style":63},"const year = await AISchedulePrompt({\n  titleText: '学年',\n  tipText: '请输入本学年开始的年份',\n  defaultText: '2024',\n  validator: value => {\n    try {\n      const v = parseInt(value)\n      if (v \u003C 2000 || v > 2100) {\n        return '请输入正确的学年'\n      }\n      return false\n    } catch (error) {\n      return '请输入正确的学年'\n    }\n  }\n})\n\nconst term = await AISchedulePrompt({\n  titleText: '学期',\n  tipText: '请输入本学期的学期(1,2,3 分别表示上、下、短学期)',\n  defaultText: '1',\n  validator: value => {\n    if (value === '1' || value === '2' || value === '3') {\n      return false\n    }\n    return '请输入正确的学期'\n  }\n})\n\nconst xqm = {\n  '1': '3',\n  '2': '12',\n  '3': '16',\n}[term]\n",[65,6199,6200,6217,6229,6241,6253,6266,6273,6291,6317,6324,6329,6336,6350,6356,6360,6364,6368,6372,6387,6398,6409,6420,6432,6464,6470,6474,6481,6485,6489,6493,6504,6515,6527,6539],{"__ignoreMap":63},[23,6201,6202,6204,6207,6209,6211,6214],{"class":69,"line":70},[23,6203,88],{"class":87},[23,6205,6206],{"class":91}," year",[23,6208,96],{"class":95},[23,6210,2636],{"class":87},[23,6212,6213],{"class":107}," AISchedulePrompt",[23,6215,6216],{"class":103},"({\n",[23,6218,6219,6222,6224,6227],{"class":69,"line":77},[23,6220,6221],{"class":129},"  titleText",[23,6223,2778],{"class":2777},[23,6225,6226],{"class":114}," '学年'",[23,6228,2784],{"class":103},[23,6230,6231,6234,6236,6239],{"class":69,"line":84},[23,6232,6233],{"class":129},"  tipText",[23,6235,2778],{"class":2777},[23,6237,6238],{"class":114}," '请输入本学年开始的年份'",[23,6240,2784],{"class":103},[23,6242,6243,6246,6248,6251],{"class":69,"line":121},[23,6244,6245],{"class":129},"  defaultText",[23,6247,2778],{"class":2777},[23,6249,6250],{"class":114}," '2024'",[23,6252,2784],{"class":103},[23,6254,6255,6258,6260,6262,6264],{"class":69,"line":142},[23,6256,6257],{"class":107},"  validator",[23,6259,2778],{"class":2777},[23,6261,923],{"class":469},[23,6263,472],{"class":87},[23,6265,475],{"class":103},[23,6267,6268,6271],{"class":69,"line":166},[23,6269,6270],{"class":87},"    try",[23,6272,475],{"class":103},[23,6274,6275,6278,6280,6282,6285,6287,6289],{"class":69,"line":187},[23,6276,6277],{"class":87},"      const",[23,6279,5045],{"class":91},[23,6281,96],{"class":95},[23,6283,6284],{"class":107}," parseInt",[23,6286,111],{"class":103},[23,6288,130],{"class":135},[23,6290,853],{"class":103},[23,6292,6293,6296,6298,6300,6302,6305,6308,6310,6312,6315],{"class":69,"line":208},[23,6294,6295],{"class":87},"      if",[23,6297,483],{"class":103},[23,6299,5072],{"class":135},[23,6301,1562],{"class":95},[23,6303,6304],{"class":160}," 2000",[23,6306,6307],{"class":95}," ||",[23,6309,5045],{"class":135},[23,6311,3184],{"class":95},[23,6313,6314],{"class":160}," 2100",[23,6316,505],{"class":103},[23,6318,6319,6321],{"class":69,"line":229},[23,6320,4719],{"class":87},[23,6322,6323],{"class":114}," '请输入正确的学年'\n",[23,6325,6326],{"class":69,"line":251},[23,6327,6328],{"class":103},"      }\n",[23,6330,6331,6333],{"class":69,"line":273},[23,6332,2963],{"class":87},[23,6334,6335],{"class":160}," false\n",[23,6337,6338,6341,6344,6346,6348],{"class":69,"line":278},[23,6339,6340],{"class":103},"    } ",[23,6342,6343],{"class":87},"catch",[23,6345,483],{"class":103},[23,6347,1576],{"class":135},[23,6349,505],{"class":103},[23,6351,6352,6354],{"class":69,"line":291},[23,6353,2963],{"class":87},[23,6355,6323],{"class":114},[23,6357,6358],{"class":69,"line":308},[23,6359,1902],{"class":103},[23,6361,6362],{"class":69,"line":686},[23,6363,739],{"class":103},[23,6365,6366],{"class":69,"line":691},[23,6367,4205],{"class":103},[23,6369,6370],{"class":69,"line":702},[23,6371,81],{"emptyLinePlaceholder":80},[23,6373,6374,6376,6379,6381,6383,6385],{"class":69,"line":717},[23,6375,88],{"class":87},[23,6377,6378],{"class":91}," term",[23,6380,96],{"class":95},[23,6382,2636],{"class":87},[23,6384,6213],{"class":107},[23,6386,6216],{"class":103},[23,6388,6389,6391,6393,6396],{"class":69,"line":736},[23,6390,6221],{"class":129},[23,6392,2778],{"class":2777},[23,6394,6395],{"class":114}," '学期'",[23,6397,2784],{"class":103},[23,6399,6400,6402,6404,6407],{"class":69,"line":3},[23,6401,6233],{"class":129},[23,6403,2778],{"class":2777},[23,6405,6406],{"class":114}," '请输入本学期的学期(1,2,3 分别表示上、下、短学期)'",[23,6408,2784],{"class":103},[23,6410,6411,6413,6415,6418],{"class":69,"line":3236},[23,6412,6245],{"class":129},[23,6414,2778],{"class":2777},[23,6416,6417],{"class":114}," '1'",[23,6419,2784],{"class":103},[23,6421,6422,6424,6426,6428,6430],{"class":69,"line":3246},[23,6423,6257],{"class":107},[23,6425,2778],{"class":2777},[23,6427,923],{"class":469},[23,6429,472],{"class":87},[23,6431,475],{"class":103},[23,6433,6434,6436,6438,6440,6442,6444,6446,6448,6450,6453,6455,6457,6459,6462],{"class":69,"line":3263},[23,6435,2672],{"class":87},[23,6437,483],{"class":103},[23,6439,130],{"class":135},[23,6441,4041],{"class":95},[23,6443,6417],{"class":114},[23,6445,6307],{"class":95},[23,6447,923],{"class":135},[23,6449,4041],{"class":95},[23,6451,6452],{"class":114}," '2'",[23,6454,6307],{"class":95},[23,6456,923],{"class":135},[23,6458,4041],{"class":95},[23,6460,6461],{"class":114}," '3'",[23,6463,505],{"class":103},[23,6465,6466,6468],{"class":69,"line":3268},[23,6467,2963],{"class":87},[23,6469,6335],{"class":160},[23,6471,6472],{"class":69,"line":3273},[23,6473,1902],{"class":103},[23,6475,6476,6478],{"class":69,"line":4478},[23,6477,2716],{"class":87},[23,6479,6480],{"class":114}," '请输入正确的学期'\n",[23,6482,6483],{"class":69,"line":4483},[23,6484,739],{"class":103},[23,6486,6487],{"class":69,"line":4488},[23,6488,4205],{"class":103},[23,6490,6491],{"class":69,"line":4493},[23,6492,81],{"emptyLinePlaceholder":80},[23,6494,6495,6497,6500,6502],{"class":69,"line":4498},[23,6496,88],{"class":87},[23,6498,6499],{"class":91}," xqm",[23,6501,96],{"class":95},[23,6503,475],{"class":103},[23,6505,6506,6509,6511,6513],{"class":69,"line":4504},[23,6507,6508],{"class":114},"  '1'",[23,6510,2778],{"class":2777},[23,6512,6461],{"class":114},[23,6514,2784],{"class":103},[23,6516,6517,6520,6522,6525],{"class":69,"line":4510},[23,6518,6519],{"class":114},"  '2'",[23,6521,2778],{"class":2777},[23,6523,6524],{"class":114}," '12'",[23,6526,2784],{"class":103},[23,6528,6529,6532,6534,6537],{"class":69,"line":4515},[23,6530,6531],{"class":114},"  '3'",[23,6533,2778],{"class":2777},[23,6535,6536],{"class":114}," '16'",[23,6538,2784],{"class":103},[23,6540,6541,6544,6547],{"class":69,"line":4529},[23,6542,6543],{"class":103},"}[",[23,6545,6546],{"class":135},"term",[23,6548,6549],{"class":103},"]\n",[19,6551,6552],{},"随后将学年和学期信息拼入 fetch 函数，打出请求，并将返回的 json 数据转为 string 作为函数的返回值",[58,6554,6556],{"className":60,"code":6555,"language":62,"meta":63,"style":63},"const res = await fetch(\"http://www.gdjw.zjut.edu.cn/jwglxt/kbcx/xskbcx_cxXsgrkb.html?gnmkdm=N2151\", {\n  \"headers\": {\n    \"accept\": \"*/*\",\n    \"content-type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\n    \"x-requested-with\": \"XMLHttpRequest\"\n  },\n  \"referrerPolicy\": \"strict-origin-when-cross-origin\",\n  \"body\": `xnm=${year}&xqm=${xqm}&kzlx=ck&xsdm=`,\n  \"method\": \"POST\",\n  \"mode\": \"cors\",\n  \"credentials\": \"include\"\n})\n\nconst ret = await res.json()\nreturn JSON.stringify(ret.kbList)\n",[65,6557,6558,6576,6585,6596,6608,6617,6622,6634,6666,6677,6689,6699,6703,6707,6726],{"__ignoreMap":63},[23,6559,6560,6562,6564,6566,6568,6570,6572,6574],{"class":69,"line":70},[23,6561,88],{"class":87},[23,6563,3719],{"class":91},[23,6565,96],{"class":95},[23,6567,2636],{"class":87},[23,6569,2639],{"class":107},[23,6571,111],{"class":103},[23,6573,5837],{"class":114},[23,6575,2832],{"class":103},[23,6577,6578,6581,6583],{"class":69,"line":77},[23,6579,6580],{"class":114},"  \"headers\"",[23,6582,2778],{"class":2777},[23,6584,475],{"class":103},[23,6586,6587,6590,6592,6594],{"class":69,"line":84},[23,6588,6589],{"class":114},"    \"accept\"",[23,6591,2778],{"class":2777},[23,6593,5882],{"class":114},[23,6595,2784],{"class":103},[23,6597,6598,6601,6603,6606],{"class":69,"line":121},[23,6599,6600],{"class":114},"    \"content-type\"",[23,6602,2778],{"class":2777},[23,6604,6605],{"class":114}," \"application/x-www-form-urlencoded;charset=UTF-8\"",[23,6607,2784],{"class":103},[23,6609,6610,6613,6615],{"class":69,"line":142},[23,6611,6612],{"class":114},"    \"x-requested-with\"",[23,6614,2778],{"class":2777},[23,6616,5918],{"class":114},[23,6618,6619],{"class":69,"line":166},[23,6620,6621],{"class":103},"  },\n",[23,6623,6624,6627,6629,6632],{"class":69,"line":187},[23,6625,6626],{"class":114},"  \"referrerPolicy\"",[23,6628,2778],{"class":2777},[23,6630,6631],{"class":114}," \"strict-origin-when-cross-origin\"",[23,6633,2784],{"class":103},[23,6635,6636,6639,6641,6644,6646,6649,6651,6654,6656,6659,6661,6664],{"class":69,"line":208},[23,6637,6638],{"class":114},"  \"body\"",[23,6640,2778],{"class":2777},[23,6642,6643],{"class":114}," `xnm=",[23,6645,3206],{"class":1257},[23,6647,6648],{"class":135},"year",[23,6650,1270],{"class":1257},[23,6652,6653],{"class":114},"&xqm=",[23,6655,3206],{"class":1257},[23,6657,6658],{"class":135},"xqm",[23,6660,1270],{"class":1257},[23,6662,6663],{"class":114},"&kzlx=ck&xsdm=`",[23,6665,2784],{"class":103},[23,6667,6668,6671,6673,6675],{"class":69,"line":229},[23,6669,6670],{"class":114},"  \"method\"",[23,6672,2778],{"class":2777},[23,6674,2842],{"class":114},[23,6676,2784],{"class":103},[23,6678,6679,6682,6684,6687],{"class":69,"line":251},[23,6680,6681],{"class":114},"  \"mode\"",[23,6683,2778],{"class":2777},[23,6685,6686],{"class":114}," \"cors\"",[23,6688,2784],{"class":103},[23,6690,6691,6694,6696],{"class":69,"line":273},[23,6692,6693],{"class":114},"  \"credentials\"",[23,6695,2778],{"class":2777},[23,6697,6698],{"class":114}," \"include\"\n",[23,6700,6701],{"class":69,"line":278},[23,6702,4205],{"class":103},[23,6704,6705],{"class":69,"line":291},[23,6706,81],{"emptyLinePlaceholder":80},[23,6708,6709,6711,6714,6716,6718,6720,6722,6724],{"class":69,"line":308},[23,6710,88],{"class":87},[23,6712,6713],{"class":91}," ret",[23,6715,96],{"class":95},[23,6717,2636],{"class":87},[23,6719,3719],{"class":99},[23,6721,104],{"class":103},[23,6723,2664],{"class":107},[23,6725,2667],{"class":103},[23,6727,6728,6731,6733,6735,6737,6739,6742,6744,6747],{"class":69,"line":686},[23,6729,6730],{"class":87},"return",[23,6732,2878],{"class":91},[23,6734,104],{"class":103},[23,6736,2883],{"class":107},[23,6738,111],{"class":103},[23,6740,6741],{"class":99},"ret",[23,6743,104],{"class":103},[23,6745,6746],{"class":129},"kbList",[23,6748,853],{"class":103},[19,6750,6751],{},"最外层使用 try-catch 做简单的异常处理，如果出错就让用户确认是否正确登陆了教务系统",[58,6753,6755],{"className":60,"code":6754,"language":62,"meta":63,"style":63},"async function scheduleHtmlProvider() {\n  await loadTool('AIScheduleTools')\n  try {\n    //...\n  } catch (error) {\n    await AIScheduleAlert('请确定你已经登陆了教务系统')\n    return 'do not continue'\n  }\n}\n",[65,6756,6757,6768,6781,6788,6793,6805,6819,6826,6830],{"__ignoreMap":63},[23,6758,6759,6761,6763,6766],{"class":69,"line":70},[23,6760,2510],{"class":87},[23,6762,2513],{"class":87},[23,6764,6765],{"class":107}," scheduleHtmlProvider",[23,6767,2519],{"class":103},[23,6769,6770,6773,6775,6777,6779],{"class":69,"line":77},[23,6771,6772],{"class":87},"  await",[23,6774,6180],{"class":107},[23,6776,111],{"class":103},[23,6778,6185],{"class":114},[23,6780,853],{"class":103},[23,6782,6783,6786],{"class":69,"line":84},[23,6784,6785],{"class":87},"  try",[23,6787,475],{"class":103},[23,6789,6790],{"class":69,"line":121},[23,6791,6792],{"class":73},"    //...\n",[23,6794,6795,6797,6799,6801,6803],{"class":69,"line":142},[23,6796,533],{"class":103},[23,6798,6343],{"class":87},[23,6800,483],{"class":103},[23,6802,1576],{"class":135},[23,6804,505],{"class":103},[23,6806,6807,6809,6812,6814,6817],{"class":69,"line":166},[23,6808,510],{"class":87},[23,6810,6811],{"class":107}," AIScheduleAlert",[23,6813,111],{"class":103},[23,6815,6816],{"class":114},"'请确定你已经登陆了教务系统'",[23,6818,853],{"class":103},[23,6820,6821,6823],{"class":69,"line":187},[23,6822,2716],{"class":87},[23,6824,6825],{"class":114}," 'do not continue'\n",[23,6827,6828],{"class":69,"line":208},[23,6829,739],{"class":103},[23,6831,6832],{"class":69,"line":229},[23,6833,1629],{"class":103},[29,6835,6837],{"id":6836},"编写-parser","编写 parser",[19,6839,6840],{},"官方文档对 parser 函数做了明确的规范，格式如下",[58,6842,6845],{"className":6843,"code":6844,"language":2664,"meta":63,"style":63},"language-json shiki shiki-themes one-light one-dark-pro","[\n  {\n    name: \"数学\", // 课程名称\n    position: \"教学楼1\", // 上课地点\n    teacher: \"张三\", // 教师名称\n    weeks: [1, 2, 3, 4], // 周数\n    day: 3, // 星期\n    sections: [1, 2, 3], // 节次\n  },{\n    name: \"数学\",\n    position: \"教学楼1\",\n    teacher: \"张三\",\n    weeks: [1, 2, 3, 4],\n    day: 1,\n    sections: [1, 2, 3],\n  },\n]\n",[65,6846,6847,6852,6857,6873,6888,6903,6935,6949,6971,6976,6986,6996,7006,7029,7039,7057,7061],{"__ignoreMap":63},[23,6848,6849],{"class":69,"line":70},[23,6850,6851],{"class":103},"[\n",[23,6853,6854],{"class":69,"line":77},[23,6855,6856],{"class":103},"  {\n",[23,6858,6859,6862,6865,6868,6870],{"class":69,"line":84},[23,6860,6861],{"class":1162},"    name",[23,6863,6864],{"class":103},": ",[23,6866,6867],{"class":114},"\"数学\"",[23,6869,244],{"class":103},[23,6871,6872],{"class":73},"// 课程名称\n",[23,6874,6875,6878,6880,6883,6885],{"class":69,"line":121},[23,6876,6877],{"class":1162},"    position",[23,6879,6864],{"class":103},[23,6881,6882],{"class":114},"\"教学楼1\"",[23,6884,244],{"class":103},[23,6886,6887],{"class":73},"// 上课地点\n",[23,6889,6890,6893,6895,6898,6900],{"class":69,"line":142},[23,6891,6892],{"class":1162},"    teacher",[23,6894,6864],{"class":103},[23,6896,6897],{"class":114},"\"张三\"",[23,6899,244],{"class":103},[23,6901,6902],{"class":73},"// 教师名称\n",[23,6904,6905,6908,6911,6914,6916,6919,6921,6924,6926,6929,6932],{"class":69,"line":166},[23,6906,6907],{"class":1162},"    weeks",[23,6909,6910],{"class":103},": [",[23,6912,6913],{"class":160},"1",[23,6915,244],{"class":103},[23,6917,6918],{"class":160},"2",[23,6920,244],{"class":103},[23,6922,6923],{"class":160},"3",[23,6925,244],{"class":103},[23,6927,6928],{"class":160},"4",[23,6930,6931],{"class":103},"], ",[23,6933,6934],{"class":73},"// 周数\n",[23,6936,6937,6940,6942,6944,6946],{"class":69,"line":187},[23,6938,6939],{"class":1162},"    day",[23,6941,6864],{"class":103},[23,6943,6923],{"class":160},[23,6945,244],{"class":103},[23,6947,6948],{"class":73},"// 星期\n",[23,6950,6951,6954,6956,6958,6960,6962,6964,6966,6968],{"class":69,"line":208},[23,6952,6953],{"class":1162},"    sections",[23,6955,6910],{"class":103},[23,6957,6913],{"class":160},[23,6959,244],{"class":103},[23,6961,6918],{"class":160},[23,6963,244],{"class":103},[23,6965,6923],{"class":160},[23,6967,6931],{"class":103},[23,6969,6970],{"class":73},"// 节次\n",[23,6972,6973],{"class":69,"line":229},[23,6974,6975],{"class":103},"  },{\n",[23,6977,6978,6980,6982,6984],{"class":69,"line":251},[23,6979,6861],{"class":1162},[23,6981,6864],{"class":103},[23,6983,6867],{"class":114},[23,6985,2784],{"class":103},[23,6987,6988,6990,6992,6994],{"class":69,"line":273},[23,6989,6877],{"class":1162},[23,6991,6864],{"class":103},[23,6993,6882],{"class":114},[23,6995,2784],{"class":103},[23,6997,6998,7000,7002,7004],{"class":69,"line":278},[23,6999,6892],{"class":1162},[23,7001,6864],{"class":103},[23,7003,6897],{"class":114},[23,7005,2784],{"class":103},[23,7007,7008,7010,7012,7014,7016,7018,7020,7022,7024,7026],{"class":69,"line":291},[23,7009,6907],{"class":1162},[23,7011,6910],{"class":103},[23,7013,6913],{"class":160},[23,7015,244],{"class":103},[23,7017,6918],{"class":160},[23,7019,244],{"class":103},[23,7021,6923],{"class":160},[23,7023,244],{"class":103},[23,7025,6928],{"class":160},[23,7027,7028],{"class":103},"],\n",[23,7030,7031,7033,7035,7037],{"class":69,"line":308},[23,7032,6939],{"class":1162},[23,7034,6864],{"class":103},[23,7036,6913],{"class":160},[23,7038,2784],{"class":103},[23,7040,7041,7043,7045,7047,7049,7051,7053,7055],{"class":69,"line":686},[23,7042,6953],{"class":1162},[23,7044,6910],{"class":103},[23,7046,6913],{"class":160},[23,7048,244],{"class":103},[23,7050,6918],{"class":160},[23,7052,244],{"class":103},[23,7054,6923],{"class":160},[23,7056,7028],{"class":103},[23,7058,7059],{"class":69,"line":691},[23,7060,6621],{"class":103},[23,7062,7063],{"class":69,"line":702},[23,7064,6549],{"class":103},[19,7066,7067],{},"最外层是一个 array，里面包含若干个 object，每个 object 表示一节课",[1945,7069,7070,7077,7082,7087,7097,7107],{},[19,7071,7072,7073,7076],{},"课程名称：",[65,7074,7075],{},"String"," 长度50字节（一汉字两字节）",[19,7078,7079,7080,7076],{},"上课地点：",[65,7081,7075],{},[19,7083,7084,7085,7076],{},"教师名称：",[65,7086,7075],{},[19,7088,7089,7090,402,7093,7096],{},"周数：",[65,7091,7092],{},"Number[]",[23,7094,7095],{},"1，30"," 之间的整数 超出会被裁掉",[19,7098,7099,7100,402,7103,7106],{},"星期：",[65,7101,7102],{},"Number",[23,7104,7105],{},"1，7"," 之间的整数",[19,7108,7109,7110,402,7112,7114,7115,7118],{},"节次：",[65,7111,7102],{},[23,7113,7095],{}," 之间的整数 (默认",[23,7116,7117],{},"1，12",") 根据后续时间设置自动裁剪",[19,7120,7121],{},"（只有这节课的星期几、上课地点、上课时间都一致才算一节课。比如我一周上两节算法课，周一 34 节和周三 56，那么这应该分成两个 object 来写）",[19,7123,7124,7125,7128],{},"这部分代码没什么好说的，就是对 ",[65,7126,7127],{},"provider"," 传过来的 string 用 js 做字符串解析，最后把整个 array 作为返回值返回就行，需要注意处理数组越界、空数组等等的低级错误。",[19,7130,7131],{},"第一步是将刚才的字符串转成 json 格式（如果你采用的是解析 html 的方式，请参考官方文档）",[58,7133,7135],{"className":60,"code":7134,"language":62,"meta":63,"style":63},"function scheduleHtmlParser(json_str) {\n  courses_json = JSON.parse(json_str)\n  const courseInfos = []\n\n  //...\n  \n  return courseInfos\n}\n",[65,7136,7137,7151,7171,7183,7187,7192,7197,7204],{"__ignoreMap":63},[23,7138,7139,7141,7144,7146,7149],{"class":69,"line":70},[23,7140,4518],{"class":87},[23,7142,7143],{"class":107}," scheduleHtmlParser",[23,7145,111],{"class":103},[23,7147,7148],{"class":469},"json_str",[23,7150,505],{"class":103},[23,7152,7153,7156,7158,7160,7162,7165,7167,7169],{"class":69,"line":77},[23,7154,7155],{"class":135},"  courses_json",[23,7157,96],{"class":95},[23,7159,2878],{"class":91},[23,7161,104],{"class":103},[23,7163,7164],{"class":107},"parse",[23,7166,111],{"class":103},[23,7168,7148],{"class":135},[23,7170,853],{"class":103},[23,7172,7173,7175,7178,7180],{"class":69,"line":84},[23,7174,1371],{"class":87},[23,7176,7177],{"class":91}," courseInfos",[23,7179,96],{"class":95},[23,7181,7182],{"class":103}," []\n",[23,7184,7185],{"class":69,"line":121},[23,7186,81],{"emptyLinePlaceholder":80},[23,7188,7189],{"class":69,"line":142},[23,7190,7191],{"class":73},"  //...\n",[23,7193,7194],{"class":69,"line":166},[23,7195,7196],{"class":103},"  \n",[23,7198,7199,7201],{"class":69,"line":187},[23,7200,1434],{"class":87},[23,7202,7203],{"class":135}," courseInfos\n",[23,7205,7206],{"class":69,"line":208},[23,7207,1629],{"class":103},[19,7209,7210],{},"如果需要一个临时的测试方案，可以用以下的测试结构",[58,7212,7214],{"className":60,"code":7213,"language":62,"meta":63,"style":63},"function scheduleHtmlParser(json_str) {\n  courses_json = JSON.parse(json_str)\n  const courseInfos = []\n\n  //...\n  \n  return courseInfos\n}\n\ninput_text = `\n// 这里是我在上文中复制的 fetch 函数输出的 json 结果\n`\n\nconsole.log(scheduleHtmlParser(input_text))\n",[65,7215,7216,7228,7246,7256,7260,7264,7268,7274,7278,7282,7292,7297,7302,7306],{"__ignoreMap":63},[23,7217,7218,7220,7222,7224,7226],{"class":69,"line":70},[23,7219,4518],{"class":87},[23,7221,7143],{"class":107},[23,7223,111],{"class":103},[23,7225,7148],{"class":469},[23,7227,505],{"class":103},[23,7229,7230,7232,7234,7236,7238,7240,7242,7244],{"class":69,"line":77},[23,7231,7155],{"class":135},[23,7233,96],{"class":95},[23,7235,2878],{"class":91},[23,7237,104],{"class":103},[23,7239,7164],{"class":107},[23,7241,111],{"class":103},[23,7243,7148],{"class":135},[23,7245,853],{"class":103},[23,7247,7248,7250,7252,7254],{"class":69,"line":84},[23,7249,1371],{"class":87},[23,7251,7177],{"class":91},[23,7253,96],{"class":95},[23,7255,7182],{"class":103},[23,7257,7258],{"class":69,"line":121},[23,7259,81],{"emptyLinePlaceholder":80},[23,7261,7262],{"class":69,"line":142},[23,7263,7191],{"class":73},[23,7265,7266],{"class":69,"line":166},[23,7267,7196],{"class":103},[23,7269,7270,7272],{"class":69,"line":187},[23,7271,1434],{"class":87},[23,7273,7203],{"class":135},[23,7275,7276],{"class":69,"line":208},[23,7277,1629],{"class":103},[23,7279,7280],{"class":69,"line":229},[23,7281,81],{"emptyLinePlaceholder":80},[23,7283,7284,7287,7289],{"class":69,"line":251},[23,7285,7286],{"class":135},"input_text",[23,7288,96],{"class":95},[23,7290,7291],{"class":114}," `\n",[23,7293,7294],{"class":69,"line":273},[23,7295,7296],{"class":114},"// 这里是我在上文中复制的 fetch 函数输出的 json 结果\n",[23,7298,7299],{"class":69,"line":278},[23,7300,7301],{"class":114},"`\n",[23,7303,7304],{"class":69,"line":291},[23,7305,81],{"emptyLinePlaceholder":80},[23,7307,7308,7311,7313,7315,7317,7320,7322,7324],{"class":69,"line":308},[23,7309,7310],{"class":99},"console",[23,7312,104],{"class":103},[23,7314,2904],{"class":107},[23,7316,111],{"class":103},[23,7318,7319],{"class":107},"scheduleHtmlParser",[23,7321,111],{"class":103},[23,7323,7286],{"class":135},[23,7325,4067],{"class":103},[19,7327,7328,7329,7332],{},"执行 ",[65,7330,7331],{},"node code/parser.js"," ，观察输出结果是否和官方要求的结构严格一致。",[29,7334,7336],{"id":7335},"编写-timer","编写 timer",[19,7338,7339,7342,7343,7345],{},[65,7340,7341],{},"timer"," 函数的运行环境和 ",[65,7344,7127],{}," 一致，都允许你使用 fetch 向教务系统打请求，或者解析页面的 html 函数，但我们学校的教务系统一不写第一周的周一是几号，二不写每节课具体的上下课时间，所以我把我校的相关数据都进行了硬编码，这里直接放个官方文档的示例文件。",[58,7347,7349],{"className":60,"code":7348,"language":62,"meta":63,"style":63},"/**\n * 时间配置函数，此为入口函数，不要改动函数名\n */\nasync function scheduleTimer({\n  providerRes,\n  parserRes\n} = {}) {\n  // 支持异步操作 推荐await写法\n\n  // 这是一个示例函数，用于演示，正常用不到可以删掉\n  const someAsyncFunc = () => new Promise(resolve => {\n    setTimeout(() => resolve(), 1)\n  })\n  await someAsyncFunc()\n\n  // 这个函数中也支持使用 AIScheduleTools 譬如给出多条时间配置让用户选择之类的\n\n  // 返回时间配置JSON，所有项都为可选项，如果不进行时间配置，请返回空对象\n  return {\n    totalWeek: 20, // 总周数：[1, 30]之间的整数\n    startSemester: '', // 开学时间：时间戳，13位长度字符串，推荐用代码生成\n    startWithSunday: false, // 是否是周日为起始日，该选项为true时，会开启显示周末选项\n    showWeekend: false, // 是否显示周末\n    forenoon: 1, // 上午课程节数：[1, 10]之间的整数\n    afternoon: 0, // 下午课程节数：[0, 10]之间的整数\n    night: 0, // 晚间课程节数：[0, 10]之间的整数\n    sections: [{\n      section: 1, // 节次：[1, 30]之间的整数\n      startTime: '08:00', // 开始时间：参照这个标准格式5位长度字符串\n      endTime: '08:50', // 结束时间：同上\n    }], // 课程时间表，注意：总长度要和上边配置的节数加和对齐\n  }\n  // PS: 夏令时什么的还是让用户在夏令时的时候重新导入一遍吧，在这个函数里边适配吧！奥里给！————不愿意透露姓名的嘤某人\n}\n",[65,7350,7351,7355,7360,7364,7375,7382,7387,7397,7402,7406,7411,7437,7457,7462,7470,7474,7479,7483,7488,7494,7509,7524,7539,7553,7568,7582,7596,7605,7619,7634,7649,7657,7661,7666],{"__ignoreMap":63},[23,7352,7353],{"class":69,"line":70},[23,7354,4221],{"class":73},[23,7356,7357],{"class":69,"line":77},[23,7358,7359],{"class":73}," * 时间配置函数，此为入口函数，不要改动函数名\n",[23,7361,7362],{"class":69,"line":84},[23,7363,4236],{"class":73},[23,7365,7366,7368,7370,7373],{"class":69,"line":121},[23,7367,2510],{"class":87},[23,7369,2513],{"class":87},[23,7371,7372],{"class":107}," scheduleTimer",[23,7374,6216],{"class":103},[23,7376,7377,7380],{"class":69,"line":142},[23,7378,7379],{"class":469},"  providerRes",[23,7381,2784],{"class":103},[23,7383,7384],{"class":69,"line":166},[23,7385,7386],{"class":469},"  parserRes\n",[23,7388,7389,7392,7394],{"class":69,"line":187},[23,7390,7391],{"class":103},"} ",[23,7393,917],{"class":95},[23,7395,7396],{"class":103}," {}) {\n",[23,7398,7399],{"class":69,"line":208},[23,7400,7401],{"class":73},"  // 支持异步操作 推荐await写法\n",[23,7403,7404],{"class":69,"line":229},[23,7405,81],{"emptyLinePlaceholder":80},[23,7407,7408],{"class":69,"line":251},[23,7409,7410],{"class":73},"  // 这是一个示例函数，用于演示，正常用不到可以删掉\n",[23,7412,7413,7415,7418,7420,7422,7424,7426,7428,7430,7433,7435],{"class":69,"line":273},[23,7414,1371],{"class":87},[23,7416,7417],{"class":107}," someAsyncFunc",[23,7419,96],{"class":95},[23,7421,1361],{"class":103},[23,7423,1364],{"class":87},[23,7425,2563],{"class":87},[23,7427,4854],{"class":4853},[23,7429,111],{"class":103},[23,7431,7432],{"class":469},"resolve",[23,7434,472],{"class":87},[23,7436,475],{"class":103},[23,7438,7439,7442,7445,7447,7450,7453,7455],{"class":69,"line":278},[23,7440,7441],{"class":107},"    setTimeout",[23,7443,7444],{"class":103},"(() ",[23,7446,1364],{"class":87},[23,7448,7449],{"class":107}," resolve",[23,7451,7452],{"class":103},"(), ",[23,7454,6913],{"class":160},[23,7456,853],{"class":103},[23,7458,7459],{"class":69,"line":291},[23,7460,7461],{"class":103},"  })\n",[23,7463,7464,7466,7468],{"class":69,"line":308},[23,7465,6772],{"class":87},[23,7467,7417],{"class":107},[23,7469,2667],{"class":103},[23,7471,7472],{"class":69,"line":686},[23,7473,81],{"emptyLinePlaceholder":80},[23,7475,7476],{"class":69,"line":691},[23,7477,7478],{"class":73},"  // 这个函数中也支持使用 AIScheduleTools 譬如给出多条时间配置让用户选择之类的\n",[23,7480,7481],{"class":69,"line":702},[23,7482,81],{"emptyLinePlaceholder":80},[23,7484,7485],{"class":69,"line":717},[23,7486,7487],{"class":73},"  // 返回时间配置JSON，所有项都为可选项，如果不进行时间配置，请返回空对象\n",[23,7489,7490,7492],{"class":69,"line":736},[23,7491,1434],{"class":87},[23,7493,475],{"class":103},[23,7495,7496,7499,7501,7504,7506],{"class":69,"line":3},[23,7497,7498],{"class":129},"    totalWeek",[23,7500,2778],{"class":2777},[23,7502,7503],{"class":160}," 20",[23,7505,244],{"class":103},[23,7507,7508],{"class":73},"// 总周数：[1, 30]之间的整数\n",[23,7510,7511,7514,7516,7519,7521],{"class":69,"line":3236},[23,7512,7513],{"class":129},"    startSemester",[23,7515,2778],{"class":2777},[23,7517,7518],{"class":114}," ''",[23,7520,244],{"class":103},[23,7522,7523],{"class":73},"// 开学时间：时间戳，13位长度字符串，推荐用代码生成\n",[23,7525,7526,7529,7531,7534,7536],{"class":69,"line":3246},[23,7527,7528],{"class":129},"    startWithSunday",[23,7530,2778],{"class":2777},[23,7532,7533],{"class":160}," false",[23,7535,244],{"class":103},[23,7537,7538],{"class":73},"// 是否是周日为起始日，该选项为true时，会开启显示周末选项\n",[23,7540,7541,7544,7546,7548,7550],{"class":69,"line":3263},[23,7542,7543],{"class":129},"    showWeekend",[23,7545,2778],{"class":2777},[23,7547,7533],{"class":160},[23,7549,244],{"class":103},[23,7551,7552],{"class":73},"// 是否显示周末\n",[23,7554,7555,7558,7560,7563,7565],{"class":69,"line":3268},[23,7556,7557],{"class":129},"    forenoon",[23,7559,2778],{"class":2777},[23,7561,7562],{"class":160}," 1",[23,7564,244],{"class":103},[23,7566,7567],{"class":73},"// 上午课程节数：[1, 10]之间的整数\n",[23,7569,7570,7573,7575,7577,7579],{"class":69,"line":3273},[23,7571,7572],{"class":129},"    afternoon",[23,7574,2778],{"class":2777},[23,7576,161],{"class":160},[23,7578,244],{"class":103},[23,7580,7581],{"class":73},"// 下午课程节数：[0, 10]之间的整数\n",[23,7583,7584,7587,7589,7591,7593],{"class":69,"line":4478},[23,7585,7586],{"class":129},"    night",[23,7588,2778],{"class":2777},[23,7590,161],{"class":160},[23,7592,244],{"class":103},[23,7594,7595],{"class":73},"// 晚间课程节数：[0, 10]之间的整数\n",[23,7597,7598,7600,7602],{"class":69,"line":4483},[23,7599,6953],{"class":129},[23,7601,2778],{"class":2777},[23,7603,7604],{"class":103}," [{\n",[23,7606,7607,7610,7612,7614,7616],{"class":69,"line":4488},[23,7608,7609],{"class":129},"      section",[23,7611,2778],{"class":2777},[23,7613,7562],{"class":160},[23,7615,244],{"class":103},[23,7617,7618],{"class":73},"// 节次：[1, 30]之间的整数\n",[23,7620,7621,7624,7626,7629,7631],{"class":69,"line":4493},[23,7622,7623],{"class":129},"      startTime",[23,7625,2778],{"class":2777},[23,7627,7628],{"class":114}," '08:00'",[23,7630,244],{"class":103},[23,7632,7633],{"class":73},"// 开始时间：参照这个标准格式5位长度字符串\n",[23,7635,7636,7639,7641,7644,7646],{"class":69,"line":4498},[23,7637,7638],{"class":129},"      endTime",[23,7640,2778],{"class":2777},[23,7642,7643],{"class":114}," '08:50'",[23,7645,244],{"class":103},[23,7647,7648],{"class":73},"// 结束时间：同上\n",[23,7650,7651,7654],{"class":69,"line":4504},[23,7652,7653],{"class":103},"    }], ",[23,7655,7656],{"class":73},"// 课程时间表，注意：总长度要和上边配置的节数加和对齐\n",[23,7658,7659],{"class":69,"line":4510},[23,7660,739],{"class":103},[23,7662,7663],{"class":69,"line":4515},[23,7664,7665],{"class":73},"  // PS: 夏令时什么的还是让用户在夏令时的时候重新导入一遍吧，在这个函数里边适配吧！奥里给！————不愿意透露姓名的嘤某人\n",[23,7667,7668],{"class":69,"line":4529},[23,7669,1629],{"class":103},[29,7671,7672],{"id":7672},"调试阶段",[19,7674,7675,7676,7679],{},"运行 ",[65,7677,7678],{},"pnpm main"," 能调起一个临时的服务器和浏览器插件进行互动，将编辑器的代码实时同步到浏览器插件。",[19,7681,7682],{},"在浏览器插件中，先创建一个新项目",[19,7684,7685],{},[417,7686],{"alt":63,"src":7687},"https://static.031130.xyz/uploads/2024/11/18/d1ebba67ddc83.webp",[19,7689,7690],{},"保存后再次打开，选择「编写代码」按钮",[19,7692,7693],{},[417,7694],{"alt":63,"src":7695},"https://static.031130.xyz/uploads/2024/11/18/e697bcf2a7a1f.webp",[19,7697,7698],{},"检查自己的代码是不是被实时同步到了浏览器插件中，然后可以点击右上角的「本地测试」按钮",[19,7700,7701],{},[417,7702],{"alt":63,"src":7703},"https://static.031130.xyz/uploads/2024/11/18/eb563904a64a1.webp",[19,7705,7706],{},"如果本机测试出现了问题，可以使用 console.log 语句进行 debug ，问题可能会出现在 F12 开发者工具的控制台，也可能会出现在 vscode 的终端中。确认本机测试无问题后，点击右上角蓝色的「上传」按钮，就可以在上传到云端，在登陆了自己小米账号的手机中找到自己适配的教务导入测试项目，顺利完成导入后给自己的满意度打满分，就可以在浏览器插件中点击上传审核，审核通过后你的适配工作就会公开啦。",[150,7708,7709],{},"html pre.shiki code .sLKXg, html code.shiki .sLKXg{--shiki-default:#A626A4;--shiki-dark:#C678DD}html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .st7oF, html code.shiki .st7oF{--shiki-default:#0184BC;--shiki-dark:#ABB2BF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .s8iYz, html code.shiki .s8iYz{--shiki-default:#383A42;--shiki-default-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic}html pre.shiki code .s7GmK, html code.shiki .s7GmK{--shiki-default:#383A42;--shiki-dark:#E5C07B}html pre.shiki code .sNmU0, html code.shiki .sNmU0{--shiki-default:#986801;--shiki-dark:#E5C07B}html pre.shiki code .s_Sar, html code.shiki .s_Sar{--shiki-default:#0184BC;--shiki-dark:#56B6C2}html pre.shiki code .sJa8x, html code.shiki .sJa8x{--shiki-default:#E45649;--shiki-dark:#E06C75}html pre.shiki code .sz0mV, html code.shiki .sz0mV{--shiki-default:#383A42;--shiki-dark:#E06C75}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}html pre.shiki code .sAOjX, html code.shiki .sAOjX{--shiki-default:#CA1243;--shiki-dark:#C678DD}html pre.shiki code .sW2Sy, html code.shiki .sW2Sy{--shiki-default:#A0A1A7;--shiki-default-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic}html pre.shiki code .sUNH4, html code.shiki .sUNH4{--shiki-default:white;--shiki-dark:#FFFFFF}html pre.shiki code .sC09Y, html code.shiki .sC09Y{--shiki-default:#C18401;--shiki-dark:#E5C07B}",{"title":63,"searchDepth":77,"depth":77,"links":7711},[7712,7713,7714],{"id":5664,"depth":77,"text":5664},{"id":5692,"depth":77,"text":5692},{"id":5741,"depth":77,"text":5741,"children":7715},[7716,7717,7718,7719,7720,7721,7722,7723],{"id":5744,"depth":84,"text":5744},{"id":5778,"depth":84,"text":5778},{"id":5809,"depth":84,"text":5810},{"id":6134,"depth":84,"text":6134},{"id":6152,"depth":84,"text":6153},{"id":6836,"depth":84,"text":6837},{"id":7335,"depth":84,"text":7336},{"id":7672,"depth":84,"text":7672},{"title":7725,"date":7726,"path":7727,"tags":7728,"body":7732},"将博客从 waline v2 更新到 waline v3","2024-11-15 23:49:43","/2024/11/15/upgrade-waline-from-v2-to-v3",[7729,7730,7731],"Python","waline","Hexo",{"type":12,"value":7733,"toc":8019},[7734,7739,7746,7763,7767,7770,7776,7781,7789,7805,7813,7816,7822,7826,7829,7834,7843,7848,7851,7854,7859,7862,7865,7870,7873,7876,7890,7893,7900,7907,7914,7917,7999,8006,8011,8016],[1945,7735,7736],{},[19,7737,7738],{},"waline 更新到 V3 版本已经是九个月前的事情了，眼瞅着 hexo fluid 主题并没有带我更新的意思，我就打算自己更新到最新版，结果遇到了两个坑，写文供大家参考。",[19,7740,7741,7742,7745],{},"在 Hexo 目录下的 ",[65,7743,7744],{},"_config.fluid.yml"," 文件中找到 waline 的 cdn，将版本号指向最新版。",[58,7747,7751],{"className":7748,"code":7749,"language":7750,"meta":63,"style":63},"language-diff shiki shiki-themes one-light one-dark-pro","-  waline: https://registry.npmmirror.com/@waline/client/2.15.8/files/dist/\n+  waline: https://registry.npmmirror.com/@waline/client/^3/files/dist/\n","diff",[65,7752,7753,7758],{"__ignoreMap":63},[23,7754,7755],{"class":69,"line":70},[23,7756,7757],{},"-  waline: https://registry.npmmirror.com/@waline/client/2.15.8/files/dist/\n",[23,7759,7760],{"class":69,"line":77},[23,7761,7762],{},"+  waline: https://registry.npmmirror.com/@waline/client/^3/files/dist/\n",[15,7764,7766],{"id":7765},"插曲一waline-不加载","插曲一——waline 不加载",[19,7768,7769],{},"再次部署博客，我遇到了第一个坑：waline 没有在页面上正常加载。",[19,7771,7772,7773],{},"打开控制台一看，报错给得很明白：",[65,7774,7775],{},"Waline is not defined",[19,7777,7778],{},[417,7779],{"alt":63,"src":7780},"https://static.031130.xyz/uploads/2024/11/16/663e910db29b7.webp",[19,7782,7783,7784,2485],{},"根据 ",[33,7785,7788],{"href":7786,"rel":7787},"https://github.com/walinejs/waline/issues/2483",[37],"issue#2483",[1945,7790,7791,7798],{},[19,7792,7793,7797],{},[33,7794,7795],{"href":7795,"rel":7796},"https://unpkg.com/@waline/client@3.1.3/dist/waline.umd.js",[37]," 用这个地址",[19,7799,7800,7801,7804],{},"本质是 ...... 没有使用 ES Module 的加载方式 ",[65,7802,7803],{},"\u003Cscript type=\"module\">","，所以需要使用 UMD 的模块",[19,7806,7807,7808],{},"那么按照正常的脑回路，我们应该修改主题中的引入 waline 部分的 js 文件，把针对 waline.js 的引用改成 waline.umd.js，具体的修改处",[33,7809,7812],{"href":7810,"rel":7811},"https://github.com/fluid-dev/hexo-theme-fluid/blob/94049b2e6da5ae865f5cf7088f0c53917a6dc8bc/layout/_partials/comments/waline.ejs#L5-L6",[37],"在这里",[19,7814,7815],{},"但是，我是使用 npm 安装的主题，方便在主题更新时直接同步上游的更改，如果使用这种修改源文件引用的方式将会导致我不得不放弃原有的主题安装方式，改用下载主题源码的方式。",[19,7817,7818,7819,7821],{},"那么有没有办法，既能够成功加载带 umd 的 js，又不用改动主题源码呢？还真有，我自己部署 cdn 就好了。从 npmjs 下载带 umd 的 waline.umd.js，重命名成 waline.js，和 waline.css 一起放在同一路径下，在把自己的 cdn 链接前缀填入 ",[65,7820,7744],{}," 中，就可以实现移花接木——表面上访问的是 waline.js，实际上内容是 waline.umd.js 。",[15,7823,7825],{"id":7824},"插曲二重复显示的","插曲二——重复显示的 @",[19,7827,7828],{},"更新到 v3 版本以后，我发现所有的评论都出现了重复两遍的 @",[19,7830,7831],{},[417,7832],{"alt":63,"src":7833},"https://static.031130.xyz/uploads/2024/11/16/f6fbaa99a784e.webp",[19,7835,7836,7837,7842],{},"我去群里提问，管理员 ",[33,7838,7841],{"href":7839,"rel":7840},"https://imnerd.org/",[37],"li zheming"," 给出了这样的答复:",[1945,7844,7845],{},[19,7846,7847],{},"这个是 feature 了，早版本 @ 是渲染在评论内容里的，这块后来重构了下，@ 是 Waline 自己渲染了。不过历史数据我们并没有处理，所以会出现这种情况。如果比较介意的话可以手动去数据库里删除下。",[19,7849,7850],{},"那么很显然，我很介意这点，我需要删除数据库中的 @ 信息。",[19,7852,7853],{},"打开 waline 的后台管理站点，我发现我有整整 30 页的评论——很显然我是 waline 的牢用户了，我不太可能一个一个手动去掉评论中的 @",[19,7855,7856],{},[417,7857],{"alt":63,"src":7858},"https://static.031130.xyz/uploads/2024/11/16/c4487502542e5.webp",[19,7860,7861],{},"我的 waline 数据库是 leancloud，对方的 webui 没办法帮助我批量去除 html 或者 markdown 形式的内容（就算对方支持 sql 语句，处理这个问题都够呛），我需要一个脚本来直接处理数据库中的信息。",[19,7863,7864],{},"首先，我们需要导出数据库数据，自然是登陆 leancloud，然后找到 数据存储 - 导入导出 - 数据导出，选择 Comment 单个 Class，单击导出按钮。",[19,7866,7867],{},[417,7868],{"alt":63,"src":7869},"https://static.031130.xyz/uploads/2024/11/16/d2cd564739120.webp",[19,7871,7872],{},"err，我寻思凌晨 1 点应该是 16 点前吧，怎么导出不了，而我昨晚 23 点反而可以导出，leancloud 到底是哪门子时区。所以我直接拿了 23 点时导出的数据进行处理。",[19,7874,7875],{},"leancloud 导出的数据是 jsonl 格式的，我们对需要去除的 @ 信息进行归纳总结，发现一共有两种 @ 的渲染方式",[1716,7877,7878,7884],{},[373,7879,7880,7883],{},[65,7881,7882],{},"\u003Ca class=\"at\" href=\"#id\">@username\u003C/a>","  的 html 风格（有时 class 和 href 顺序还会反过来）",[373,7885,7886,7889],{},[65,7887,7888],{},"[@username](#id)"," 的 markdown 风格",[19,7891,7892],{},"而 html 风格还有两种结尾方式，",[19,7894,7895,7896,7899],{},"一种是如 ",[65,7897,7898],{},"\u003Ca class=\"at\" href=\"#id\">@username\u003C/a> , "," 这样以 空格 + 半角逗号 + 空格 结尾的形式，",[19,7901,7902,7903,7906],{},"令一种是如 ",[65,7904,7905],{},"\u003Ca class=\"at\" href=\"#id\">@username\u003C/a>: "," 这样以 半角冒号 + 空格结尾的形式。",[19,7908,7909,7910,7913],{},"markdown 风格的结尾方式我就只看到一种，如 ",[65,7911,7912],{},"[@username](#id): ","这样以 半角冒号 + 空格结尾的形式。",[19,7915,7916],{},"因此，我们需要对三种形式分别编写正则表达式进行匹配并删除，参考代码如下",[58,7918,7922],{"className":7919,"code":7920,"language":7921,"meta":63,"style":63},"language-python shiki shiki-themes one-light one-dark-pro","import re\n\nwith open('Comment.0.jsonl', 'r') as f:\n    s = f.read()\n\npatterns = [\n    r'\u003Ca class=\\\\\"at\\\\\" href=\\\\\"#(?:.*?)\\\\\">@(?:.*?)\u003C/a>: ',\n    r'\u003Ca class=\\\\\"at\\\\\" href=\\\\\"#(?:.*?)\\\\\">@(?:.*?)\u003C/a> , ',\n    r'\\[@(?:.*?)\\]\\(#(?:.*?)\\):'\n]\n\nfor pattern in patterns:\n    s = re.sub(pattern, \"\", s)\n\nwith open('Comment.1.jsonl', 'w') as f:\n    f.write(s)\n","python",[65,7923,7924,7929,7933,7938,7943,7947,7952,7957,7962,7967,7971,7975,7980,7985,7989,7994],{"__ignoreMap":63},[23,7925,7926],{"class":69,"line":70},[23,7927,7928],{},"import re\n",[23,7930,7931],{"class":69,"line":77},[23,7932,81],{"emptyLinePlaceholder":80},[23,7934,7935],{"class":69,"line":84},[23,7936,7937],{},"with open('Comment.0.jsonl', 'r') as f:\n",[23,7939,7940],{"class":69,"line":121},[23,7941,7942],{},"    s = f.read()\n",[23,7944,7945],{"class":69,"line":142},[23,7946,81],{"emptyLinePlaceholder":80},[23,7948,7949],{"class":69,"line":166},[23,7950,7951],{},"patterns = [\n",[23,7953,7954],{"class":69,"line":187},[23,7955,7956],{},"    r'\u003Ca class=\\\\\"at\\\\\" href=\\\\\"#(?:.*?)\\\\\">@(?:.*?)\u003C/a>: ',\n",[23,7958,7959],{"class":69,"line":208},[23,7960,7961],{},"    r'\u003Ca class=\\\\\"at\\\\\" href=\\\\\"#(?:.*?)\\\\\">@(?:.*?)\u003C/a> , ',\n",[23,7963,7964],{"class":69,"line":229},[23,7965,7966],{},"    r'\\[@(?:.*?)\\]\\(#(?:.*?)\\):'\n",[23,7968,7969],{"class":69,"line":251},[23,7970,6549],{},[23,7972,7973],{"class":69,"line":273},[23,7974,81],{"emptyLinePlaceholder":80},[23,7976,7977],{"class":69,"line":278},[23,7978,7979],{},"for pattern in patterns:\n",[23,7981,7982],{"class":69,"line":291},[23,7983,7984],{},"    s = re.sub(pattern, \"\", s)\n",[23,7986,7987],{"class":69,"line":308},[23,7988,81],{"emptyLinePlaceholder":80},[23,7990,7991],{"class":69,"line":686},[23,7992,7993],{},"with open('Comment.1.jsonl', 'w') as f:\n",[23,7995,7996],{"class":69,"line":691},[23,7997,7998],{},"    f.write(s)\n",[19,8000,8001,8002,8005],{},"随后删除 Comment 表中所有数据，把生成的 ",[65,8003,8004],{},"Comment.1.jsonl"," 导入 leancloud，就算是大功告成了。",[19,8007,8008],{},[417,8009],{"alt":63,"src":8010},"https://static.031130.xyz/uploads/2024/11/16/d248ae2eac74c.webp",[19,8012,8013],{},[417,8014],{"alt":63,"src":8015},"https://static.031130.xyz/uploads/2024/11/16/c3875dcde1d97.webp",[150,8017,8018],{},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":63,"searchDepth":77,"depth":77,"links":8020},[8021,8022],{"id":7765,"depth":77,"text":7766},{"id":7824,"depth":77,"text":7825},{"title":8024,"date":8025,"path":8026,"tags":8027,"body":8032},"给家里云装上 Fedora 41 KDE 后，我是如何配置的","2024-11-01 23:35:08","/2024/11/01/my-config-for-fedora-kde-41",[1825,2445,8028,8029,8030,8031],"KDE","HomeServer","Rustdesk","笔记",{"type":12,"value":8033,"toc":8824},[8034,8039,8042,8050,8080,8084,8092,8095,8149,8151,8212,8219,8237,8240,8243,8264,8268,8287,8290,8306,8310,8329,8333,8358,8361,8377,8380,8383,8399,8404,8408,8424,8428,8447,8450,8472,8476,8483,8586,8590,8612,8615,8618,8624,8630,8634,8640,8719,8722,8726,8781,8784,8787,8790,8811,8815,8821],[1945,8035,8036],{},[19,8037,8038],{},"前两天给自己的 N100 小主机重装成了最近发布的 Fedora 41 ( KDE )，也是花了不少时间把整个系统调成自己熟悉的样子，因此开一篇博客记录一下。以下仅为我个人的 HomeServer 小主机使用，不具有普适性。",[15,8040,8041],{"id":8041},"换官方源",[19,8043,8044,8045,2027],{},"我这里比较适合用上交的源，直接参考",[33,8046,8049],{"href":8047,"rel":8048},"https://mirrors.sjtug.sjtu.edu.cn/docs/fedora/linux",[37],"他们的文档",[58,8051,8053],{"className":1912,"code":8052,"language":1914,"meta":63,"style":63},"sudo sed -e 's/^metalink=/#metalink=/g' -e 's|^#baseurl=http://download.example/pub/|baseurl=https://mirror.sjtu.edu.cn/|g' -i.bak /etc/yum.repos.d/{fedora.repo,fedora-updates.repo}\n",[65,8054,8055],{"__ignoreMap":63},[23,8056,8057,8060,8063,8066,8069,8071,8074,8077],{"class":69,"line":70},[23,8058,8059],{"class":107},"sudo",[23,8061,8062],{"class":114}," sed",[23,8064,8065],{"class":160}," -e",[23,8067,8068],{"class":114}," 's/^metalink=/#metalink=/g'",[23,8070,8065],{"class":160},[23,8072,8073],{"class":114}," 's|^#baseurl=http://download.example/pub/|baseurl=https://mirror.sjtu.edu.cn/|g'",[23,8075,8076],{"class":160}," -i.bak",[23,8078,8079],{"class":114}," /etc/yum.repos.d/{fedora.repo,fedora-updates.repo}\n",[15,8081,8083],{"id":8082},"加-rpmfusion-源","加 rpmfusion 源",[19,8085,8086,8087],{},"参考 ",[33,8088,8091],{"href":8089,"rel":8090},"https://help.mirrors.cernet.edu.cn/rpmfusion/?mirror=SJTUG-Siyuan",[37],"help.cernet.edu.cn 提供的文档",[19,8093,8094],{},"安装源配置文件",[58,8096,8098],{"className":1912,"code":8097,"language":1914,"meta":63,"style":63},"sudo yum install --nogpgcheck https://mirror.sjtu.edu.cn/rpmfusion/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm https://mirror.sjtu.edu.cn/rpmfusion/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm\n",[65,8099,8100],{"__ignoreMap":63},[23,8101,8102,8104,8107,8110,8113,8116,8119,8122,8125,8128,8130,8133,8136,8138,8140,8142,8144,8146],{"class":69,"line":70},[23,8103,8059],{"class":107},[23,8105,8106],{"class":114}," yum",[23,8108,8109],{"class":114}," install",[23,8111,8112],{"class":160}," --nogpgcheck",[23,8114,8115],{"class":114}," https://mirror.sjtu.edu.cn/rpmfusion/free/fedora/rpmfusion-free-release-",[23,8117,8118],{"class":103},"$(",[23,8120,8121],{"class":107},"rpm",[23,8123,8124],{"class":160}," -E",[23,8126,8127],{"class":114}," %fedora",[23,8129,1493],{"class":103},[23,8131,8132],{"class":114},".noarch.rpm",[23,8134,8135],{"class":114}," https://mirror.sjtu.edu.cn/rpmfusion/nonfree/fedora/rpmfusion-nonfree-release-",[23,8137,8118],{"class":103},[23,8139,8121],{"class":107},[23,8141,8124],{"class":160},[23,8143,8127],{"class":114},[23,8145,1493],{"class":103},[23,8147,8148],{"class":114},".noarch.rpm\n",[19,8150,2011],{},[58,8152,8154],{"className":1912,"code":8153,"language":1914,"meta":63,"style":63},"sudo sed -e 's!^metalink=!#metalink=!g' \\\n         -e 's!^mirrorlist=!#mirrorlist=!g' \\\n         -e 's!^#baseurl=!baseurl=!g' \\\n         -e 's!https\\?://download1\\.rpmfusion\\.org/!https://mirror.sjtu.edu.cn/rpmfusion/!g' \\\n         -i.bak /etc/yum.repos.d/rpmfusion*.repo\n",[65,8155,8156,8170,8180,8189,8198],{"__ignoreMap":63},[23,8157,8158,8160,8162,8164,8167],{"class":69,"line":70},[23,8159,8059],{"class":107},[23,8161,8062],{"class":114},[23,8163,8065],{"class":160},[23,8165,8166],{"class":114}," 's!^metalink=!#metalink=!g'",[23,8168,8169],{"class":95}," \\\n",[23,8171,8172,8175,8178],{"class":69,"line":77},[23,8173,8174],{"class":160},"         -e",[23,8176,8177],{"class":114}," 's!^mirrorlist=!#mirrorlist=!g'",[23,8179,8169],{"class":95},[23,8181,8182,8184,8187],{"class":69,"line":84},[23,8183,8174],{"class":160},[23,8185,8186],{"class":114}," 's!^#baseurl=!baseurl=!g'",[23,8188,8169],{"class":95},[23,8190,8191,8193,8196],{"class":69,"line":121},[23,8192,8174],{"class":160},[23,8194,8195],{"class":114}," 's!https\\?://download1\\.rpmfusion\\.org/!https://mirror.sjtu.edu.cn/rpmfusion/!g'",[23,8197,8169],{"class":95},[23,8199,8200,8203,8206,8209],{"class":69,"line":142},[23,8201,8202],{"class":160},"         -i.bak",[23,8204,8205],{"class":114}," /etc/yum.repos.d/rpmfusion",[23,8207,8208],{"class":149},"*",[23,8210,8211],{"class":114},".repo\n",[15,8213,8215,8216],{"id":8214},"dnf-操作默认使用-yn","dnf 操作默认使用 ",[23,8217,8218],{},"Y/n",[58,8220,8222],{"className":1912,"code":8221,"language":1914,"meta":63,"style":63},"sudo sh -c \"echo 'defaultyes=True' >> /etc/dnf/dnf.conf\"\n",[65,8223,8224],{"__ignoreMap":63},[23,8225,8226,8228,8231,8234],{"class":69,"line":70},[23,8227,8059],{"class":107},[23,8229,8230],{"class":114}," sh",[23,8232,8233],{"class":160}," -c",[23,8235,8236],{"class":114}," \"echo 'defaultyes=True' >> /etc/dnf/dnf.conf\"\n",[15,8238,8239],{"id":8239},"移除不想要的软件",[29,8241,8242],{"id":8242},"libreoffice",[58,8244,8246],{"className":1912,"code":8245,"language":1914,"meta":63,"style":63},"sudo dnf remove libreoffice*\n",[65,8247,8248],{"__ignoreMap":63},[23,8249,8250,8252,8255,8258,8261],{"class":69,"line":70},[23,8251,8059],{"class":107},[23,8253,8254],{"class":114}," dnf",[23,8256,8257],{"class":114}," remove",[23,8259,8260],{"class":114}," libreoffice",[23,8262,8263],{"class":149},"*\n",[29,8265,8267],{"id":8266},"discover-flatpak","discover, flatpak",[58,8269,8271],{"className":1912,"code":8270,"language":1914,"meta":63,"style":63},"sudo dnf remove discover flatpak\n",[65,8272,8273],{"__ignoreMap":63},[23,8274,8275,8277,8279,8281,8284],{"class":69,"line":70},[23,8276,8059],{"class":107},[23,8278,8254],{"class":114},[23,8280,8257],{"class":114},[23,8282,8283],{"class":114}," discover",[23,8285,8286],{"class":114}," flatpak\n",[29,8288,8289],{"id":8289},"podman",[58,8291,8293],{"className":1912,"code":8292,"language":1914,"meta":63,"style":63},"sudo dnf remove podman\n",[65,8294,8295],{"__ignoreMap":63},[23,8296,8297,8299,8301,8303],{"class":69,"line":70},[23,8298,8059],{"class":107},[23,8300,8254],{"class":114},[23,8302,8257],{"class":114},[23,8304,8305],{"class":114}," podman\n",[15,8307,8309],{"id":8308},"关闭-selinux","关闭 selinux",[58,8311,8313],{"className":1912,"code":8312,"language":1914,"meta":63,"style":63},"sudo sed -i \"s|SELINUX=enforcing|SELINUX=disabled|\" /etc/selinux/config\n",[65,8314,8315],{"__ignoreMap":63},[23,8316,8317,8319,8321,8323,8326],{"class":69,"line":70},[23,8318,8059],{"class":107},[23,8320,8062],{"class":114},[23,8322,2057],{"class":160},[23,8324,8325],{"class":114}," \"s|SELINUX=enforcing|SELINUX=disabled|\"",[23,8327,8328],{"class":114}," /etc/selinux/config\n",[15,8330,8332],{"id":8331},"vlcmpvffmpeg-补全大部分编码器","vlc，mpv，ffmpeg （补全大部分编码器）",[58,8334,8336],{"className":1912,"code":8335,"language":1914,"meta":63,"style":63},"sudo dnf install vlc mpv ffmpeg --allowerasing\n",[65,8337,8338],{"__ignoreMap":63},[23,8339,8340,8342,8344,8346,8349,8352,8355],{"class":69,"line":70},[23,8341,8059],{"class":107},[23,8343,8254],{"class":114},[23,8345,8109],{"class":114},[23,8347,8348],{"class":114}," vlc",[23,8350,8351],{"class":114}," mpv",[23,8353,8354],{"class":114}," ffmpeg",[23,8356,8357],{"class":160}," --allowerasing\n",[15,8359,8360],{"id":8360},"docker",[58,8362,8364],{"className":1912,"code":8363,"language":1914,"meta":63,"style":63},"sudo dnf install docker\n",[65,8365,8366],{"__ignoreMap":63},[23,8367,8368,8370,8372,8374],{"class":69,"line":70},[23,8369,8059],{"class":107},[23,8371,8254],{"class":114},[23,8373,8109],{"class":114},[23,8375,8376],{"class":114}," docker\n",[15,8378,8379],{"id":8379},"rustdesk",[19,8381,8382],{},"直接去官方的 Github Release 下载安装包",[58,8384,8386],{"className":1912,"code":8385,"language":1914,"meta":63,"style":63},"sudo dnf install https://github.com/rustdesk/rustdesk/releases/download/1.3.2/rustdesk-1.3.2-0.x86_64.rpm\n",[65,8387,8388],{"__ignoreMap":63},[23,8389,8390,8392,8394,8396],{"class":69,"line":70},[23,8391,8059],{"class":107},[23,8393,8254],{"class":114},[23,8395,8109],{"class":114},[23,8397,8398],{"class":114}," https://github.com/rustdesk/rustdesk/releases/download/1.3.2/rustdesk-1.3.2-0.x86_64.rpm\n",[1945,8400,8401],{},[19,8402,8403],{},"尽管 Rustdesk 支持被控端使用 wayland，但因为权限原因需要被控端手动选择被控区域，不适合无人值守的环境，因此还是要换 x11。",[29,8405,8407],{"id":8406},"安装-x11-支持","安装 x11 支持",[58,8409,8411],{"className":1912,"code":8410,"language":1914,"meta":63,"style":63},"sudo dnf install plasma-workspace-x11\n",[65,8412,8413],{"__ignoreMap":63},[23,8414,8415,8417,8419,8421],{"class":69,"line":70},[23,8416,8059],{"class":107},[23,8418,8254],{"class":114},[23,8420,8109],{"class":114},[23,8422,8423],{"class":114}," plasma-workspace-x11\n",[29,8425,8427],{"id":8426},"使用-x11-启动-sddm","使用 x11 启动 sddm",[58,8429,8431],{"className":1912,"code":8430,"language":1914,"meta":63,"style":63},"sudo sed -i \"s|^#DisplayServer=wayland|DisplayServer=x11|\" /etc/sddm.conf\n",[65,8432,8433],{"__ignoreMap":63},[23,8434,8435,8437,8439,8441,8444],{"class":69,"line":70},[23,8436,8059],{"class":107},[23,8438,8062],{"class":114},[23,8440,2057],{"class":160},[23,8442,8443],{"class":114}," \"s|^#DisplayServer=wayland|DisplayServer=x11|\"",[23,8445,8446],{"class":114}," /etc/sddm.conf\n",[15,8448,8449],{"id":8449},"开发相关",[58,8451,8453],{"className":1912,"code":8452,"language":1914,"meta":63,"style":63},"sudo dnf install gcc g++ python3-devel\n",[65,8454,8455],{"__ignoreMap":63},[23,8456,8457,8459,8461,8463,8466,8469],{"class":69,"line":70},[23,8458,8059],{"class":107},[23,8460,8254],{"class":114},[23,8462,8109],{"class":114},[23,8464,8465],{"class":114}," gcc",[23,8467,8468],{"class":114}," g++",[23,8470,8471],{"class":114}," python3-devel\n",[15,8473,8475],{"id":8474},"解除-systemd-resolved-53-端口占用","解除 systemd-resolved 53 端口占用",[19,8477,8478,8479,8482],{},"编辑 ",[65,8480,8481],{},"/usr/lib/systemd/resolved.conf","，取消注释，yes 改 no",[58,8484,8486],{"className":7748,"code":8485,"language":7750,"meta":63,"style":63},"[Resolve]\n# Some examples of DNS servers which may be used for DNS= and FallbackDNS=:\n\n//...\n\n#DNS=\n#FallbackDNS=\n#Domains=\n#DNSSEC=no\n#DNSOverTLS=no\n#MulticastDNS=yes\n#LLMNR=yes\n#Cache=yes\n#CacheFromLocalhost=no\n-#DNSStubListener=yes\n+DNSStubListener=no\n#DNSStubListenerExtra=\n#ReadEtcHosts=yes\n#ResolveUnicastSingleLabel=no\n#StaleRetentionSec=0\n",[65,8487,8488,8493,8498,8502,8507,8511,8516,8521,8526,8531,8536,8541,8546,8551,8556,8561,8566,8571,8576,8581],{"__ignoreMap":63},[23,8489,8490],{"class":69,"line":70},[23,8491,8492],{},"[Resolve]\n",[23,8494,8495],{"class":69,"line":77},[23,8496,8497],{},"# Some examples of DNS servers which may be used for DNS= and FallbackDNS=:\n",[23,8499,8500],{"class":69,"line":84},[23,8501,81],{"emptyLinePlaceholder":80},[23,8503,8504],{"class":69,"line":121},[23,8505,8506],{},"//...\n",[23,8508,8509],{"class":69,"line":142},[23,8510,81],{"emptyLinePlaceholder":80},[23,8512,8513],{"class":69,"line":166},[23,8514,8515],{},"#DNS=\n",[23,8517,8518],{"class":69,"line":187},[23,8519,8520],{},"#FallbackDNS=\n",[23,8522,8523],{"class":69,"line":208},[23,8524,8525],{},"#Domains=\n",[23,8527,8528],{"class":69,"line":229},[23,8529,8530],{},"#DNSSEC=no\n",[23,8532,8533],{"class":69,"line":251},[23,8534,8535],{},"#DNSOverTLS=no\n",[23,8537,8538],{"class":69,"line":273},[23,8539,8540],{},"#MulticastDNS=yes\n",[23,8542,8543],{"class":69,"line":278},[23,8544,8545],{},"#LLMNR=yes\n",[23,8547,8548],{"class":69,"line":291},[23,8549,8550],{},"#Cache=yes\n",[23,8552,8553],{"class":69,"line":308},[23,8554,8555],{},"#CacheFromLocalhost=no\n",[23,8557,8558],{"class":69,"line":686},[23,8559,8560],{},"-#DNSStubListener=yes\n",[23,8562,8563],{"class":69,"line":691},[23,8564,8565],{},"+DNSStubListener=no\n",[23,8567,8568],{"class":69,"line":702},[23,8569,8570],{},"#DNSStubListenerExtra=\n",[23,8572,8573],{"class":69,"line":717},[23,8574,8575],{},"#ReadEtcHosts=yes\n",[23,8577,8578],{"class":69,"line":736},[23,8579,8580],{},"#ResolveUnicastSingleLabel=no\n",[23,8582,8583],{"class":69,"line":3},[23,8584,8585],{},"#StaleRetentionSec=0\n",[15,8587,8589],{"id":8588},"配置-fcitx5","配置 fcitx5",[58,8591,8593],{"className":1912,"code":8592,"language":1914,"meta":63,"style":63},"sudo dnf install fcitx5-chinese-addons kcm-fcitx5 fcitx5-autostart\n",[65,8594,8595],{"__ignoreMap":63},[23,8596,8597,8599,8601,8603,8606,8609],{"class":69,"line":70},[23,8598,8059],{"class":107},[23,8600,8254],{"class":114},[23,8602,8109],{"class":114},[23,8604,8605],{"class":114}," fcitx5-chinese-addons",[23,8607,8608],{"class":114}," kcm-fcitx5",[23,8610,8611],{"class":114}," fcitx5-autostart\n",[19,8613,8614],{},"在 设置 - 输入法 中添加拼音",[29,8616,8617],{"id":8617},"安装词库",[19,8619,8620],{},[33,8621,8622],{"href":8622,"rel":8623},"https://github.com/felixonmars/fcitx5-pinyin-zhwiki",[37],[19,8625,8626],{},[33,8627,8628],{"href":8628,"rel":8629},"https://github.com/outloudvi/mw2fcitx",[37],[29,8631,8633],{"id":8632},"在-wayland-下使用","在 wayland 下使用",[19,8635,8086,8636],{},[33,8637,8639],{"href":8638},"/2022/07/03/fcitx5-blinking-on-tg-under-wayland-kde/","处理 fcitx5 的文字候选框在 tg 客户端上闪烁的问题",[58,8641,8643],{"className":7748,"code":8642,"language":7750,"meta":63,"style":63},"if [ ! \"$XDG_SESSION_TYPE\" = \"tty\" ]   # if this is a gui session (not tty)\nthen\n    # let's use fcitx instead of fcitx5 to make flatpak happy\n    # this may break behavior for users who have installed both\n    # fcitx and fcitx5, let then change the file on their own\n\n    export INPUT_METHOD=fcitx\n    export GTK_IM_MODULE=fcitx\n    export QT_IM_MODULE=fcitx\n    export XMODIFIERS=@im=fcitx\nfi\n+if [ \"$XDG_SESSION_TYPE\" = \"wayland\" ]\n+then\n+        unset QT_IM_MODULE\n+fi\n",[65,8644,8645,8650,8655,8660,8665,8670,8674,8679,8684,8689,8694,8699,8704,8709,8714],{"__ignoreMap":63},[23,8646,8647],{"class":69,"line":70},[23,8648,8649],{},"if [ ! \"$XDG_SESSION_TYPE\" = \"tty\" ]   # if this is a gui session (not tty)\n",[23,8651,8652],{"class":69,"line":77},[23,8653,8654],{},"then\n",[23,8656,8657],{"class":69,"line":84},[23,8658,8659],{},"    # let's use fcitx instead of fcitx5 to make flatpak happy\n",[23,8661,8662],{"class":69,"line":121},[23,8663,8664],{},"    # this may break behavior for users who have installed both\n",[23,8666,8667],{"class":69,"line":142},[23,8668,8669],{},"    # fcitx and fcitx5, let then change the file on their own\n",[23,8671,8672],{"class":69,"line":166},[23,8673,81],{"emptyLinePlaceholder":80},[23,8675,8676],{"class":69,"line":187},[23,8677,8678],{},"    export INPUT_METHOD=fcitx\n",[23,8680,8681],{"class":69,"line":208},[23,8682,8683],{},"    export GTK_IM_MODULE=fcitx\n",[23,8685,8686],{"class":69,"line":229},[23,8687,8688],{},"    export QT_IM_MODULE=fcitx\n",[23,8690,8691],{"class":69,"line":251},[23,8692,8693],{},"    export XMODIFIERS=@im=fcitx\n",[23,8695,8696],{"class":69,"line":273},[23,8697,8698],{},"fi\n",[23,8700,8701],{"class":69,"line":278},[23,8702,8703],{},"+if [ \"$XDG_SESSION_TYPE\" = \"wayland\" ]\n",[23,8705,8706],{"class":69,"line":291},[23,8707,8708],{},"+then\n",[23,8710,8711],{"class":69,"line":308},[23,8712,8713],{},"+        unset QT_IM_MODULE\n",[23,8715,8716],{"class":69,"line":686},[23,8717,8718],{},"+fi\n",[19,8720,8721],{},"然后仍然要去 设置 - 键盘 - 虚拟键盘 中选中 fcitx5",[15,8723,8725],{"id":8724},"安装-vscode","安装 vscode",[58,8727,8729],{"className":1912,"code":8728,"language":1914,"meta":63,"style":63},"sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc\necho -e \"[code]\\nname=Visual Studio Code\\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\\nenabled=1\\ngpgcheck=1\\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc\" | sudo tee /etc/yum.repos.d/vscode.repo > /dev/null\nsudo dnf install code\n",[65,8730,8731,8744,8770],{"__ignoreMap":63},[23,8732,8733,8735,8738,8741],{"class":69,"line":70},[23,8734,8059],{"class":107},[23,8736,8737],{"class":114}," rpm",[23,8739,8740],{"class":160}," --import",[23,8742,8743],{"class":114}," https://packages.microsoft.com/keys/microsoft.asc\n",[23,8745,8746,8749,8751,8754,8756,8758,8761,8764,8767],{"class":69,"line":77},[23,8747,8748],{"class":95},"echo",[23,8750,8065],{"class":160},[23,8752,8753],{"class":114}," \"[code]\\nname=Visual Studio Code\\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\\nenabled=1\\ngpgcheck=1\\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc\"",[23,8755,5282],{"class":103},[23,8757,8059],{"class":107},[23,8759,8760],{"class":114}," tee",[23,8762,8763],{"class":114}," /etc/yum.repos.d/vscode.repo",[23,8765,8766],{"class":103}," > ",[23,8768,8769],{"class":114},"/dev/null\n",[23,8771,8772,8774,8776,8778],{"class":69,"line":84},[23,8773,8059],{"class":107},[23,8775,8254],{"class":114},[23,8777,8109],{"class":114},[23,8779,8780],{"class":114}," code\n",[15,8782,8783],{"id":8783},"网络优化工具",[19,8785,8786],{},"略",[15,8788,8789],{"id":8789},"禁用防火墙",[58,8791,8793],{"className":1912,"code":8792,"language":1914,"meta":63,"style":63},"sudo systemctl disable firewalld --now\n",[65,8794,8795],{"__ignoreMap":63},[23,8796,8797,8799,8802,8805,8808],{"class":69,"line":70},[23,8798,8059],{"class":107},[23,8800,8801],{"class":114}," systemctl",[23,8803,8804],{"class":114}," disable",[23,8806,8807],{"class":114}," firewalld",[23,8809,8810],{"class":160}," --now\n",[15,8812,8814],{"id":8813},"rpm-构建","RPM 构建",[19,8816,8086,8817],{},[33,8818,8820],{"href":8819},"/2024/05/03/open-rpmbuild-in-the-way-of-archlinux-makepkg/","以 Archlinux 中 makepkg 的方式打开 rpmbuild",[150,8822,8823],{},"html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html pre.shiki code .s_Sar, html code.shiki .s_Sar{--shiki-default:#0184BC;--shiki-dark:#56B6C2}html pre.shiki code .s2QsP, html code.shiki .s2QsP{--shiki-default:#E45649;--shiki-dark:#E5C07B}",{"title":63,"searchDepth":77,"depth":77,"links":8825},[8826,8827,8828,8830,8835,8836,8837,8838,8842,8843,8844,8848,8849,8850,8851],{"id":8041,"depth":77,"text":8041},{"id":8082,"depth":77,"text":8083},{"id":8214,"depth":77,"text":8829},"dnf 操作默认使用 Y/n",{"id":8239,"depth":77,"text":8239,"children":8831},[8832,8833,8834],{"id":8242,"depth":84,"text":8242},{"id":8266,"depth":84,"text":8267},{"id":8289,"depth":84,"text":8289},{"id":8308,"depth":77,"text":8309},{"id":8331,"depth":77,"text":8332},{"id":8360,"depth":77,"text":8360},{"id":8379,"depth":77,"text":8379,"children":8839},[8840,8841],{"id":8406,"depth":84,"text":8407},{"id":8426,"depth":84,"text":8427},{"id":8449,"depth":77,"text":8449},{"id":8474,"depth":77,"text":8475},{"id":8588,"depth":77,"text":8589,"children":8845},[8846,8847],{"id":8617,"depth":84,"text":8617},{"id":8632,"depth":84,"text":8633},{"id":8724,"depth":77,"text":8725},{"id":8783,"depth":77,"text":8783},{"id":8789,"depth":77,"text":8789},{"id":8813,"depth":77,"text":8814},127,1761835685498]