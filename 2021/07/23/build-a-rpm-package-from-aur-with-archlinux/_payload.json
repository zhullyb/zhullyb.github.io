[{"data":1,"prerenderedAt":800},["ShallowReactive",2],{"post-2021-07-23-build-a-rpm-package-from-aur-with-archlinux":3,"surround-2021-07-23-build-a-rpm-package-from-aur-with-archlinux":789,"randomIndex/2021/07/23/build-a-rpm-package-from-aur-with-archlinux/":362},{"id":4,"title":5,"body":6,"date":775,"description":68,"extension":776,"meta":777,"navigation":344,"path":778,"rawbody":779,"seo":780,"stem":781,"sticky":782,"tags":783,"__hash__":788},"posts/posts/build-a-rpm-package-from-aur-with-archlinux.md","来，从AUR给Fedora偷个包",{"type":7,"value":8,"toc":763},"minimark",[9,19,25,29,38,41,51,54,62,91,95,101,109,113,116,130,141,148,154,172,195,201,204,212,230,233,253,257,506,509,514,520,534,537,544,549,555,558,564,570,573,591,597,600,607,641,692,697,708,723,735,747,759],[10,11,12,16],"blockquote",{},[13,14,15],"p",{},"前一阵子，某Q群里的某初中生居然跳上了Fedora这辆灵车，还一直缠着我要我给他整个打rpm包的教程，说什么要复兴FedoraCN之类的我听不懂的话。碰巧听说Fedora似乎还没有wechat-uos，于是我就寻思着给Fedora打一个，顺便熟悉一下dnf的操作。",[13,17,18],{},"事实上，Fedora和Archlinux的目录结构很相似，理论上来讲Archlinux的大部分包都可以直接解压后塞到Fedora里直接用，对于咱这种日常偷Deb包的Arch用户来说基本没什么难度，唯一的难点在于处理依赖关系。",[13,20,21],{},[22,23,24],"strong",{},"Tips1: 使用电脑端的访客可以在页面左下角打开侧栏以获取目录。",[26,27,28],"h3",{"id":28},"下载链接",[13,30,31,32],{},"如果你是为了wechat-uos这个包而非教程而来的，下载链接在这里。",[33,34,35],"a",{"href":35,"rel":36},"https://zhullyb.lanzoui.com/ikN55rqr7ah",[37],"nofollow",[26,39,40],{"id":40},"偷包环境",[42,43,44,48],"ul",{},[45,46,47],"li",{},"Archlinux实体机(打包)",[45,49,50],{},"Fedora虚拟机(依赖查询、测试)",[26,52,53],{"id":53},"准备好wechat-uos",[13,55,56,57,61],{},"首先，咱们先在Archlinux上把我们的",[58,59,60],"code",{},"wechat-uos","先打包好，这个老生常谈的问题我不多赘述了。",[63,64,69],"pre",{"className":65,"code":66,"language":67,"meta":68,"style":68},"language-bash shiki shiki-themes github-light github-dark","yay -S wechat-uos --noconfirm\n","bash","",[58,70,71],{"__ignoreMap":68},[72,73,76,80,84,88],"span",{"class":74,"line":75},"line",1,[72,77,79],{"class":78},"sScJk","yay",[72,81,83],{"class":82},"sj4cs"," -S",[72,85,87],{"class":86},"sZZnC"," wechat-uos",[72,89,90],{"class":82}," --noconfirm\n",[26,92,94],{"id":93},"查找wechat-uos在archlinux上所需的依赖","查找wechat-uos在Archlinux上所需的依赖",[13,96,97,98,100],{},"再去查看",[58,99,60],{},"所需要的依赖",[63,102,107],{"className":103,"code":105,"language":106},[104],"language-text","[zhullyb@Archlinux ~]$ yay -Si wechat-uos\n:: Querying AUR...\nRepository      : aur\nName            : wechat-uos\nKeywords        : electron  patched  uos  wechat  weixin\nVersion         : 2:2.0.0-1145141919\nDescription     : UOS专业版微信 (迫真魔改版)\nURL             : https://www.chinauos.com/resource/download-professional\nAUR URL         : https://aur.archlinux.org/packages/wechat-uos\nGroups          : None\nLicenses        : MIT\nProvides        : None\nDepends On      : gtk2  gtk3  libxss  gconf  nss  lsb-release  bubblewrap\nMake Deps       : imagemagick\nCheck Deps      : None\nOptional Deps   : None\nConflicts With  : None\nMaintainer      : DuckSoft\nVotes           : 16\nPopularity      : 0.603501\nFirst Submitted : Wed 30 Dec 2020 12:21:51 PM CST\nLast Modified   : Sat 20 Feb 2021 06:53:24 AM CST\nOut-of-date     : No\n","text",[58,108,105],{"__ignoreMap":68},[26,110,112],{"id":111},"查找fedora上的对应依赖包名","查找Fedora上的对应依赖包名",[13,114,115],{},"然后我们需要去Fedora上找一找这些依赖在Fedora上的包名都叫什么。",[13,117,118,119,122,123,126,127],{},"比如这个",[58,120,121],{},"bubblewrap","，我们需要的是他提供的",[58,124,125],{},"bwrap","，所以我们直接在Fedora上",[58,128,129],{},"sudo dnf provides bwrap",[13,131,132,133,136,137,140],{},"再比如",[58,134,135],{},"gconf","并没有在",[58,138,139],{},"/usr/bin","路径下直接留下什么非常具有代表性的可执行文件，所以在Fedora里面寻找等效包就稍微复杂一些，但也并非不能找。",[13,142,143,144,147],{},"先在Archlinux下使用",[58,145,146],{},"pacman -Ql gconf","，输出结果有点长，我就截一小段上来。",[63,149,152],{"className":150,"code":151,"language":106},[104],"[zhullyb@Archlinux ~]$ pacman -Qlq gconf\n/etc/\n/etc/gconf/\n/etc/gconf/2/\n/etc/gconf/2/evoldap.conf\n/etc/gconf/2/path\n/etc/gconf/gconf.xml.defaults/\n/etc/gconf/gconf.xml.mandatory/\n/etc/gconf/gconf.xml.system/\n/etc/xdg/\n/etc/xdg/autostart/\n/etc/xdg/autostart/gsettings-data-convert.desktop\n/usr/\n/usr/bin/\n/usr/bin/gconf-merge-schema\n/usr/bin/gconf-merge-tree\n/usr/bin/gconfpkg\n/usr/bin/gconftool-2\n......\n",[58,153,151],{"__ignoreMap":68},[13,155,156,157,159,160,163,164,167,168,171],{},"可以发现，",[58,158,135],{},"还是有不少文件是非常具有代表性的，比如这里的",[58,161,162],{},"/usr/bin/gconf-merge-tree","，我们在Fedora上使用",[58,165,166],{},"sudo dnf provides gconf-merge-tree","很容易就能找到对应的包是",[58,169,170],{},"GConf2","。",[13,173,174,177,178,181,182,185,186,188,189,191,192,194],{},[58,175,176],{},"lsb-release","这个依赖中，我们只是需要",[58,179,180],{},"/etc/lsb-release","这个文件存在让我们的bwrap可以顺利地伪装成uos的样子。Fedora中虽然有",[58,183,184],{},"redhat-lsb-core","这个包算是",[58,187,176],{},"的等效包，但是并不提供这个文件，因此我们只需要在待会儿打包的时候带一个",[58,190,180],{},"的空文件即可，不需要将",[58,193,184],{},"写进依赖。",[13,196,197,198,171],{},"最终我们可以确定下来需要的依赖为",[58,199,200],{},"gtk2,gtk3,libXScrnSaver,nss,bubblewrap,GConf2",[26,202,203],{"id":203},"准备打包",[205,206,208,209],"h4",{"id":207},"安装rpm-tools","安装",[58,210,211],{},"rpm-tools",[63,213,215],{"className":65,"code":214,"language":67,"meta":68,"style":68},"sudo pacman -S rpm-tools\n",[58,216,217],{"__ignoreMap":68},[72,218,219,222,225,227],{"class":74,"line":75},[72,220,221],{"class":78},"sudo",[72,223,224],{"class":86}," pacman",[72,226,83],{"class":82},[72,228,229],{"class":86}," rpm-tools\n",[205,231,232],{"id":232},"生成工作路径",[63,234,236],{"className":65,"code":235,"language":67,"meta":68,"style":68},"mkdir -pv $HOME/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}\n",[58,237,238],{"__ignoreMap":68},[72,239,240,243,246,250],{"class":74,"line":75},[72,241,242],{"class":78},"mkdir",[72,244,245],{"class":82}," -pv",[72,247,249],{"class":248},"sVt8B"," $HOME",[72,251,252],{"class":86},"/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}\n",[205,254,256],{"id":255},"编写-spec-文件","编写 spec 文件",[63,258,260],{"className":65,"code":259,"language":67,"meta":68,"style":68},"Name: wechat-uos\nVersion: 2.0.0\nRelease: 1\nSummary: A wechat client based on electron.\nLicense: None\nURL: https://www.chinauos.com/resource/download-professional\nPackager: zhullyb\n\nRequires: gtk2,gtk3,libXScrnSaver,nss,bubblewrap,GConf2\n\nAutoReqProv: no\n\n%description\n\n%prep\n\n%pre\n\n%post\n\n%preun\n\n%postun\n\n%files\n/etc/lsb-release\n/opt/wechat-uos/\n/usr/bin/wechat-uos\n/usr/lib/license/libuosdevicea.so\n/usr/share/applications/wechat-uos.desktop\n/usr/share/icons/hicolor/128x128/apps/wechat.png\n/usr/share/icons/hicolor/16x16/apps/wechat.png\n/usr/share/icons/hicolor/256x256/apps/wechat.png\n/usr/share/icons/hicolor/48x48/apps/wechat.png\n/usr/share/icons/hicolor/64x64/apps/wechat.png\n",[58,261,262,270,279,288,312,321,330,339,346,355,360,369,374,380,385,391,396,402,407,413,418,424,429,435,440,446,452,458,464,470,476,482,488,494,500],{"__ignoreMap":68},[72,263,264,267],{"class":74,"line":75},[72,265,266],{"class":78},"Name:",[72,268,269],{"class":86}," wechat-uos\n",[72,271,273,276],{"class":74,"line":272},2,[72,274,275],{"class":78},"Version:",[72,277,278],{"class":82}," 2.0.0\n",[72,280,282,285],{"class":74,"line":281},3,[72,283,284],{"class":78},"Release:",[72,286,287],{"class":82}," 1\n",[72,289,291,294,297,300,303,306,309],{"class":74,"line":290},4,[72,292,293],{"class":78},"Summary:",[72,295,296],{"class":86}," A",[72,298,299],{"class":86}," wechat",[72,301,302],{"class":86}," client",[72,304,305],{"class":86}," based",[72,307,308],{"class":86}," on",[72,310,311],{"class":86}," electron.\n",[72,313,315,318],{"class":74,"line":314},5,[72,316,317],{"class":78},"License:",[72,319,320],{"class":86}," None\n",[72,322,324,327],{"class":74,"line":323},6,[72,325,326],{"class":78},"URL:",[72,328,329],{"class":86}," https://www.chinauos.com/resource/download-professional\n",[72,331,333,336],{"class":74,"line":332},7,[72,334,335],{"class":78},"Packager:",[72,337,338],{"class":86}," zhullyb\n",[72,340,342],{"class":74,"line":341},8,[72,343,345],{"emptyLinePlaceholder":344},true,"\n",[72,347,349,352],{"class":74,"line":348},9,[72,350,351],{"class":78},"Requires:",[72,353,354],{"class":86}," gtk2,gtk3,libXScrnSaver,nss,bubblewrap,GConf2\n",[72,356,358],{"class":74,"line":357},10,[72,359,345],{"emptyLinePlaceholder":344},[72,361,363,366],{"class":74,"line":362},11,[72,364,365],{"class":78},"AutoReqProv:",[72,367,368],{"class":86}," no\n",[72,370,372],{"class":74,"line":371},12,[72,373,345],{"emptyLinePlaceholder":344},[72,375,377],{"class":74,"line":376},13,[72,378,379],{"class":78},"%description\n",[72,381,383],{"class":74,"line":382},14,[72,384,345],{"emptyLinePlaceholder":344},[72,386,388],{"class":74,"line":387},15,[72,389,390],{"class":78},"%prep\n",[72,392,394],{"class":74,"line":393},16,[72,395,345],{"emptyLinePlaceholder":344},[72,397,399],{"class":74,"line":398},17,[72,400,401],{"class":78},"%pre\n",[72,403,405],{"class":74,"line":404},18,[72,406,345],{"emptyLinePlaceholder":344},[72,408,410],{"class":74,"line":409},19,[72,411,412],{"class":78},"%post\n",[72,414,416],{"class":74,"line":415},20,[72,417,345],{"emptyLinePlaceholder":344},[72,419,421],{"class":74,"line":420},21,[72,422,423],{"class":78},"%preun\n",[72,425,427],{"class":74,"line":426},22,[72,428,345],{"emptyLinePlaceholder":344},[72,430,432],{"class":74,"line":431},23,[72,433,434],{"class":78},"%postun\n",[72,436,438],{"class":74,"line":437},24,[72,439,345],{"emptyLinePlaceholder":344},[72,441,443],{"class":74,"line":442},25,[72,444,445],{"class":78},"%files\n",[72,447,449],{"class":74,"line":448},26,[72,450,451],{"class":78},"/etc/lsb-release\n",[72,453,455],{"class":74,"line":454},27,[72,456,457],{"class":78},"/opt/wechat-uos/\n",[72,459,461],{"class":74,"line":460},28,[72,462,463],{"class":78},"/usr/bin/wechat-uos\n",[72,465,467],{"class":74,"line":466},29,[72,468,469],{"class":78},"/usr/lib/license/libuosdevicea.so\n",[72,471,473],{"class":74,"line":472},30,[72,474,475],{"class":78},"/usr/share/applications/wechat-uos.desktop\n",[72,477,479],{"class":74,"line":478},31,[72,480,481],{"class":78},"/usr/share/icons/hicolor/128x128/apps/wechat.png\n",[72,483,485],{"class":74,"line":484},32,[72,486,487],{"class":78},"/usr/share/icons/hicolor/16x16/apps/wechat.png\n",[72,489,491],{"class":74,"line":490},33,[72,492,493],{"class":78},"/usr/share/icons/hicolor/256x256/apps/wechat.png\n",[72,495,497],{"class":74,"line":496},34,[72,498,499],{"class":78},"/usr/share/icons/hicolor/48x48/apps/wechat.png\n",[72,501,503],{"class":74,"line":502},35,[72,504,505],{"class":78},"/usr/share/icons/hicolor/64x64/apps/wechat.png\n",[205,507,508],{"id":508},"处理source",[10,510,511],{},[13,512,513],{},"一般来说，我们需要配置各种奇奇怪怪的编译命令，但是我这里直接选择了打包二进制文件，一来是减少了对于spec的学习成本，二来是因为wechat-uos本来就不开源，也没什么好编译的。",[13,515,516,517,519],{},"创建我们",[58,518,60],{},"的二进制文件所需要放入的文件夹。",[63,521,523],{"className":65,"code":522,"language":67,"meta":68,"style":68},"mkdir $HOME/rpmbuild/BUILDROOT/wechat-uos-2.0.0-1.x86_64\n",[58,524,525],{"__ignoreMap":68},[72,526,527,529,531],{"class":74,"line":75},[72,528,242],{"class":78},[72,530,249],{"class":248},[72,532,533],{"class":86},"/rpmbuild/BUILDROOT/wechat-uos-2.0.0-1.x86_64\n",[13,535,536],{},"将我们的wechat-uos直接放入对应的文件夹中",[13,538,539],{},[540,541],"img",{"alt":542,"src":543},"解压原先打包好的wechat-uos","https://static.031130.xyz/uploads/2024/08/12/62f3cadde8d65.webp",[13,545,546,547],{},"补上我们的",[58,548,180],{},[63,550,553],{"className":551,"code":552,"language":106},[104],"mkdir $HOME/rpmbuild/BUILDROOT/wechat-uos-2.0.0-1.x86_64/etc/\ntouch $HOME/rpmbuild/BUILDROOT/wechat-uos-2.0.0-1.x86_64/etc/lsb-release\n",[58,554,552],{"__ignoreMap":68},[26,556,557],{"id":557},"正式打包",[63,559,562],{"className":560,"code":561,"language":106},[104],"rpmbuild -bb --target=x86_64 SPECS/wechat-uos.spec --nodeps\n",[58,563,561],{"__ignoreMap":68},[13,565,566],{},[540,567],{"alt":568,"src":569},"打包成功","https://static.031130.xyz/uploads/2024/08/12/62f3cae15fdcf.webp",[26,571,572],{"id":572},"安装测试",[63,574,576],{"className":65,"code":575,"language":67,"meta":68,"style":68},"sudo dnf install ./wechat-uos-2.0.0-1.x86_64.rpm\n",[58,577,578],{"__ignoreMap":68},[72,579,580,582,585,588],{"class":74,"line":75},[72,581,221],{"class":78},[72,583,584],{"class":86}," dnf",[72,586,587],{"class":86}," install",[72,589,590],{"class":86}," ./wechat-uos-2.0.0-1.x86_64.rpm\n",[13,592,593],{},[540,594],{"alt":595,"src":596},"测试通过","https://static.031130.xyz/uploads/2024/08/12/62f3cae5aa4b0.webp",[26,598,599],{"id":599},"写在最后",[13,601,602,603,606],{},"rpm的打包工具是我近期",[22,604,605],{},"最","想吐槽的东西了，主要槽点有两个。",[13,608,609,610,613,614,617,618,617,621,624,625,632,633,636,637,640],{},"其一是：rpm在打包时的默认状态下，会使用 ",[58,611,612],{},"file"," 命令判断文件，如果是二进制的，用ldd判断依赖；如果是脚本，过滤文件中对应的 ",[58,615,616],{},"use","/",[58,619,620],{},"requires",[58,622,623],{},"import"," 语句，以此来找出内部依赖。**这固然是个非常贴心的小善举，**能够确保软件正常运行，",[22,626,627,628,631],{},"但完全有可能造成比较奇怪的问题。",[22,629,630],{},"比如我本次打包中rpm","自作聪明","地给我添加了一个",[58,634,635],{},"libffmpeg.so","的依赖，这东西整个Fedora自带的四个源里都不存在，在安装测试的时候出现了找不到依赖的情况。想我这种添加了找不到依赖的情况还算是运气好的，之前听说有人在使用opensuse的某个私人源的时候发现安装网易云音乐居然吧wps-office都给依赖上了，我想就是rpm自动检测到了网易云需要某个库，而wps恰好自带了这个库而导致的依赖误报。在Archlinux中，我们有一个叫",[58,638,639],{},"namcap","的小工具能够使用类似的方法检测软件运行时可能所需要的内部依赖，但他并不会默认启用，更不会自说自话的就直接把他添加为依赖，连一声也不吭。",[13,642,643,644,647,648,650,651,654,655,657,658,661,662,664,665,668,669,671,672,674,675,678,679,681,682,684,685,687,688,691],{},"其二是：rpm检测新增包内文件是否与系统已安装的软件包内的文件因为使用相同路径而冲突时，不仅会核对是否有冲突的同路径同名文件，他",[22,645,646],{},"还会核对文件夹","的文件占用情况。这说起来可能会有些抽象，我举个例子。在Fedora中，",[58,649,139],{},"路径是被",[58,652,653],{},"filesystem","这个包所占有的，所以其他包在打包时是不能直接使用",[58,656,139],{},"、",[58,659,660],{},"/usr","、甚至",[58,663,617],{},"来限定包内文件的范围的（也就是上面spec文件中的%files区域）。而我在第一次打包时，想要直接打包",[58,666,667],{},"BUILDROOT","下的所有文件，于是%files就直接填写了",[58,670,617],{},"作为限定，安装时提示",[58,673,139],{},"和",[58,676,677],{},"/usr/lib","被",[58,680,653],{},"这个包所占用，文件冲突。为此我还特意去仔细对比了Fedora自带的",[58,683,653],{},"和我这个",[58,686,60],{},"是否有冲突的文件，实则证明并没有，只是单纯这个",[22,689,690],{},"检测机制过于死板","罢了。而在Archlinux中，pacman安装时只会检测包内的文件是否与系统内的现有文件路径产生冲突，而不会非常无意义的去限定哪个文件夹是属于哪个包的。",[26,693,695],{"id":694},"附上本文的参考资料",[22,696,694],{},[10,698,699],{},[13,700,701,702,707],{},"为了避免源网页失效，我特意去",[33,703,706],{"href":704,"rel":705},"http://web.archive.org",[37],"互联网档案馆","做了备份",[13,709,710,711,716,717,722],{},"「",[33,712,715],{"href":713,"rel":714},"https://blog.csdn.net/get_set/article/details/53453320",[37],"RPM打包原理、示例、详解及备查","」\t\t\t\t\t\t\t 「",[33,718,721],{"href":719,"rel":720},"http://web.archive.org/web/20210722180835/https://blog.konghy.cn/2015/11/13/rpmbuild/",[37],"Archive","」",[13,724,710,725,730,731,722],{},[33,726,729],{"href":727,"rel":728},"https://blog.konghy.cn/2015/11/13/rpmbuild/",[37],"在 Ubuntu 下直接将二进制文件制作成 rpm 包","」\t\t「",[33,732,721],{"href":733,"rel":734},"http://web.archive.org/web/20210722180859/http://blog.sina.cn/dpool/blog/s/blog_6a5aee670101r1si.html",[37],[13,736,710,737,742,743,722],{},[33,738,741],{"href":739,"rel":740},"http://blog.sina.cn/dpool/blog/s/blog_6a5aee670101r1si.html",[37],"解除RPM包的依赖的方法","」\t\t\t\t\t\t\t\t\t\t\t「",[33,744,721],{"href":745,"rel":746},"http://web.archive.org/web/20210722180936/https://blog.csdn.net/get_set/article/details/53453320",[37],[13,748,749],{},[750,751,752,753,758],"em",{},"本文同时发布于「",[33,754,757],{"href":755,"rel":756},"https://zhuanlan.zhihu.com/p/392650904",[37],"知乎专栏","」，如果你恰好有知乎帐号的话或许可以考虑帮我点个赞？",[760,761,762],"style",{},"html pre.shiki code .sScJk, html code.shiki .sScJk{--shiki-default:#6F42C1;--shiki-dark:#B392F0}html pre.shiki code .sj4cs, html code.shiki .sj4cs{--shiki-default:#005CC5;--shiki-dark:#79B8FF}html pre.shiki code .sZZnC, html code.shiki .sZZnC{--shiki-default:#032F62;--shiki-dark:#9ECBFF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sVt8B, html code.shiki .sVt8B{--shiki-default:#24292E;--shiki-dark:#E1E4E8}",{"title":68,"searchDepth":272,"depth":272,"links":764},[765,766,767,768,769,770,771,772,773,774],{"id":28,"depth":281,"text":28},{"id":40,"depth":281,"text":40},{"id":53,"depth":281,"text":53},{"id":93,"depth":281,"text":94},{"id":111,"depth":281,"text":112},{"id":203,"depth":281,"text":203},{"id":557,"depth":281,"text":557},{"id":572,"depth":281,"text":572},{"id":599,"depth":281,"text":599},{"id":694,"depth":281,"text":694},"2021-07-23 01:50:09","md",{},"/2021/07/23/build-a-rpm-package-from-aur-with-archlinux","---\ntitle: 来，从AUR给Fedora偷个包\ndate: 2021-07-23 01:50:09\ntags: \n- Linux\n- Archlinux\n- Fedora\n- RPM Package\n---\n\n> 前一阵子，某Q群里的某初中生居然跳上了Fedora这辆灵车，还一直缠着我要我给他整个打rpm包的教程，说什么要复兴FedoraCN之类的我听不懂的话。碰巧听说Fedora似乎还没有wechat-uos，于是我就寻思着给Fedora打一个，顺便熟悉一下dnf的操作。\n>\n> 事实上，Fedora和Archlinux的目录结构很相似，理论上来讲Archlinux的大部分包都可以直接解压后塞到Fedora里直接用，对于咱这种日常偷Deb包的Arch用户来说基本没什么难度，唯一的难点在于处理依赖关系。\n\n**Tips1: 使用电脑端的访客可以在页面左下角打开侧栏以获取目录。**\n\n### 下载链接\n\n如果你是为了wechat-uos这个包而非教程而来的，下载链接在这里。[https://zhullyb.lanzoui.com/ikN55rqr7ah](https://zhullyb.lanzoui.com/ikN55rqr7ah)\n\n### 偷包环境\n\n- Archlinux实体机(打包)\n\n- Fedora虚拟机(依赖查询、测试)\n\n### 准备好wechat-uos\n\n首先，咱们先在Archlinux上把我们的`wechat-uos`先打包好，这个老生常谈的问题我不多赘述了。\n\n```bash\nyay -S wechat-uos --noconfirm\n```\n\n### 查找wechat-uos在Archlinux上所需的依赖\n\n再去查看`wechat-uos`所需要的依赖\n\n```\n[zhullyb@Archlinux ~]$ yay -Si wechat-uos\n:: Querying AUR...\nRepository      : aur\nName            : wechat-uos\nKeywords        : electron  patched  uos  wechat  weixin\nVersion         : 2:2.0.0-1145141919\nDescription     : UOS专业版微信 (迫真魔改版)\nURL             : https://www.chinauos.com/resource/download-professional\nAUR URL         : https://aur.archlinux.org/packages/wechat-uos\nGroups          : None\nLicenses        : MIT\nProvides        : None\nDepends On      : gtk2  gtk3  libxss  gconf  nss  lsb-release  bubblewrap\nMake Deps       : imagemagick\nCheck Deps      : None\nOptional Deps   : None\nConflicts With  : None\nMaintainer      : DuckSoft\nVotes           : 16\nPopularity      : 0.603501\nFirst Submitted : Wed 30 Dec 2020 12:21:51 PM CST\nLast Modified   : Sat 20 Feb 2021 06:53:24 AM CST\nOut-of-date     : No\n```\n\n### 查找Fedora上的对应依赖包名\n\n然后我们需要去Fedora上找一找这些依赖在Fedora上的包名都叫什么。\n\n比如这个`bubblewrap`，我们需要的是他提供的`bwrap`，所以我们直接在Fedora上`sudo dnf provides bwrap`\n\n再比如`gconf`并没有在`/usr/bin`路径下直接留下什么非常具有代表性的可执行文件，所以在Fedora里面寻找等效包就稍微复杂一些，但也并非不能找。\n\n先在Archlinux下使用`pacman -Ql gconf`，输出结果有点长，我就截一小段上来。\n\n```\n[zhullyb@Archlinux ~]$ pacman -Qlq gconf\n/etc/\n/etc/gconf/\n/etc/gconf/2/\n/etc/gconf/2/evoldap.conf\n/etc/gconf/2/path\n/etc/gconf/gconf.xml.defaults/\n/etc/gconf/gconf.xml.mandatory/\n/etc/gconf/gconf.xml.system/\n/etc/xdg/\n/etc/xdg/autostart/\n/etc/xdg/autostart/gsettings-data-convert.desktop\n/usr/\n/usr/bin/\n/usr/bin/gconf-merge-schema\n/usr/bin/gconf-merge-tree\n/usr/bin/gconfpkg\n/usr/bin/gconftool-2\n......\n```\n\n可以发现，`gconf`还是有不少文件是非常具有代表性的，比如这里的`/usr/bin/gconf-merge-tree`，我们在Fedora上使用`sudo dnf provides gconf-merge-tree`很容易就能找到对应的包是`GConf2`。\n\n`lsb-release`这个依赖中，我们只是需要`/etc/lsb-release`这个文件存在让我们的bwrap可以顺利地伪装成uos的样子。Fedora中虽然有`redhat-lsb-core`这个包算是`lsb-release`的等效包，但是并不提供这个文件，因此我们只需要在待会儿打包的时候带一个`/etc/lsb-release`的空文件即可，不需要将`redhat-lsb-core`写进依赖。\n\n最终我们可以确定下来需要的依赖为`gtk2,gtk3,libXScrnSaver,nss,bubblewrap,GConf2`。\n\n### 准备打包\n\n#### 安装`rpm-tools`\n\n```bash\nsudo pacman -S rpm-tools\n```\n\n#### 生成工作路径\n\n```bash\nmkdir -pv $HOME/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}\n```\n\n#### 编写 spec 文件\n\n```bash\nName: wechat-uos\nVersion: 2.0.0\nRelease: 1\nSummary: A wechat client based on electron.\nLicense: None\nURL: https://www.chinauos.com/resource/download-professional\nPackager: zhullyb\n\nRequires: gtk2,gtk3,libXScrnSaver,nss,bubblewrap,GConf2\n\nAutoReqProv: no\n\n%description\n\n%prep\n\n%pre\n\n%post\n\n%preun\n\n%postun\n\n%files\n/etc/lsb-release\n/opt/wechat-uos/\n/usr/bin/wechat-uos\n/usr/lib/license/libuosdevicea.so\n/usr/share/applications/wechat-uos.desktop\n/usr/share/icons/hicolor/128x128/apps/wechat.png\n/usr/share/icons/hicolor/16x16/apps/wechat.png\n/usr/share/icons/hicolor/256x256/apps/wechat.png\n/usr/share/icons/hicolor/48x48/apps/wechat.png\n/usr/share/icons/hicolor/64x64/apps/wechat.png\n```\n\n#### 处理source\n\n> 一般来说，我们需要配置各种奇奇怪怪的编译命令，但是我这里直接选择了打包二进制文件，一来是减少了对于spec的学习成本，二来是因为wechat-uos本来就不开源，也没什么好编译的。\n\n创建我们`wechat-uos`的二进制文件所需要放入的文件夹。\n\n```bash\nmkdir $HOME/rpmbuild/BUILDROOT/wechat-uos-2.0.0-1.x86_64\n```\n\n将我们的wechat-uos直接放入对应的文件夹中\n\n![解压原先打包好的wechat-uos](https://static.031130.xyz/uploads/2024/08/12/62f3cadde8d65.webp)\n\n补上我们的`/etc/lsb-release`\n\n```\nmkdir $HOME/rpmbuild/BUILDROOT/wechat-uos-2.0.0-1.x86_64/etc/\ntouch $HOME/rpmbuild/BUILDROOT/wechat-uos-2.0.0-1.x86_64/etc/lsb-release\n```\n\n### 正式打包\n\n```\nrpmbuild -bb --target=x86_64 SPECS/wechat-uos.spec --nodeps\n```\n\n![打包成功](https://static.031130.xyz/uploads/2024/08/12/62f3cae15fdcf.webp)\n\n### 安装测试\n\n```bash\nsudo dnf install ./wechat-uos-2.0.0-1.x86_64.rpm\n```\n\n![测试通过](https://static.031130.xyz/uploads/2024/08/12/62f3cae5aa4b0.webp)\n\n### 写在最后\n\nrpm的打包工具是我近期**最**想吐槽的东西了，主要槽点有两个。\n\n其一是：rpm在打包时的默认状态下，会使用 `file` 命令判断文件，如果是二进制的，用ldd判断依赖；如果是脚本，过滤文件中对应的 `use`/`requires`/`import` 语句，以此来找出内部依赖。**这固然是个非常贴心的小善举，**能够确保软件正常运行，**但完全有可能造成比较奇怪的问题。**比如我本次打包中rpm**自作聪明**地给我添加了一个`libffmpeg.so`的依赖，这东西整个Fedora自带的四个源里都不存在，在安装测试的时候出现了找不到依赖的情况。想我这种添加了找不到依赖的情况还算是运气好的，之前听说有人在使用opensuse的某个私人源的时候发现安装网易云音乐居然吧wps-office都给依赖上了，我想就是rpm自动检测到了网易云需要某个库，而wps恰好自带了这个库而导致的依赖误报。在Archlinux中，我们有一个叫`namcap`的小工具能够使用类似的方法检测软件运行时可能所需要的内部依赖，但他并不会默认启用，更不会自说自话的就直接把他添加为依赖，连一声也不吭。\n\n其二是：rpm检测新增包内文件是否与系统已安装的软件包内的文件因为使用相同路径而冲突时，不仅会核对是否有冲突的同路径同名文件，他**还会核对文件夹**的文件占用情况。这说起来可能会有些抽象，我举个例子。在Fedora中，`/usr/bin`路径是被`filesystem`这个包所占有的，所以其他包在打包时是不能直接使用`/usr/bin`、`/usr`、甚至`/`来限定包内文件的范围的（也就是上面spec文件中的%files区域）。而我在第一次打包时，想要直接打包`BUILDROOT`下的所有文件，于是%files就直接填写了`/`作为限定，安装时提示`/usr/bin`和`/usr/lib`被`filesystem`这个包所占用，文件冲突。为此我还特意去仔细对比了Fedora自带的`filesystem`和我这个`wechat-uos`是否有冲突的文件，实则证明并没有，只是单纯这个**检测机制过于死板**罢了。而在Archlinux中，pacman安装时只会检测包内的文件是否与系统内的现有文件路径产生冲突，而不会非常无意义的去限定哪个文件夹是属于哪个包的。\n\n### **附上本文的参考资料**\n\n> 为了避免源网页失效，我特意去[互联网档案馆](http://web.archive.org)做了备份\n\n「[RPM打包原理、示例、详解及备查](https://blog.csdn.net/get_set/article/details/53453320)」\t\t\t\t\t\t\t 「[Archive](http://web.archive.org/web/20210722180835/https://blog.konghy.cn/2015/11/13/rpmbuild/)」\n\n「[在 Ubuntu 下直接将二进制文件制作成 rpm 包](https://blog.konghy.cn/2015/11/13/rpmbuild/)」\t\t「[Archive](http://web.archive.org/web/20210722180859/http://blog.sina.cn/dpool/blog/s/blog_6a5aee670101r1si.html)」\n\n「[解除RPM包的依赖的方法](http://blog.sina.cn/dpool/blog/s/blog_6a5aee670101r1si.html)」\t\t\t\t\t\t\t\t\t\t\t「[Archive](http://web.archive.org/web/20210722180936/https://blog.csdn.net/get_set/article/details/53453320)」\n\n\n\n*本文同时发布于「[知乎专栏](https://zhuanlan.zhihu.com/p/392650904)」，如果你恰好有知乎帐号的话或许可以考虑帮我点个赞？*\n",{"title":5,"description":68},"posts/build-a-rpm-package-from-aur-with-archlinux",false,[784,785,786,787],"Linux","Archlinux","Fedora","RPM Package","MlOcp81kuoA_X0hLC9Aqp3oYyRPU5dnS5gJnEN4hqXM",[790,795],{"title":791,"path":792,"stem":793,"date":794,"children":-1},"使用fakehome方案暂时解决跑在KDE暗色主题下的程序使用亮色字体的问题","/2021/09/05/wrong-fonts-color-fix-under-kde-with-a-dark-theme","posts/wrong-fonts-color-fix-under-kde-with-a-dark-theme","2021-09-05",{"title":796,"path":797,"stem":798,"date":799,"children":-1},"下载一份openharmony的源码","/2021/06/06/download-openharmony-source-code","posts/download-openharmony-source-code","2021-06-06 16:47:34",1761699628415]