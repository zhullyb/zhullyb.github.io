[{"data":1,"prerenderedAt":447},["ShallowReactive",2],{"post-2021-06-06-download-openharmony-source-code":3,"surround-2021-06-06-download-openharmony-source-code":435,"randomIndex/2021/06/06/download-openharmony-source-code/":446},{"id":4,"title":5,"body":6,"date":425,"description":58,"extension":426,"meta":427,"navigation":123,"path":429,"rawbody":430,"seo":431,"stem":432,"sticky":428,"tags":433,"__hash__":434},"posts/posts/download-openharmony-source-code.md","下载一份openharmony的源码",{"type":7,"value":8,"toc":422},"minimark",[9,16,19,32,48,59,68,207,214,226,233,245,252,274,284,291,303,313,316,322,326,329,335,342,365,371,378,381,387,394,400,406,412,418],[10,11,12],"blockquote",{},[13,14,15],"p",{},"不知道为什么，总是有人告诉我鸿蒙已经开源了，不信可以自己去看源码balabala，其实鸿蒙的手机端目前为止依然没有开源，或者说没有完整完整开源。本文我将介绍如何拉取一份openharmony开源的源码。",[13,17,18],{},"首先需要准备以下东西",[20,21,22,26,29],"ul",{},[23,24,25],"li",{},"一台装有类unix环境的电脑（wsl大概也行）",[23,27,28],{},"6G磁盘剩余空间",[23,30,31],{},"互联网（如果使用手机流量的话大概是1.5G）",[33,34,36,43],"ol",{"start":35},0,[23,37,38,42],{},[39,40,41],"h4",{"id":41},"安装git","没什么好说的，不再赘述。",[23,44,45],{},[39,46,47],{"id":47},"设置git用户名和邮箱",[49,50,55],"pre",{"className":51,"code":53,"language":54},[52],"language-text","git config --global user.email \"you@example.com\"\ngit config --global user.name \"Your Name\"\n","text",[56,57,53],"code",{"__ignoreMap":58},"",[33,60,62],{"start":61},2,[23,63,64],{},[39,65,67],{"id":66},"下载repo这个大多数发行版自己都有打包但是都比较滞后不如直接下载最新版的二进制文件设置好path变量直接用","下载repo（这个大多数发行版自己都有打包，但是都比较滞后，不如直接下载最新版的二进制文件设置好path变量直接用）",[49,69,73],{"className":70,"code":71,"language":72,"meta":58,"style":58},"language-bash shiki shiki-themes github-light github-dark","mkdir -p ~/bin\ncurl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo\nchmod a+x ~/bin/repo\n\ncat >> ~/.bashrc \u003C\u003CEOF\n\n# set PATH so it includes user's private bin if it exists\nif [ -d \"\\$HOME/bin\" ] ; then\n    PATH=\"\\$HOME/bin:\\$PATH\"\nfi\nEOF\n\nsource ~/.bashrc\n","bash",[56,74,75,92,107,118,125,143,148,154,166,182,188,193,198],{"__ignoreMap":58},[76,77,80,84,88],"span",{"class":78,"line":79},"line",1,[76,81,83],{"class":82},"sScJk","mkdir",[76,85,87],{"class":86},"sj4cs"," -p",[76,89,91],{"class":90},"sZZnC"," ~/bin\n",[76,93,94,97,100,104],{"class":78,"line":61},[76,95,96],{"class":82},"curl",[76,98,99],{"class":90}," https://storage.googleapis.com/git-repo-downloads/repo",[76,101,103],{"class":102},"szBVR"," >",[76,105,106],{"class":90}," ~/bin/repo\n",[76,108,110,113,116],{"class":78,"line":109},3,[76,111,112],{"class":82},"chmod",[76,114,115],{"class":90}," a+x",[76,117,106],{"class":90},[76,119,121],{"class":78,"line":120},4,[76,122,124],{"emptyLinePlaceholder":123},true,"\n",[76,126,128,131,134,137,140],{"class":78,"line":127},5,[76,129,130],{"class":82},"cat",[76,132,133],{"class":102}," >>",[76,135,136],{"class":90}," ~/.bashrc",[76,138,139],{"class":102}," \u003C\u003C",[76,141,142],{"class":90},"EOF\n",[76,144,146],{"class":78,"line":145},6,[76,147,124],{"emptyLinePlaceholder":123},[76,149,151],{"class":78,"line":150},7,[76,152,153],{"class":90},"# set PATH so it includes user's private bin if it exists\n",[76,155,157,160,163],{"class":78,"line":156},8,[76,158,159],{"class":90},"if [ -d \"",[76,161,162],{"class":86},"\\$",[76,164,165],{"class":90},"HOME/bin\" ] ; then\n",[76,167,169,172,174,177,179],{"class":78,"line":168},9,[76,170,171],{"class":90},"    PATH=\"",[76,173,162],{"class":86},[76,175,176],{"class":90},"HOME/bin:",[76,178,162],{"class":86},[76,180,181],{"class":90},"PATH\"\n",[76,183,185],{"class":78,"line":184},10,[76,186,187],{"class":90},"fi\n",[76,189,191],{"class":78,"line":190},11,[76,192,142],{"class":90},[76,194,196],{"class":78,"line":195},12,[76,197,124],{"emptyLinePlaceholder":123},[76,199,201,204],{"class":78,"line":200},13,[76,202,203],{"class":86},"source",[76,205,206],{"class":90}," ~/.bashrc\n",[33,208,209],{"start":109},[23,210,211],{},[39,212,213],{"id":213},"新建一个文件夹以同步源码",[49,215,217],{"className":70,"code":216,"language":72,"meta":58,"style":58},"mkdir openharmony\n",[56,218,219],{"__ignoreMap":58},[76,220,221,223],{"class":78,"line":79},[76,222,83],{"class":82},[76,224,225],{"class":90}," openharmony\n",[33,227,228],{"start":120},[23,229,230],{},[39,231,232],{"id":232},"进入这个文件夹",[49,234,236],{"className":70,"code":235,"language":72,"meta":58,"style":58},"cd openharmony\n",[56,237,238],{"__ignoreMap":58},[76,239,240,243],{"class":78,"line":79},[76,241,242],{"class":86},"cd",[76,244,225],{"class":90},[33,246,247],{"start":127},[23,248,249],{},[39,250,251],{"id":251},"初始化repo",[49,253,255],{"className":70,"code":254,"language":72,"meta":58,"style":58},"repo init -u https://gitee.com/openharmony/manifest.git --depth=1\n",[56,256,257],{"__ignoreMap":58},[76,258,259,262,265,268,271],{"class":78,"line":79},[76,260,261],{"class":82},"repo",[76,263,264],{"class":90}," init",[76,266,267],{"class":86}," -u",[76,269,270],{"class":90}," https://gitee.com/openharmony/manifest.git",[76,272,273],{"class":86}," --depth=1\n",[13,275,276,277,280,281,283],{},"​\t注:  ",[56,278,279],{},"--depth=1","是为了仅保留一层commit记录，防止过多的历史commit占用空间，如果你想保留历\t史commit，那可以把这里的",[56,282,279],{},"去掉。",[33,285,286],{"start":145},[23,287,288],{},[39,289,290],{"id":290},"使用repo正式开始同步源码",[49,292,294],{"className":70,"code":293,"language":72,"meta":58,"style":58},"repo sync\n",[56,295,296],{"__ignoreMap":58},[76,297,298,300],{"class":78,"line":79},[76,299,261],{"class":82},[76,301,302],{"class":90}," sync\n",[13,304,305,306,309,310],{},"repo在sync的时候其实可以加很多选项，可以通过",[56,307,308],{},"repo help","自行研究，我自己常用的是",[56,311,312],{},"repo sync  --force-sync --current-branch --no-tags --no-clone-bundle --optimized-fetch --prune -j$(nproc --all) -f1",[13,314,315],{},"看到以下提示代表同步成功",[49,317,320],{"className":318,"code":319,"language":54},[52],"repo sync has finished successfully.\n",[56,321,319],{"__ignoreMap":58},[323,324,325],"h3",{"id":325},"后话",[13,327,328],{},"结果就当源码下载好并开始checkout后，出现了以下错误",[49,330,333],{"className":331,"code":332,"language":54},[52],"Garbage collecting: 100% (220/220), done in 1.204s\nUpdating files: 100% (35/35), done.\nUpdating files: 100% (27/27), done.\ngit-lfs filter-process --skip: line 1: git-lfs: command not found\nfatal: the remote end hung up unexpectedly\nerror.GitError: Cannot checkout device_hisilicon_modules: Cannot initialize work tree for device_hisilicon_modules\nerror: Cannot checkout device_hisilicon_modules\n",[56,334,332],{"__ignoreMap":58},[13,336,337,338,341],{},"看着error很容易可以发现是我的系统没有",[56,339,340],{},"git-lfs","的原因，看样子openharmony使用了git-lfs来储存了某个大文件。",[49,343,345],{"className":70,"code":344,"language":72,"meta":58,"style":58},"sudo pacman -S git-lfs  #别的发行版请自行查找相关安装方法\n",[56,346,347],{"__ignoreMap":58},[76,348,349,352,355,358,361],{"class":78,"line":79},[76,350,351],{"class":82},"sudo",[76,353,354],{"class":90}," pacman",[76,356,357],{"class":86}," -S",[76,359,360],{"class":90}," git-lfs",[76,362,364],{"class":363},"sJ8bj","  #别的发行版请自行查找相关安装方法\n",[13,366,367,368,370],{},"于是乎，安装好",[56,369,340],{},"重新sync源码",[13,372,373,374,377],{},"oepnharmony目录下，",[56,375,376],{},".repo","文件夹内是你从git服务器上下载下来的原始数据，repo将在所有数据下载完成以后将他们自动checkout成代码。",[13,379,380],{},"源码结构是下面这个样子",[49,382,385],{"className":383,"code":384,"language":54},[52],".\n├── applications\n├── base\n├── build\n├── build.py -> build/lite/build.py\n├── build.sh -> build/build_scripts/build.sh\n├── developtools\n├── device\n├── docs\n├── domains\n├── drivers\n├── foundation\n├── .gn -> build/core/gn/dotfile.gn\n├── interface\n├── kernel\n├── prebuilts\n├── productdefine\n├── .repo\n├── test\n├── third_party\n├── utils\n└── vendor\n\n18 directories, 3 files\n",[56,386,384],{"__ignoreMap":58},[13,388,389],{},[390,391],"img",{"alt":392,"src":393},"这里是OpenHarmony包含.repo原始数据的全部大小","https://static.031130.xyz/uploads/2024/08/12/62f3cb1057a22.webp",[13,395,396],{},[390,397],{"alt":398,"src":399},"这里是OpenHarmony的.repo原始数据的大小","https://static.031130.xyz/uploads/2024/08/12/62f3cb13027fb.webp",[13,401,402],{},[403,404,405],"strong",{},"我提供个参考数据，AOSP源码不含.repo原始数据的大小是40G，就openharmony这个代码量，恐怕很难让我相信这是一个兼容安卓应用的系统的完整代码。",[13,407,408],{},[390,409],{"alt":410,"src":411},"这里是AOSP的.repo原始数据大小","https://static.031130.xyz/uploads/2024/08/12/62f3cb15ccbf1.webp",[13,413,414],{},[390,415],{"alt":416,"src":417},"这里是AOSP包含.repo原始数据的大小","https://static.031130.xyz/uploads/2024/08/12/62f3cb182333b.webp",[419,420,421],"style",{},"html pre.shiki code .sScJk, html code.shiki .sScJk{--shiki-default:#6F42C1;--shiki-dark:#B392F0}html pre.shiki code .sj4cs, html code.shiki .sj4cs{--shiki-default:#005CC5;--shiki-dark:#79B8FF}html pre.shiki code .sZZnC, html code.shiki .sZZnC{--shiki-default:#032F62;--shiki-dark:#9ECBFF}html pre.shiki code .szBVR, html code.shiki .szBVR{--shiki-default:#D73A49;--shiki-dark:#F97583}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sJ8bj, html code.shiki .sJ8bj{--shiki-default:#6A737D;--shiki-dark:#6A737D}",{"title":58,"searchDepth":61,"depth":61,"links":423},[424],{"id":325,"depth":109,"text":325},"2021-06-06 16:47:34","md",{"top":428},false,"/2021/06/06/download-openharmony-source-code","---\ntitle: 下载一份openharmony的源码\ntop: false\ndate: 2021-06-06 16:47:34\ntags: \n---\n\n> 不知道为什么，总是有人告诉我鸿蒙已经开源了，不信可以自己去看源码balabala，其实鸿蒙的手机端目前为止依然没有开源，或者说没有完整完整开源。本文我将介绍如何拉取一份openharmony开源的源码。\n\n首先需要准备以下东西\n\n- 一台装有类unix环境的电脑（wsl大概也行）\n- 6G磁盘剩余空间\n- 互联网（如果使用手机流量的话大概是1.5G）\n\n0. #### 安装git\n\n   没什么好说的，不再赘述。\n\n1. #### 设置git用户名和邮箱\n\n```\ngit config --global user.email \"you@example.com\"\ngit config --global user.name \"Your Name\"\n```\n\n2. #### 下载repo（这个大多数发行版自己都有打包，但是都比较滞后，不如直接下载最新版的二进制文件设置好path变量直接用）\n\n```bash\nmkdir -p ~/bin\ncurl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo\nchmod a+x ~/bin/repo\n\ncat >> ~/.bashrc \u003C\u003CEOF\n\n# set PATH so it includes user's private bin if it exists\nif [ -d \"\\$HOME/bin\" ] ; then\n    PATH=\"\\$HOME/bin:\\$PATH\"\nfi\nEOF\n\nsource ~/.bashrc\n```\n\n3. #### 新建一个文件夹以同步源码\n\n```bash\nmkdir openharmony\n```\n\n4. #### 进入这个文件夹\n\n```bash\ncd openharmony\n```\n\n5. #### 初始化repo\n\n```bash\nrepo init -u https://gitee.com/openharmony/manifest.git --depth=1\n```\n\n​\t注:  `--depth=1`是为了仅保留一层commit记录，防止过多的历史commit占用空间，如果你想保留历\t史commit，那可以把这里的`--depth=1`去掉。\n\n6. #### 使用repo正式开始同步源码\n\n```bash\nrepo sync\n```\n\nrepo在sync的时候其实可以加很多选项，可以通过`repo help`自行研究，我自己常用的是`repo sync  --force-sync --current-branch --no-tags --no-clone-bundle --optimized-fetch --prune -j$(nproc --all) -f1`\n\n看到以下提示代表同步成功\n\n```\nrepo sync has finished successfully.\n```\n\n### 后话\n\n结果就当源码下载好并开始checkout后，出现了以下错误\n\n```\nGarbage collecting: 100% (220/220), done in 1.204s\nUpdating files: 100% (35/35), done.\nUpdating files: 100% (27/27), done.\ngit-lfs filter-process --skip: line 1: git-lfs: command not found\nfatal: the remote end hung up unexpectedly\nerror.GitError: Cannot checkout device_hisilicon_modules: Cannot initialize work tree for device_hisilicon_modules\nerror: Cannot checkout device_hisilicon_modules\n```\n\n看着error很容易可以发现是我的系统没有`git-lfs`的原因，看样子openharmony使用了git-lfs来储存了某个大文件。\n\n```bash\nsudo pacman -S git-lfs\t#别的发行版请自行查找相关安装方法\n```\n\n于是乎，安装好`git-lfs`重新sync源码\n\noepnharmony目录下，`.repo`文件夹内是你从git服务器上下载下来的原始数据，repo将在所有数据下载完成以后将他们自动checkout成代码。\n\n源码结构是下面这个样子\n\n```\n.\n├── applications\n├── base\n├── build\n├── build.py -> build/lite/build.py\n├── build.sh -> build/build_scripts/build.sh\n├── developtools\n├── device\n├── docs\n├── domains\n├── drivers\n├── foundation\n├── .gn -> build/core/gn/dotfile.gn\n├── interface\n├── kernel\n├── prebuilts\n├── productdefine\n├── .repo\n├── test\n├── third_party\n├── utils\n└── vendor\n\n18 directories, 3 files\n```\n\n\n\n![这里是OpenHarmony包含.repo原始数据的全部大小](https://static.031130.xyz/uploads/2024/08/12/62f3cb1057a22.webp)\n\n![这里是OpenHarmony的.repo原始数据的大小](https://static.031130.xyz/uploads/2024/08/12/62f3cb13027fb.webp)\n\n**我提供个参考数据，AOSP源码不含.repo原始数据的大小是40G，就openharmony这个代码量，恐怕很难让我相信这是一个兼容安卓应用的系统的完整代码。**\n\n![这里是AOSP的.repo原始数据大小](https://static.031130.xyz/uploads/2024/08/12/62f3cb15ccbf1.webp)\n\n![这里是AOSP包含.repo原始数据的大小](https://static.031130.xyz/uploads/2024/08/12/62f3cb182333b.webp)\n",{"title":5,"description":58},"posts/download-openharmony-source-code",null,"eNY1SaeIJRXem_IT2bORynXrflAa9F7YkvKAKqJhkt4",[436,441],{"title":437,"path":438,"stem":439,"date":440,"children":-1},"来，从AUR给Fedora偷个包","/2021/07/23/build-a-rpm-package-from-aur-with-archlinux","posts/build-a-rpm-package-from-aur-with-archlinux","2021-07-23 01:50:09",{"title":442,"path":443,"stem":444,"date":445,"children":-1},"在Windows与Linux双系统下共享蓝牙鼠标","/2021/05/30/share-xiaomi-bluetooth-mouse-on-both-windows-and-linux","posts/share-xiaomi-bluetooth-mouse-on-both-windows-and-linux","2021-05-30",19,1761735722274]