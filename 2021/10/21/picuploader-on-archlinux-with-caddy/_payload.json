[{"data":1,"prerenderedAt":1067},["ShallowReactive",2],{"post-2021-10-21-picuploader-on-archlinux-with-caddy":3,"surround-2021-10-21-picuploader-on-archlinux-with-caddy":1056,"randomIndex/2021/10/21/picuploader-on-archlinux-with-caddy/":231},{"id":4,"title":5,"body":6,"date":1042,"description":47,"extension":1043,"meta":1044,"navigation":638,"path":1045,"rawbody":1046,"seo":1047,"stem":1048,"sticky":1049,"tags":1050,"__hash__":1055},"posts/posts/picuploader-on-archlinux-with-caddy.md","PicUploader使用系列（一）——在Archlinux上使用Caddy部署PicUploader",{"type":7,"value":8,"toc":1023},"minimark",[9,27,41,82,88,97,121,385,392,398,413,420,577,588,775,779,782,800,803,824,827,847,851,858,861,868,876,890,894,901,926,929,935,939,942,960,963,966,974,997,1000,1008,1011,1019],[10,11,12,16],"blockquote",{},[13,14,15],"p",{},"之前找对大陆网络友好的图床时，找到了cloudinary，但是全英文界面对操作增加了不少难度，其页面也不是很简洁，让我一下打消了使用网页版的念头。通过搜索，找到了 PicUploader 这一方案，使用php编写，支持cloudinary的api。",[13,17,18,19,26],{},"作者在其",[20,21,25],"a",{"href":22,"rel":23},"https://www.xiebruce.top/17.html",[24],"nofollow","博客","中仅提供了nginx的部署方案，我参考其配置文件成功实现了在caddy下的部署，并且花费了数个小时排坑，故写下本文帮助后来者节省时间。",[28,29,31,32,36,37,40],"h2",{"id":30},"安装caddy和php-fpm以及所需的拓展","安装",[33,34,35],"code",{},"caddy","和",[33,38,39],{},"php-fpm","以及所需的拓展",[42,43,48],"pre",{"className":44,"code":45,"language":46,"meta":47,"style":47},"language-bash shiki shiki-themes one-light one-dark-pro","sudo pacman -S caddy php-fpm php-gd php-sqlite --needed\n","bash","",[33,49,50],{"__ignoreMap":47},[51,52,55,59,63,67,70,73,76,79],"span",{"class":53,"line":54},"line",1,[51,56,58],{"class":57},"sAdtL","sudo",[51,60,62],{"class":61},"sDhpE"," pacman",[51,64,66],{"class":65},"sAGMh"," -S",[51,68,69],{"class":61}," caddy",[51,71,72],{"class":61}," php-fpm",[51,74,75],{"class":61}," php-gd",[51,77,78],{"class":61}," php-sqlite",[51,80,81],{"class":65}," --needed\n",[28,83,85,86],{"id":84},"配置php-fpm","配置",[33,87,39],{},[89,90,92,93,96],"h3",{"id":91},"在etcphpphpini启用picuploader所需拓展","在",[33,94,95],{},"/etc/php/php.ini","启用PicUploader所需拓展",[13,98,99,100,103,104,103,107,103,110,103,113,116,117,120],{},"PicUploaer依赖于",[33,101,102],{},"fileinfo","、",[33,105,106],{},"gd",[33,108,109],{},"curl",[33,111,112],{},"exif",[33,114,115],{},"pdo_sqlite","拓展，可以使用",[33,118,119],{},"php -m","命令来查看目前加载成功了的插件。",[42,122,126],{"className":123,"code":124,"language":125,"meta":47,"style":47},"language-diff shiki shiki-themes one-light one-dark-pro",";extension=bcmath\n;extension=bz2\n;extension=calendar\n- extension=curl\n+ extension=curl\n;extension=dba\n;extension=enchant\n- extension=exif\n+ extension=exif\n;extension=ffi\n;extension=ftp\n- extension=gd\n+ extension=gd\n;extension=gettext\n;extension=gmp\n;extension=iconv\n;extension=imap\n;extension=intl\n;extension=ldap\n;extension=mysqli\n;extension=odbc\n;zend_extension=opcache\n;extension=pdo_dblib\n;extension=pdo_mysql\n;extension=pdo_odbc\n;extension=pdo_pgsql\n- extension=pdo_sqlite\n+ extension=pdo_sqlite\n;extension=pgsql\n;extension=pspell\n;extension=shmop\n;extension=snmp\n;extension=soap\n;extension=sockets\n;extension=sodium\n;extension=sqlite3\n;extension=sysvmsg\n;extension=sysvsem\n;extension=sysvshm\n;extension=tidy\n;extension=xmlrpc\n;extension=xsl\nextension=zip\n","diff",[33,127,128,133,139,145,151,157,163,169,175,181,187,193,199,205,211,217,223,229,235,241,247,253,259,265,271,277,283,289,295,301,307,313,319,325,331,337,343,349,355,361,367,373,379],{"__ignoreMap":47},[51,129,130],{"class":53,"line":54},[51,131,132],{},";extension=bcmath\n",[51,134,136],{"class":53,"line":135},2,[51,137,138],{},";extension=bz2\n",[51,140,142],{"class":53,"line":141},3,[51,143,144],{},";extension=calendar\n",[51,146,148],{"class":53,"line":147},4,[51,149,150],{},"- extension=curl\n",[51,152,154],{"class":53,"line":153},5,[51,155,156],{},"+ extension=curl\n",[51,158,160],{"class":53,"line":159},6,[51,161,162],{},";extension=dba\n",[51,164,166],{"class":53,"line":165},7,[51,167,168],{},";extension=enchant\n",[51,170,172],{"class":53,"line":171},8,[51,173,174],{},"- extension=exif\n",[51,176,178],{"class":53,"line":177},9,[51,179,180],{},"+ extension=exif\n",[51,182,184],{"class":53,"line":183},10,[51,185,186],{},";extension=ffi\n",[51,188,190],{"class":53,"line":189},11,[51,191,192],{},";extension=ftp\n",[51,194,196],{"class":53,"line":195},12,[51,197,198],{},"- extension=gd\n",[51,200,202],{"class":53,"line":201},13,[51,203,204],{},"+ extension=gd\n",[51,206,208],{"class":53,"line":207},14,[51,209,210],{},";extension=gettext\n",[51,212,214],{"class":53,"line":213},15,[51,215,216],{},";extension=gmp\n",[51,218,220],{"class":53,"line":219},16,[51,221,222],{},";extension=iconv\n",[51,224,226],{"class":53,"line":225},17,[51,227,228],{},";extension=imap\n",[51,230,232],{"class":53,"line":231},18,[51,233,234],{},";extension=intl\n",[51,236,238],{"class":53,"line":237},19,[51,239,240],{},";extension=ldap\n",[51,242,244],{"class":53,"line":243},20,[51,245,246],{},";extension=mysqli\n",[51,248,250],{"class":53,"line":249},21,[51,251,252],{},";extension=odbc\n",[51,254,256],{"class":53,"line":255},22,[51,257,258],{},";zend_extension=opcache\n",[51,260,262],{"class":53,"line":261},23,[51,263,264],{},";extension=pdo_dblib\n",[51,266,268],{"class":53,"line":267},24,[51,269,270],{},";extension=pdo_mysql\n",[51,272,274],{"class":53,"line":273},25,[51,275,276],{},";extension=pdo_odbc\n",[51,278,280],{"class":53,"line":279},26,[51,281,282],{},";extension=pdo_pgsql\n",[51,284,286],{"class":53,"line":285},27,[51,287,288],{},"- extension=pdo_sqlite\n",[51,290,292],{"class":53,"line":291},28,[51,293,294],{},"+ extension=pdo_sqlite\n",[51,296,298],{"class":53,"line":297},29,[51,299,300],{},";extension=pgsql\n",[51,302,304],{"class":53,"line":303},30,[51,305,306],{},";extension=pspell\n",[51,308,310],{"class":53,"line":309},31,[51,311,312],{},";extension=shmop\n",[51,314,316],{"class":53,"line":315},32,[51,317,318],{},";extension=snmp\n",[51,320,322],{"class":53,"line":321},33,[51,323,324],{},";extension=soap\n",[51,326,328],{"class":53,"line":327},34,[51,329,330],{},";extension=sockets\n",[51,332,334],{"class":53,"line":333},35,[51,335,336],{},";extension=sodium\n",[51,338,340],{"class":53,"line":339},36,[51,341,342],{},";extension=sqlite3\n",[51,344,346],{"class":53,"line":345},37,[51,347,348],{},";extension=sysvmsg\n",[51,350,352],{"class":53,"line":351},38,[51,353,354],{},";extension=sysvsem\n",[51,356,358],{"class":53,"line":357},39,[51,359,360],{},";extension=sysvshm\n",[51,362,364],{"class":53,"line":363},40,[51,365,366],{},";extension=tidy\n",[51,368,370],{"class":53,"line":369},41,[51,371,372],{},";extension=xmlrpc\n",[51,374,376],{"class":53,"line":375},42,[51,377,378],{},";extension=xsl\n",[51,380,382],{"class":53,"line":381},43,[51,383,384],{},"extension=zip\n",[89,386,388,389,391],{"id":387},"编辑etcphpphpini以增加单文件上传大小限制","编辑",[33,390,95],{},"以增加单文件上传大小限制",[13,393,394],{},[395,396,397],"del",{},"查出这个问题浪费了我整整4小时时间。",[42,399,401],{"className":123,"code":400,"language":125,"meta":47,"style":47},"- upload_max_filesize = 2M\n+ upload_max_filesize = 100M\n",[33,402,403,408],{"__ignoreMap":47},[51,404,405],{"class":53,"line":54},[51,406,407],{},"- upload_max_filesize = 2M\n",[51,409,410],{"class":53,"line":135},[51,411,412],{},"+ upload_max_filesize = 100M\n",[89,414,388,416,419],{"id":415},"编辑etcphpphp-fpmdwwwconf使其在运行时使用caddy用户",[33,417,418],{},"/etc/php/php-fpm.d/www.conf","使其在运行时使用caddy用户。",[42,421,423],{"className":123,"code":422,"language":125,"meta":47,"style":47},"---\n; Unix user/group of processes\n; Note: The user is mandatory. If the group is not set, the default user's group\n;       will be used.\n- user = http\n+ user = caddy\n- group = http\n+ group = caddy\n; The address on which to accept FastCGI requests.\n; Valid syntaxes are:\n;   'ip.add.re.ss:port'    - to listen on a TCP socket to a specific IPv4 address on\n;                            a specific port;\n;   '[ip:6:addr:ess]:port' - to listen on a TCP socket to a specific IPv6 address on\n---\n---\n; Note: This value is mandatory.\nlisten = /run/php-fpm/php-fpm.sock\n; and group can be specified either by name or by their numeric IDs.\n; Default Values: user and group are set as the running user\n;                 mode is set to 0660\n- listen.owner = http\n+ listen.owner = caddy\n- listen.group = http\n+ listen.group = caddy\n;listen.mode = 0660\n; When POSIX Access Control Lists are supported you can set them using\n; these options, value is a comma separated list of user/group names.\n; When set, listen.owner and listen.group are ignored\n;listen.acl_users =\n;listen.acl_groups =\n---\n",[33,424,425,430,435,440,445,450,455,460,465,470,475,480,485,490,494,498,503,508,513,518,523,528,533,538,543,548,553,558,563,568,573],{"__ignoreMap":47},[51,426,427],{"class":53,"line":54},[51,428,429],{},"---\n",[51,431,432],{"class":53,"line":135},[51,433,434],{},"; Unix user/group of processes\n",[51,436,437],{"class":53,"line":141},[51,438,439],{},"; Note: The user is mandatory. If the group is not set, the default user's group\n",[51,441,442],{"class":53,"line":147},[51,443,444],{},";       will be used.\n",[51,446,447],{"class":53,"line":153},[51,448,449],{},"- user = http\n",[51,451,452],{"class":53,"line":159},[51,453,454],{},"+ user = caddy\n",[51,456,457],{"class":53,"line":165},[51,458,459],{},"- group = http\n",[51,461,462],{"class":53,"line":171},[51,463,464],{},"+ group = caddy\n",[51,466,467],{"class":53,"line":177},[51,468,469],{},"; The address on which to accept FastCGI requests.\n",[51,471,472],{"class":53,"line":183},[51,473,474],{},"; Valid syntaxes are:\n",[51,476,477],{"class":53,"line":189},[51,478,479],{},";   'ip.add.re.ss:port'    - to listen on a TCP socket to a specific IPv4 address on\n",[51,481,482],{"class":53,"line":195},[51,483,484],{},";                            a specific port;\n",[51,486,487],{"class":53,"line":201},[51,488,489],{},";   '[ip:6:addr:ess]:port' - to listen on a TCP socket to a specific IPv6 address on\n",[51,491,492],{"class":53,"line":207},[51,493,429],{},[51,495,496],{"class":53,"line":213},[51,497,429],{},[51,499,500],{"class":53,"line":219},[51,501,502],{},"; Note: This value is mandatory.\n",[51,504,505],{"class":53,"line":225},[51,506,507],{},"listen = /run/php-fpm/php-fpm.sock\n",[51,509,510],{"class":53,"line":231},[51,511,512],{},"; and group can be specified either by name or by their numeric IDs.\n",[51,514,515],{"class":53,"line":237},[51,516,517],{},"; Default Values: user and group are set as the running user\n",[51,519,520],{"class":53,"line":243},[51,521,522],{},";                 mode is set to 0660\n",[51,524,525],{"class":53,"line":249},[51,526,527],{},"- listen.owner = http\n",[51,529,530],{"class":53,"line":255},[51,531,532],{},"+ listen.owner = caddy\n",[51,534,535],{"class":53,"line":261},[51,536,537],{},"- listen.group = http\n",[51,539,540],{"class":53,"line":267},[51,541,542],{},"+ listen.group = caddy\n",[51,544,545],{"class":53,"line":273},[51,546,547],{},";listen.mode = 0660\n",[51,549,550],{"class":53,"line":279},[51,551,552],{},"; When POSIX Access Control Lists are supported you can set them using\n",[51,554,555],{"class":53,"line":285},[51,556,557],{},"; these options, value is a comma separated list of user/group names.\n",[51,559,560],{"class":53,"line":291},[51,561,562],{},"; When set, listen.owner and listen.group are ignored\n",[51,564,565],{"class":53,"line":297},[51,566,567],{},";listen.acl_users =\n",[51,569,570],{"class":53,"line":303},[51,571,572],{},";listen.acl_groups =\n",[51,574,575],{"class":53,"line":309},[51,576,429],{},[13,578,579,583,584,587],{},[580,581,582],"strong",{},"2022年1月14日更新","：在 Fedora 尝试部署的时候遇到了新的坑，Fedora 的相应配置文件为 ",[33,585,586],{},"/etc/php-fpm.d/www.conf","，相应修改如下",[42,589,591],{"className":123,"code":590,"language":125,"meta":47,"style":47},"; Unix user/group of processes\n; Note: The user is mandatory. If the group is not set, the default user's group\n;       will be used.\n; RPM: apache user chosen to provide access to the same directories as httpd\n-user = apache\n+user = caddy\n; RPM: Keep a group allowed to write in log dir.\n-user = apache\n+group = caddy\n\n; The address on which to accept FastCGI requests.\n; Valid syntaxes are:\n;   'ip.add.re.ss:port'    - to listen on a TCP socket to a specific IPv4 address on\n;             a specific port;\n---\n---\n; Set permissions for unix socket, if one is used. In Linux, read/write\n; permissions must be set in order to allow connections from a web server.\n; Default Values: user and group are set as the running user\n;                 mode is set to 0660\n-;listen.owner = nobody\n+listen.owner = caddy\n-;listen.owner = nobody\n+listen.group = caddy\n;listen.mode = 0660\n\n; When POSIX Access Control Lists are supported you can set them using\n; these options, value is a comma separated list of user/group names.\n; When set, listen.owner and listen.group are ignored\n-listen.acl_users = apache,nginx\n+;listen.acl_users = apache,nginx\n;listen.acl_groups =\n\n; List of addresses (IPv4/IPv6) of FastCGI clients which are allowed to connect.\n; Equivalent to the FCGI_WEB_SERVER_ADDRS environment variable in the original\n; PHP FCGI (5.2.2+). Makes sense only with a tcp listening socket. Each address\n; must be separated by a comma. If this value is left blank, connections will be\n; accepted from any ip address.\n; Default Value: any\nlisten.allowed_clients = 127.0.0.1\n",[33,592,593,597,601,605,610,615,620,625,629,634,640,644,648,652,657,661,665,670,675,679,683,688,693,697,702,706,710,714,718,722,727,732,736,740,745,750,755,760,765,770],{"__ignoreMap":47},[51,594,595],{"class":53,"line":54},[51,596,434],{},[51,598,599],{"class":53,"line":135},[51,600,439],{},[51,602,603],{"class":53,"line":141},[51,604,444],{},[51,606,607],{"class":53,"line":147},[51,608,609],{},"; RPM: apache user chosen to provide access to the same directories as httpd\n",[51,611,612],{"class":53,"line":153},[51,613,614],{},"-user = apache\n",[51,616,617],{"class":53,"line":159},[51,618,619],{},"+user = caddy\n",[51,621,622],{"class":53,"line":165},[51,623,624],{},"; RPM: Keep a group allowed to write in log dir.\n",[51,626,627],{"class":53,"line":171},[51,628,614],{},[51,630,631],{"class":53,"line":177},[51,632,633],{},"+group = caddy\n",[51,635,636],{"class":53,"line":183},[51,637,639],{"emptyLinePlaceholder":638},true,"\n",[51,641,642],{"class":53,"line":189},[51,643,469],{},[51,645,646],{"class":53,"line":195},[51,647,474],{},[51,649,650],{"class":53,"line":201},[51,651,479],{},[51,653,654],{"class":53,"line":207},[51,655,656],{},";             a specific port;\n",[51,658,659],{"class":53,"line":213},[51,660,429],{},[51,662,663],{"class":53,"line":219},[51,664,429],{},[51,666,667],{"class":53,"line":225},[51,668,669],{},"; Set permissions for unix socket, if one is used. In Linux, read/write\n",[51,671,672],{"class":53,"line":231},[51,673,674],{},"; permissions must be set in order to allow connections from a web server.\n",[51,676,677],{"class":53,"line":237},[51,678,517],{},[51,680,681],{"class":53,"line":243},[51,682,522],{},[51,684,685],{"class":53,"line":249},[51,686,687],{},"-;listen.owner = nobody\n",[51,689,690],{"class":53,"line":255},[51,691,692],{},"+listen.owner = caddy\n",[51,694,695],{"class":53,"line":261},[51,696,687],{},[51,698,699],{"class":53,"line":267},[51,700,701],{},"+listen.group = caddy\n",[51,703,704],{"class":53,"line":273},[51,705,547],{},[51,707,708],{"class":53,"line":279},[51,709,639],{"emptyLinePlaceholder":638},[51,711,712],{"class":53,"line":285},[51,713,552],{},[51,715,716],{"class":53,"line":291},[51,717,557],{},[51,719,720],{"class":53,"line":297},[51,721,562],{},[51,723,724],{"class":53,"line":303},[51,725,726],{},"-listen.acl_users = apache,nginx\n",[51,728,729],{"class":53,"line":309},[51,730,731],{},"+;listen.acl_users = apache,nginx\n",[51,733,734],{"class":53,"line":315},[51,735,572],{},[51,737,738],{"class":53,"line":321},[51,739,639],{"emptyLinePlaceholder":638},[51,741,742],{"class":53,"line":327},[51,743,744],{},"; List of addresses (IPv4/IPv6) of FastCGI clients which are allowed to connect.\n",[51,746,747],{"class":53,"line":333},[51,748,749],{},"; Equivalent to the FCGI_WEB_SERVER_ADDRS environment variable in the original\n",[51,751,752],{"class":53,"line":339},[51,753,754],{},"; PHP FCGI (5.2.2+). Makes sense only with a tcp listening socket. Each address\n",[51,756,757],{"class":53,"line":345},[51,758,759],{},"; must be separated by a comma. If this value is left blank, connections will be\n",[51,761,762],{"class":53,"line":351},[51,763,764],{},"; accepted from any ip address.\n",[51,766,767],{"class":53,"line":357},[51,768,769],{},"; Default Value: any\n",[51,771,772],{"class":53,"line":363},[51,773,774],{},"listen.allowed_clients = 127.0.0.1\n",[28,776,778],{"id":777},"拉取-picuploader-最新代码","拉取 PicUploader 最新代码",[13,780,781],{},"首先创建一个用于存放代码的目录",[42,783,785],{"className":44,"code":784,"language":46,"meta":47,"style":47},"sudo mkdir -p /var/www/\n",[33,786,787],{"__ignoreMap":47},[51,788,789,791,794,797],{"class":53,"line":54},[51,790,58],{"class":57},[51,792,793],{"class":61}," mkdir",[51,795,796],{"class":65}," -p",[51,798,799],{"class":61}," /var/www/\n",[13,801,802],{},"clone 最新源码",[42,804,806],{"className":44,"code":805,"language":46,"meta":47,"style":47},"sudo git clone https://github.com/xiebruce/PicUploader.git /var/www/picuploader\n",[33,807,808],{"__ignoreMap":47},[51,809,810,812,815,818,821],{"class":53,"line":54},[51,811,58],{"class":57},[51,813,814],{"class":61}," git",[51,816,817],{"class":61}," clone",[51,819,820],{"class":61}," https://github.com/xiebruce/PicUploader.git",[51,822,823],{"class":61}," /var/www/picuploader\n",[13,825,826],{},"将代码所有权转交给caddy用户",[42,828,830],{"className":44,"code":829,"language":46,"meta":47,"style":47},"sudo chown -R caddy:caddy /var/www/picuploader\n",[33,831,832],{"__ignoreMap":47},[51,833,834,836,839,842,845],{"class":53,"line":54},[51,835,58],{"class":57},[51,837,838],{"class":61}," chown",[51,840,841],{"class":65}," -R",[51,843,844],{"class":61}," caddy:caddy",[51,846,823],{"class":61},[28,848,850],{"id":849},"编辑caddyfile","编辑Caddyfile",[13,852,853,854,857],{},"caddy默认使用",[33,855,856],{},"/etc/caddy/Caddyfile","，因此如果你就部署这一个站点，直接修改这个就好了。",[13,859,860],{},"caddy的语法非常简洁易懂，因此我随手写了几行就能跑起来了。",[13,862,863,864,867],{},"下面是我用的Caddyfile，如果你在服务器上部署，请把",[33,865,866],{},"http://api.picuploader.com","更换为你服务器所需要绑定的域名(不带http协议头)，caddy将自动为你申请ssl证书。",[42,869,874],{"className":870,"code":872,"language":873},[871],"language-text","http://api.picuploader.com {\n        root * /var/www/picuploader\n\n        php_fastcgi * unix//run/php-fpm/php-fpm.sock {\n                index dashboard.php\n        }\n\n        file_server {\n                index index.php\n        }\n\n        handle_errors {\n        root * /etc/caddy/error\n                rewrite * /error.html\n                templates\n                file_server\n        }\n}\n\n# Import additional caddy config files in /etc/caddy/conf.d/\nimport /etc/caddy/conf.d/*\n","text",[33,875,872],{"__ignoreMap":47},[13,877,878,879,882,883,885,886,889],{},"php我选择了监听本地",[33,880,881],{},"unix//run/php-fpm/php-fpm.sock","的方案，这个路径在上文的",[33,884,418],{},"可以设置，如需查询，直接使用 ",[33,887,888],{},"grep listen\\ = /etc/php/php-fpm.d/www.conf","应该就能看见。",[89,891,893],{"id":892},"设置访问密码可选","设置访问密码（可选）",[13,895,896,897,900],{},"caddy2开始不允许在caddyfile中直接指定明文密码，因此我们需要用",[33,898,899],{},"hash-password","获取加密后的密码密文",[42,902,904],{"className":44,"code":903,"language":46,"meta":47,"style":47},"caddy hash-password  --plaintext \u003CYourPassword>\n",[33,905,906],{"__ignoreMap":47},[51,907,908,910,913,916,920,923],{"class":53,"line":54},[51,909,35],{"class":57},[51,911,912],{"class":61}," hash-password",[51,914,915],{"class":65},"  --plaintext",[51,917,919],{"class":918},"s5ixo"," \u003C",[51,921,922],{"class":61},"YourPasswor",[51,924,925],{"class":918},"d>\n",[13,927,928],{},"再在Caddyfile中，加上",[42,930,933],{"className":931,"code":932,"language":873},[871],"basicauth /* {\n        \u003Cusername> \u003Chashed_password>\n}\n",[33,934,932],{"__ignoreMap":47},[28,936,938],{"id":937},"修改hosts设置dns解析","修改hosts/设置DNS解析",[13,940,941],{},"由于 api.picuploader.com 这个域名不在我手里，而我只是想在本地使用，并不打算部署到服务器，因此修改hosts将这个域名解析到本地是个不错的选择。",[42,943,945],{"className":44,"code":944,"language":46,"meta":47,"style":47},"sudo sh -c \"echo '127.0.0.1     api.picuploader.com'  /etc/hosts\"\n",[33,946,947],{"__ignoreMap":47},[51,948,949,951,954,957],{"class":53,"line":54},[51,950,58],{"class":57},[51,952,953],{"class":61}," sh",[51,955,956],{"class":65}," -c",[51,958,959],{"class":61}," \"echo '127.0.0.1     api.picuploader.com'  /etc/hosts\"\n",[13,961,962],{},"而你若是在服务器上部署，应当去设置DNS解析，这个应该不需要我多说。",[28,964,965],{"id":965},"开启服务",[13,967,968,969,36,971,973],{},"在Archlinux下，我习惯直接用systemd运行",[33,970,35],{},[33,972,39],{},"以开机自启动。",[42,975,977],{"className":44,"code":976,"language":46,"meta":47,"style":47},"sudo systemctl enable --now caddy php-fpm\n",[33,978,979],{"__ignoreMap":47},[51,980,981,983,986,989,992,994],{"class":53,"line":54},[51,982,58],{"class":57},[51,984,985],{"class":61}," systemctl",[51,987,988],{"class":61}," enable",[51,990,991],{"class":65}," --now",[51,993,69],{"class":61},[51,995,996],{"class":61}," php-fpm\n",[28,998,999],{"id":999},"最终测试",[13,1001,1002,1003,1007],{},"在浏览器内访问 ",[20,1004,1006],{"href":866,"rel":1005},[24],"api.picuploader.com"," ，如果能看到页面，就算是成功啦。",[28,1009,1010],{"id":1010},"设置上传参数",[13,1012,1013,1014],{},"见作者博客：",[20,1015,1018],{"href":1016,"rel":1017},"https://www.xiebruce.top/117.html",[24],"PicUploader: 各图床获取上传图片参数的方法",[1020,1021,1022],"style",{},"html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}",{"title":47,"searchDepth":135,"depth":135,"links":1024},[1025,1026,1034,1035,1038,1039,1040,1041],{"id":30,"depth":135,"text":30},{"id":84,"depth":135,"text":84,"children":1027},[1028,1030,1032],{"id":91,"depth":141,"text":1029},"在/etc/php/php.ini启用PicUploader所需拓展",{"id":387,"depth":141,"text":1031},"编辑/etc/php/php.ini以增加单文件上传大小限制",{"id":415,"depth":141,"text":1033},"编辑/etc/php/php-fpm.d/www.conf使其在运行时使用caddy用户。",{"id":777,"depth":135,"text":778},{"id":849,"depth":135,"text":850,"children":1036},[1037],{"id":892,"depth":141,"text":893},{"id":937,"depth":135,"text":938},{"id":965,"depth":135,"text":965},{"id":999,"depth":135,"text":999},{"id":1010,"depth":135,"text":1010},"2021-10-21 22:15:33","md",{},"/2021/10/21/picuploader-on-archlinux-with-caddy","---\ntitle: PicUploader使用系列（一）——在Archlinux上使用Caddy部署PicUploader\ndate: 2021-10-21 22:15:33\nsticky:\ntags:\n- Archlinux\n- Caddy\n- PicUploader\n- PHP\n---\n\n> 之前找对大陆网络友好的图床时，找到了cloudinary，但是全英文界面对操作增加了不少难度，其页面也不是很简洁，让我一下打消了使用网页版的念头。通过搜索，找到了 PicUploader 这一方案，使用php编写，支持cloudinary的api。\n>\n> 作者在其[博客](https://www.xiebruce.top/17.html)中仅提供了nginx的部署方案，我参考其配置文件成功实现了在caddy下的部署，并且花费了数个小时排坑，故写下本文帮助后来者节省时间。\n\n## 安装`caddy`和`php-fpm`以及所需的拓展\n\n```bash\nsudo pacman -S caddy php-fpm php-gd php-sqlite --needed\n```\n\n## 配置`php-fpm`\n\n### 在`/etc/php/php.ini`启用PicUploader所需拓展\n\nPicUploaer依赖于`fileinfo`、`gd`、`curl`、`exif`、`pdo_sqlite`拓展，可以使用`php -m`命令来查看目前加载成功了的插件。\n\n```diff\n;extension=bcmath\n;extension=bz2\n;extension=calendar\n- extension=curl\n+ extension=curl\n;extension=dba\n;extension=enchant\n- extension=exif\n+ extension=exif\n;extension=ffi\n;extension=ftp\n- extension=gd\n+ extension=gd\n;extension=gettext\n;extension=gmp\n;extension=iconv\n;extension=imap\n;extension=intl\n;extension=ldap\n;extension=mysqli\n;extension=odbc\n;zend_extension=opcache\n;extension=pdo_dblib\n;extension=pdo_mysql\n;extension=pdo_odbc\n;extension=pdo_pgsql\n- extension=pdo_sqlite\n+ extension=pdo_sqlite\n;extension=pgsql\n;extension=pspell\n;extension=shmop\n;extension=snmp\n;extension=soap\n;extension=sockets\n;extension=sodium\n;extension=sqlite3\n;extension=sysvmsg\n;extension=sysvsem\n;extension=sysvshm\n;extension=tidy\n;extension=xmlrpc\n;extension=xsl\nextension=zip\n```\n\n### 编辑`/etc/php/php.ini`以增加单文件上传大小限制\n\n~~查出这个问题浪费了我整整4小时时间。~~\n\n```diff\n- upload_max_filesize = 2M\n+ upload_max_filesize = 100M\n```\n\n### 编辑`/etc/php/php-fpm.d/www.conf`使其在运行时使用caddy用户。\n\n```diff\n---\n; Unix user/group of processes\n; Note: The user is mandatory. If the group is not set, the default user's group\n;       will be used.\n- user = http\n+ user = caddy\n- group = http\n+ group = caddy\n; The address on which to accept FastCGI requests.\n; Valid syntaxes are:\n;   'ip.add.re.ss:port'    - to listen on a TCP socket to a specific IPv4 address on\n;                            a specific port;\n;   '[ip:6:addr:ess]:port' - to listen on a TCP socket to a specific IPv6 address on\n---\n---\n; Note: This value is mandatory.\nlisten = /run/php-fpm/php-fpm.sock\n; and group can be specified either by name or by their numeric IDs.\n; Default Values: user and group are set as the running user\n;                 mode is set to 0660\n- listen.owner = http\n+ listen.owner = caddy\n- listen.group = http\n+ listen.group = caddy\n;listen.mode = 0660\n; When POSIX Access Control Lists are supported you can set them using\n; these options, value is a comma separated list of user/group names.\n; When set, listen.owner and listen.group are ignored\n;listen.acl_users =\n;listen.acl_groups =\n---\n```\n\n**2022年1月14日更新**：在 Fedora 尝试部署的时候遇到了新的坑，Fedora 的相应配置文件为 `/etc/php-fpm.d/www.conf`，相应修改如下\n\n```diff\n; Unix user/group of processes\n; Note: The user is mandatory. If the group is not set, the default user's group\n;       will be used.\n; RPM: apache user chosen to provide access to the same directories as httpd\n-user = apache\n+user = caddy\n; RPM: Keep a group allowed to write in log dir.\n-user = apache\n+group = caddy\n\n; The address on which to accept FastCGI requests.\n; Valid syntaxes are:\n;   'ip.add.re.ss:port'    - to listen on a TCP socket to a specific IPv4 address on\n;             a specific port;\n---\n---\n; Set permissions for unix socket, if one is used. In Linux, read/write\n; permissions must be set in order to allow connections from a web server.\n; Default Values: user and group are set as the running user\n;                 mode is set to 0660\n-;listen.owner = nobody\n+listen.owner = caddy\n-;listen.owner = nobody\n+listen.group = caddy\n;listen.mode = 0660\n\n; When POSIX Access Control Lists are supported you can set them using\n; these options, value is a comma separated list of user/group names.\n; When set, listen.owner and listen.group are ignored\n-listen.acl_users = apache,nginx\n+;listen.acl_users = apache,nginx\n;listen.acl_groups =\n\n; List of addresses (IPv4/IPv6) of FastCGI clients which are allowed to connect.\n; Equivalent to the FCGI_WEB_SERVER_ADDRS environment variable in the original\n; PHP FCGI (5.2.2+). Makes sense only with a tcp listening socket. Each address\n; must be separated by a comma. If this value is left blank, connections will be\n; accepted from any ip address.\n; Default Value: any\nlisten.allowed_clients = 127.0.0.1\n```\n\n## 拉取 PicUploader 最新代码\n\n首先创建一个用于存放代码的目录\n\n```bash\nsudo mkdir -p /var/www/\n```\n\nclone 最新源码\n\n```bash\nsudo git clone https://github.com/xiebruce/PicUploader.git /var/www/picuploader\n```\n\n将代码所有权转交给caddy用户\n\n```bash\nsudo chown -R caddy:caddy /var/www/picuploader\n```\n\n## 编辑Caddyfile\n\ncaddy默认使用`/etc/caddy/Caddyfile`，因此如果你就部署这一个站点，直接修改这个就好了。\n\ncaddy的语法非常简洁易懂，因此我随手写了几行就能跑起来了。\n\n下面是我用的Caddyfile，如果你在服务器上部署，请把`http://api.picuploader.com`更换为你服务器所需要绑定的域名(不带http协议头)，caddy将自动为你申请ssl证书。\n\n```\nhttp://api.picuploader.com {\n        root * /var/www/picuploader\n\n        php_fastcgi * unix//run/php-fpm/php-fpm.sock {\n                index dashboard.php\n        }\n\n        file_server {\n                index index.php\n        }\n\n        handle_errors {\n        root * /etc/caddy/error\n                rewrite * /error.html\n                templates\n                file_server\n        }\n}\n\n# Import additional caddy config files in /etc/caddy/conf.d/\nimport /etc/caddy/conf.d/*\n```\n\nphp我选择了监听本地`unix//run/php-fpm/php-fpm.sock`的方案，这个路径在上文的`/etc/php/php-fpm.d/www.conf`可以设置，如需查询，直接使用 `grep listen\\ = /etc/php/php-fpm.d/www.conf`应该就能看见。\n\n### 设置访问密码（可选）\n\ncaddy2开始不允许在caddyfile中直接指定明文密码，因此我们需要用`hash-password`获取加密后的密码密文\n\n```bash\ncaddy hash-password  --plaintext \u003CYourPassword>\n```\n\n再在Caddyfile中，加上\n\n```\nbasicauth /* {\n\t\t\u003Cusername> \u003Chashed_password>\n}\n```\n\n## 修改hosts/设置DNS解析\n\n由于 api.picuploader.com 这个域名不在我手里，而我只是想在本地使用，并不打算部署到服务器，因此修改hosts将这个域名解析到本地是个不错的选择。\n\n```bash\nsudo sh -c \"echo '127.0.0.1\t\tapi.picuploader.com'  /etc/hosts\"\n```\n\n而你若是在服务器上部署，应当去设置DNS解析，这个应该不需要我多说。\n\n## 开启服务\n\n在Archlinux下，我习惯直接用systemd运行`caddy`和`php-fpm`以开机自启动。\n\n```bash\nsudo systemctl enable --now caddy php-fpm\n```\n\n## 最终测试\n\n在浏览器内访问 [api.picuploader.com](http://api.picuploader.com) ，如果能看到页面，就算是成功啦。\n\n## 设置上传参数\n\n见作者博客：[PicUploader: 各图床获取上传图片参数的方法](https://www.xiebruce.top/117.html)\n\n",{"title":5,"description":47},"posts/picuploader-on-archlinux-with-caddy",false,[1051,1052,1053,1054],"Archlinux","Caddy","PicUploader","PHP","1aKp6zhAeh1naUYhWNiH4U6XgFx-7SsjgDCJmZShJ_Q",[1057,1062],{"title":1058,"path":1059,"stem":1060,"date":1061,"children":-1},"PicUploader使用系列（二）——为KDE的dolphin添加右键快捷菜单","/2021/10/24/picuploader-with-kde-action","posts/picuploader-with-kde-action","2021-10-24 22:26:50",{"title":1063,"path":1064,"stem":1065,"date":1066,"children":-1},"Archlinux坚果云踩坑实录","/2021/10/02/nutstore-guide-on-archlinux-kde","posts/nutstore-guide-on-archlinux-kde","2021-10-02 00:21:34",1761769024371]