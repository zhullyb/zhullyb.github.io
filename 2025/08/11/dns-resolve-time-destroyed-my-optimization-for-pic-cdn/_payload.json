[{"data":1,"prerenderedAt":444},["ShallowReactive",2],{"post-2025-08-11-dns-resolve-time-destroyed-my-optimization-for-pic-cdn":3,"surround-2025-08-11-dns-resolve-time-destroyed-my-optimization-for-pic-cdn":432,"randomIndex/2025/08/11/dns-resolve-time-destroyed-my-optimization-for-pic-cdn/":443},{"id":4,"title":5,"body":6,"date":415,"description":416,"extension":417,"meta":418,"navigation":419,"path":420,"rawbody":421,"seo":422,"stem":423,"sticky":424,"tags":425,"__hash__":431},"posts/posts/dns-resolve-time-destroyed-my-optimization-for-pic-cdn.md","DNS 解析时长毁了我精心设计的图床网络架构",{"type":7,"value":8,"toc":412},"minimark",[9,18,25,31,42,47,140,155,160,163,236,241,244,249,272,277,288],[10,11,12,13,17],"p",{},"去年夏天，我兴致勃勃地写了好几篇博文，详细讲述了我如何搭建博客图床。核心目标很明确：",[14,15,16],"strong",{},"分地区解析 DNS","，让国内外的访客都能嗖嗖地加载图片，体验拉满。想法嘛，绝对是走在技术前沿的，堪称完美！然而……现实它总是喜欢给你来点小惊喜，对吧？",[10,19,20],{},[21,22],"img",{"alt":23,"src":24},"","https://static.031130.xyz/uploads/2025/08/11/26306b2a483ba.webp",[10,26,27,30],{},[14,28,29],{},"955 毫秒！"," 看到这个 DNS  解析时长的时候，我差点把刚喝下去的霸王茶姬喷在屏幕上。这简直就是一个隐形刺客，在我精心设计的图床网络架构背后，悄咪咪地给了致命一击。想象一下，访客满怀期待地点开你的博客，结果光是为了搞清楚图片服务器在哪，就要等上差不多一秒钟？这体验优化了个寂寞啊！",[10,32,33,34,37,38,41],{},"为啥之前没发现？这得“感谢”",[14,35,36],{},"DNS 缓存","这位老好人。它勤勤恳恳地帮后来的访客记住了答案，让我的本地测试和复访测试都一片祥和。直到最近，有群友向我反馈了首次访问时图片的加载速度过慢，我才如梦初醒。再结合最近为了秋招准备的八股文中里面关于 DNS 解析那套繁琐的流程（递归查询、权威查询、根域名、顶级域名……查个地址堪比查户口本），我瞬间锁定了罪魁祸首：",[14,39,40],{},"首次访问时的 DNS 解析延迟","。",[10,43,44],{},[14,45,46],{},"来，复盘一下我那“曲折离奇”的 DNS 寻址之旅（访客视角）：",[48,49,50,61,75,92,104,120,135],"ol",{},[51,52,53],"li",{},[14,54,55,56,60],{},"访客想访问 ",[57,58,59],"code",{},"static.031130.xyz"," 的图片。",[51,62,63,70,71,74],{},[14,64,65,66,69],{},"查 ",[57,67,68],{},"031130.xyz"," 的权威 DNS："," 问了一圈，发现权威服务器原来在 ",[14,72,73],{},"Cloudflare"," (国外)。",[51,76,77,80,81,83,84,87,88,91],{},[14,78,79],{},"Cloudflare 权威服务器回复："," “哦，",[57,82,59],{}," 啊？它是个马甲 (",[57,85,86],{},"CNAME",")，真身是 ",[57,89,90],{},"cdn-cname.zhul.in","，你去找它吧！”",[51,93,94,99,100,103],{},[14,95,65,96,69],{},[57,97,98],{},"zhul.in"," 这次权威服务器在 ",[14,101,102],{},"DNSPod"," (国内)。",[51,105,106,109,110,112,113,115,116,119],{},[14,107,108],{},"DNSPod 权威服务器回复 (针对国内用户)："," “",[57,111,90],{}," 也是个马甲 (",[57,114,86],{},")，它实际是 ",[57,117,118],{},"small-storage-cdn.b0.aicdn.com","，接着找！”",[51,121,122,127,128,130,131,134],{},[14,123,65,124,126],{},[57,125,118],{},"："," 最终，它可能还会再 ",[57,129,86],{}," 到类似 ",[57,132,133],{},"nm.aicdn.com"," 这样的 CDN 节点主机名。",[51,136,137],{},[14,138,139],{},"最终获得 IP 地址，开始连接 CDN 节点下载图片。",[10,141,142,143,146,147,150,151,154],{},"发现问题没？",[14,144,145],{},"关键的第一步和第二步，权威 DNS 查询指向了国外的 Cloudflare！"," 对于国内用户，虽然最终解析到的 CDN 节点 (",[57,148,149],{},"small-storage-cdn.b0.aicdn.com/nm.aicdn.com",") 是国内的、速度飞快，但光是",[14,152,153],{},"前两步跨越重洋的 DNS 查询","，就足够让首次访问的用户体验跌入谷底。那个 955ms 的解析时长，基本就是花在跟国外 DNS 服务器“跨国聊天”上了。",[10,156,157],{},[14,158,159],{},"优化方案：三管齐下，围剿 DNS 延迟",[10,161,162],{},"既然找到了病根，就得下猛药：",[48,164,165,183,195],{},[51,166,167,174,175,178,179,182],{},[14,168,169,170,173],{},"DNS 预取 (",[57,171,172],{},"dns-prefetch","):"," 在博客的 HTML ",[57,176,177],{},"\u003Chead>"," 里，早早地加上 ",[57,180,181],{},"\u003Clink rel=\"dns-prefetch\" href=\"//static.031130.xyz\">","。这相当于浏览器在渲染页面时，就悄悄开始解析图床域名了，等真需要加载图片时，DNS 结果可能已经准备好了，神不知鬼不觉。当然也可以使用 preconnect 等等更激进的策略，但本文着重讲 DNS 解析，因此不做拓展。",[51,184,185,188,189,191,192,194],{},[14,186,187],{},"延长 DNS 记录的 TTL (生存时间)："," 把 ",[57,190,59],{}," 这个 ",[57,193,86],{}," 记录的 TTL 值调大。以前都设置得较短，方便快速切换。现在为了缓存，适当延长（比如几小时甚至一天）。这样，一旦有用户解析过，本地 DNS 服务器就能记住更久，后续用户（包括同一用户再次访问）就能直接从缓存拿到结果，省掉跨国查询。",[51,196,197,200,201,203,204,207,208,211,212],{},[14,198,199],{},"釜底抽薪：迁移权威 DNS！"," 这是最核心的一步。直接把 ",[57,202,68],{}," 域名的",[14,205,206],{},"权威 DNS 服务器","，从 Cloudflare ",[14,209,210],{},"搬回国内 DNSPod","。这样一来：\n",[213,214,215,221,233],"ul",{},[51,216,217,218,220],{},"访客的递归 DNS 服务器查询 ",[57,219,68],{}," 的权威服务器时，直接找到的就是国内的 DNSPod，响应飞快。",[51,222,223,224,226,227,229,230,232],{},"DNSPod 直接告诉递归服务器 ",[57,225,59],{}," -> ",[57,228,118],{}," 完全在国内完成，丝般顺滑，不需要 ",[57,231,90],{}," 当分区域解析的工具人",[51,234,235],{},"整个 DNS 解析链路都在国内高速完成，首次访问的 955ms 噩梦彻底拜拜。",[10,237,238],{},[14,239,240],{},"效果如何？",[10,242,243],{},"受限于 DNS 缓存带来的测试困难，最终的效果确实很难在短时间内测试出来。但迁移权威 DNS 到 DNSPod + 调整 TTL +  加上预取之后，再测试首次访问的 DNS 解析时间总算是降到了可接受的程度，这才是 CDN  优化该有的样子！",[10,245,246],{},[14,247,248],{},"教训总结：",[213,250,251,257,266],{},[51,252,253,256],{},[14,254,255],{},"别让 DNS 成为性能短板！"," 尤其是在涉及多地优化时，权威 DNS 的地理位置对首次访问延迟至关重要。能用国内的权威，就别用国外的。",[51,258,259,262,263,265],{},[14,260,261],{},"缓存是好东西，但首次访问是软肋。"," 善用 ",[57,264,172],{}," 和合理设置 TTL 能有效缓解。",[51,267,268,271],{},[14,269,270],{},"监控和用户反馈是金。"," 自己的测试环境往往有缓存“美化”，真实世界的首次访问体验要靠更细致的监控和用户的火眼金睛（感谢反馈的朋友！）。",[10,273,274],{},[14,275,276],{},"!!! 超级重要补充：警惕 CNAME 拉平 !!!",[10,278,279,280,287],{},"最后，必须给各位提个醒！如果你和我一样，需要依赖分地区解析来让访客访问到最近的 CDN 节点（比如让国内走国内CDN，国外走Cloudflare），那么千万要",[14,281,282,283,286],{},"避开 ",[57,284,285],{},"CNAME Flattening"," (CNAME 拉平) 这个“优化”方案","！",[213,289,290,323,335,370],{},[51,291,292,295,296,298,299,226,302,305,306,308,309,312,313,316,317,320,321,41],{},[14,293,294],{},"CNAME 拉平是什么？"," 简单说，就是权威 DNS 服务器（比如 Cloudflare）看到你设置了一个 ",[57,297,86],{}," 记录（比如 ",[57,300,301],{},"static.example.com",[57,303,304],{},"cdn.cname.target.com","），它主动帮你去找 ",[57,307,304],{}," 的最终 ",[57,310,311],{},"A","/",[57,314,315],{},"AAAA"," 记录 (IP地址)，然后把 ",[14,318,319],{},"最终的 IP 地址"," 直接返回给查询者，而不是返回 ",[57,322,86],{},[51,324,325,328,329,126,332],{},[14,326,327],{},"听起来很美好？它确实能减少 CNAME 链的长度！"," 但它有个",[14,330,331],{},"致命缺点",[14,333,334],{},"权威 DNS 服务器在拉平解析时，会丢掉分地区解析的上下文！",[51,336,337,340,341,344,345,348,349,352,353,355,356,358,359,361,362,365,366,369],{},[14,338,339],{},"为什么失效？"," 分地区解析 (",[57,342,343],{},"DNS View"," 或 ",[57,346,347],{},"GeoDNS",") 的功能是",[14,350,351],{},"在权威 DNS 服务器层面实现的","。当权威服务器执行 ",[57,354,86],{}," 拉平时，它是在它自己所在的位置去查询 ",[57,357,304],{}," 的 IP。比如你的权威 DNS 在 Cloudflare (美国节点)，它拉平查询时，拿到的 ",[57,360,304],{}," 的 IP ",[14,363,364],{},"大概率是给美国用户用的最优 IP","。然后它把这个 IP ",[14,367,368],{},"返回给了所有地区的查询者","，包括中国用户！你精心配置的让中国用户解析到国内 CDN IP 的策略就完全失效了！",[51,371,372,375,376,382,383,386,387,389,390,393,394,397,398,400,401,403,404,226,406,408,409,411],{},[14,373,374],{},"结论："," 如果你需要 ",[14,377,378,379,381],{},"分地区解析 (",[57,380,347],{},")"," 功能，",[14,384,385],{},"绝对不要","在你希望应用分地区解析的域名上启用 ",[57,388,285],{}," (或 ",[57,391,392],{},"ALIAS",", ",[57,395,396],{},"ANAME"," 等实现类似拉平效果的功能)。老老实实用 ",[57,399,86],{}," 指向另一个支持 ",[57,402,347],{}," 的域名（就像我初始方案里 ",[57,405,59],{},[57,407,90],{},"，而 ",[57,410,98],{}," 在 DNSPod 上做分地区解析），才能保证你的分流策略正确执行。",{"title":23,"searchDepth":413,"depth":413,"links":414},2,[],"2025-08-11 00:06:40","去年夏天，我兴致勃勃地写了好几篇博文，详细讲述了我如何搭建博客图床。核心目标很明确：分地区解析 DNS，让国内外的访客都能嗖嗖地加载图片，体验拉满。想法嘛，绝对是走在技术前沿的，堪称完美！然而……现实它总是喜欢给你来点小惊喜，对吧？","md",{},true,"/2025/08/11/dns-resolve-time-destroyed-my-optimization-for-pic-cdn","---\ntitle: DNS 解析时长毁了我精心设计的图床网络架构\ndate: 2025-08-11 00:06:40\nsticky:\ntags:\n- CDN\n- 图床\n- DNS\n- Network\n- Cloudflare\n- Dnspod\n---\n\n去年夏天，我兴致勃勃地写了好几篇博文，详细讲述了我如何搭建博客图床。核心目标很明确：**分地区解析 DNS**，让国内外的访客都能嗖嗖地加载图片，体验拉满。想法嘛，绝对是走在技术前沿的，堪称完美！然而……现实它总是喜欢给你来点小惊喜，对吧？\n\n![](https://static.031130.xyz/uploads/2025/08/11/26306b2a483ba.webp)\n\n**955 毫秒！** 看到这个 DNS  解析时长的时候，我差点把刚喝下去的霸王茶姬喷在屏幕上。这简直就是一个隐形刺客，在我精心设计的图床网络架构背后，悄咪咪地给了致命一击。想象一下，访客满怀期待地点开你的博客，结果光是为了搞清楚图片服务器在哪，就要等上差不多一秒钟？这体验优化了个寂寞啊！\n\n为啥之前没发现？这得“感谢”**DNS 缓存**这位老好人。它勤勤恳恳地帮后来的访客记住了答案，让我的本地测试和复访测试都一片祥和。直到最近，有群友向我反馈了首次访问时图片的加载速度过慢，我才如梦初醒。再结合最近为了秋招准备的八股文中里面关于 DNS 解析那套繁琐的流程（递归查询、权威查询、根域名、顶级域名……查个地址堪比查户口本），我瞬间锁定了罪魁祸首：**首次访问时的 DNS 解析延迟**。\n\n**来，复盘一下我那“曲折离奇”的 DNS 寻址之旅（访客视角）：**\n\n1. **访客想访问 `static.031130.xyz` 的图片。**\n2. **查 `031130.xyz` 的权威 DNS：** 问了一圈，发现权威服务器原来在 **Cloudflare** (国外)。\n3. **Cloudflare 权威服务器回复：** “哦，`static.031130.xyz` 啊？它是个马甲 (`CNAME`)，真身是 `cdn-cname.zhul.in`，你去找它吧！”\n4. **查 `zhul.in` 的权威 DNS：** 这次权威服务器在 **DNSPod** (国内)。\n5. **DNSPod 权威服务器回复 (针对国内用户)：** “`cdn-cname.zhul.in` 也是个马甲 (`CNAME`)，它实际是 `small-storage-cdn.b0.aicdn.com`，接着找！”\n6. **查 `small-storage-cdn.b0.aicdn.com`：** 最终，它可能还会再 `CNAME` 到类似 `nm.aicdn.com` 这样的 CDN 节点主机名。\n7. **最终获得 IP 地址，开始连接 CDN 节点下载图片。**\n\n发现问题没？**关键的第一步和第二步，权威 DNS 查询指向了国外的 Cloudflare！** 对于国内用户，虽然最终解析到的 CDN 节点 (`small-storage-cdn.b0.aicdn.com/nm.aicdn.com`) 是国内的、速度飞快，但光是**前两步跨越重洋的 DNS 查询**，就足够让首次访问的用户体验跌入谷底。那个 955ms 的解析时长，基本就是花在跟国外 DNS 服务器“跨国聊天”上了。\n\n**优化方案：三管齐下，围剿 DNS 延迟**\n\n既然找到了病根，就得下猛药：\n\n1. **DNS 预取 (`dns-prefetch`):** 在博客的 HTML `\u003Chead>` 里，早早地加上 `\u003Clink rel=\"dns-prefetch\" href=\"//static.031130.xyz\">`。这相当于浏览器在渲染页面时，就悄悄开始解析图床域名了，等真需要加载图片时，DNS 结果可能已经准备好了，神不知鬼不觉。当然也可以使用 preconnect 等等更激进的策略，但本文着重讲 DNS 解析，因此不做拓展。\n2. **延长 DNS 记录的 TTL (生存时间)：** 把 `static.031130.xyz` 这个 `CNAME` 记录的 TTL 值调大。以前都设置得较短，方便快速切换。现在为了缓存，适当延长（比如几小时甚至一天）。这样，一旦有用户解析过，本地 DNS 服务器就能记住更久，后续用户（包括同一用户再次访问）就能直接从缓存拿到结果，省掉跨国查询。\n3. **釜底抽薪：迁移权威 DNS！** 这是最核心的一步。直接把 `031130.xyz` 域名的**权威 DNS 服务器**，从 Cloudflare **搬回国内 DNSPod**。这样一来：\n   - 访客的递归 DNS 服务器查询 `031130.xyz` 的权威服务器时，直接找到的就是国内的 DNSPod，响应飞快。\n   - DNSPod 直接告诉递归服务器 `static.031130.xyz` -> `small-storage-cdn.b0.aicdn.com` 完全在国内完成，丝般顺滑，不需要 `cdn-cname.zhul.in` 当分区域解析的工具人\n   - 整个 DNS 解析链路都在国内高速完成，首次访问的 955ms 噩梦彻底拜拜。\n\n**效果如何？**\n\n受限于 DNS 缓存带来的测试困难，最终的效果确实很难在短时间内测试出来。但迁移权威 DNS 到 DNSPod + 调整 TTL +  加上预取之后，再测试首次访问的 DNS 解析时间总算是降到了可接受的程度，这才是 CDN  优化该有的样子！\n\n**教训总结：**\n\n- **别让 DNS 成为性能短板！** 尤其是在涉及多地优化时，权威 DNS 的地理位置对首次访问延迟至关重要。能用国内的权威，就别用国外的。\n- **缓存是好东西，但首次访问是软肋。** 善用 `dns-prefetch` 和合理设置 TTL 能有效缓解。\n- **监控和用户反馈是金。** 自己的测试环境往往有缓存“美化”，真实世界的首次访问体验要靠更细致的监控和用户的火眼金睛（感谢反馈的朋友！）。\n\n**!!! 超级重要补充：警惕 CNAME 拉平 !!!**\n\n最后，必须给各位提个醒！如果你和我一样，需要依赖分地区解析来让访客访问到最近的 CDN 节点（比如让国内走国内CDN，国外走Cloudflare），那么千万要**避开 `CNAME Flattening` (CNAME 拉平) 这个“优化”方案**！\n\n- **CNAME 拉平是什么？** 简单说，就是权威 DNS 服务器（比如 Cloudflare）看到你设置了一个 `CNAME` 记录（比如 `static.example.com` -> `cdn.cname.target.com`），它主动帮你去找 `cdn.cname.target.com` 的最终 `A`/`AAAA` 记录 (IP地址)，然后把 **最终的 IP 地址** 直接返回给查询者，而不是返回 `CNAME`。\n- **听起来很美好？它确实能减少 CNAME 链的长度！** 但它有个**致命缺点**：**权威 DNS 服务器在拉平解析时，会丢掉分地区解析的上下文！**\n- **为什么失效？** 分地区解析 (`DNS View` 或 `GeoDNS`) 的功能是**在权威 DNS 服务器层面实现的**。当权威服务器执行 `CNAME` 拉平时，它是在它自己所在的位置去查询 `cdn.cname.target.com` 的 IP。比如你的权威 DNS 在 Cloudflare (美国节点)，它拉平查询时，拿到的 `cdn.cname.target.com` 的 IP **大概率是给美国用户用的最优 IP**。然后它把这个 IP **返回给了所有地区的查询者**，包括中国用户！你精心配置的让中国用户解析到国内 CDN IP 的策略就完全失效了！\n- **结论：** 如果你需要 **分地区解析 (`GeoDNS`)** 功能，**绝对不要**在你希望应用分地区解析的域名上启用 `CNAME Flattening` (或 `ALIAS`, `ANAME` 等实现类似拉平效果的功能)。老老实实用 `CNAME` 指向另一个支持 `GeoDNS` 的域名（就像我初始方案里 `static.031130.xyz` -> `cdn-cname.zhul.in`，而 `zhul.in` 在 DNSPod 上做分地区解析），才能保证你的分流策略正确执行。\n",{"title":5,"description":416},"posts/dns-resolve-time-destroyed-my-optimization-for-pic-cdn",false,[426,427,428,429,73,430],"CDN","图床","DNS","Network","Dnspod","3OLPu4_Q56PfQfzv-BmjF-s566KCF8U4-BO-zokyqWE",[433,438],{"title":434,"path":435,"stem":436,"date":437,"children":-1},"初试 Github Action Self-hosted Runner，想说爱你不容易","/2025/09/05/first-try-of-github-action-self-hosted-runner","posts/first-try-of-github-action-self-hosted-runner","2025-09-05 05:54:17",{"title":439,"path":440,"stem":441,"date":442,"children":-1},"Vue Markdown 渲染优化实战(下)：告别 DOM 操作，拥抱 AST 与函数式渲染","/2025/07/13/vue-markdown-render-improvement-2","posts/vue-markdown-render-improvement-2","2025-07-13 00:01:35",3,1761897608052]