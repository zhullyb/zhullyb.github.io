[{"data":1,"prerenderedAt":771},["ShallowReactive",2],{"post-2025-06-02-choosing-the-right-video-compression-format-for-web-in-2025":3,"surround-2025-06-02-choosing-the-right-video-compression-format-for-web-in-2025":760,"randomIndex/2025/06/02/choosing-the-right-video-compression-format-for-web-in-2025/":510},{"id":4,"title":5,"body":6,"date":746,"description":12,"extension":747,"meta":748,"navigation":749,"path":750,"rawbody":751,"seo":752,"stem":753,"sticky":754,"tags":755,"__hash__":759},"posts/posts/choosing-the-right-video-compression-format-for-web-in-2025.md","2025 年，如何为 web 页面上展示的视频选择合适的压缩算法？",{"type":7,"value":8,"toc":730},"minimark",[9,13,18,23,26,33,38,45,51,54,59,63,66,74,77,83,87,97,102,105,108,111,115,118,125,128,131,134,137,140,377,381,384,390,397,401,413,518,524,527,531,538,544,550,554,557,565,568,571,574,577,586,589,726],[10,11,12],"p",{},"事情的起因是需要在网页上展示一个时长约为 5 分钟的产品展示视频，拿到的 H264 编码的原文件有 60MB 大。高达 1646 Kbps 码率的视频文件通过网络传输，烧 cdn 流量费用不说，对于弱网环境下的用户体验也绝对不会好。因此必须在兼顾浏览器兼容性（太好了不用管 IE）的情况下，使用更现代的视频压缩算法进行压缩。",[14,15,17],"h2",{"id":16},"哪些压缩算法是目前的主流","哪些压缩算法是目前的主流？",[19,20,22],"h3",{"id":21},"av1","AV1",[10,24,25],{},"AV1 作为目前压缩效率最高的主流视频编码格式，在 2025 年的今天已经在 YouTube、Netflix、Bilibili 等视频网站全面铺开，毫无疑问是最值得优先考虑的选择；除了优异的压缩效率以外，AV1 免版税的优势使得各硬件厂商和浏览器内核开发者可以无所顾忌的将 AV1 编码的支持添加到自己的产品中。",[10,27,28],{},[29,30],"img",{"alt":31,"src":32},"","https://static.031130.xyz/uploads/2025/06/02/aec1af1718064.webp",[10,34,35],{},[29,36],{"alt":31,"src":37},"https://static.031130.xyz/uploads/2025/06/02/76a312b5a668b.webp",[10,39,40,41],{},"可惜的是，Safari 并没有对 AV1 编码添加软解支持，只有在搭载 Apple M3 及后续生产的 Mac 和 iPhone 15 Pro 后续的机型才拥有硬解 AV1 的能力，在此之前生产的产品均无法使用 Safari 播放 AV1 编码的视频。",[42,43,44],"del",{},"我宣布 Safari 已经成为当代 IE，妥妥阻碍 Web 发展的绊脚石",[10,46,47],{},[29,48],{"alt":49,"src":50},"Safari 在搭载 M2Pro 处理器的 Macbook Pro 上直接罢工了","https://static.031130.xyz/uploads/2025/06/02/01ddcc3948406.webp",[10,52,53],{},"除此之外，AV1 在压制视频时对设备的要求较高。在桌面端的消费级显卡中，目前只有 NVIDIA RTX 40 系、AMD Radeon RX 7000 系、IntelArc A380 及后续的产品拥有 AV1 的编码（encode）支持。而 Apple M 系列芯片至今没有任何一款产品拥有对 AV1 编码的硬件支持。这也导致我在我搭载 Intel Core i7-1165G7 的 ThinkPad 上使用 AV1 编码压缩视频时被迫使用 libaom-av1 进行软件编码，1080p 的视频压缩效率为 0.0025x 的速率，五分钟的视频要压一天多的时间。",[10,55,56],{},[29,57],{"alt":31,"src":58},"https://static.031130.xyz/uploads/2025/06/02/923ca02e1d835.webp",[19,60,62],{"id":61},"h265-hevc","H.265 / HEVC",[10,64,65],{},"作为 H.264 / AVC 的下一代继任者，H.265（又称 HEVC）的表现可谓是一手好牌打得稀巴烂。HEVC 由多个专利池（如 MPEG LA、HEVC Advance 和 Velos Media）管理，授权费用高且分散，昂贵的专利授权费用严重限制了它的普及速度和范围，尤其是在开放生态和网页端应用中。",[10,67,68,69,73],{},"Chromium / Firefox 不愿意当承担专利授权费的冤大头，拒绝在当今世界最大的两个开源浏览器内核中添加默认的 H.265 软解支持，目前主流浏览器普遍采用",[70,71,72],"strong",{},"能硬解就硬解，硬解不了就摆烂","的支持策略。Firefox on Linux 倒是另辟蹊径，不仅会尝试使用硬解，还会尝试使用用户在电脑上装的 ffmpeg 软解曲线救国。不过好在毕竟是 2013 年就确定的标准，现在大部分硬件厂商都集体被摁着脖子交了专利授权费以保证产品竞争力，Apple 更是 HEVC 的一等公民，保证了全系产品的 HEVC 解码能力。",[10,75,76],{},"目前未覆盖到的场景主要是 Chromium / Firefox on Windows 7 和 Chromium on Linux（包括 UOS、麒麟等一众国产 Linux 发行版）。",[10,78,79],{},[29,80],{"alt":81,"src":82},"在 Linux 上不支持硬解 H.265 的 Chrome 直接把视频当作音频播放了","https://static.031130.xyz/uploads/2025/06/02/2e8e5100f645a.webp",[19,84,86],{"id":85},"vp9","VP9",[10,88,89,90,93,94],{},"VP9 是 Google 于 2013 年推出的视频编码格式，作为 H.264 的继任者之一，在压缩效率上接近 H.265（HEVC），但最大的杀手锏是——",[70,91,92],{},"彻底免专利费","。这也让 VP9 成为 Google 对 HEVC 高额授权费用的掀桌式回应：",[70,95,96],{},"你们慢慢吃，我开一桌免费的。",[10,98,99],{},[29,100],{"alt":31,"src":101},"https://static.031130.xyz/uploads/2025/06/03/a9b473a3bd120.webp",[10,103,104],{},"借着免专利的东风和 Google 自家产品矩阵的强推，VP9 在 YouTube、WebRTC 乃至 Chrome 浏览器中迅速站稳了脚跟。特别是在 AV1 普及之前，VP9 几乎是网页视频播放领域的事实标准，甚至逼得苹果这个“编解码俱乐部元老”在 macOS 11 Big Sur 和 iOS 14 上的 Safari 破天荒地加入了 VP9 支持（尽管 VP9 in webm 的支持稍晚一些，具体见上表）。",[10,106,107],{},"VP9 的软解码支持基本无死角：Chromium、Firefox、Edge 都原生支持，Safari 也一反常态地“从了”。硬件解码方面，从 Intel Skylake（第六代酷睿）开始，NVIDIA GTX 950 及以上、AMD Vega 和 RDNA 系显卡基本都具备完整的 VP9 解码能力——总之，只要不是博物馆级别的老电脑，就能愉快播放 VP9 视频。",[10,109,110],{},"当然，编码仍是 VP9 的短板。Google 官方提供的开源实现 libvpx，速度比不上 x264/x265 等老牌选手，在缺乏硬件加速的场景下，仍然属于“关机前压一宿”的那种体验。不过相比 AV1 的 libaom-av1，VP9 至少还能算“可用”，适合轻量化应用、实时通信或是对压制速度敏感的用户，而早在 7 代 Intel 的 Kaby Lake 系列产品就已经引入了 VP9 的硬件编码支持，各家硬件厂商对 VP9 硬件编码的支持发展到今天还算不错。",[19,112,114],{"id":113},"h264-avc","H.264 / AVC",[10,116,117],{},"作为“老将出马一个顶俩”的代表，H.264 / AVC 无疑是过去二十年视频编码领域的霸主。自 2003 年标准确定以来，凭借良好的压缩效率、广泛的硬件支持和相对合理的专利授权策略，H.264 迅速成为从网络视频、蓝光光盘到直播、监控乃至手机录像的默认选择。如果你打开一个视频网站的视频流、下载一个在线视频、剪辑一个 vlog，大概率都绕不开 H.264 的身影。",[10,119,120,121,124],{},"H.264 的最大优势在于——",[70,122,123],{},"兼容性无敌","。不夸张地说，只要是带屏幕的设备，就能播放 H.264 视频。软解？早在十几年前的浏览器和媒体播放器中就已普及；硬解？从 Intel Sandy Bridge、NVIDIA Fermi、AMD VLIW4 这些“史前”架构开始就已加入对 H.264 的完整支持——你甚至可以在树莓派、智能冰箱上流畅播放 H.264 视频。",[10,126,127],{},"虽然 H.264 同样存在和 H.265 相同的专利问题，但其授权策略明显更温和——MPEG LA 提供的专利池授权门槛较低，且不向免费网络视频收取费用，使得包括 Chromium、Firefox 在内的浏览器都默认集成了 H.264 的软解功能。Apple 和 Microsoft 更是早早将其作为视频编码和解码的第一公民，Safari 和 Edge 天生支持 H.264，不存在任何兼容性烦恼。",[10,129,130],{},"当然，作为一项 20 多年前的技术，H.264 在压缩效率上已经明显落后于 VP9、HEVC 和 AV1。相同画质下，H.264 的码率要比 AV1 高出 30～50%，在追求极致带宽利用或存储节省的应用场景中就显得有些力不从心。然而在今天这个“能播比好看更重要”的现实环境中，H.264 依然是默认方案，是“稳健老哥”的代名词。",[10,132,133],{},"所以，即便 AV1、HEVC、VP9 各有亮点，H.264 依旧凭借“老、稳、全”三大核心竞争力，在 2025 年依然牢牢占据着视频生态链的中枢地位——只要这个世界还有浏览器不支持 AV1（可恶的 Safari 不支持软解），服务器不想烧钱转码视频，或用户设备太老，H.264 就不会退场。",[19,135,136],{"id":136},"小结",[10,138,139],{},"在视频编码方面，浏览器不再是那个能靠一己之力抹平硬件和系统差异的超人，所以总有一些特殊情况是表格中无法涵盖的。",[141,142,143,168],"table",{},[144,145,146],"thead",{},[147,148,149,153,156,159,162,165],"tr",{},[150,151,152],"th",{},"编解码器",[150,154,155],{},"压缩效率",[150,157,158],{},"浏览器",[150,160,161],{},"桌面端支持",[150,163,164],{},"移动端支持",[150,166,167],{},"备注",[169,170,171,190,207,230,251,268,285,301,315,332,349,363],"tbody",{},[147,172,173,176,179,182,185,187],{},[174,175,22],"td",{},[174,177,178],{},"★★★",[174,180,181],{},"Chrome / Chromium",[174,183,184],{},"是 (v70+，发布于 2018 年 10 月)",[174,186,184],{},[174,188,189],{},"硬解优先，软解后备",[147,191,192,194,196,199,202,205],{},[174,193],{},[174,195],{},[174,197,198],{},"Firefox",[174,200,201],{},"是 (v67+，发布于 2019 年 5 月)",[174,203,204],{},"是 (v113+，发布于 2023 年 5 月)",[174,206,189],{},[147,208,209,211,213,216,219,221],{},[174,210],{},[174,212],{},[174,214,215],{},"Safari",[174,217,218],{},"不完全支持 (仅近两年的产品支持)",[174,220,218],{},[174,222,223,226,227],{},[70,224,225],{},"仅支持硬解"," (M3, A17 Pro 系芯片后开始支持)，",[70,228,229],{},"无软解支持",[147,231,232,235,238,240,243,245],{},[174,233,234],{},"HEVC (H.265)",[174,236,237],{},"★★☆",[174,239,181],{},[174,241,242],{},"不完全支持",[174,244,242],{},[174,246,247,250],{},[70,248,249],{},"仅支持硬解，无软解支持","（Windows 可从微软商店安装付费的软解插件）",[147,252,253,255,257,259,261,263],{},[174,254],{},[174,256],{},[174,258,198],{},[174,260,242],{},[174,262,242],{},[174,264,265,267],{},[70,266,249],{},"（Linux 可依赖系统 ffmpeg 实现软解）",[147,269,270,272,274,276,279,282],{},[174,271],{},[174,273],{},[174,275,215],{},[174,277,278],{},"近期设备全部支持 (macOS High Sierra+，发布于 2017 年 6 月)",[174,280,281],{},"近期设备全部支持 (iOS 11+，发布于 2017 年 10 月)",[174,283,284],{},"苹果是 H.265 一等公民",[147,286,287,289,291,293,296,298],{},[174,288,86],{},[174,290,237],{},[174,292,181],{},[174,294,295],{},"是",[174,297,295],{},[174,299,300],{},"支持良好",[147,302,303,305,307,309,311,313],{},[174,304],{},[174,306],{},[174,308,198],{},[174,310,295],{},[174,312,295],{},[174,314,300],{},[147,316,317,319,321,323,326,329],{},[174,318],{},[174,320],{},[174,322,215],{},[174,324,325],{},"是 (v14.1+，发布于 2021 年 4 月)",[174,327,328],{},"是 (iOS 17.4+，发布于 2024 年 3 月)",[174,330,331],{},"支持稍晚（此处指兼容 vp9 的 webm 时间，vp9 in WebRTC 的兼容时间更早）",[147,333,334,337,340,342,344,346],{},[174,335,336],{},"H.264 (AVC)",[174,338,339],{},"★☆☆",[174,341,181],{},[174,343,295],{},[174,345,295],{},[174,347,348],{},"通用",[147,350,351,353,355,357,359,361],{},[174,352],{},[174,354],{},[174,356,198],{},[174,358,295],{},[174,360,295],{},[174,362,348],{},[147,364,365,367,369,371,373,375],{},[174,366],{},[174,368],{},[174,370,215],{},[174,372,295],{},[174,374,295],{},[174,376,348],{},[14,378,380],{"id":379},"怎么选","怎么选？",[10,382,383],{},"我们不是专业的视频托管平台，不像 YouTube、Bilibili 那样专业到可以向用户提供多种分辨率、压缩算法的选择。",[10,385,386],{},[29,387],{"alt":388,"src":389},"Bilibili 为用户提供了三种压缩算法的视频源","https://static.031130.xyz/uploads/2025/06/03/096484dbc0f3a.webp",[10,391,392,393,396],{},"最终的选择策略，必须在",[70,394,395],{},"压缩效率、播放兼容性、编码耗时","等维度之间做出权衡。",[19,398,400],{"id":399},"选择一av1-挑大梁h264-保兼容","选择一：AV1 挑大梁，H.264 保兼容",[10,402,403,404,408,409,412],{},"现代浏览器支持在 ",[405,406,407],"code",{},"\u003Cvideo>"," 标签中使用 ",[405,410,411],{},"\u003Csource>"," 标签和 MIME type 让浏览器按需播放",[414,415,419],"pre",{"className":416,"code":417,"language":418,"meta":31,"style":31},"language-html shiki shiki-themes github-light github-dark","\u003Cvideo controls poster=\"preview.jpg\">\n  \u003Csource src=\"video.av1.webm\" type='video/webm; codecs=\"av01\"' />\n  \u003Csource src=\"video.h264.mp4\" type='video/mp4' />\n  当前浏览器不支持视频播放\n\u003C/video>\n","html",[405,420,421,451,479,502,508],{"__ignoreMap":31},[422,423,426,430,434,438,441,444,448],"span",{"class":424,"line":425},"line",1,[422,427,429],{"class":428},"sVt8B","\u003C",[422,431,433],{"class":432},"s9eBZ","video",[422,435,437],{"class":436},"sScJk"," controls",[422,439,440],{"class":436}," poster",[422,442,443],{"class":428},"=",[422,445,447],{"class":446},"sZZnC","\"preview.jpg\"",[422,449,450],{"class":428},">\n",[422,452,454,457,460,463,465,468,471,473,476],{"class":424,"line":453},2,[422,455,456],{"class":428},"  \u003C",[422,458,459],{"class":432},"source",[422,461,462],{"class":436}," src",[422,464,443],{"class":428},[422,466,467],{"class":446},"\"video.av1.webm\"",[422,469,470],{"class":436}," type",[422,472,443],{"class":428},[422,474,475],{"class":446},"'video/webm; codecs=\"av01\"'",[422,477,478],{"class":428}," />\n",[422,480,482,484,486,488,490,493,495,497,500],{"class":424,"line":481},3,[422,483,456],{"class":428},[422,485,459],{"class":432},[422,487,462],{"class":436},[422,489,443],{"class":428},[422,491,492],{"class":446},"\"video.h264.mp4\"",[422,494,470],{"class":436},[422,496,443],{"class":428},[422,498,499],{"class":446},"'video/mp4'",[422,501,478],{"class":428},[422,503,505],{"class":424,"line":504},4,[422,506,507],{"class":428},"  当前浏览器不支持视频播放\n",[422,509,511,514,516],{"class":424,"line":510},5,[422,512,513],{"class":428},"\u003C/",[422,515,433],{"class":432},[422,517,450],{"class":428},[10,519,520,521,523],{},"通过这样的写法，浏览器会自动选择最先能解码的 ",[405,522,459],{},"，无需写复杂的判断逻辑或使用 JavaScript 动态切换。默认的 AV1 编码在最大程度上减少了传输流量降低成本，享受现代浏览器与设备的压缩红利；而 H.264 则作为兜底方案，保证了在不支持 AV1 的 Safari 等老旧设备上的回放兼容性。",[10,525,526],{},"然而这个选择可能并不是太合适，一方面我手上最先进的处理器 Apple M4 并不支持硬件编码 AV1 视频，5 分钟的视频压完需要整整 3 个小时，如果还需要视压缩质量来回调整压缩参数重新压上几次，那可真是遭老罪了；另一方面，即使 Chromium / Firefox 等主流浏览器内核现在都支持 AV1 的软解，但在一些硬件较老的设备上播放 AV1 编码的视频可能让用户的电脑风扇原地起飞，这一点在 YouTube 大力推广 AV1 的时候就曾遭到不少用户的诟病。",[19,528,530],{"id":529},"选择二vp9-独挑大梁","选择二：VP9 独挑大梁",[10,532,533,534,537],{},"考虑到 AV1 编码的高昂成本和",[42,535,536],{},"用户电脑风扇原地起飞的风险","，VP9 也是一个非常具有竞争力的选择。VP9 在主流浏览器中得到了非常好的兼容，因此可以考虑放弃 H.264 的 fallback 方案独挑大梁。而 VP9 硬件编码在近几年的硬件设备上的普遍支持也给足了我勇气，让我可以多次调整压缩质量重新压缩，找一个在文件体积和画面清晰度之间的 sweet point。",[10,539,540],{},[541,542,543],"em",{},"由于是 VP9 独挑大梁，因此大多数人可能会考虑使用与 VP9 最为适配的 webm 格式封装视频。但目前在 webm 中最广泛使用的音频编码 opus 在 Safari 上的兼容性并不是太好（在 2024 年 3 月发布的 Safari 17.4 才开始支持），建议斟酌一下是不是继续用回 AAC 编码，并将视频封装在 mp4 中。",[10,545,546],{},[29,547],{"alt":548,"src":549},"https://caniuse.com/opus","https://static.031130.xyz/uploads/2025/06/03/ec3b5dbcbcc29.webp",[14,551,553],{"id":552},"音频码率太高再砍一刀","音频码率太高？再砍一刀",[10,555,556],{},"上面说了那么多的视频压缩算法，其实只是局限于视频画面的压缩，音频这一块其实还能再压一点出来。",[414,558,563],{"className":559,"code":561,"language":562},[560],"language-text","Stream #0:1[0x2](und): Audio: aac (LC) (mp4a / 0x6134706D), 48000 Hz, stereo, fltp, 128 kb/s (default)\n","text",[405,564,561],{"__ignoreMap":31},[10,566,567],{},"一个介绍产品的视频，在音频部分采用了 48000 Hz 双声道采样，码率高达 128 kbps，说实话有点奢侈。我直接砍成 64 kbps 单声道，又省下 2MB 的文件大小。",[14,569,570],{"id":570},"写在最后",[10,572,573],{},"对于前端开发者来说，视频压缩算法的选择早已不是单纯的“压得小不小”问题，而是一场在设备能力、浏览器兼容性、用户体验与开发成本之间的博弈。我们既要跟上技术演进的节奏，拥抱 AV1、VP9 等更高效的编解码器，也要在实际项目中照顾到现实中的设备分布和播放环境。",[10,575,576],{},"在理想与落地之间，我们所能做的，就是充分利用 HTML5 提供的容错机制，搭配好合适的编码策略和封装格式，让网页上的每一段视频都能在合适的设备上、以合理的代价播放出来。",[10,578,579,580,582,583,585],{},"毕竟，Web 从来不缺“能不能做”，缺的是“做得优雅”。如果说编码器是硬件工程师和视频平台的战场，那 ",[405,581,407],{}," 标签下的这几行 ",[405,584,411],{},"，才是属于我们前端工程师的战壕。",[14,587,588],{"id":588},"参见",[590,591,592,602,609,616,623,630,637,644,650,657,664,671,678,685,692,699,709,716,723],"ul",{},[593,594,595],"li",{},[596,597,601],"a",{"href":598,"rel":599},"https://developer.mozilla.org/zh-CN/docs/Web/Media/Guides/Formats/Video_codecs",[600],"nofollow","网页视频编码指南 - Web 媒体技术 | MDN",[593,603,604],{},[596,605,608],{"href":606,"rel":607},"https://research.netflix.com/research-area/video-encoding-and-quality",[600],"Encoding & Quality - Netflix Research",[593,610,611],{},[596,612,615],{"href":613,"rel":614},"https://optiview.dolby.com/resources/blog/playback/how-the-vp9-codec-supports-now-streaming-to-apple-devices-more/",[600],"How the VP9 Codec Supports Now Streaming to Apple Devices & More | dolby.io",[593,617,618],{},[596,619,622],{"href":620,"rel":621},"https://www.chromium.org/audio-video/",[600],"Audio/Video | The Chromium Project",[593,624,625],{},[596,626,629],{"href":627,"rel":628},"https://caniuse.com/av1",[600],"AV1 video format | Can I use... Support tables for HTML5, CSS3, etc",[593,631,632],{},[596,633,636],{"href":634,"rel":635},"https://caniuse.com/webm",[600],"WebM video format | Can I use... Support tables for HTML5, CSS3, etc",[593,638,639],{},[596,640,643],{"href":641,"rel":642},"https://caniuse.com/hevc",[600],"HEVC/H.265 video format | Can I use... Support tables for HTML5, CSS3, etc",[593,645,646],{},[596,647,649],{"href":548,"rel":648},[600],"Opus audio format | Can I use... Support tables for HTML5, CSS3, etc",[593,651,652],{},[596,653,656],{"href":654,"rel":655},"https://caniuse.com/mpeg4",[600],"MPEG-4/H.264 video format | Can I use... Support tables for HTML5, CSS3, etc",[593,658,659],{},[596,660,663],{"href":661,"rel":662},"https://en.wikipedia.org/wiki/AV1",[600],"AV1 - Wikipedia",[593,665,666],{},[596,667,670],{"href":668,"rel":669},"https://en.wikipedia.org/wiki/High_Efficiency_Video_Coding",[600],"High Efficiency Video Coding - Wikipedia",[593,672,673],{},[596,674,677],{"href":675,"rel":676},"https://en.wikipedia.org/wiki/VP9",[600],"VP9 - Wikipedia",[593,679,680],{},[596,681,684],{"href":682,"rel":683},"https://en.wikipedia.org/wiki/Advanced_Video_Coding",[600],"Advanced Video Coding - Wikipedia",[593,686,687],{},[596,688,691],{"href":689,"rel":690},"https://www.intel.com/content/www/us/en/developer/articles/technical/encode-and-decode-capabilities-for-7th-generation-intel-core-processors-and-newer.html",[600],"Encode and Decode Capabilities for 7th Generation Intel® Core™...",[593,693,694],{},[596,695,698],{"href":696,"rel":697},"https://zh.wikipedia.org/zh-cn/MacOS_High_Sierra",[600],"macOS High Sierra - 维基百科，自由的百科全书",[593,700,701],{},[596,702,705,706],{"href":703,"rel":704},"https://www.androidpolice.com/2018/10/17/chrome-70-adds-av1-video-support-improves-pwas-windows-apk-download/",[600],"Chrome 70 adds AV1 video support, improves PWAs on Windows, and more ",[422,707,708],{},"APK Download",[593,710,711],{},[596,712,715],{"href":713,"rel":714},"https://www.mozilla.org/en-US/firefox/android/113.0/releasenotes/",[600],"Firefox for Android 113.0, See All New Features, Updates and Fixes",[593,717,718],{},[596,719,722],{"href":720,"rel":721},"https://www.bilibili.com/video/BV1nW4y1V7kR/",[600],"视频网站的“蓝光”是怎么骗你的？——视频画质全解析【柴知道】_哔哩哔哩_bilibili",[593,724,725],{},"《4K 清晰度不如4年前，视频变糊是你的错觉吗》- 原视频已 404",[727,728,729],"style",{},"html pre.shiki code .sVt8B, html code.shiki .sVt8B{--shiki-default:#24292E;--shiki-dark:#E1E4E8}html pre.shiki code .s9eBZ, html code.shiki .s9eBZ{--shiki-default:#22863A;--shiki-dark:#85E89D}html pre.shiki code .sScJk, html code.shiki .sScJk{--shiki-default:#6F42C1;--shiki-dark:#B392F0}html pre.shiki code .sZZnC, html code.shiki .sZZnC{--shiki-default:#032F62;--shiki-dark:#9ECBFF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":31,"searchDepth":453,"depth":453,"links":731},[732,739,743,744,745],{"id":16,"depth":453,"text":17,"children":733},[734,735,736,737,738],{"id":21,"depth":481,"text":22},{"id":61,"depth":481,"text":62},{"id":85,"depth":481,"text":86},{"id":113,"depth":481,"text":114},{"id":136,"depth":481,"text":136},{"id":379,"depth":453,"text":380,"children":740},[741,742],{"id":399,"depth":481,"text":400},{"id":529,"depth":481,"text":530},{"id":552,"depth":453,"text":553},{"id":570,"depth":453,"text":570},{"id":588,"depth":453,"text":588},"2025-06-02 20:59:10","md",{},true,"/2025/06/02/choosing-the-right-video-compression-format-for-web-in-2025","---\ntitle: 2025 年，如何为 web 页面上展示的视频选择合适的压缩算法？\ndate: 2025-06-02 20:59:10\nsticky:\ntags:\n- HTML\n- Web\n- Network\n---\n\n事情的起因是需要在网页上展示一个时长约为 5 分钟的产品展示视频，拿到的 H264 编码的原文件有 60MB 大。高达 1646 Kbps 码率的视频文件通过网络传输，烧 cdn 流量费用不说，对于弱网环境下的用户体验也绝对不会好。因此必须在兼顾浏览器兼容性（太好了不用管 IE）的情况下，使用更现代的视频压缩算法进行压缩。\n\n## 哪些压缩算法是目前的主流？\n\n### AV1\n\nAV1 作为目前压缩效率最高的主流视频编码格式，在 2025 年的今天已经在 YouTube、Netflix、Bilibili 等视频网站全面铺开，毫无疑问是最值得优先考虑的选择；除了优异的压缩效率以外，AV1 免版税的优势使得各硬件厂商和浏览器内核开发者可以无所顾忌的将 AV1 编码的支持添加到自己的产品中。\n\n![](https://static.031130.xyz/uploads/2025/06/02/aec1af1718064.webp)\n\n![](https://static.031130.xyz/uploads/2025/06/02/76a312b5a668b.webp)\n\n可惜的是，Safari 并没有对 AV1 编码添加软解支持，只有在搭载 Apple M3 及后续生产的 Mac 和 iPhone 15 Pro 后续的机型才拥有硬解 AV1 的能力，在此之前生产的产品均无法使用 Safari 播放 AV1 编码的视频。~~我宣布 Safari 已经成为当代 IE，妥妥阻碍 Web 发展的绊脚石~~\n\n![Safari 在搭载 M2Pro 处理器的 Macbook Pro 上直接罢工了](https://static.031130.xyz/uploads/2025/06/02/01ddcc3948406.webp)\n\n除此之外，AV1 在压制视频时对设备的要求较高。在桌面端的消费级显卡中，目前只有 NVIDIA RTX 40 系、AMD Radeon RX 7000 系、IntelArc A380 及后续的产品拥有 AV1 的编码（encode）支持。而 Apple M 系列芯片至今没有任何一款产品拥有对 AV1 编码的硬件支持。这也导致我在我搭载 Intel Core i7-1165G7 的 ThinkPad 上使用 AV1 编码压缩视频时被迫使用 libaom-av1 进行软件编码，1080p 的视频压缩效率为 0.0025x 的速率，五分钟的视频要压一天多的时间。\n\n![](https://static.031130.xyz/uploads/2025/06/02/923ca02e1d835.webp)\n\n### H.265 / HEVC\n\n作为 H.264 / AVC 的下一代继任者，H.265（又称 HEVC）的表现可谓是一手好牌打得稀巴烂。HEVC 由多个专利池（如 MPEG LA、HEVC Advance 和 Velos Media）管理，授权费用高且分散，昂贵的专利授权费用严重限制了它的普及速度和范围，尤其是在开放生态和网页端应用中。\n\nChromium / Firefox 不愿意当承担专利授权费的冤大头，拒绝在当今世界最大的两个开源浏览器内核中添加默认的 H.265 软解支持，目前主流浏览器普遍采用**能硬解就硬解，硬解不了就摆烂**的支持策略。Firefox on Linux 倒是另辟蹊径，不仅会尝试使用硬解，还会尝试使用用户在电脑上装的 ffmpeg 软解曲线救国。不过好在毕竟是 2013 年就确定的标准，现在大部分硬件厂商都集体被摁着脖子交了专利授权费以保证产品竞争力，Apple 更是 HEVC 的一等公民，保证了全系产品的 HEVC 解码能力。\n\n目前未覆盖到的场景主要是 Chromium / Firefox on Windows 7 和 Chromium on Linux（包括 UOS、麒麟等一众国产 Linux 发行版）。\n\n![在 Linux 上不支持硬解 H.265 的 Chrome 直接把视频当作音频播放了](https://static.031130.xyz/uploads/2025/06/02/2e8e5100f645a.webp)\n\n### VP9\n\nVP9 是 Google 于 2013 年推出的视频编码格式，作为 H.264 的继任者之一，在压缩效率上接近 H.265（HEVC），但最大的杀手锏是——**彻底免专利费**。这也让 VP9 成为 Google 对 HEVC 高额授权费用的掀桌式回应：**你们慢慢吃，我开一桌免费的。**\n\n![](https://static.031130.xyz/uploads/2025/06/03/a9b473a3bd120.webp)\n\n借着免专利的东风和 Google 自家产品矩阵的强推，VP9 在 YouTube、WebRTC 乃至 Chrome 浏览器中迅速站稳了脚跟。特别是在 AV1 普及之前，VP9 几乎是网页视频播放领域的事实标准，甚至逼得苹果这个“编解码俱乐部元老”在 macOS 11 Big Sur 和 iOS 14 上的 Safari 破天荒地加入了 VP9 支持（尽管 VP9 in webm 的支持稍晚一些，具体见上表）。\n\nVP9 的软解码支持基本无死角：Chromium、Firefox、Edge 都原生支持，Safari 也一反常态地“从了”。硬件解码方面，从 Intel Skylake（第六代酷睿）开始，NVIDIA GTX 950 及以上、AMD Vega 和 RDNA 系显卡基本都具备完整的 VP9 解码能力——总之，只要不是博物馆级别的老电脑，就能愉快播放 VP9 视频。\n\n当然，编码仍是 VP9 的短板。Google 官方提供的开源实现 libvpx，速度比不上 x264/x265 等老牌选手，在缺乏硬件加速的场景下，仍然属于“关机前压一宿”的那种体验。不过相比 AV1 的 libaom-av1，VP9 至少还能算“可用”，适合轻量化应用、实时通信或是对压制速度敏感的用户，而早在 7 代 Intel 的 Kaby Lake 系列产品就已经引入了 VP9 的硬件编码支持，各家硬件厂商对 VP9 硬件编码的支持发展到今天还算不错。\n\n### H.264 / AVC\n\n作为“老将出马一个顶俩”的代表，H.264 / AVC 无疑是过去二十年视频编码领域的霸主。自 2003 年标准确定以来，凭借良好的压缩效率、广泛的硬件支持和相对合理的专利授权策略，H.264 迅速成为从网络视频、蓝光光盘到直播、监控乃至手机录像的默认选择。如果你打开一个视频网站的视频流、下载一个在线视频、剪辑一个 vlog，大概率都绕不开 H.264 的身影。\n\nH.264 的最大优势在于——**兼容性无敌**。不夸张地说，只要是带屏幕的设备，就能播放 H.264 视频。软解？早在十几年前的浏览器和媒体播放器中就已普及；硬解？从 Intel Sandy Bridge、NVIDIA Fermi、AMD VLIW4 这些“史前”架构开始就已加入对 H.264 的完整支持——你甚至可以在树莓派、智能冰箱上流畅播放 H.264 视频。\n\n虽然 H.264 同样存在和 H.265 相同的专利问题，但其授权策略明显更温和——MPEG LA 提供的专利池授权门槛较低，且不向免费网络视频收取费用，使得包括 Chromium、Firefox 在内的浏览器都默认集成了 H.264 的软解功能。Apple 和 Microsoft 更是早早将其作为视频编码和解码的第一公民，Safari 和 Edge 天生支持 H.264，不存在任何兼容性烦恼。\n\n当然，作为一项 20 多年前的技术，H.264 在压缩效率上已经明显落后于 VP9、HEVC 和 AV1。相同画质下，H.264 的码率要比 AV1 高出 30～50%，在追求极致带宽利用或存储节省的应用场景中就显得有些力不从心。然而在今天这个“能播比好看更重要”的现实环境中，H.264 依然是默认方案，是“稳健老哥”的代名词。\n\n所以，即便 AV1、HEVC、VP9 各有亮点，H.264 依旧凭借“老、稳、全”三大核心竞争力，在 2025 年依然牢牢占据着视频生态链的中枢地位——只要这个世界还有浏览器不支持 AV1（可恶的 Safari 不支持软解），服务器不想烧钱转码视频，或用户设备太老，H.264 就不会退场。\n\n### 小结\n\n在视频编码方面，浏览器不再是那个能靠一己之力抹平硬件和系统差异的超人，所以总有一些特殊情况是表格中无法涵盖的。\n\n| 编解码器     | 压缩效率 | 浏览器            | 桌面端支持                                                 | 移动端支持                                       | 备注                                                         |\n| ------------ | -------- | ----------------- | ---------------------------------------------------------- | ------------------------------------------------ | ------------------------------------------------------------ |\n| AV1          | ★★★      | Chrome / Chromium | 是 (v70+，发布于 2018 年 10 月)                            | 是 (v70+，发布于 2018 年 10 月)                  | 硬解优先，软解后备                                           |\n|              |          | Firefox           | 是 (v67+，发布于 2019 年 5 月)                             | 是 (v113+，发布于 2023 年 5 月)                  | 硬解优先，软解后备                                           |\n|              |          | Safari            | 不完全支持 (仅近两年的产品支持)                            | 不完全支持 (仅近两年的产品支持)                  | **仅支持硬解** (M3, A17 Pro 系芯片后开始支持)，**无软解支持** |\n| HEVC (H.265) | ★★☆      | Chrome / Chromium | 不完全支持                                                 | 不完全支持                                       | **仅支持硬解，无软解支持**（Windows 可从微软商店安装付费的软解插件） |\n|              |          | Firefox           | 不完全支持                                                 | 不完全支持                                       | **仅支持硬解，无软解支持**（Linux 可依赖系统 ffmpeg 实现软解） |\n|              |          | Safari            | 近期设备全部支持 (macOS High Sierra+，发布于 2017 年 6 月) | 近期设备全部支持 (iOS 11+，发布于 2017 年 10 月) | 苹果是 H.265 一等公民                                        |\n| VP9          | ★★☆      | Chrome / Chromium | 是                                                         | 是                                               | 支持良好                                                     |\n|              |          | Firefox           | 是                                                         | 是                                               | 支持良好                                                     |\n|              |          | Safari            | 是 (v14.1+，发布于 2021 年 4 月)                           | 是 (iOS 17.4+，发布于 2024 年 3 月)              | 支持稍晚（此处指兼容 vp9 的 webm 时间，vp9 in WebRTC 的兼容时间更早） |\n| H.264 (AVC)  | ★☆☆      | Chrome / Chromium | 是                                                         | 是                                               | 通用                                                         |\n|              |          | Firefox           | 是                                                         | 是                                               | 通用                                                         |\n|              |          | Safari            | 是                                                         | 是                                               | 通用                                                         |\n\n## 怎么选？\n\n我们不是专业的视频托管平台，不像 YouTube、Bilibili 那样专业到可以向用户提供多种分辨率、压缩算法的选择。\n\n![Bilibili 为用户提供了三种压缩算法的视频源](https://static.031130.xyz/uploads/2025/06/03/096484dbc0f3a.webp)\n\n最终的选择策略，必须在**压缩效率、播放兼容性、编码耗时**等维度之间做出权衡。\n\n### 选择一：AV1 挑大梁，H.264 保兼容\n\n现代浏览器支持在 `\u003Cvideo>` 标签中使用 `\u003Csource>` 标签和 MIME type 让浏览器按需播放\n\n```html \n\u003Cvideo controls poster=\"preview.jpg\">\n  \u003Csource src=\"video.av1.webm\" type='video/webm; codecs=\"av01\"' />\n  \u003Csource src=\"video.h264.mp4\" type='video/mp4' />\n  当前浏览器不支持视频播放\n\u003C/video>\n```\n\n通过这样的写法，浏览器会自动选择最先能解码的 `source`，无需写复杂的判断逻辑或使用 JavaScript 动态切换。默认的 AV1 编码在最大程度上减少了传输流量降低成本，享受现代浏览器与设备的压缩红利；而 H.264 则作为兜底方案，保证了在不支持 AV1 的 Safari 等老旧设备上的回放兼容性。\n\n然而这个选择可能并不是太合适，一方面我手上最先进的处理器 Apple M4 并不支持硬件编码 AV1 视频，5 分钟的视频压完需要整整 3 个小时，如果还需要视压缩质量来回调整压缩参数重新压上几次，那可真是遭老罪了；另一方面，即使 Chromium / Firefox 等主流浏览器内核现在都支持 AV1 的软解，但在一些硬件较老的设备上播放 AV1 编码的视频可能让用户的电脑风扇原地起飞，这一点在 YouTube 大力推广 AV1 的时候就曾遭到不少用户的诟病。\n\n### 选择二：VP9 独挑大梁\n\n考虑到 AV1 编码的高昂成本和~~用户电脑风扇原地起飞的风险~~，VP9 也是一个非常具有竞争力的选择。VP9 在主流浏览器中得到了非常好的兼容，因此可以考虑放弃 H.264 的 fallback 方案独挑大梁。而 VP9 硬件编码在近几年的硬件设备上的普遍支持也给足了我勇气，让我可以多次调整压缩质量重新压缩，找一个在文件体积和画面清晰度之间的 sweet point。\n\n*由于是 VP9 独挑大梁，因此大多数人可能会考虑使用与 VP9 最为适配的 webm 格式封装视频。但目前在 webm 中最广泛使用的音频编码 opus 在 Safari 上的兼容性并不是太好（在 2024 年 3 月发布的 Safari 17.4 才开始支持），建议斟酌一下是不是继续用回 AAC 编码，并将视频封装在 mp4 中。*\n\n![https://caniuse.com/opus](https://static.031130.xyz/uploads/2025/06/03/ec3b5dbcbcc29.webp)\n\n## 音频码率太高？再砍一刀\n\n上面说了那么多的视频压缩算法，其实只是局限于视频画面的压缩，音频这一块其实还能再压一点出来。\n\n```\nStream #0:1[0x2](und): Audio: aac (LC) (mp4a / 0x6134706D), 48000 Hz, stereo, fltp, 128 kb/s (default)\n```\n\n一个介绍产品的视频，在音频部分采用了 48000 Hz 双声道采样，码率高达 128 kbps，说实话有点奢侈。我直接砍成 64 kbps 单声道，又省下 2MB 的文件大小。\n\n## 写在最后\n\n对于前端开发者来说，视频压缩算法的选择早已不是单纯的“压得小不小”问题，而是一场在设备能力、浏览器兼容性、用户体验与开发成本之间的博弈。我们既要跟上技术演进的节奏，拥抱 AV1、VP9 等更高效的编解码器，也要在实际项目中照顾到现实中的设备分布和播放环境。\n\n在理想与落地之间，我们所能做的，就是充分利用 HTML5 提供的容错机制，搭配好合适的编码策略和封装格式，让网页上的每一段视频都能在合适的设备上、以合理的代价播放出来。\n\n毕竟，Web 从来不缺“能不能做”，缺的是“做得优雅”。如果说编码器是硬件工程师和视频平台的战场，那 `\u003Cvideo>` 标签下的这几行 `\u003Csource>`，才是属于我们前端工程师的战壕。\n\n## 参见\n\n- [网页视频编码指南 - Web 媒体技术 | MDN](https://developer.mozilla.org/zh-CN/docs/Web/Media/Guides/Formats/Video_codecs)\n- [Encoding & Quality - Netflix Research](https://research.netflix.com/research-area/video-encoding-and-quality)\n- [How the VP9 Codec Supports Now Streaming to Apple Devices & More | dolby.io](https://optiview.dolby.com/resources/blog/playback/how-the-vp9-codec-supports-now-streaming-to-apple-devices-more/)\n- [Audio/Video | The Chromium Project](https://www.chromium.org/audio-video/)\n- [AV1 video format | Can I use... Support tables for HTML5, CSS3, etc](https://caniuse.com/av1)\n- [WebM video format | Can I use... Support tables for HTML5, CSS3, etc](https://caniuse.com/webm)\n- [HEVC/H.265 video format | Can I use... Support tables for HTML5, CSS3, etc](https://caniuse.com/hevc)\n- [Opus audio format | Can I use... Support tables for HTML5, CSS3, etc](https://caniuse.com/opus)\n- [MPEG-4/H.264 video format | Can I use... Support tables for HTML5, CSS3, etc](https://caniuse.com/mpeg4)\n- [AV1 - Wikipedia](https://en.wikipedia.org/wiki/AV1)\n- [High Efficiency Video Coding - Wikipedia](https://en.wikipedia.org/wiki/High_Efficiency_Video_Coding)\n- [VP9 - Wikipedia](https://en.wikipedia.org/wiki/VP9)\n- [Advanced Video Coding - Wikipedia](https://en.wikipedia.org/wiki/Advanced_Video_Coding)\n- [Encode and Decode Capabilities for 7th Generation Intel® Core™...](https://www.intel.com/content/www/us/en/developer/articles/technical/encode-and-decode-capabilities-for-7th-generation-intel-core-processors-and-newer.html)\n- [macOS High Sierra - 维基百科，自由的百科全书](https://zh.wikipedia.org/zh-cn/MacOS_High_Sierra)\n- [Chrome 70 adds AV1 video support, improves PWAs on Windows, and more [APK Download]](https://www.androidpolice.com/2018/10/17/chrome-70-adds-av1-video-support-improves-pwas-windows-apk-download/)\n- [Firefox for Android 113.0, See All New Features, Updates and Fixes](https://www.mozilla.org/en-US/firefox/android/113.0/releasenotes/)\n- [视频网站的“蓝光”是怎么骗你的？——视频画质全解析【柴知道】_哔哩哔哩_bilibili](https://www.bilibili.com/video/BV1nW4y1V7kR/)\n- 《4K 清晰度不如4年前，视频变糊是你的错觉吗》- 原视频已 404\n",{"title":5,"description":12},"posts/choosing-the-right-video-compression-format-for-web-in-2025",false,[756,757,758],"HTML","Web","Network","b09qblLSxVQlOfhSDRnTRUlP5CSGydK20CUnvQMhjYo",[761,766],{"title":762,"path":763,"stem":764,"date":765,"children":-1},"前端中的量子力学——一打开 F12 就消失的 Bug","/2025/06/08/front-end-bug-gone-when-open-devtool","posts/front-end-bug-gone-when-open-devtool","2025-06-08 01:22:13",{"title":767,"path":768,"stem":769,"date":770,"children":-1},"el-image 和 el-table 怎么就打架了？Stacking Context 是什么？","/2025/05/31/el-image-and-el-table-why-the-fight-and-what-is-a-stacking-context","posts/el-image-and-el-table-why-the-fight-and-what-is-a-stacking-context","2025-05-31 00:29:40",1761699626849]