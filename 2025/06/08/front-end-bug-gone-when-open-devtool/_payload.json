[{"data":1,"prerenderedAt":608},["ShallowReactive",2],{"post-2025-06-08-front-end-bug-gone-when-open-devtool":3,"surround-2025-06-08-front-end-bug-gone-when-open-devtool":597,"randomIndex/2025/06/08/front-end-bug-gone-when-open-devtool":114},{"id":4,"title":5,"body":6,"date":581,"description":73,"extension":582,"meta":583,"navigation":33,"path":585,"rawbody":586,"seo":587,"stem":588,"sticky":589,"tags":590,"__hash__":596},"posts/posts/front-end-bug-gone-when-open-devtool.md","前端中的量子力学——一打开 F12 就消失的 Bug",{"type":7,"value":8,"toc":574},"minimark",[9,14,18,28,34,41,44,60,64,67,222,225,228,231,234,240,243,278,282,295,298,369,372,506,509,512,516,523,534,537,542,545,570],[10,11,13],"h2",{"id":12},"前端量子态现象的首次观测","前端「量子态」现象的首次观测",[15,16,17],"p",{},"这事说来也邪乎，半个月前吃着火锅唱着歌，在工位上嘎嘎写码，发现一个诡异的 bug。作为如假包换的人类程序员，写出 bug 是再正常不过的事情了，但这 bug 邪门就邪门在我一打开 F12 的 DevTools 观察相关的 dom 结构，这 bug 就自动消失了；再把 DevTools 一关，Ctrl + F5 一刷新页面，Bug 又出现了。",[15,19,20,21],{},"下面是使用 iframe 引入的 ",[22,23,27],"a",{"href":24,"rel":25},"https://static.031130.xyz/demo/scroll-jump-bug.html",[26],"nofollow","demo",[29,30],"iframe",{"src":24,"width":31,"height":32,"allowFullScreen":33},"100%",500,true,[15,35,36],{},[37,38],"img",{"alt":39,"src":40},"“观测”指南","https://static.031130.xyz/uploads/2025/06/08/65620d31fce6f.webp",[15,42,43],{},"这 Bug 给我整得脑瓜子嗡嗡的，我又不是物理学家，写个前端怎么量子力学的观察者效应都给我整出来了（？",[45,46,47,54,57],"blockquote",{},[15,48,49,53],{},[50,51,52],"strong",{},"观测者效应","（Observer effect），是指“观测”这种行为对被观测对象造成一定影响的效应。",[15,55,56],{},"在量子力学实验中，如果要测算一个电子所处的速度，就要用两个光子隔一段时间去撞击这个电子，但第一个光子就已经把这个电子撞飞了，便改变了电子的原有速度，我们便无法测出真正准确的速度（不确定原理）。时间流逝的快慢也会受到观测者的影响，用很高的频率去观测粒子的衰变，反而使得粒子长时间不衰变。",[15,58,59],{},"——wikipedia",[10,61,63],{"id":62},"量子迷雾浏览器机制","量子迷雾❌浏览器机制✅",[15,65,66],{},"这里先稍微解释一下 demo 中的代码片段:",[68,69,74],"pre",{"className":70,"code":71,"language":72,"meta":73,"style":73},"language-javascript shiki shiki-themes github-light github-dark","if (scrollIndex >= groupLength) {\n  setTimeout(() => {\n    wrapper.style.transition = \"none\";\n    scrollIndex = 0;\n    wrapper.style.transform = `translateY(-${crollIndex * itemHeight}px)`;\n\n    requestAnimationFrame(() => {\n      wrapper.style.transition = \"transform 0.5s cubic-bezier(0.25, 0.1, 0.25, 1)\";\n    });\n  }, 500);\n}\n","javascript","",[75,76,77,96,112,128,142,167,173,185,198,204,216],"code",{"__ignoreMap":73},[78,79,82,86,90,93],"span",{"class":80,"line":81},"line",1,[78,83,85],{"class":84},"szBVR","if",[78,87,89],{"class":88},"sVt8B"," (scrollIndex ",[78,91,92],{"class":84},">=",[78,94,95],{"class":88}," groupLength) {\n",[78,97,99,103,106,109],{"class":80,"line":98},2,[78,100,102],{"class":101},"sScJk","  setTimeout",[78,104,105],{"class":88},"(() ",[78,107,108],{"class":84},"=>",[78,110,111],{"class":88}," {\n",[78,113,115,118,121,125],{"class":80,"line":114},3,[78,116,117],{"class":88},"    wrapper.style.transition ",[78,119,120],{"class":84},"=",[78,122,124],{"class":123},"sZZnC"," \"none\"",[78,126,127],{"class":88},";\n",[78,129,131,134,136,140],{"class":80,"line":130},4,[78,132,133],{"class":88},"    scrollIndex ",[78,135,120],{"class":84},[78,137,139],{"class":138},"sj4cs"," 0",[78,141,127],{"class":88},[78,143,145,148,150,153,156,159,162,165],{"class":80,"line":144},5,[78,146,147],{"class":88},"    wrapper.style.transform ",[78,149,120],{"class":84},[78,151,152],{"class":123}," `translateY(-${",[78,154,155],{"class":88},"crollIndex",[78,157,158],{"class":84}," *",[78,160,161],{"class":88}," itemHeight",[78,163,164],{"class":123},"}px)`",[78,166,127],{"class":88},[78,168,170],{"class":80,"line":169},6,[78,171,172],{"emptyLinePlaceholder":33},"\n",[78,174,176,179,181,183],{"class":80,"line":175},7,[78,177,178],{"class":101},"    requestAnimationFrame",[78,180,105],{"class":88},[78,182,108],{"class":84},[78,184,111],{"class":88},[78,186,188,191,193,196],{"class":80,"line":187},8,[78,189,190],{"class":88},"      wrapper.style.transition ",[78,192,120],{"class":84},[78,194,195],{"class":123}," \"transform 0.5s cubic-bezier(0.25, 0.1, 0.25, 1)\"",[78,197,127],{"class":88},[78,199,201],{"class":80,"line":200},9,[78,202,203],{"class":88},"    });\n",[78,205,207,210,213],{"class":80,"line":206},10,[78,208,209],{"class":88},"  }, ",[78,211,212],{"class":138},"500",[78,214,215],{"class":88},");\n",[78,217,219],{"class":80,"line":218},11,[78,220,221],{"class":88},"}\n",[15,223,224],{},"我这边拿到的需求是需要写一个无限滚动的轮播标题列表，每次展示三个，2 秒后标题列表整体上移，原本的第一个标题就移出可视范围了，下面会新补充一个新的标题列表。（可能解释的不清楚，但各位应该都看过上面的 demo 了）",[15,226,227],{},"当列表滚动到最底部的时候，我先取消 transition 过渡动画效果，趁机将整体列表平移到上一次可视范围内出现相同的三个标题的位置，再把 transition 过渡动画的效果加回来，这样就能在视觉上造成无限滚动的效果。",[15,229,230],{},"但问题就出在明明把 transition 属性取消了，但这一次平移仍然触发了过渡动画效果。",[15,232,233],{},"说实话，这是我短暂的码农生涯当中最绝望的一次，一方面是遇到的 bug 过于逆天以至于说出去都可能没人信，一方面是遇上这种问题是完全不能指望搜索引擎能给出什么解决方案的——毕竟我自己都不知道该怎么组织关键词进行搜索。",[15,235,236],{},[37,237],{"alt":238,"src":239},"这是小麦茶，带我入坑前端的学长","https://static.031130.xyz/uploads/2025/06/08/475a61b332454.webp",[15,241,242],{},"于是抱着试一试的心态，把相关代码喂给 ChatGPT-4o 看看能不能问出个所以然来。",[45,244,245,260],{},[15,246,247,248,251,252,255,256,259],{},"你描述的现象——“",[50,249,250],{},"滚动第九次时列表出现突兀的自下而上跳动","，而",[50,253,254],{},"打开 F12 时不会出现问题","”——",[50,257,258],{},"几乎可以确定是由于浏览器在某些渲染状态下跳过了某些帧（帧率波动）或者定时器精度的问题导致动画突变","。",[15,261,262,263,266,267,270,271,274,275,259],{},"这种问题多半发生在“使用 ",[75,264,265],{},"setInterval"," 控制动画”和“切换样式（transition）时机不当”所引起的 ",[50,268,269],{},"过渡跳帧问题","，而打开 DevTools 会 ",[50,272,273],{},"强制刷新帧或提高定时器精度","，从而",[50,276,277],{},"掩盖了这个问题",[10,279,281],{"id":280},"太好了是-requestanimationframe我们有救了","太好了，是 requestAnimationFrame，我们有救了",[45,283,284,292],{},[15,285,286,291],{},[50,287,288],{},[75,289,290],{},"window.requestAnimationFrame()"," 方法会告诉浏览器你希望执行一个动画。它要求浏览器在下一次重绘之前，调用用户提供的回调函数。",[15,293,294],{},"——MDN",[15,296,297],{},"这是 GPT 给出的方案，非常有效",[68,299,303],{"className":300,"code":301,"language":302,"meta":73,"style":73},"language-diff shiki shiki-themes github-light github-dark","if (scrollIndex >= groupLength) {\n  setTimeout(() => {\n    wrapper.style.transition = \"none\";\n    scrollIndex = 0;\n    wrapper.style.transform = `translateY(-${crollIndex * itemHeight}px)`;\n\n    requestAnimationFrame(() => {\n+      requestAnimationFrame(() => {\n         wrapper.style.transition = \"transform 0.5s cubic-bezier(0.25, 0.1, 0.25, 1)\";\n+      });\n    });\n  }, 500);\n}\n","diff",[75,304,305,310,315,320,325,330,334,339,344,349,354,358,364],{"__ignoreMap":73},[78,306,307],{"class":80,"line":81},[78,308,309],{},"if (scrollIndex >= groupLength) {\n",[78,311,312],{"class":80,"line":98},[78,313,314],{},"  setTimeout(() => {\n",[78,316,317],{"class":80,"line":114},[78,318,319],{},"    wrapper.style.transition = \"none\";\n",[78,321,322],{"class":80,"line":130},[78,323,324],{},"    scrollIndex = 0;\n",[78,326,327],{"class":80,"line":144},[78,328,329],{},"    wrapper.style.transform = `translateY(-${crollIndex * itemHeight}px)`;\n",[78,331,332],{"class":80,"line":169},[78,333,172],{"emptyLinePlaceholder":33},[78,335,336],{"class":80,"line":175},[78,337,338],{},"    requestAnimationFrame(() => {\n",[78,340,341],{"class":80,"line":187},[78,342,343],{},"+      requestAnimationFrame(() => {\n",[78,345,346],{"class":80,"line":200},[78,347,348],{},"         wrapper.style.transition = \"transform 0.5s cubic-bezier(0.25, 0.1, 0.25, 1)\";\n",[78,350,351],{"class":80,"line":206},[78,352,353],{},"+      });\n",[78,355,356],{"class":80,"line":218},[78,357,203],{},[78,359,361],{"class":80,"line":360},12,[78,362,363],{},"  }, 500);\n",[78,365,367],{"class":80,"line":366},13,[78,368,221],{},[15,370,371],{},"如果觉得嵌套两层 requestAnimationFrame 比较难理解，那下面的代码是等效的",[68,373,375],{"className":70,"code":374,"language":72,"meta":73,"style":73},"if (scrollIndex >= groupLength) {\n  setTimeout(() => {\n    scrollIndex = 0;\n\n    requestAnimationFrame(() => {\n      // 第一帧\n      wrapper.style.transition = \"none\";\n      wrapper.style.transform = `translateY(-${crollIndex * itemHeight}px)`;\n      // 第二帧\n      requestAnimationFrame(() => {\n        wrapper.style.transition = \"transform 0.5s cubic-bezier(0.25, 0.1, 0.25, 1)\";\n      });\n    });\n  }, 500);\n}\n",[75,376,377,387,397,407,411,421,427,437,456,461,472,483,488,492,501],{"__ignoreMap":73},[78,378,379,381,383,385],{"class":80,"line":81},[78,380,85],{"class":84},[78,382,89],{"class":88},[78,384,92],{"class":84},[78,386,95],{"class":88},[78,388,389,391,393,395],{"class":80,"line":98},[78,390,102],{"class":101},[78,392,105],{"class":88},[78,394,108],{"class":84},[78,396,111],{"class":88},[78,398,399,401,403,405],{"class":80,"line":114},[78,400,133],{"class":88},[78,402,120],{"class":84},[78,404,139],{"class":138},[78,406,127],{"class":88},[78,408,409],{"class":80,"line":130},[78,410,172],{"emptyLinePlaceholder":33},[78,412,413,415,417,419],{"class":80,"line":144},[78,414,178],{"class":101},[78,416,105],{"class":88},[78,418,108],{"class":84},[78,420,111],{"class":88},[78,422,423],{"class":80,"line":169},[78,424,426],{"class":425},"sJ8bj","      // 第一帧\n",[78,428,429,431,433,435],{"class":80,"line":175},[78,430,190],{"class":88},[78,432,120],{"class":84},[78,434,124],{"class":123},[78,436,127],{"class":88},[78,438,439,442,444,446,448,450,452,454],{"class":80,"line":187},[78,440,441],{"class":88},"      wrapper.style.transform ",[78,443,120],{"class":84},[78,445,152],{"class":123},[78,447,155],{"class":88},[78,449,158],{"class":84},[78,451,161],{"class":88},[78,453,164],{"class":123},[78,455,127],{"class":88},[78,457,458],{"class":80,"line":200},[78,459,460],{"class":425},"      // 第二帧\n",[78,462,463,466,468,470],{"class":80,"line":206},[78,464,465],{"class":101},"      requestAnimationFrame",[78,467,105],{"class":88},[78,469,108],{"class":84},[78,471,111],{"class":88},[78,473,474,477,479,481],{"class":80,"line":218},[78,475,476],{"class":88},"        wrapper.style.transition ",[78,478,120],{"class":84},[78,480,195],{"class":123},[78,482,127],{"class":88},[78,484,485],{"class":80,"line":360},[78,486,487],{"class":88},"      });\n",[78,489,490],{"class":80,"line":366},[78,491,203],{"class":88},[78,493,495,497,499],{"class":80,"line":494},14,[78,496,209],{"class":88},[78,498,212],{"class":138},[78,500,215],{"class":88},[78,502,504],{"class":80,"line":503},15,[78,505,221],{"class":88},[15,507,508],{},"总之，我们需要杜绝浏览器将设置 transform 偏移值（瞬移列表位置）与恢复 transition 动画两件事合并到同一帧里去，而两层嵌套的 requestAnimationFrame 方法能很好的解决这个问题",[29,510],{"src":511,"width":31,"height":32,"allowFullScreen":33},"https://static.031130.xyz/demo/scroll-jump-bug-fixed.html",[10,513,515],{"id":514},"驯服量子态前端开发者的新技能","驯服量子态：前端开发者的新技能",[15,517,518,519,522],{},"就这样，通过使用两层",[75,520,521],{},"requestAnimationFrame","，我们成功驯服了这个\"量子态\"的bug。现在无论是否打开F12，它都会乖乖地按照我们的预期滚动，不再玩消失的把戏。",[15,524,525,526,530,531,533],{},"看来，在前端的世界里，我们不仅要懂JavaScript，",[527,528,529],"del",{},"还得懂点量子力学","。下次再遇到这种\"一观测就消失\"的bug，不妨试试这个\"量子纠缠解决方案\"——双重",[75,532,521],{},"，没准就能让bug从\"量子态\"坍缩成\"稳定态\"呢！",[15,535,536],{},"当然，如果你有更神奇的 debug 经历，欢迎分享你的经历——毕竟，在代码的宇宙里，我们永远不知道下一个bug会以怎样的形态出现。也许，这就是编程的乐趣（？）所在吧！",[45,538,539],{},[15,540,541],{},"本文由 ChatGPT 与 DeepSeek 协助撰写，但 bug 是真人真事（泪）。",[10,543,544],{"id":544},"参见",[546,547,548,556,563],"ul",{},[549,550,551],"li",{},[22,552,555],{"href":553,"rel":554},"https://zh.wikipedia.org/wiki/%E8%A7%82%E6%B5%8B%E8%80%85%E6%95%88%E5%BA%94",[26],"观测者效应 - 维基百科，自由的百科全书",[549,557,558],{},[22,559,562],{"href":560,"rel":561},"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/requestAnimationFrame",[26],"Window：requestAnimationFrame() 方法 - Web API | MDN",[549,564,565],{},[22,566,569],{"href":567,"rel":568},"https://www.ruanyifeng.com/blog/2015/09/web-page-performance-in-depth.html",[26],"网页性能管理详解 - 阮一峰的网络日志",[571,572,573],"style",{},"html pre.shiki code .szBVR, html code.shiki .szBVR{--shiki-default:#D73A49;--shiki-dark:#F97583}html pre.shiki code .sVt8B, html code.shiki .sVt8B{--shiki-default:#24292E;--shiki-dark:#E1E4E8}html pre.shiki code .sScJk, html code.shiki .sScJk{--shiki-default:#6F42C1;--shiki-dark:#B392F0}html pre.shiki code .sZZnC, html code.shiki .sZZnC{--shiki-default:#032F62;--shiki-dark:#9ECBFF}html pre.shiki code .sj4cs, html code.shiki .sj4cs{--shiki-default:#005CC5;--shiki-dark:#79B8FF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sJ8bj, html code.shiki .sJ8bj{--shiki-default:#6A737D;--shiki-dark:#6A737D}",{"title":73,"searchDepth":98,"depth":98,"links":575},[576,577,578,579,580],{"id":12,"depth":98,"text":13},{"id":62,"depth":98,"text":63},{"id":280,"depth":98,"text":281},{"id":514,"depth":98,"text":515},{"id":544,"depth":98,"text":544},"2025-06-08 01:22:13","md",{"index_img":584},"https://static.031130.xyz/uploads/2025/06/08/2798756067653.webp","/2025/06/08/front-end-bug-gone-when-open-devtool","---\ntitle: 前端中的量子力学——一打开 F12 就消失的 Bug\ndate: 2025-06-08 01:22:13\nsticky:\nindex_img: https://static.031130.xyz/uploads/2025/06/08/2798756067653.webp\ntags:\n- Web\n- HTML\n- CSS\n- JavaScript\n- Debug\n---\n\n## 前端「量子态」现象的首次观测\n\n这事说来也邪乎，半个月前吃着火锅唱着歌，在工位上嘎嘎写码，发现一个诡异的 bug。作为如假包换的人类程序员，写出 bug 是再正常不过的事情了，但这 bug 邪门就邪门在我一打开 F12 的 DevTools 观察相关的 dom 结构，这 bug 就自动消失了；再把 DevTools 一关，Ctrl + F5 一刷新页面，Bug 又出现了。\n\n下面是使用 iframe 引入的 [demo](https://static.031130.xyz/demo/scroll-jump-bug.html)\n\n\u003Ciframe src=\"https://static.031130.xyz/demo/scroll-jump-bug.html\" width=\"100%\" height=\"500\" allowfullscreen>\u003C/iframe>\n\n![“观测”指南](https://static.031130.xyz/uploads/2025/06/08/65620d31fce6f.webp)\n\n这 Bug 给我整得脑瓜子嗡嗡的，我又不是物理学家，写个前端怎么量子力学的观察者效应都给我整出来了（？\n\n> **观测者效应**（Observer effect），是指“观测”这种行为对被观测对象造成一定影响的效应。\n>\n> 在量子力学实验中，如果要测算一个电子所处的速度，就要用两个光子隔一段时间去撞击这个电子，但第一个光子就已经把这个电子撞飞了，便改变了电子的原有速度，我们便无法测出真正准确的速度（不确定原理）。时间流逝的快慢也会受到观测者的影响，用很高的频率去观测粒子的衰变，反而使得粒子长时间不衰变。\n>\n> ——wikipedia\n\n## 量子迷雾❌浏览器机制✅\n\n这里先稍微解释一下 demo 中的代码片段:\n\n```javascript\nif (scrollIndex >= groupLength) {\n  setTimeout(() => {\n    wrapper.style.transition = \"none\";\n    scrollIndex = 0;\n    wrapper.style.transform = `translateY(-${crollIndex * itemHeight}px)`;\n\n    requestAnimationFrame(() => {\n      wrapper.style.transition = \"transform 0.5s cubic-bezier(0.25, 0.1, 0.25, 1)\";\n    });\n  }, 500);\n}\n```\n\n我这边拿到的需求是需要写一个无限滚动的轮播标题列表，每次展示三个，2 秒后标题列表整体上移，原本的第一个标题就移出可视范围了，下面会新补充一个新的标题列表。（可能解释的不清楚，但各位应该都看过上面的 demo 了）\n\n当列表滚动到最底部的时候，我先取消 transition 过渡动画效果，趁机将整体列表平移到上一次可视范围内出现相同的三个标题的位置，再把 transition 过渡动画的效果加回来，这样就能在视觉上造成无限滚动的效果。\n\n但问题就出在明明把 transition 属性取消了，但这一次平移仍然触发了过渡动画效果。\n\n说实话，这是我短暂的码农生涯当中最绝望的一次，一方面是遇到的 bug 过于逆天以至于说出去都可能没人信，一方面是遇上这种问题是完全不能指望搜索引擎能给出什么解决方案的——毕竟我自己都不知道该怎么组织关键词进行搜索。\n\n![这是小麦茶，带我入坑前端的学长](https://static.031130.xyz/uploads/2025/06/08/475a61b332454.webp)\n\n于是抱着试一试的心态，把相关代码喂给 ChatGPT-4o 看看能不能问出个所以然来。\n\n> 你描述的现象——“**滚动第九次时列表出现突兀的自下而上跳动**，而**打开 F12 时不会出现问题**”——**几乎可以确定是由于浏览器在某些渲染状态下跳过了某些帧（帧率波动）或者定时器精度的问题导致动画突变**。\n>\n> 这种问题多半发生在“使用 `setInterval` 控制动画”和“切换样式（transition）时机不当”所引起的 **过渡跳帧问题**，而打开 DevTools 会 **强制刷新帧或提高定时器精度**，从而**掩盖了这个问题**。\n\n## 太好了，是 requestAnimationFrame，我们有救了\n\n> **`window.requestAnimationFrame()`** 方法会告诉浏览器你希望执行一个动画。它要求浏览器在下一次重绘之前，调用用户提供的回调函数。\n>\n> ——MDN\n\n这是 GPT 给出的方案，非常有效\n\n```diff\nif (scrollIndex >= groupLength) {\n  setTimeout(() => {\n    wrapper.style.transition = \"none\";\n    scrollIndex = 0;\n    wrapper.style.transform = `translateY(-${crollIndex * itemHeight}px)`;\n\n    requestAnimationFrame(() => {\n+      requestAnimationFrame(() => {\n         wrapper.style.transition = \"transform 0.5s cubic-bezier(0.25, 0.1, 0.25, 1)\";\n+      });\n    });\n  }, 500);\n}\n```\n\n如果觉得嵌套两层 requestAnimationFrame 比较难理解，那下面的代码是等效的\n\n```javascript\nif (scrollIndex >= groupLength) {\n  setTimeout(() => {\n    scrollIndex = 0;\n\n    requestAnimationFrame(() => {\n      // 第一帧\n      wrapper.style.transition = \"none\";\n      wrapper.style.transform = `translateY(-${crollIndex * itemHeight}px)`;\n      // 第二帧\n      requestAnimationFrame(() => {\n        wrapper.style.transition = \"transform 0.5s cubic-bezier(0.25, 0.1, 0.25, 1)\";\n      });\n    });\n  }, 500);\n}\n```\n\n总之，我们需要杜绝浏览器将设置 transform 偏移值（瞬移列表位置）与恢复 transition 动画两件事合并到同一帧里去，而两层嵌套的 requestAnimationFrame 方法能很好的解决这个问题\n\n\u003Ciframe src=\"https://static.031130.xyz/demo/scroll-jump-bug-fixed.html\" width=\"100%\" height=\"500\" allowfullscreen>\u003C/iframe>\n\n## 驯服量子态：前端开发者的新技能\n\n就这样，通过使用两层`requestAnimationFrame`，我们成功驯服了这个\"量子态\"的bug。现在无论是否打开F12，它都会乖乖地按照我们的预期滚动，不再玩消失的把戏。\n\n看来，在前端的世界里，我们不仅要懂JavaScript，~~还得懂点量子力学~~。下次再遇到这种\"一观测就消失\"的bug，不妨试试这个\"量子纠缠解决方案\"——双重`requestAnimationFrame`，没准就能让bug从\"量子态\"坍缩成\"稳定态\"呢！\n\n当然，如果你有更神奇的 debug 经历，欢迎分享你的经历——毕竟，在代码的宇宙里，我们永远不知道下一个bug会以怎样的形态出现。也许，这就是编程的乐趣（？）所在吧！\n\n> 本文由 ChatGPT 与 DeepSeek 协助撰写，但 bug 是真人真事（泪）。\n\n## 参见\n\n- [观测者效应 - 维基百科，自由的百科全书](https://zh.wikipedia.org/wiki/%E8%A7%82%E6%B5%8B%E8%80%85%E6%95%88%E5%BA%94)\n- [Window：requestAnimationFrame() 方法 - Web API | MDN](https://developer.mozilla.org/zh-CN/docs/Web/API/Window/requestAnimationFrame)\n- [网页性能管理详解 - 阮一峰的网络日志](https://www.ruanyifeng.com/blog/2015/09/web-page-performance-in-depth.html)\n",{"title":5,"description":73},"posts/front-end-bug-gone-when-open-devtool",false,[591,592,593,594,595],"Web","HTML","CSS","JavaScript","Debug","ehVsQAivSVCEa5WTdAMV-HWPNKRTEOSLAH33Pv8Kfvk",[598,603],{"title":599,"path":600,"stem":601,"date":602,"children":-1},"node-sass 迁移至 dart-sass 踩坑实录","/2025/07/05/node-sass-migration-to-dart-sass","posts/node-sass-migration-to-dart-sass","2025-07-05 17:57:02",{"title":604,"path":605,"stem":606,"date":607,"children":-1},"2025 年，如何为 web 页面上展示的视频选择合适的压缩算法？","/2025/06/02/choosing-the-right-video-compression-format-for-web-in-2025","posts/choosing-the-right-video-compression-format-for-web-in-2025","2025-06-02 20:59:10",1761695679087]