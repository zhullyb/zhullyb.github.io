[{"data":1,"prerenderedAt":339},["ShallowReactive",2],{"post-2025-03-30-apt-upgrade-on-internal-server-via-ssh-tunnel-and-reverse-proxy":3,"surround-2025-03-30-apt-upgrade-on-internal-server-via-ssh-tunnel-and-reverse-proxy":327,"randomIndex/2025/03/30/apt-upgrade-on-internal-server-via-ssh-tunnel-and-reverse-proxy/":338},{"id":4,"title":5,"body":6,"date":309,"description":310,"extension":311,"meta":312,"navigation":313,"path":314,"rawbody":315,"seo":316,"stem":317,"sticky":318,"tags":319,"__hash__":326},"posts/posts/apt-upgrade-on-internal-server-via-ssh-tunnel-and-reverse-proxy.md","ssh 拯救世界——通过 ssh 隧道在内网服务器执行 APT 更新",{"type":7,"value":8,"toc":303},"minimark",[9,21,28,31,35,50,53,62,65,106,109,133,138,141,146,152,156,159,178,187,190,193,206,211,214,217,231,236,248,276,282,288,291,296,299],[10,11,12,13,20],"p",{},"事情的起因是因为精弘的",[14,15,19],"a",{"href":16,"rel":17},"https://blog.cnpatrickstar.com/",[18],"nofollow","前技术总监","抱怨学校的内网服务器无法连接外网，从而导致 apt 安装与更新异常困难，需要手动从源中下载软件包、软件包的依赖及其依赖的依赖。。。然后将这些包通过 sftp/rsync 一类的手段传到服务器上手动安装。",[10,22,23],{},[24,25],"img",{"alt":26,"src":27},"","https://static.031130.xyz/uploads/2025/03/30/0447b7d64886a.webp",[10,29,30],{},"于是本文应运而生，我们可以在本机使用 Caddy （Nginx 当然也行）反代一个 APT 源镜像站，通过 ssh 隧道建立端口转发，这样就可以在内网服务器上访问到本地的 Caddy 服务器，进而访问到外网的镜像站。",[32,33,34],"h2",{"id":34},"前提条件",[36,37,38,42],"ul",{},[39,40,41],"li",{},"主控机（你自己的电脑）能够通过 ssh 直接连接电脑（可以是使用一些网络工具），而不是先通过 ssh 登陆到一台中转机，再从中转机登陆到目标服务器。后面这种情况当然也可以使用类似的手段实现我们的目标，但会更复杂一些。",[39,43,44,45,49],{},"主控机（你自己的电脑）在连接内网服务器的同时，能够连接公网镜像站（",[46,47,48],"del",{},"不行的话要不然你提前本地同步一份镜像做离线镜像站","）。",[32,51,52],{"id":52},"反代镜像站",[10,54,55,56,61],{},"我这里选择了 Caddy 而非 Nginx，一方面是 Caddy 的配置文件写起来简单，另一方面 Caddy 是 Golang 编写，一个二进制走天下，Windows 也能直接",[14,57,60],{"href":58,"rel":59},"https://caddyserver.com/download",[18],"下载","运行。",[10,63,64],{},"我们以最常见的清华 tuna 镜像站为例，一个简单的 caddy 配置文件是这样的",[66,67,71],"pre",{"className":68,"code":69,"language":70,"meta":26,"style":26},"language-nginx shiki shiki-themes one-light one-dark-pro",":8080 {\n    reverse_proxy https://mirrors.tuna.tsinghua.edu.cn {\n        header_up Host {http.reverse_proxy.upstream.hostport}\n    }\n}\n","nginx",[72,73,74,82,88,94,100],"code",{"__ignoreMap":26},[75,76,79],"span",{"class":77,"line":78},"line",1,[75,80,81],{},":8080 {\n",[75,83,85],{"class":77,"line":84},2,[75,86,87],{},"    reverse_proxy https://mirrors.tuna.tsinghua.edu.cn {\n",[75,89,91],{"class":77,"line":90},3,[75,92,93],{},"        header_up Host {http.reverse_proxy.upstream.hostport}\n",[75,95,97],{"class":77,"line":96},4,[75,98,99],{},"    }\n",[75,101,103],{"class":77,"line":102},5,[75,104,105],{},"}\n",[10,107,108],{},"将上面这段代码保存为 Caddyfile 文件名，随后使用 caddy 命令在保存路径运行",[66,110,114],{"className":111,"code":112,"language":113,"meta":26,"style":26},"language-bash shiki shiki-themes one-light one-dark-pro","caddy run --config ./Caddyfile\n","bash",[72,115,116],{"__ignoreMap":26},[75,117,118,122,126,130],{"class":77,"line":78},[75,119,121],{"class":120},"sAdtL","caddy",[75,123,125],{"class":124},"sDhpE"," run",[75,127,129],{"class":128},"sAGMh"," --config",[75,131,132],{"class":124}," ./Caddyfile\n",[10,134,135],{},[24,136],{"alt":26,"src":137},"https://static.031130.xyz/uploads/2025/03/30/8ef15a08e4852.webp",[10,139,140],{},"如果没有报错，那你应该能在本地的 8080 端口看到清华的镜像站",[10,142,143],{},[24,144],{"alt":26,"src":145},"https://static.031130.xyz/uploads/2025/03/30/a9083c95c07a2.webp",[147,148,149],"blockquote",{},[10,150,151],{},"你可能注意到，反代后的页面和清华的镜像站有些许差异，没有清华的 logo，这大概是因为页面的 js 对 host 进行了判断，如果不是清华或者北外的页面，就不会添加学校的名称，但这不影响我们从这些镜像站获取更新。",[32,153,155],{"id":154},"建立-ssh-隧道","建立 ssh 隧道",[10,157,158],{},"建立隧道时，需要使用如下的命令",[66,160,162],{"className":111,"code":161,"language":113,"meta":26,"style":26},"ssh -R 8085:localhost:8080 root@remote.example.com\n",[72,163,164],{"__ignoreMap":26},[75,165,166,169,172,175],{"class":77,"line":78},[75,167,168],{"class":120},"ssh",[75,170,171],{"class":128}," -R",[75,173,174],{"class":124}," 8085:localhost:8080",[75,176,177],{"class":124}," root@remote.example.com\n",[10,179,180,181,186],{},"-R 表示建立反向隧道，其他的参数选项可以参考这一篇博客「",[14,182,185],{"href":183,"rel":184},"https://www.entropy-tree.top/2024/04/18/ssh-tunneling-techniques/",[18],"SSH 隧道技术","」，也是精弘的学长写的。",[10,188,189],{},"此时，我们建立了一个内网服务器 8085 端口到本机 8080 端口的 ssh 端口转发。（使用 8085 端口是我为了区分其和 8080 端口，实际上可以使用任何空余端口）",[10,191,192],{},"我们可以在服务器上使用 curl 来测试一下是否能够正常访问，我这里简单访问了下 Debian 源根目录下的一个 README 文件。",[66,194,196],{"className":111,"code":195,"language":113,"meta":26,"style":26},"curl http://localhost:8085/debian/README\n",[72,197,198],{"__ignoreMap":26},[75,199,200,203],{"class":77,"line":78},[75,201,202],{"class":120},"curl",[75,204,205],{"class":124}," http://localhost:8085/debian/README\n",[10,207,208],{},[24,209],{"alt":26,"src":210},"https://static.031130.xyz/uploads/2025/03/30/597c4af0d398d.webp",[32,212,213],{"id":213},"换源",[10,215,216],{},"所以现在我们在内网服务器的 8085 端口上有一个清华开源镜像站的反代，我们可以通过 8085 端口访问镜像站中的所有内容。",[10,218,219,220,225,226,230],{},"先遵循",[14,221,224],{"href":222,"rel":223},"https://mirrors.tuna.tsinghua.edu.cn/help/debian/",[18],"清华开源镜像站的指示","，进行换源，",[227,228,229],"strong",{},"记得一定要勾选「强制安全更新使用镜像」","。",[10,232,233],{},[24,234],{"alt":26,"src":235},"https://static.031130.xyz/uploads/2025/03/30/46e3c7030ded4.webp",[10,237,238,239,243,244],{},"随后，我们将源中的所有 ",[14,240,241],{"href":241,"rel":242},"https://mirrors.tuna.tsinghua.edu.cn",[18]," 替换成 ",[14,245,246],{"href":246,"rel":247},"http://localhost:8085",[18],[66,249,251],{"className":111,"code":250,"language":113,"meta":26,"style":26},"sed -i 's|https\\?://mirrors\\.tuna\\.tsinghua\\.edu\\.cn|http://localhost:8085|g' `grep -rlE 'http(s)?://mirrors\\.tuna\\.tsinghua\\.edu\\.cn' /etc/apt/`\n",[72,252,253],{"__ignoreMap":26},[75,254,255,258,261,264,267,270,273],{"class":77,"line":78},[75,256,257],{"class":120},"sed",[75,259,260],{"class":128}," -i",[75,262,263],{"class":124}," 's|https\\?://mirrors\\.tuna\\.tsinghua\\.edu\\.cn|http://localhost:8085|g'",[75,265,266],{"class":124}," `",[75,268,269],{"class":120},"grep",[75,271,272],{"class":128}," -rlE",[75,274,275],{"class":124}," 'http(s)?://mirrors\\.tuna\\.tsinghua\\.edu\\.cn' /etc/apt/`\n",[10,277,278],{},[24,279],{"alt":280,"src":281},"执行 apt update","https://static.031130.xyz/uploads/2025/03/30/a8f0c70d48f5b.webp",[10,283,284],{},[24,285],{"alt":286,"src":287},"使用 apt 安装 unzip","https://static.031130.xyz/uploads/2025/03/30/07919bf939e92.webp",[10,289,290],{},"可以看到，我们通过 ssh 隧道实现了在内网服务器执行 APT 更新及安装软件。",[147,292,293],{},[10,294,295],{},"温馨提示，ssh 隧道在本世纪 10 年代初经常被用来进行搭建一些跨境访问，但因为其独特的流量特征很快淡出了历史舞台，因此不要使用 ssh 进行大量的跨境网络传输，容易被封禁。",[10,297,298],{},"当然，实现这一目标的方法是很多的，其他一些例如 frp 的工具同样能做到这种效果，只不过 ssh 隧道这种方案随开随用，随关随停，不需要更多的配置，因此我主要推荐。",[300,301,302],"style",{},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}",{"title":26,"searchDepth":84,"depth":84,"links":304},[305,306,307,308],{"id":34,"depth":84,"text":34},{"id":52,"depth":84,"text":52},{"id":154,"depth":84,"text":155},{"id":213,"depth":84,"text":213},"2025-03-30 21:45:24","事情的起因是因为精弘的前技术总监抱怨学校的内网服务器无法连接外网，从而导致 apt 安装与更新异常困难，需要手动从源中下载软件包、软件包的依赖及其依赖的依赖。。。然后将这些包通过 sftp/rsync 一类的手段传到服务器上手动安装。","md",{},true,"/2025/03/30/apt-upgrade-on-internal-server-via-ssh-tunnel-and-reverse-proxy","---\ntitle: ssh 拯救世界——通过 ssh 隧道在内网服务器执行 APT 更新\ndate: 2025-03-30 21:45:24\nsticky:\ntags:\n- Apt\n- Network\n- OpenSSH\n- Caddy\n- Linux\n- Debian\n---\n\n事情的起因是因为精弘的[前技术总监](https://blog.cnpatrickstar.com/)抱怨学校的内网服务器无法连接外网，从而导致 apt 安装与更新异常困难，需要手动从源中下载软件包、软件包的依赖及其依赖的依赖。。。然后将这些包通过 sftp/rsync 一类的手段传到服务器上手动安装。\n\n![](https://static.031130.xyz/uploads/2025/03/30/0447b7d64886a.webp)\n\n于是本文应运而生，我们可以在本机使用 Caddy （Nginx 当然也行）反代一个 APT 源镜像站，通过 ssh 隧道建立端口转发，这样就可以在内网服务器上访问到本地的 Caddy 服务器，进而访问到外网的镜像站。\n\n## 前提条件\n\n- 主控机（你自己的电脑）能够通过 ssh 直接连接电脑（可以是使用一些网络工具），而不是先通过 ssh 登陆到一台中转机，再从中转机登陆到目标服务器。后面这种情况当然也可以使用类似的手段实现我们的目标，但会更复杂一些。\n- 主控机（你自己的电脑）在连接内网服务器的同时，能够连接公网镜像站（~~不行的话要不然你提前本地同步一份镜像做离线镜像站~~）。\n\n## 反代镜像站\n\n我这里选择了 Caddy 而非 Nginx，一方面是 Caddy 的配置文件写起来简单，另一方面 Caddy 是 Golang 编写，一个二进制走天下，Windows 也能直接[下载](https://caddyserver.com/download)运行。\n\n我们以最常见的清华 tuna 镜像站为例，一个简单的 caddy 配置文件是这样的\n\n```nginx\n:8080 {\n    reverse_proxy https://mirrors.tuna.tsinghua.edu.cn {\n        header_up Host {http.reverse_proxy.upstream.hostport}\n    }\n}\n```\n\n将上面这段代码保存为 Caddyfile 文件名，随后使用 caddy 命令在保存路径运行\n\n```bash\ncaddy run --config ./Caddyfile\n```\n\n![](https://static.031130.xyz/uploads/2025/03/30/8ef15a08e4852.webp)\n\n如果没有报错，那你应该能在本地的 8080 端口看到清华的镜像站\n\n![](https://static.031130.xyz/uploads/2025/03/30/a9083c95c07a2.webp)\n\n> 你可能注意到，反代后的页面和清华的镜像站有些许差异，没有清华的 logo，这大概是因为页面的 js 对 host 进行了判断，如果不是清华或者北外的页面，就不会添加学校的名称，但这不影响我们从这些镜像站获取更新。\n\n## 建立 ssh 隧道\n\n建立隧道时，需要使用如下的命令\n\n```bash\nssh -R 8085:localhost:8080 root@remote.example.com\n```\n\n-R 表示建立反向隧道，其他的参数选项可以参考这一篇博客「[SSH 隧道技术](https://www.entropy-tree.top/2024/04/18/ssh-tunneling-techniques/)」，也是精弘的学长写的。\n\n此时，我们建立了一个内网服务器 8085 端口到本机 8080 端口的 ssh 端口转发。（使用 8085 端口是我为了区分其和 8080 端口，实际上可以使用任何空余端口）\n\n我们可以在服务器上使用 curl 来测试一下是否能够正常访问，我这里简单访问了下 Debian 源根目录下的一个 README 文件。\n\n```bash\ncurl http://localhost:8085/debian/README\n```\n\n![](https://static.031130.xyz/uploads/2025/03/30/597c4af0d398d.webp)\n\n## 换源\n\n所以现在我们在内网服务器的 8085 端口上有一个清华开源镜像站的反代，我们可以通过 8085 端口访问镜像站中的所有内容。\n\n先遵循[清华开源镜像站的指示](https://mirrors.tuna.tsinghua.edu.cn/help/debian/)，进行换源，**记得一定要勾选「强制安全更新使用镜像」**。\n\n![](https://static.031130.xyz/uploads/2025/03/30/46e3c7030ded4.webp)\n\n随后，我们将源中的所有 https://mirrors.tuna.tsinghua.edu.cn 替换成 http://localhost:8085\n\n```bash\nsed -i 's|https\\?://mirrors\\.tuna\\.tsinghua\\.edu\\.cn|http://localhost:8085|g' `grep -rlE 'http(s)?://mirrors\\.tuna\\.tsinghua\\.edu\\.cn' /etc/apt/`\n```\n\n![执行 apt update](https://static.031130.xyz/uploads/2025/03/30/a8f0c70d48f5b.webp)\n\n![使用 apt 安装 unzip](https://static.031130.xyz/uploads/2025/03/30/07919bf939e92.webp)\n\n可以看到，我们通过 ssh 隧道实现了在内网服务器执行 APT 更新及安装软件。\n\n> 温馨提示，ssh 隧道在本世纪 10 年代初经常被用来进行搭建一些跨境访问，但因为其独特的流量特征很快淡出了历史舞台，因此不要使用 ssh 进行大量的跨境网络传输，容易被封禁。\n\n当然，实现这一目标的方法是很多的，其他一些例如 frp 的工具同样能做到这种效果，只不过 ssh 隧道这种方案随开随用，随关随停，不需要更多的配置，因此我主要推荐。\n",{"title":5,"description":310},"posts/apt-upgrade-on-internal-server-via-ssh-tunnel-and-reverse-proxy",false,[320,321,322,323,324,325],"Apt","Network","OpenSSH","Caddy","Linux","Debian","weribspckHyGoLCzHxXdiy0RBzdI-p5oKxJBDVytqAs",[328,333],{"title":329,"path":330,"stem":331,"date":332,"children":-1},"2025年，前端如何使用 JS 将文本复制到剪切板？","/2025/04/21/how-we-copy-text-to-clipboard-with-js-in-2025","posts/how-we-copy-text-to-clipboard-with-js-in-2025","2025-04-21 19:48:05",{"title":334,"path":335,"stem":336,"date":337,"children":-1},"Cudy TR3000 吃鹅(daed)记","/2025/02/28/cudy-tr3000-daed-install-record","posts/cudy-tr3000-daed-install-record","2025-02-28 21:18:34",25,1761884676293]