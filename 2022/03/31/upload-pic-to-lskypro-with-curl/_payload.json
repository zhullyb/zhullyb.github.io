[{"data":1,"prerenderedAt":513},["ShallowReactive",2],{"post-2022-03-31-upload-pic-to-lskypro-with-curl":3,"surround-2022-03-31-upload-pic-to-lskypro-with-curl":502,"randomIndex/2022/03/31/upload-pic-to-lskypro-with-curl/":271},{"id":4,"title":5,"body":6,"date":489,"description":490,"extension":491,"meta":492,"navigation":113,"path":493,"rawbody":494,"seo":495,"stem":496,"sticky":497,"tags":498,"__hash__":501},"posts/posts/upload-pic-to-lskypro-with-curl.md","抛弃PicGo，直接使用curl将图片上传到LskyPro",{"type":7,"value":8,"toc":487},"minimark",[9,18,39,53,62,69,72,75,88,91,466,472,475,478,483],[10,11,12,13,17],"p",{},"前一阵子为了图床折腾了好长一段时间。刚开始用的是 cloudinary，虽然每月有限制，但强在境内访问速度还不错，可惜后来 ",[14,15,16],"code",{},"res.cloudinary.com"," 这个域名在某些地方被 DNS 污染了，而自定义域名是付费版的功能，就不得不放弃了。",[10,19,20,21,24,25,32,33,38],{},"后来也尝试过 npm图床 的方案，可惜面对这种滥用公共资源的行为我无法接受~~（肯定不是因为受不了那繁琐的上传步骤，随便传张图都得 bump 下版本号的原因）~~，而且现在境内的能作为图床使用的 npm 镜像似乎也就只剩下 ",[14,22,23],{},"npm.elemecdn.com"," 这一个能够正常回源了，没准哪天就用不了了，所以就去投奔了",[26,27,31],"a",{"href":28,"rel":29},"https://dusays.com/",[30],"nofollow","杜老师","的",[26,34,37],{"href":35,"rel":36},"https://7bu.top/",[30],"去不图床","。",[10,40,41,42,47,48,52],{},"去不图床采用开源图床程序 ",[26,43,46],{"href":44,"rel":45},"https://www.lsky.pro/",[30],"Lsky Pro"," 搭建，没有免费服务，且配置了鉴黄服务，看起来就是打算长久做下去的图床站点。境内使用腾讯云cdn，境外采用 cloudflare cdn，速度都挺让我满意的。",[49,50,51],"del",{},"（杜老师看见请给我打钱，或者多送我点空间也行","（x",[10,54,55,56,61],{},"Typora 一直是我写博客的主用 Markdown 编辑器，之前我采用 Typora 调用 ",[26,57,60],{"href":58,"rel":59},"https://github.com/xiebruce/PicUploader",[30],"PicUploader(php)"," 自动上传图片的方案写博客，体验相当不错，如图:",[10,63,64],{},[65,66],"img",{"alt":67,"src":68},"","https://static.031130.xyz/uploads/2024/08/12/62f3b881e3c4c.gif",[10,70,71],{},"可惜 PicUploader 目前仍然没有支持 LskyPro 的上传，我采用的是现在烂大街的 Typora+PicGo+LskyPro插件 的方案去实现 Typora 的自动上传图片功能。",[10,73,74],{},"这个方案有明显的弊端：",[76,77,78,82,85],"ul",{},[79,80,81],"li",{},"PicGo 运行依赖于 electron，极大地消耗了系统资源。",[79,83,84],{},"PicGo 面对多张图片( >=4张 )同时上传时容易报错。",[79,86,87],{},"PicGo 对于 Linux 的支持比较有限，作者可能不熟悉 Linux，直到半个月前我去交了一个 pr 才支持 wayland 下使用 wl-clipboard 将图片链接复制到粘贴版。",[10,89,90],{},"正好 LskyPro 有详细的文档，应该可以用 curl 手糊一段 Shell 脚本实现直接上传，资源占用小，唯一的弊端是上传完成后的图片不容易管理。脚本如下",[92,93,97],"pre",{"className":94,"code":95,"language":96,"meta":67,"style":67},"language-bash shiki shiki-themes one-light one-dark-pro","#!/bin/bash\n\nAPI_URL=\"https://7bu.top/api/v1\"\n\nAUTH_TOKEN=\"\"\n\nmarkdown=false\nwhile [[ \"$#\" -gt 0 ]]; do\n    case $1 in\n        -m|--markdown) markdown=true; shift ;;\n        *) break ;;\n    esac\ndone\n\nfor images in \"$@\"; do\n    UPLOAD_RESPONSE=$(curl -s -X POST \"$API_URL/upload\" \\\n        -H 'Content-Type: multipart/form-data' \\\n        -H \"Authorization: Bearer $AUTH_TOKEN\" \\\n        -F \"file=@$images\")\n\n    if [ \"$markdown\" = true ]; then\n        echo \"$UPLOAD_RESPONSE\" | jq -r .data.links.markdown\n    else\n        echo \"$UPLOAD_RESPONSE\" | jq -r .data.links.url\n    fi\ndone\n","bash",[14,98,99,108,115,130,135,146,151,162,195,208,241,252,258,264,269,293,328,339,354,371,376,404,429,435,455,461],{"__ignoreMap":67},[100,101,104],"span",{"class":102,"line":103},"line",1,[100,105,107],{"class":106},"sW2Sy","#!/bin/bash\n",[100,109,111],{"class":102,"line":110},2,[100,112,114],{"emptyLinePlaceholder":113},true,"\n",[100,116,118,122,126],{"class":102,"line":117},3,[100,119,121],{"class":120},"sJa8x","API_URL",[100,123,125],{"class":124},"sknuh","=",[100,127,129],{"class":128},"sDhpE","\"https://7bu.top/api/v1\"\n",[100,131,133],{"class":102,"line":132},4,[100,134,114],{"emptyLinePlaceholder":113},[100,136,138,141,143],{"class":102,"line":137},5,[100,139,140],{"class":120},"AUTH_TOKEN",[100,142,125],{"class":124},[100,144,145],{"class":128},"\"\"\n",[100,147,149],{"class":102,"line":148},6,[100,150,114],{"emptyLinePlaceholder":113},[100,152,154,157,159],{"class":102,"line":153},7,[100,155,156],{"class":120},"markdown",[100,158,125],{"class":124},[100,160,161],{"class":128},"false\n",[100,163,165,169,173,176,180,182,185,189,192],{"class":102,"line":164},8,[100,166,168],{"class":167},"sLKXg","while",[100,170,172],{"class":171},"s5ixo"," [[ ",[100,174,175],{"class":128},"\"",[100,177,179],{"class":178},"s2QsP","$#",[100,181,175],{"class":128},[100,183,184],{"class":124}," -gt",[100,186,188],{"class":187},"sAGMh"," 0",[100,190,191],{"class":171}," ]]; ",[100,193,194],{"class":167},"do\n",[100,196,198,201,205],{"class":102,"line":197},9,[100,199,200],{"class":167},"    case",[100,202,204],{"class":203},"s8iYz"," $1",[100,206,207],{"class":167}," in\n",[100,209,211,215,218,221,224,226,228,231,234,238],{"class":102,"line":210},10,[100,212,214],{"class":213},"sDaw7","        -m",[100,216,217],{"class":171},"|",[100,219,220],{"class":213},"--markdown",[100,222,223],{"class":171},") ",[100,225,156],{"class":120},[100,227,125],{"class":124},[100,229,230],{"class":128},"true",[100,232,233],{"class":171},"; ",[100,235,237],{"class":236},"s_Sar","shift",[100,239,240],{"class":171}," ;;\n",[100,242,244,247,250],{"class":102,"line":243},11,[100,245,246],{"class":171},"        *) ",[100,248,249],{"class":167},"break",[100,251,240],{"class":171},[100,253,255],{"class":102,"line":254},12,[100,256,257],{"class":167},"    esac\n",[100,259,261],{"class":102,"line":260},13,[100,262,263],{"class":167},"done\n",[100,265,267],{"class":102,"line":266},14,[100,268,114],{"emptyLinePlaceholder":113},[100,270,272,275,278,281,284,287,289,291],{"class":102,"line":271},15,[100,273,274],{"class":167},"for",[100,276,277],{"class":120}," images",[100,279,280],{"class":167}," in",[100,282,283],{"class":128}," \"",[100,285,286],{"class":203},"$@",[100,288,175],{"class":128},[100,290,233],{"class":171},[100,292,194],{"class":167},[100,294,296,299,301,304,308,311,314,317,319,322,325],{"class":102,"line":295},16,[100,297,298],{"class":120},"    UPLOAD_RESPONSE",[100,300,125],{"class":124},[100,302,303],{"class":171},"$(",[100,305,307],{"class":306},"sAdtL","curl",[100,309,310],{"class":187}," -s",[100,312,313],{"class":187}," -X",[100,315,316],{"class":128}," POST",[100,318,283],{"class":128},[100,320,321],{"class":120},"$API_URL",[100,323,324],{"class":128},"/upload\"",[100,326,327],{"class":236}," \\\n",[100,329,331,334,337],{"class":102,"line":330},17,[100,332,333],{"class":187},"        -H",[100,335,336],{"class":128}," 'Content-Type: multipart/form-data'",[100,338,327],{"class":236},[100,340,342,344,347,350,352],{"class":102,"line":341},18,[100,343,333],{"class":187},[100,345,346],{"class":128}," \"Authorization: Bearer ",[100,348,349],{"class":120},"$AUTH_TOKEN",[100,351,175],{"class":128},[100,353,327],{"class":236},[100,355,357,360,363,366,368],{"class":102,"line":356},19,[100,358,359],{"class":187},"        -F",[100,361,362],{"class":128}," \"file=@",[100,364,365],{"class":120},"$images",[100,367,175],{"class":128},[100,369,370],{"class":171},")\n",[100,372,374],{"class":102,"line":373},20,[100,375,114],{"emptyLinePlaceholder":113},[100,377,379,382,385,387,390,392,395,398,401],{"class":102,"line":378},21,[100,380,381],{"class":167},"    if",[100,383,384],{"class":171}," [ ",[100,386,175],{"class":128},[100,388,389],{"class":120},"$markdown",[100,391,175],{"class":128},[100,393,394],{"class":124}," =",[100,396,397],{"class":187}," true",[100,399,400],{"class":171}," ]; ",[100,402,403],{"class":167},"then\n",[100,405,407,410,412,415,417,420,423,426],{"class":102,"line":406},22,[100,408,409],{"class":236},"        echo",[100,411,283],{"class":128},[100,413,414],{"class":120},"$UPLOAD_RESPONSE",[100,416,175],{"class":128},[100,418,419],{"class":171}," | ",[100,421,422],{"class":306},"jq",[100,424,425],{"class":187}," -r",[100,427,428],{"class":128}," .data.links.markdown\n",[100,430,432],{"class":102,"line":431},23,[100,433,434],{"class":167},"    else\n",[100,436,438,440,442,444,446,448,450,452],{"class":102,"line":437},24,[100,439,409],{"class":236},[100,441,283],{"class":128},[100,443,414],{"class":120},[100,445,175],{"class":128},[100,447,419],{"class":171},[100,449,422],{"class":306},[100,451,425],{"class":187},[100,453,454],{"class":128}," .data.links.url\n",[100,456,458],{"class":102,"line":457},25,[100,459,460],{"class":167},"    fi\n",[100,462,464],{"class":102,"line":463},26,[100,465,263],{"class":167},[467,468,469],"blockquote",{},[10,470,471],{},"2022/04/02更新: 第六行 $@ - \"$@\"，解决文件名中出现空格时导致的上传失败问题。",[10,473,474],{},"需要借助 jq 来读取返回的 json，各 Linux 发行版源内应该都有打包，自行安装即可。",[10,476,477],{},"授予x可执行权限后，Typora 内直接填写自定义命令输入脚本所在位置即可实现 Typora 自动上传图片了。",[467,479,480],{},[10,481,482],{},"2023/12/12更新: 支持 -m 或 --markdown 参数，使脚本输出 markdown 格式的链接。",[484,485,486],"style",{},"html pre.shiki code .sW2Sy, html code.shiki .sW2Sy{--shiki-default:#A0A1A7;--shiki-default-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic}html pre.shiki code .sJa8x, html code.shiki .sJa8x{--shiki-default:#E45649;--shiki-dark:#E06C75}html pre.shiki code .sknuh, html code.shiki .sknuh{--shiki-default:#383A42;--shiki-dark:#56B6C2}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .sLKXg, html code.shiki .sLKXg{--shiki-default:#A626A4;--shiki-dark:#C678DD}html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html pre.shiki code .s2QsP, html code.shiki .s2QsP{--shiki-default:#E45649;--shiki-dark:#E5C07B}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}html pre.shiki code .s8iYz, html code.shiki .s8iYz{--shiki-default:#383A42;--shiki-default-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic}html pre.shiki code .sDaw7, html code.shiki .sDaw7{--shiki-default:#0184BC;--shiki-dark:#E06C75}html pre.shiki code .s_Sar, html code.shiki .s_Sar{--shiki-default:#0184BC;--shiki-dark:#56B6C2}html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":67,"searchDepth":110,"depth":110,"links":488},[],"2022-03-31 19:19:14","前一阵子为了图床折腾了好长一段时间。刚开始用的是 cloudinary，虽然每月有限制，但强在境内访问速度还不错，可惜后来 res.cloudinary.com 这个域名在某些地方被 DNS 污染了，而自定义域名是付费版的功能，就不得不放弃了。","md",{},"/2022/03/31/upload-pic-to-lskypro-with-curl","---\ntitle: 抛弃PicGo，直接使用curl将图片上传到LskyPro\ndate: 2022-03-31 19:19:14\nsticky:\ntags:\n-\tShell Script\n- 图床\n- Lsky Pro\n---\n\n前一阵子为了图床折腾了好长一段时间。刚开始用的是 cloudinary，虽然每月有限制，但强在境内访问速度还不错，可惜后来 `res.cloudinary.com` 这个域名在某些地方被 DNS 污染了，而自定义域名是付费版的功能，就不得不放弃了。\n\n后来也尝试过 npm图床 的方案，可惜面对这种滥用公共资源的行为我无法接受~~（肯定不是因为受不了那繁琐的上传步骤，随便传张图都得 bump 下版本号的原因）~~，而且现在境内的能作为图床使用的 npm 镜像似乎也就只剩下 `npm.elemecdn.com` 这一个能够正常回源了，没准哪天就用不了了，所以就去投奔了[杜老师](https://dusays.com/)的[去不图床](https://7bu.top/)。\n\n去不图床采用开源图床程序 [Lsky Pro](https://www.lsky.pro/) 搭建，没有免费服务，且配置了鉴黄服务，看起来就是打算长久做下去的图床站点。境内使用腾讯云cdn，境外采用 cloudflare cdn，速度都挺让我满意的。~~（杜老师看见请给我打钱，或者多送我点空间也行~~（x\n\nTypora 一直是我写博客的主用 Markdown 编辑器，之前我采用 Typora 调用 [PicUploader(php)](https://github.com/xiebruce/PicUploader) 自动上传图片的方案写博客，体验相当不错，如图: \n\n![](https://static.031130.xyz/uploads/2024/08/12/62f3b881e3c4c.gif)\n\n可惜 PicUploader 目前仍然没有支持 LskyPro 的上传，我采用的是现在烂大街的 Typora+PicGo+LskyPro插件 的方案去实现 Typora 的自动上传图片功能。\n\n这个方案有明显的弊端：\n\n- PicGo 运行依赖于 electron，极大地消耗了系统资源。\n- PicGo 面对多张图片( >=4张 )同时上传时容易报错。\n- PicGo 对于 Linux 的支持比较有限，作者可能不熟悉 Linux，直到半个月前我去交了一个 pr 才支持 wayland 下使用 wl-clipboard 将图片链接复制到粘贴版。\n\n正好 LskyPro 有详细的文档，应该可以用 curl 手糊一段 Shell 脚本实现直接上传，资源占用小，唯一的弊端是上传完成后的图片不容易管理。脚本如下\n\n```bash\n#!/bin/bash\n\nAPI_URL=\"https://7bu.top/api/v1\"\n\nAUTH_TOKEN=\"\"\n\nmarkdown=false\nwhile [[ \"$#\" -gt 0 ]]; do\n    case $1 in\n        -m|--markdown) markdown=true; shift ;;\n        *) break ;;\n    esac\ndone\n\nfor images in \"$@\"; do\n    UPLOAD_RESPONSE=$(curl -s -X POST \"$API_URL/upload\" \\\n        -H 'Content-Type: multipart/form-data' \\\n        -H \"Authorization: Bearer $AUTH_TOKEN\" \\\n        -F \"file=@$images\")\n\n    if [ \"$markdown\" = true ]; then\n        echo \"$UPLOAD_RESPONSE\" | jq -r .data.links.markdown\n    else\n        echo \"$UPLOAD_RESPONSE\" | jq -r .data.links.url\n    fi\ndone\n```\n\n> 2022/04/02更新: 第六行 $@ - \"$@\"，解决文件名中出现空格时导致的上传失败问题。\n\n需要借助 jq 来读取返回的 json，各 Linux 发行版源内应该都有打包，自行安装即可。\n\n授予x可执行权限后，Typora 内直接填写自定义命令输入脚本所在位置即可实现 Typora 自动上传图片了。\n\n> 2023/12/12更新: 支持 -m 或 --markdown 参数，使脚本输出 markdown 格式的链接。\n",{"title":5,"description":490},"posts/upload-pic-to-lskypro-with-curl",false,[499,500,46],"Shell Script","图床","eMmFMrzMSn45gKewVH2aoEprRefFkYDkirKfFer0SlY",[503,508],{"title":504,"path":505,"stem":506,"date":507,"children":-1},"好软推荐——FastOCR","/2022/04/14/fastocr-experience","posts/fastocr-experience","2022-04-14 05:55:18",{"title":509,"path":510,"stem":511,"date":512,"children":-1},"使用 Github Action 跑 rpmbuild","/2022/03/06/run-rpmbuild-with-github-action","posts/run-rpmbuild-with-github-action","2022-03-06 16:02:54",1761740491699]