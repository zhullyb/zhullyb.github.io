[{"data":1,"prerenderedAt":510},["ShallowReactive",2],{"post-2022-03-31-upload-pic-to-lskypro-with-curl":3,"surround-2022-03-31-upload-pic-to-lskypro-with-curl":499,"randomIndex/2022/03/31/upload-pic-to-lskypro-with-curl/":428},{"id":4,"title":5,"body":6,"date":486,"description":487,"extension":488,"meta":489,"navigation":113,"path":490,"rawbody":491,"seo":492,"stem":493,"sticky":494,"tags":495,"__hash__":498},"posts/posts/upload-pic-to-lskypro-with-curl.md","抛弃PicGo，直接使用curl将图片上传到LskyPro",{"type":7,"value":8,"toc":484},"minimark",[9,18,39,53,62,69,72,75,88,91,463,469,472,475,480],[10,11,12,13,17],"p",{},"前一阵子为了图床折腾了好长一段时间。刚开始用的是 cloudinary，虽然每月有限制，但强在境内访问速度还不错，可惜后来 ",[14,15,16],"code",{},"res.cloudinary.com"," 这个域名在某些地方被 DNS 污染了，而自定义域名是付费版的功能，就不得不放弃了。",[10,19,20,21,24,25,32,33,38],{},"后来也尝试过 npm图床 的方案，可惜面对这种滥用公共资源的行为我无法接受~~（肯定不是因为受不了那繁琐的上传步骤，随便传张图都得 bump 下版本号的原因）~~，而且现在境内的能作为图床使用的 npm 镜像似乎也就只剩下 ",[14,22,23],{},"npm.elemecdn.com"," 这一个能够正常回源了，没准哪天就用不了了，所以就去投奔了",[26,27,31],"a",{"href":28,"rel":29},"https://dusays.com/",[30],"nofollow","杜老师","的",[26,34,37],{"href":35,"rel":36},"https://7bu.top/",[30],"去不图床","。",[10,40,41,42,47,48,52],{},"去不图床采用开源图床程序 ",[26,43,46],{"href":44,"rel":45},"https://www.lsky.pro/",[30],"Lsky Pro"," 搭建，没有免费服务，且配置了鉴黄服务，看起来就是打算长久做下去的图床站点。境内使用腾讯云cdn，境外采用 cloudflare cdn，速度都挺让我满意的。",[49,50,51],"del",{},"（杜老师看见请给我打钱，或者多送我点空间也行","（x",[10,54,55,56,61],{},"Typora 一直是我写博客的主用 Markdown 编辑器，之前我采用 Typora 调用 ",[26,57,60],{"href":58,"rel":59},"https://github.com/xiebruce/PicUploader",[30],"PicUploader(php)"," 自动上传图片的方案写博客，体验相当不错，如图:",[10,63,64],{},[65,66],"img",{"alt":67,"src":68},"","https://static.031130.xyz/uploads/2024/08/12/62f3b881e3c4c.gif",[10,70,71],{},"可惜 PicUploader 目前仍然没有支持 LskyPro 的上传，我采用的是现在烂大街的 Typora+PicGo+LskyPro插件 的方案去实现 Typora 的自动上传图片功能。",[10,73,74],{},"这个方案有明显的弊端：",[76,77,78,82,85],"ul",{},[79,80,81],"li",{},"PicGo 运行依赖于 electron，极大地消耗了系统资源。",[79,83,84],{},"PicGo 面对多张图片( >=4张 )同时上传时容易报错。",[79,86,87],{},"PicGo 对于 Linux 的支持比较有限，作者可能不熟悉 Linux，直到半个月前我去交了一个 pr 才支持 wayland 下使用 wl-clipboard 将图片链接复制到粘贴版。",[10,89,90],{},"正好 LskyPro 有详细的文档，应该可以用 curl 手糊一段 Shell 脚本实现直接上传，资源占用小，唯一的弊端是上传完成后的图片不容易管理。脚本如下",[92,93,97],"pre",{"className":94,"code":95,"language":96,"meta":67,"style":67},"language-bash shiki shiki-themes github-light github-dark","#!/bin/bash\n\nAPI_URL=\"https://7bu.top/api/v1\"\n\nAUTH_TOKEN=\"\"\n\nmarkdown=false\nwhile [[ \"$#\" -gt 0 ]]; do\n    case $1 in\n        -m|--markdown) markdown=true; shift ;;\n        *) break ;;\n    esac\ndone\n\nfor images in \"$@\"; do\n    UPLOAD_RESPONSE=$(curl -s -X POST \"$API_URL/upload\" \\\n        -H 'Content-Type: multipart/form-data' \\\n        -H \"Authorization: Bearer $AUTH_TOKEN\" \\\n        -F \"file=@$images\")\n\n    if [ \"$markdown\" = true ]; then\n        echo \"$UPLOAD_RESPONSE\" | jq -r .data.links.markdown\n    else\n        echo \"$UPLOAD_RESPONSE\" | jq -r .data.links.url\n    fi\ndone\n","bash",[14,98,99,108,115,130,135,146,151,162,192,205,238,249,255,261,266,290,325,336,351,368,373,401,426,432,452,458],{"__ignoreMap":67},[100,101,104],"span",{"class":102,"line":103},"line",1,[100,105,107],{"class":106},"sJ8bj","#!/bin/bash\n",[100,109,111],{"class":102,"line":110},2,[100,112,114],{"emptyLinePlaceholder":113},true,"\n",[100,116,118,122,126],{"class":102,"line":117},3,[100,119,121],{"class":120},"sVt8B","API_URL",[100,123,125],{"class":124},"szBVR","=",[100,127,129],{"class":128},"sZZnC","\"https://7bu.top/api/v1\"\n",[100,131,133],{"class":102,"line":132},4,[100,134,114],{"emptyLinePlaceholder":113},[100,136,138,141,143],{"class":102,"line":137},5,[100,139,140],{"class":120},"AUTH_TOKEN",[100,142,125],{"class":124},[100,144,145],{"class":128},"\"\"\n",[100,147,149],{"class":102,"line":148},6,[100,150,114],{"emptyLinePlaceholder":113},[100,152,154,157,159],{"class":102,"line":153},7,[100,155,156],{"class":120},"markdown",[100,158,125],{"class":124},[100,160,161],{"class":128},"false\n",[100,163,165,168,171,174,178,180,183,186,189],{"class":102,"line":164},8,[100,166,167],{"class":124},"while",[100,169,170],{"class":120}," [[ ",[100,172,173],{"class":128},"\"",[100,175,177],{"class":176},"sj4cs","$#",[100,179,173],{"class":128},[100,181,182],{"class":124}," -gt",[100,184,185],{"class":176}," 0",[100,187,188],{"class":120}," ]]; ",[100,190,191],{"class":124},"do\n",[100,193,195,198,202],{"class":102,"line":194},9,[100,196,197],{"class":124},"    case",[100,199,201],{"class":200},"s4XuR"," $1",[100,203,204],{"class":124}," in\n",[100,206,208,212,215,218,221,224,226,229,232,235],{"class":102,"line":207},10,[100,209,211],{"class":210},"sA_wV","        -m",[100,213,214],{"class":124},"|",[100,216,217],{"class":210},"--markdown",[100,219,220],{"class":124},")",[100,222,223],{"class":120}," markdown",[100,225,125],{"class":124},[100,227,228],{"class":128},"true",[100,230,231],{"class":120},"; ",[100,233,234],{"class":176},"shift",[100,236,237],{"class":120}," ;;\n",[100,239,241,244,247],{"class":102,"line":240},11,[100,242,243],{"class":124},"        *)",[100,245,246],{"class":124}," break",[100,248,237],{"class":120},[100,250,252],{"class":102,"line":251},12,[100,253,254],{"class":124},"    esac\n",[100,256,258],{"class":102,"line":257},13,[100,259,260],{"class":124},"done\n",[100,262,264],{"class":102,"line":263},14,[100,265,114],{"emptyLinePlaceholder":113},[100,267,269,272,275,278,281,284,286,288],{"class":102,"line":268},15,[100,270,271],{"class":124},"for",[100,273,274],{"class":120}," images ",[100,276,277],{"class":124},"in",[100,279,280],{"class":128}," \"",[100,282,283],{"class":176},"$@",[100,285,173],{"class":128},[100,287,231],{"class":120},[100,289,191],{"class":124},[100,291,293,296,298,301,305,308,311,314,316,319,322],{"class":102,"line":292},16,[100,294,295],{"class":120},"    UPLOAD_RESPONSE",[100,297,125],{"class":124},[100,299,300],{"class":120},"$(",[100,302,304],{"class":303},"sScJk","curl",[100,306,307],{"class":176}," -s",[100,309,310],{"class":176}," -X",[100,312,313],{"class":128}," POST",[100,315,280],{"class":128},[100,317,318],{"class":120},"$API_URL",[100,320,321],{"class":128},"/upload\"",[100,323,324],{"class":176}," \\\n",[100,326,328,331,334],{"class":102,"line":327},17,[100,329,330],{"class":176},"        -H",[100,332,333],{"class":128}," 'Content-Type: multipart/form-data'",[100,335,324],{"class":176},[100,337,339,341,344,347,349],{"class":102,"line":338},18,[100,340,330],{"class":176},[100,342,343],{"class":128}," \"Authorization: Bearer ",[100,345,346],{"class":120},"$AUTH_TOKEN",[100,348,173],{"class":128},[100,350,324],{"class":176},[100,352,354,357,360,363,365],{"class":102,"line":353},19,[100,355,356],{"class":176},"        -F",[100,358,359],{"class":128}," \"file=@",[100,361,362],{"class":120},"$images",[100,364,173],{"class":128},[100,366,367],{"class":120},")\n",[100,369,371],{"class":102,"line":370},20,[100,372,114],{"emptyLinePlaceholder":113},[100,374,376,379,382,384,387,389,392,395,398],{"class":102,"line":375},21,[100,377,378],{"class":124},"    if",[100,380,381],{"class":120}," [ ",[100,383,173],{"class":128},[100,385,386],{"class":120},"$markdown",[100,388,173],{"class":128},[100,390,391],{"class":124}," =",[100,393,394],{"class":176}," true",[100,396,397],{"class":120}," ]; ",[100,399,400],{"class":124},"then\n",[100,402,404,407,409,412,414,417,420,423],{"class":102,"line":403},22,[100,405,406],{"class":176},"        echo",[100,408,280],{"class":128},[100,410,411],{"class":120},"$UPLOAD_RESPONSE",[100,413,173],{"class":128},[100,415,416],{"class":124}," |",[100,418,419],{"class":303}," jq",[100,421,422],{"class":176}," -r",[100,424,425],{"class":128}," .data.links.markdown\n",[100,427,429],{"class":102,"line":428},23,[100,430,431],{"class":124},"    else\n",[100,433,435,437,439,441,443,445,447,449],{"class":102,"line":434},24,[100,436,406],{"class":176},[100,438,280],{"class":128},[100,440,411],{"class":120},[100,442,173],{"class":128},[100,444,416],{"class":124},[100,446,419],{"class":303},[100,448,422],{"class":176},[100,450,451],{"class":128}," .data.links.url\n",[100,453,455],{"class":102,"line":454},25,[100,456,457],{"class":124},"    fi\n",[100,459,461],{"class":102,"line":460},26,[100,462,260],{"class":124},[464,465,466],"blockquote",{},[10,467,468],{},"2022/04/02更新: 第六行 $@ - \"$@\"，解决文件名中出现空格时导致的上传失败问题。",[10,470,471],{},"需要借助 jq 来读取返回的 json，各 Linux 发行版源内应该都有打包，自行安装即可。",[10,473,474],{},"授予x可执行权限后，Typora 内直接填写自定义命令输入脚本所在位置即可实现 Typora 自动上传图片了。",[464,476,477],{},[10,478,479],{},"2023/12/12更新: 支持 -m 或 --markdown 参数，使脚本输出 markdown 格式的链接。",[481,482,483],"style",{},"html pre.shiki code .sJ8bj, html code.shiki .sJ8bj{--shiki-default:#6A737D;--shiki-dark:#6A737D}html pre.shiki code .sVt8B, html code.shiki .sVt8B{--shiki-default:#24292E;--shiki-dark:#E1E4E8}html pre.shiki code .szBVR, html code.shiki .szBVR{--shiki-default:#D73A49;--shiki-dark:#F97583}html pre.shiki code .sZZnC, html code.shiki .sZZnC{--shiki-default:#032F62;--shiki-dark:#9ECBFF}html pre.shiki code .sj4cs, html code.shiki .sj4cs{--shiki-default:#005CC5;--shiki-dark:#79B8FF}html pre.shiki code .s4XuR, html code.shiki .s4XuR{--shiki-default:#E36209;--shiki-dark:#FFAB70}html pre.shiki code .sA_wV, html code.shiki .sA_wV{--shiki-default:#032F62;--shiki-dark:#DBEDFF}html pre.shiki code .sScJk, html code.shiki .sScJk{--shiki-default:#6F42C1;--shiki-dark:#B392F0}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":67,"searchDepth":110,"depth":110,"links":485},[],"2022-03-31 19:19:14","前一阵子为了图床折腾了好长一段时间。刚开始用的是 cloudinary，虽然每月有限制，但强在境内访问速度还不错，可惜后来 res.cloudinary.com 这个域名在某些地方被 DNS 污染了，而自定义域名是付费版的功能，就不得不放弃了。","md",{},"/2022/03/31/upload-pic-to-lskypro-with-curl","---\ntitle: 抛弃PicGo，直接使用curl将图片上传到LskyPro\ndate: 2022-03-31 19:19:14\nsticky:\ntags:\n-\tShell Script\n- 图床\n- Lsky Pro\n---\n\n前一阵子为了图床折腾了好长一段时间。刚开始用的是 cloudinary，虽然每月有限制，但强在境内访问速度还不错，可惜后来 `res.cloudinary.com` 这个域名在某些地方被 DNS 污染了，而自定义域名是付费版的功能，就不得不放弃了。\n\n后来也尝试过 npm图床 的方案，可惜面对这种滥用公共资源的行为我无法接受~~（肯定不是因为受不了那繁琐的上传步骤，随便传张图都得 bump 下版本号的原因）~~，而且现在境内的能作为图床使用的 npm 镜像似乎也就只剩下 `npm.elemecdn.com` 这一个能够正常回源了，没准哪天就用不了了，所以就去投奔了[杜老师](https://dusays.com/)的[去不图床](https://7bu.top/)。\n\n去不图床采用开源图床程序 [Lsky Pro](https://www.lsky.pro/) 搭建，没有免费服务，且配置了鉴黄服务，看起来就是打算长久做下去的图床站点。境内使用腾讯云cdn，境外采用 cloudflare cdn，速度都挺让我满意的。~~（杜老师看见请给我打钱，或者多送我点空间也行~~（x\n\nTypora 一直是我写博客的主用 Markdown 编辑器，之前我采用 Typora 调用 [PicUploader(php)](https://github.com/xiebruce/PicUploader) 自动上传图片的方案写博客，体验相当不错，如图: \n\n![](https://static.031130.xyz/uploads/2024/08/12/62f3b881e3c4c.gif)\n\n可惜 PicUploader 目前仍然没有支持 LskyPro 的上传，我采用的是现在烂大街的 Typora+PicGo+LskyPro插件 的方案去实现 Typora 的自动上传图片功能。\n\n这个方案有明显的弊端：\n\n- PicGo 运行依赖于 electron，极大地消耗了系统资源。\n- PicGo 面对多张图片( >=4张 )同时上传时容易报错。\n- PicGo 对于 Linux 的支持比较有限，作者可能不熟悉 Linux，直到半个月前我去交了一个 pr 才支持 wayland 下使用 wl-clipboard 将图片链接复制到粘贴版。\n\n正好 LskyPro 有详细的文档，应该可以用 curl 手糊一段 Shell 脚本实现直接上传，资源占用小，唯一的弊端是上传完成后的图片不容易管理。脚本如下\n\n```bash\n#!/bin/bash\n\nAPI_URL=\"https://7bu.top/api/v1\"\n\nAUTH_TOKEN=\"\"\n\nmarkdown=false\nwhile [[ \"$#\" -gt 0 ]]; do\n    case $1 in\n        -m|--markdown) markdown=true; shift ;;\n        *) break ;;\n    esac\ndone\n\nfor images in \"$@\"; do\n    UPLOAD_RESPONSE=$(curl -s -X POST \"$API_URL/upload\" \\\n        -H 'Content-Type: multipart/form-data' \\\n        -H \"Authorization: Bearer $AUTH_TOKEN\" \\\n        -F \"file=@$images\")\n\n    if [ \"$markdown\" = true ]; then\n        echo \"$UPLOAD_RESPONSE\" | jq -r .data.links.markdown\n    else\n        echo \"$UPLOAD_RESPONSE\" | jq -r .data.links.url\n    fi\ndone\n```\n\n> 2022/04/02更新: 第六行 $@ - \"$@\"，解决文件名中出现空格时导致的上传失败问题。\n\n需要借助 jq 来读取返回的 json，各 Linux 发行版源内应该都有打包，自行安装即可。\n\n授予x可执行权限后，Typora 内直接填写自定义命令输入脚本所在位置即可实现 Typora 自动上传图片了。\n\n> 2023/12/12更新: 支持 -m 或 --markdown 参数，使脚本输出 markdown 格式的链接。\n",{"title":5,"description":487},"posts/upload-pic-to-lskypro-with-curl",false,[496,497,46],"Shell Script","图床","z5arsyGDm6a9MXIrv74Id29aup09uy8rOSTDVSdYWc0",[500,505],{"title":501,"path":502,"stem":503,"date":504,"children":-1},"好软推荐——FastOCR","/2022/04/14/fastocr-experience","posts/fastocr-experience","2022-04-14 05:55:18",{"title":506,"path":507,"stem":508,"date":509,"children":-1},"使用 Github Action 跑 rpmbuild","/2022/03/06/run-rpmbuild-with-github-action","posts/run-rpmbuild-with-github-action","2022-03-06 16:02:54",1761699627378]