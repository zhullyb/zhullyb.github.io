[{"data":1,"prerenderedAt":2016},["ShallowReactive",2],{"randomIndex/page/9/":3,"index-page-9":4,"posts-total":2015},2,[5,89,283,626,876,982,1301,1548,1651,1735],{"title":6,"date":7,"path":8,"tags":9,"body":13},"使用 Github Action 跑 rpmbuild","2022-03-06 16:02:54","/2022/03/06/run-rpmbuild-with-github-action",[10,11,12],"Fedora","RPM Package","Github Action",{"type":14,"value":15,"toc":87},"minimark",[16,20,23,40,43,62,69,78],[17,18,19],"p",{},"一直打算用 Github Action 跑 rpmbuild 构建 rpm 包，然后传到 Action 的 Artifacts 里面，用户就可以在登陆 Github 帐号的情况下进行下载。只要不发 Release，应该就不算「再分发」的行为，也就自然规避了再分发闭源软件的法律风险。",[17,21,22],{},"然而，现有的那些 Action 几乎全都是针对 CentOS 老古董定制的，，有些甚至连 buildrequires 都不帮你安装，而且大部分情况下都不支持 Source 直接填写一个链接，需要你直接提供 Source 文件。我自己又不可能在 Github 的仓库里用 lfs 强行存一个 200MB+ 的二进制文件，显然是不符合我要求的。还有几个项目使用 mock 去构建的，但使用 mock 构建需要提前用 rpmbuild 生成 srpm，在我们的个人电脑上可以理解为用一个干净的 chroot 打包防止自己的环境受污染，但在一个全新的、用完一次就要扔掉的 docker 里面还要防止环境被污染似乎有些画蛇添足的嫌疑。",[17,24,25,26,33,34,39],{},"最终，我选择了 ",[27,28,32],"a",{"href":29,"rel":30},"https://github.com/marketplace/actions/rpm-build",[31],"nofollow","naveenrajm7/rpmbuild"," 这个项目。（虽然我并不理解为什么他要用 nodejs 去调用系统命令去执行 rpmbuild 等一系列步骤，我也没学过这类语言。不过项目的 ",[27,35,38],{"href":36,"rel":37},"https://github.com/naveenrajm7/rpmbuild/blob/master/src/main.ts",[31],"main.ts"," 我还是能仿写的。）",[17,41,42],{},"在经过三四个小时的摸爬滚打下，我还是成功地将这个项目按照我的想法改完了。",[44,45,46,50,53,56,59],"ul",{},[47,48,49],"li",{},"采用 Fedora 35 作为 host 进行 rpmbuild",[47,51,52],{},"自动安装 buildrequires",[47,54,55],{},"自动下载 source",[47,57,58],{},"允许仓库内自带本地 source",[47,60,61],{},"移除针对 srpm 的构建",[17,63,64],{},[65,66],"img",{"alt":67,"src":68},"","https://static.031130.xyz/uploads/2024/08/12/bb263c91c7bf4.webp",[17,70,71,72,77],{},"改完后的 action 在 ",[27,73,76],{"href":74,"rel":75},"https://github.com/zhullyb/rpmbuild-github-action",[31],"zhullyb/rpmbuild-github-action","，欢迎使用。",[17,79,80,81,86],{},"最终是在 ",[27,82,85],{"href":83,"rel":84},"https://github.com/zhullyb/dingtalk-for-fedora",[31],"zhullyb/dingtalk-for-fedora"," 项目成功实装了，有兴趣的访客们可以去尝试着一起来白嫖 Github Action 呀！ >_\u003C",{"title":67,"searchDepth":3,"depth":3,"links":88},[],{"title":90,"date":91,"path":92,"tags":93,"body":94},"如何打出一个「-git」的rpm包","2022-02-07 10:23:29","/2022/02/07/how-to-package-a-git-rpm-package",[10,11],{"type":14,"value":95,"toc":275},[96,104,109,116,136,140,147,151,166,170,187,191,215,224,230,251,255,261],[17,97,98,99,103],{},"本文中，笔者通过 github api 获取最新的 commit_id ，以一种曲线救国的方式成功为 rpm 打下了一个 ",[100,101,102],"code",{},"-git"," 包。",[105,106,108],"h2",{"id":107},"on-archlinux","On Archlinux",[17,110,111,112,115],{},"用过 AUR 的 Arch 用户应该知道，makepkg 支持 \"-git\" 包。当我们执行 makepkg 时，PKGBUILD 中的 ",[100,113,114],{},"pkgver"," 函数会自动被运行，并将输出的结果作为本次打包的版本号。这是一个非常棒的设计，我们不需要去手动更新 PKGBUILD，就可以直接从 git 服务区拉取最新的 master 分支编译打包，对于跟进开发进度而言非常方便。",[17,117,118,119,121,122,125,126,129,130,132,133,135],{},"一般来说，一个 ",[100,120,102],{}," 包的版本号会分成 2~4 个部分，最为核心的是 ",[100,123,124],{},"count"," 和 ",[100,127,128],{},"commit_id","：",[100,131,124],{},"用于记录这是第几次提交，通过提交的次数作为版本号的靠前部分可以帮助包管理器比较版本号的新旧，比如第21次提交的代码一定比第18次的更加新，而21也正好比18大，包管理器也就凭借着这个数字来保证其可以在用户在更新的时候为用户选择一个更新版本的包；而 ",[100,134,128],{},"则可以帮助人类更快定位这个包是在哪一次代码提交以后编译的，以帮助 开发者/用户 定位问题。",[105,137,139],{"id":138},"on-fedora","On Fedora",[17,141,142,143,146],{},"然而，这个思路在 rpm 上似乎无法实现。rpmbuild 执行的时候会事先根据版本号在 BUILDROOT 路径下创造一个 ",[100,144,145],{},"%{name}-%{version}-%{release}-%{arch}","的目录，如此一来，就必须先确定版本号，无法像 PKGBUILD 那样使用一个 pkgver 的函数去自动更新版本号。此外，rpm 似乎专注于软件包的 Reproducibility，也就是希望拿到了指导 rpmbuild 打包的 specfile 以后打出一个相同包的能力，因此，使用同一份 specfile 在不同时间打出一个不同包的这种行为似乎并不符合 Fedora/Redhat 的哲学，所以我们怕是等不到 rpm 支持这个功能的那一天了。",[105,148,150],{"id":149},"turn-of-events","Turn of events",[17,152,153,154,159,160,165],{},"当然，这也并非不可能完成的任务，在 ",[27,155,158],{"href":156,"rel":157},"https://yanqiyu.info/",[31],"西木野羰基"," 的指引下，我在 Fedora Docs 找到了",[27,161,164],{"href":162,"rel":163},"https://docs.fedoraproject.org/en-US/packaging-guidelines/SourceURL/#_branch_example",[31],"对于某个 Branch 的打包样版","。其实也就是直接从 github 下载 master 分支的 master.tar.gz 压缩包来获取最新的源码，这样就确保了每一次 rpmbuild 的时候都能获取最新的源码。接下来需要处理的就是版本号的问题。",[105,167,169],{"id":168},"sad-story","Sad Story",[17,171,172,173,176,177,180,181,183,184,186],{},"很可惜，master.tar.gz 压缩包中并不包括 ",[100,174,175],{},".git"," 文件，我们无法通过 ",[100,178,179],{},"git rev-list --count HEAD"," 来获取 ",[100,182,124],{}," 计数，此外，最新的 ",[100,185,128],{}," 我们也不得而知。即使我们知道这些参数，也无法在 rpmbuild 执行之前自动把这些参数填进 specfile 中。",[105,188,190],{"id":189},"improvement","Improvement",[17,192,193,194,199,200,203,204,208,209,214],{},"好在天无绝人之路，在 Liu Sen 的 ",[27,195,198],{"href":196,"rel":197},"https://forum.suse.org.cn/t/topic/13626",[31],"RPM 中宏的简单介绍"," 一文中发现宏其实也可以类似 bash 中的 ",[100,201,202],{},"$()"," 一样定义成系统运行某些命令后的结果，通过仿写 copr 上 ",[205,206,207],"em",{},"atim/fractal"," 的 ",[27,210,213],{"href":211,"rel":212},"https://download.copr.fedorainfracloud.org/results/atim/fractal/fedora-35-x86_64/03000082-fractal-master/fractal-master.spec",[31],"specfile"," 定义了下面两个宏。",[216,217,222],"pre",{"className":218,"code":220,"language":221},[219],"language-text","%global timenow %(echo $(date +%Y%m%d.%H%M))\n%global commit_short_id %(api_result=$(curl -s https://api.github.com/repos/\u003Cusername>/\u003Creponame>/branches/master | head -n 4 | tail -n 1); echo ${api_result:12:7})\n","text",[100,223,220],{"__ignoreMap":67},[17,225,226,227],{},"版本号就可以直接写成 ",[100,228,229],{},"%{timenow}.%{commit_id_short}",[44,231,232,241],{},[47,233,234,237,238,240],{},[100,235,236],{},"%{timenow}"," 是直接通过运行系统的 date 命令获得一个精确到分钟的时间来当作 ",[100,239,124],{}," 给 dnf 判断版本号大小使用",[47,242,243,246,247,250],{},[100,244,245],{},"%{commit_id_short}"," 从 api.github.com 获取到该仓库最新的 commit 号，配合粗制滥造的 shell 命令做切片，提取前7 位，帮助用户和开发者快速定位源码版本使用。当然，也可以选择直接使用 ",[100,248,249],{},"jq"," 作为 json 的解释器，不过 copr 大概率没有预装，生成 srpm 的时候估计就会报错。",[105,252,254],{"id":253},"review","Review",[17,256,257,258,260],{},"至此，我们成功解决了在 rpm 上打 ",[100,259,102],{}," 包的问题，不过仍然有以下缺点",[44,262,263,266,269,272],{},[47,264,265],{},"仅支持 github 上的项目，对于其他的 git 托管服务商还需要去查阅他们的 api 文档",[47,267,268],{},"粗制滥造的 shell 命令可能不足以应对以后的 github api 变更",[47,270,271],{},"使用了精确到分钟的时间作为计数器，导致版本号过长",[47,273,274],{},"使用 copr 打包的时候，有概率出现 srpm 与 rpm 之间版本号出现分钟级的差异",{"title":67,"searchDepth":3,"depth":3,"links":276},[277,278,279,280,281,282],{"id":107,"depth":3,"text":108},{"id":138,"depth":3,"text":139},{"id":149,"depth":3,"text":150},{"id":168,"depth":3,"text":169},{"id":189,"depth":3,"text":190},{"id":253,"depth":3,"text":254},{"title":284,"date":285,"path":286,"tags":287,"body":288},"雪藏在开源镜像站点中的那些常用却不为人知的软件","2022-01-19 13:01:30","/2022/01/19/the-common-software-hidden-in-mirrors",null,{"type":14,"value":289,"toc":624},[290,293,300],[17,291,292],{},"前两天在下载 微PE 的时候眼睛突然一瞥，发现了山东大学的开源镜像站。突然间才发现在各个开源镜像站点中提供了许多那些我们误以为只能顶着断断续续的 Github  网络才能下载的软件。",[17,294,295,296],{},"下面这张列表主要来自山东大学的镜像站中的「常用软件」和南京大学的「github-release」。",[297,298,299],"del",{},"我严重怀疑南京大学就是把整个 tuna 给搬了一遍过来。",[301,302,303,333],"table",{},[304,305,306],"thead",{},[307,308,309,312,319,326],"tr",{},[310,311],"th",{},[310,313,314],{},[27,315,318],{"href":316,"rel":317},"https://mirrors.sdu.edu.cn",[31],"山东大学",[310,320,321],{},[27,322,325],{"href":323,"rel":324},"https://mirrors.nju.edu.cn",[31],"南京大学",[310,327,328],{},[27,329,332],{"href":330,"rel":331},"https://mirrors.tuna.tsinghua.edu.cn",[31],"清华大学",[334,335,336,356,371,394,409,424,443,458,481,496,511,530,552,571,590,609],"tbody",{},[307,337,338,342,344,350],{},[339,340,341],"td",{},"balena-io/etcher",[339,343],{},[339,345,346],{},[27,347,348],{"href":348,"rel":349},"https://mirrors.nju.edu.cn/github-release/balena-io/etcher/LatestRelease/",[31],[339,351,352],{},[27,353,354],{"href":354,"rel":355},"https://mirrors.tuna.tsinghua.edu.cn/github-release/balena-io/etcher/LatestRelease/",[31],[307,357,358,361,367,369],{},[339,359,360],{},"drawio-desktop",[339,362,363],{},[27,364,365],{"href":365,"rel":366},"https://mirrors.sdu.edu.cn/github-release/jgraph_drawio-desktop/",[31],[339,368],{},[339,370],{},[307,372,373,376,382,388],{},[339,374,375],{},"git-for-windows",[339,377,378],{},[27,379,380],{"href":380,"rel":381},"https://mirrors.sdu.edu.cn/github-release/git-for-windows_git/",[31],[339,383,384],{},[27,385,386],{"href":386,"rel":387},"https://mirrors.nju.edu.cn/github-release/git-for-windows/git/LatestRelease/",[31],[339,389,390],{},[27,391,392],{"href":392,"rel":393},"https://mirrors.tuna.tsinghua.edu.cn/github-release/git-for-windows/git/LatestRelease/",[31],[307,395,396,399,401,407],{},[339,397,398],{},"Krita",[339,400],{},[339,402,403],{},[27,404,405],{"href":405,"rel":406},"https://mirrors.nju.edu.cn/kde/stable/krita/",[31],[339,408],{},[307,410,411,414,416,418],{},[339,412,413],{},"libreoffice",[339,415],{},[339,417],{},[339,419,420],{},[27,421,422],{"href":422,"rel":423},"https://mirrors.tuna.tsinghua.edu.cn/libreoffice/libreoffice/",[31],[307,425,426,429,431,437],{},[339,427,428],{},"Magisk",[339,430],{},[339,432,433],{},[27,434,435],{"href":435,"rel":436},"https://mirrors.nju.edu.cn/github-release/topjohnwu/Magisk/LatestRelease/",[31],[339,438,439],{},[27,440,441],{"href":441,"rel":442},"https://mirrors.tuna.tsinghua.edu.cn/github-release/topjohnwu/Magisk/LatestRelease/",[31],[307,444,445,448,454,456],{},[339,446,447],{},"Motrix",[339,449,450],{},[27,451,452],{"href":452,"rel":453},"https://mirrors.sdu.edu.cn/github-release/agalwood_Motrix/",[31],[339,455],{},[339,457],{},[307,459,460,463,469,475],{},[339,461,462],{},"obs-studio",[339,464,465],{},[27,466,467],{"href":467,"rel":468},"https://mirrors.sdu.edu.cn/github-release/obsproject_obs-studio/https://mirrors.sdu.edu.cn/software/Windows/OBS%20Studio/",[31],[339,470,471],{},[27,472,473],{"href":473,"rel":474},"https://mirrors.nju.edu.cn/github-release/obsproject/obs-studio/LatestRelease/",[31],[339,476,477],{},[27,478,479],{"href":479,"rel":480},"https://mirrors.tuna.tsinghua.edu.cn/github-release/obsproject/obs-studio/LatestRelease/",[31],[307,482,483,486,492,494],{},[339,484,485],{},"office tool plus",[339,487,488],{},[27,489,490],{"href":490,"rel":491},"https://mirrors.sdu.edu.cn/github-release/YerongAI_Office-Tool/",[31],[339,493],{},[339,495],{},[307,497,498,501,507,509],{},[339,499,500],{},"picgo",[339,502,503],{},[27,504,505],{"href":505,"rel":506},"https://mirrors.sdu.edu.cn/github-release/pbatard_rufus/",[31],[339,508],{},[339,510],{},[307,512,513,516,522,528],{},[339,514,515],{},"rufus",[339,517,518],{},[27,519,520],{"href":520,"rel":521},"https://mirrors.sdu.edu.cn/software/Windows/Rufus/",[31],[339,523,524],{},[27,525,526],{"href":526,"rel":527},"https://mirrors.nju.edu.cn/github-release/pbatard/rufus/LatestRelease/",[31],[339,529],{},[307,531,532,538,544,550],{},[339,533,534],{},[27,535,536],{"href":536,"rel":537},"https://mirrors.sdu.edu.cn/software/Windows/WePE/ventoy",[31],[339,539,540],{},[27,541,542],{"href":542,"rel":543},"https://mirrors.sdu.edu.cn/github-release/ventoy_Ventoy/",[31],[339,545,546],{},[27,547,548],{"href":548,"rel":549},"https://mirrors.nju.edu.cn/github-release/ventoy/Ventoy/LatestRelease/",[31],[339,551],{},[307,553,554,557,559,565],{},[339,555,556],{},"virtualbox",[339,558],{},[339,560,561],{},[27,562,563],{"href":563,"rel":564},"https://mirrors.nju.edu.cn/virtualbox/",[31],[339,566,567],{},[27,568,569],{"href":569,"rel":570},"https://mirrors.tuna.tsinghua.edu.cn/virtualbox/",[31],[307,572,573,576,578,584],{},[339,574,575],{},"vlc",[339,577],{},[339,579,580],{},[27,581,582],{"href":582,"rel":583},"https://mirrors.nju.edu.cn/videolan-ftp/",[31],[339,585,586],{},[27,587,588],{"href":588,"rel":589},"https://mirrors.tuna.tsinghua.edu.cn/videolan-ftp/",[31],[307,591,592,595,597,603],{},[339,593,594],{},"winehq",[339,596],{},[339,598,599],{},[27,600,601],{"href":601,"rel":602},"https://mirrors.nju.edu.cn/winehq/",[31],[339,604,605],{},[27,606,607],{"href":607,"rel":608},"https://mirrors.bfsu.edu.cn/winehq/",[31],[307,610,611,614,620,622],{},[339,612,613],{},"wepe",[339,615,616],{},[27,617,618],{"href":618,"rel":619},"https://mirrors.sdu.edu.cn/software/Windows/WePE/",[31],[339,621],{},[339,623],{},{"title":67,"searchDepth":3,"depth":3,"links":625},[],{"title":627,"date":628,"path":629,"tags":630,"body":631},"在Fedora搭建jekyll环境——dnf module","2022-01-12 22:11:42","/2022/01/12/dnf-module-in-setting-up-the-jekyll",[10],{"type":14,"value":632,"toc":868},[633,636,653,656,660,673,676,680,683,709,712,731,734,753,757,818,828,834,837,843,850,864],[105,634,635],{"id":635},"起因",[17,637,638,639,644,645,648,649,652],{},"我之前的博客一直用的是",[27,640,643],{"href":641,"rel":642},"https://github.com/qiubaiying/qiubaiying.github.io",[31],"这个主题","，直接使用 Fedora 官方源里的 ",[100,646,647],{},"rubygem-jekyll"," 似乎无法正常安装 Gemfile 中的依赖。之前使用 Archlinux 的时候，我是直接从 AUR 安装了一个 ",[100,650,651],{},"ruby-2.6"," 来使用的，但最近转到 Fedora 以后似乎就没法用这样的方案来解决了。",[17,654,655],{},"好在天无绝人之路，Fedora 也提供了安装老版本的 ruby 的方案——使用 dnf 的 module 功能。",[105,657,659],{"id":658},"关于-dnf-module","关于 dnf module",[17,661,662,663,668,669,672],{},"关于 dnf 的 module 功能到底是用来做什么的，其实我并不清楚。虽说 Fedora 提供了",[27,664,667],{"href":665,"rel":666},"https://docs.fedoraproject.org/en-US/modularity/",[31],"文档","，但就凭我的读中文文档都吃力的水准，似乎没有办法通过英文文档来理解这个全新的概念，",[297,670,671],{},"所以我选择直接莽过去","。",[17,674,675],{},"就我目前的理解而言，dnf 的 module 似乎并不致力于帮助用户完成系统内某一程序的新老版本共存的难题，而仅仅是给用户提供了停留在老版本软件的权利。module 所负责的，是保证老版本的程序能在你的系统上正常运行起来，而不会因为其他组件的更新而导致老版本的程序无法正常使用。",[677,678,679],"h3",{"id":679},"基本的使用方法",[17,681,682],{},"通过下列命令可以查看目前所支持的 module",[216,684,688],{"className":685,"code":686,"language":687,"meta":67,"style":67},"language-bash shiki shiki-themes one-light one-dark-pro","sudo dnf module list\n","bash",[100,689,690],{"__ignoreMap":67},[691,692,695,699,703,706],"span",{"class":693,"line":694},"line",1,[691,696,698],{"class":697},"sAdtL","sudo",[691,700,702],{"class":701},"sDhpE"," dnf",[691,704,705],{"class":701}," module",[691,707,708],{"class":701}," list\n",[17,710,711],{},"通过下列命令可以选择 module 所要停留的版本( 以 ruby 2.7 为例 )",[216,713,715],{"className":685,"code":714,"language":687,"meta":67,"style":67},"sudo dnf module enable ruby:2.7\n",[100,716,717],{"__ignoreMap":67},[691,718,719,721,723,725,728],{"class":693,"line":694},[691,720,698],{"class":697},[691,722,702],{"class":701},[691,724,705],{"class":701},[691,726,727],{"class":701}," enable",[691,729,730],{"class":701}," ruby:2.7\n",[17,732,733],{},"通过下列命令可以取消锁定 module 程序所要停留的版本( 以 ruby 为例 )",[216,735,737],{"className":685,"code":736,"language":687,"meta":67,"style":67},"sudo dnf module reset ruby\n",[100,738,739],{"__ignoreMap":67},[691,740,741,743,745,747,750],{"class":693,"line":694},[691,742,698],{"class":697},[691,744,702],{"class":701},[691,746,705],{"class":701},[691,748,749],{"class":701}," reset",[691,751,752],{"class":701}," ruby\n",[105,754,756],{"id":755},"开始配置该-jekyll-主题的运行环境","开始配置该 jekyll 主题的运行环境",[216,758,760],{"className":685,"code":759,"language":687,"meta":67,"style":67},"sudo dnf module install ruby:2.7\nsudo dnf install ruby-devel\n\ncd /path/to/the/jekyll-blog/\nbundle install --path vendor/bundle\n",[100,761,762,775,786,793,803],{"__ignoreMap":67},[691,763,764,766,768,770,773],{"class":693,"line":694},[691,765,698],{"class":697},[691,767,702],{"class":701},[691,769,705],{"class":701},[691,771,772],{"class":701}," install",[691,774,730],{"class":701},[691,776,777,779,781,783],{"class":693,"line":3},[691,778,698],{"class":697},[691,780,702],{"class":701},[691,782,772],{"class":701},[691,784,785],{"class":701}," ruby-devel\n",[691,787,789],{"class":693,"line":788},3,[691,790,792],{"emptyLinePlaceholder":791},true,"\n",[691,794,796,800],{"class":693,"line":795},4,[691,797,799],{"class":798},"s_Sar","cd",[691,801,802],{"class":701}," /path/to/the/jekyll-blog/\n",[691,804,806,809,811,815],{"class":693,"line":805},5,[691,807,808],{"class":697},"bundle",[691,810,772],{"class":701},[691,812,814],{"class":813},"sAGMh"," --path",[691,816,817],{"class":701}," vendor/bundle\n",[17,819,820,821,824,825],{},"完成后，我们即可在 jekyll-blog 目录下 使用 ",[100,822,823],{},"bundle exec jekyll"," 来正常运行 jekyll 了。试着跑一下 ",[100,826,827],{},"bundle exec jekyll server",[17,829,830],{},[65,831],{"alt":832,"src":833},"成功，彻彻底底！","https://static.031130.xyz/uploads/2024/08/12/62f3caeec8ef6.webp",[105,835,836],{"id":836},"参考材料",[17,838,839],{},[27,840,842],{"href":665,"rel":841},[31],"Fedora Docs",[17,844,845],{},[27,846,849],{"href":847,"rel":848},"https://github.com/openSUSE-zh/page-opensuse-zh/blob/main/CONTRIBUTING.md",[31],"openSUSE 中文社区主页贡献指南",[17,851,852,857,858,863],{},[27,853,856],{"href":854,"rel":855},"https://blog.kagesenshi.org/2021/05/ruby24-fedora34.html",[31],"Switching to use Ruby 2.7 (or older) in Fedora 34 using DNF Modules"," 「",[27,859,862],{"href":860,"rel":861},"https://web.archive.org/web/20220112143005/https://blog.kagesenshi.org/2021/05/ruby24-fedora34.html",[31],"WebArchive","」",[865,866,867],"style",{},"html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .s_Sar, html code.shiki .s_Sar{--shiki-default:#0184BC;--shiki-dark:#56B6C2}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}",{"title":67,"searchDepth":3,"depth":3,"links":869},[870,871,874,875],{"id":635,"depth":3,"text":635},{"id":658,"depth":3,"text":659,"children":872},[873],{"id":679,"depth":788,"text":679},{"id":755,"depth":3,"text":756},{"id":836,"depth":3,"text":836},{"title":877,"date":878,"path":879,"tags":880,"body":882},"pacman更新时遇到「GPGME 错误：无数据」","2022-01-01 23:42:09","/2022/01/01/pacman-gpgme-error-no-data",[881],"Archlinux",{"type":14,"value":883,"toc":977},[884,887,890,896,899,905,908,914,917,920,931,942,949,952,958,971],[105,885,886],{"id":886},"情景再现",[17,888,889],{},"当初是使用 pacman 更新时遇上了「GPGME 错误：无数据」的问题，我尝试复现了下，大概是下面这样的情况。",[216,891,894],{"className":892,"code":893,"language":221},[219],"[zhullyb@Archlinux ~]$ sudo pacman -Syu\n错误：GPGME 错误：无数据\n错误：GPGME 错误：无数据\n错误：GPGME 错误：无数据\n:: 正在同步软件包数据库...\n core                                137.6 KiB   598 KiB/s 00:00 [------------------------------------] 100%\n extra                              1566.0 KiB  6.12 MiB/s 00:00 [------------------------------------] 100%\n community                             6.0 MiB  20.6 MiB/s 00:00 [------------------------------------] 100%\n错误：GPGME 错误：无数据\n错误：GPGME 错误：无数据\n错误：GPGME 错误：无数据\n错误：未能同步所有数据库（无效或已损坏的数据库 (PGP 签名)）\n",[100,895,893],{"__ignoreMap":67},[17,897,898],{},"英文版的提示应该是长成下面这个样子",[216,900,903],{"className":901,"code":902,"language":221},[219],"[zhullyb@Archlinux ~]$ sudo pacman -Syu\nerror: GPGME error: No data\nerror: GPGME error: No data\nerror: GPGME error: No data\n:: Synchronizing package databases...\n core                                137.6 KiB   574 KiB/s 00:00 [------------------------------------] 100%\n extra                              1566.0 KiB  5.66 MiB/s 00:00 [------------------------------------] 100%\n community                             6.0 MiB  18.1 MiB/s 00:00 [------------------------------------] 100%\nerror: GPGME error: No data\nerror: GPGME error: No data\nerror: GPGME error: No data\nerror: failed to synchronize all databases (invalid or corrupted database (PGP signature))\n",[100,904,902],{"__ignoreMap":67},[105,906,907],{"id":907},"解决方案",[216,909,912],{"className":910,"code":911,"language":221},[219],"sudo rm /var/lib/pacman/sync/*.sig\n",[100,913,911],{"__ignoreMap":67},[17,915,916],{},"很简单，就这一条命令就够了。",[105,918,919],{"id":919},"问题原因",[17,921,922,923,926,927,930],{},"pacman在更新数据库文件时也会尝试下载",[100,924,925],{},"$repo.db.sig","，这里的",[100,928,929],{},"$repo","可以是 core、extra、community、archlinuxcn 等仓库名。",[17,932,933,934,938,939,672],{},"但是无论是官方源还是 archlinuxcn 源，",[935,936,937],"strong",{},"大多数源的数据库文件","都不会被签名，也就",[935,940,941],{},"不会存在 .db.sig 文件",[17,943,944,945,948],{},"pacman 尝试下载时这些数据库文件的签名文件时，镜像站就会返回 ",[935,946,947],{},"404 的 http 状态码","告诉pacman: “你个傻叉，神他妈没有这个文件！”",[17,950,951],{},"pacman 挨了一顿骂，也就善罢甘休，没有再动这个念头，所以我们每次更新也都相安无事。",[17,953,954,955,672],{},"而出现这种错误的情况大多是发生在 校园网、酒店免费 WIFI 这种",[935,956,957],{},"需要登陆以后才能上网的网络环境",[17,959,960,961,964,965,967,968,970],{},"因为 pacman 尝试下载 ",[100,962,963],{},".db.sig"," 文件时被登陆网页劫持了（这点你们应该深有感受，如果你在这种网络环境下没有登陆，你无论访问什么网页都会被重定向到登录界面，http 的状态码此时是200，不是404）。从没见过 ",[100,966,963],{},"的 pacman 此时两眼放光，由于没有挨骂，他就迅速地把登录界面当成是",[100,969,963],{},"下载下来了。",[17,972,973,974,976],{},"下载下来以后，pacman 激动地摆弄起 ",[100,975,963],{},"，甚至发现里面没有自己期待已久的 GPG签名数据并开始报错时仍然不愿意撒手，因此此时无论再怎么同步源码、再怎么 Syyu 也不会有效果，必须人工干预。",{"title":67,"searchDepth":3,"depth":3,"links":978},[979,980,981],{"id":886,"depth":3,"text":886},{"id":907,"depth":3,"text":907},{"id":919,"depth":3,"text":919},{"title":983,"date":984,"path":985,"tags":986,"body":988},"Cutefish的前世今生","2021-12-12 00:10:34","/2021/12/12/the-history-of-cutefish",[987],"OpenSource Project",{"type":14,"value":989,"toc":1289},[990,996,999,1002,1005,1008,1012,1016,1019,1025,1036,1040,1043,1072,1075,1084,1088,1096,1105,1109,1127,1130,1139,1143,1148,1151,1200,1203,1217,1219],[991,992,993],"blockquote",{},[17,994,995],{},"CutefishOS是由我们国内的开发者主导（目前也主要是他们在开发）的桌面环境。不过似乎对于他的前世今生，似乎很多人都有误解。尤其是很多人认为他是一个Archlinux-based发行版；部分用户分不清他到底是基于Debian还是基于Ubuntu；还有人把它和 JingOS 弄混了。",[17,997,998],{},"先把这些问题的回答写在最前面:",[17,1000,1001],{},"CutefishOS 是一个基于Debian的发行版，他的前身 CyberOS 是一个基于 Archlinux 的发行版。但要注意: Cutefish （不加OS）可以单独指代 CutefishOS 所使用的桌面环境，为了避免混淆，本文中我将使用CutefishDE来指代他的桌面环境。",[17,1003,1004],{},"CutefishOS 和 JingOS 目前只是官网互加友链的关系，并不是相同的东西。Cutefish的开发方向是基于qt重写一套UI，而JingOS则更像是在开发一套KDE的主题。",[1006,1007],"hr",{},[105,1009,1011],{"id":1010},"cutefish的历史","Cutefish的历史",[677,1013,1015],{"id":1014},"cyberos的故事","CyberOS的故事",[17,1017,1018],{},"第一次体验到这个UI其实是在21年的3月，在Archlinux的QQ群里，群主向我们推荐了 CyberOS ，这是一个基于 Archlinux 的发行版。",[17,1020,1021],{},[65,1022],{"alt":1023,"src":1024},"QQ群公告","https://static.031130.xyz/uploads/2024/08/12/62f3cae911901.webp",[17,1026,1027,1028],{},"由于基于 Archlinux，我直接就添加了CyberOS的源作为第三方源安装上了CyberDE，",[297,1029,1030,1031,672],{},"那会儿还顺手水了篇博客，由于后来事情发展太快，这篇博客早就不适用了，就干脆删了，现在在我的Github还能找到那会儿的",[27,1032,1035],{"href":1033,"rel":1034},"https://github.com/zhullyb/blog/blob/20210430/_posts/2021-03-21-install-cyber-desktop-on-your-archlinux.md",[31],"存档",[677,1037,1039],{"id":1038},"更名cutefishos","更名CutefishOS",[17,1041,1042],{},"后来根据 CutefishOS 的QQ群的群主所说，是因为当时没注重海外平台的宣发，导致 CyberOS 的用户名在 Twitter 被抢注，因此决定改名 CutefishOS 。由于时间较为久远，QQ群的聊天记录已经几乎找不到了，我无法放出。",[17,1044,1045,1046,1056,1064],{},"关于CutefishOS的创始时间我已经记不清了，但是可以推测是在21年的4~5月份左右。",[1047,1048,1049],"sup",{},[27,1050,1055],{"href":1051,"ariaDescribedBy":1052,"dataFootnoteRef":67,"id":1054},"#user-content-fn-1",[1053],"footnote-label","user-content-fnref-1","1",[1047,1057,1058],{},[27,1059,1063],{"href":1060,"ariaDescribedBy":1061,"dataFootnoteRef":67,"id":1062},"#user-content-fn-2",[1053],"user-content-fnref-2","2",[1047,1065,1066],{},[27,1067,1071],{"href":1068,"ariaDescribedBy":1069,"dataFootnoteRef":67,"id":1070},"#user-content-fn-3",[1053],"user-content-fnref-3","3",[677,1073,1074],{"id":1074},"官网上线",[17,1076,1077,1078,1083],{},"21年5月12日，",[27,1079,1082],{"href":1080,"rel":1081},"https://cutefishos.com",[31],"cutefishos.com"," 上线，暂时不提供安装镜像。",[677,1085,1087],{"id":1086},"进军arch系","进军Arch系",[17,1089,1090,1091,672],{},"5月26日，CutefishDE进入 ",[27,1092,1095],{"href":1093,"rel":1094},"https://archlinux.org/groups/x86_64/cutefish/",[31],"Archlinux官方源",[17,1097,1098,1099,1104],{},"同日，Github 组织 manjaro-cutefish 放出了使用 CutefishDE 的 ",[27,1100,1103],{"href":1101,"rel":1102},"https://github.com/manjaro-cutefish/download/releases",[31],"manjaro安装镜像","。这个组织和官方的 github.com/cutefishos 没有共同维护者，因此可以基本断定是第三方打包的。",[677,1106,1108],{"id":1107},"ubuntu第三方打包版的跟进","Ubuntu第三方打包版的跟进",[17,1110,1111,1112,1120,1121,1126],{},"大约在7月中旬左右",[1047,1113,1114],{},[27,1115,1119],{"href":1116,"ariaDescribedBy":1117,"dataFootnoteRef":67,"id":1118},"#user-content-fn-4",[1053],"user-content-fnref-4","4","，Github出现了一位名为 cutefish-ubuntu 的用户，开始在 Ubutnu 上编译 CutefishDE ，并通过 ",[27,1122,1125],{"href":1123,"rel":1124},"https://cutefish-ubuntu.github.io/",[31],"GithubPages"," 发布安装镜像，依然是第三方打包的安装镜像。",[677,1128,1129],{"id":1129},"官方版本释出",[17,1131,1132,1133,1138],{},"21年国庆长假期间，cutefishos.com 释出由 Cutefish官方发布的",[27,1134,1137],{"href":1135,"rel":1136},"https://cutefishos.com/download",[31],"基于Debian的CutefishOS镜像","，搭载的DE是 0.5 版本的，英文版网页提供 Google Drive 和 Mega 的下载链接，中文版本网页非常贴心地添加了使用飞书下载的方式方便国内用户下载。",[677,1140,1142],{"id":1141},"rpm系的跟进","RPM系的跟进",[1144,1145,1147],"h4",{"id":1146},"copr","COPR",[17,1149,1150],{},"copr上分别有三名用户打包了CutefishDE/CyberDE，我以表格形式简单罗列一下",[301,1152,1153,1166],{},[304,1154,1155],{},[307,1156,1157,1160,1163],{},[310,1158,1159],{},"用户名",[310,1161,1162],{},"打包的DE",[310,1164,1165],{},"第一次打包日期",[334,1167,1168,1179,1190],{},[307,1169,1170,1173,1176],{},[339,1171,1172],{},"rmnscnce",[339,1174,1175],{},"cutefish",[339,1177,1178],{},"2021.8.19",[307,1180,1181,1184,1187],{},[339,1182,1183],{},"cappyishihara",[339,1185,1186],{},"cyber",[339,1188,1189],{},"2021.11.17",[307,1191,1192,1195,1197],{},[339,1193,1194],{},"jesonlay",[339,1196,1175],{},[339,1198,1199],{},"2021.12.06",[1144,1201,1202],{"id":1202},"论坛用户",[17,1204,1205,1206,1211,1212,672],{},"21年12月2日，一为名为",[27,1207,1210],{"href":1208,"rel":1209},"https://bbs.cutefishos.com/u/gesangtome",[31],"gesangtome","的网友在CutefishOS的论坛上",[27,1213,1216],{"href":1214,"rel":1215},"https://bbs.cutefishos.com/d/331-fedoracutefish",[31],"发布了自己编译的CutefishDE",[1006,1218],{},[1220,1221,1224,1229],"section",{"className":1222,"dataFootnotes":67},[1223],"footnotes",[105,1225,1228],{"className":1226,"id":1053},[1227],"sr-only","Footnotes",[1230,1231,1232,1246,1260,1274],"ol",{},[47,1233,1235,1236,1238,1239],{"id":1234},"user-content-fn-1","通过whois查询得知",[100,1237,1082],{}," 这个域名注册时间为21年3月31日 ",[27,1240,1245],{"href":1241,"ariaLabel":1242,"className":1243,"dataFootnoteBackref":67},"#user-content-fnref-1","Back to reference 1",[1244],"data-footnote-backref","↩",[47,1247,1249,1254,1255],{"id":1248},"user-content-fn-2",[27,1250,1253],{"href":1251,"rel":1252},"https://github.com/archlinux/svntogit-community/commit/b92bb9ae8fd35178cdfebb6f56b55f20722aa7dd",[31],"Cutefish进入Archlinux官方源","是在5月26日 ",[27,1256,1245],{"href":1257,"ariaLabel":1258,"className":1259,"dataFootnoteBackref":67},"#user-content-fnref-2","Back to reference 2",[1244],[47,1261,1263,1268,1269],{"id":1262},"user-content-fn-3",[27,1264,1267],{"href":1265,"rel":1266},"https://github.com/cyberos",[31],"CyberOS的Github仓库","最后一次内容变更是在21年的5月23日 ",[27,1270,1245],{"href":1271,"ariaLabel":1272,"className":1273,"dataFootnoteBackref":67},"#user-content-fnref-3","Back to reference 3",[1244],[47,1275,1277,1278,1283,1284],{"id":1276},"user-content-fn-4","这里参考的是 cutefish-ubuntu/cutefish-ubuntu.github.io 仓库的",[27,1279,1282],{"href":1280,"rel":1281},"https://github.com/cutefish-ubuntu/cutefish-ubuntu.github.io/commit/237a480992a74d8c75c1f4ec51511550ce97c64b",[31],"第一个commit","的时间 ",[27,1285,1245],{"href":1286,"ariaLabel":1287,"className":1288,"dataFootnoteBackref":67},"#user-content-fnref-4","Back to reference 4",[1244],{"title":67,"searchDepth":3,"depth":3,"links":1290},[1291,1300],{"id":1010,"depth":3,"text":1011,"children":1292},[1293,1294,1295,1296,1297,1298,1299],{"id":1014,"depth":788,"text":1015},{"id":1038,"depth":788,"text":1039},{"id":1074,"depth":788,"text":1074},{"id":1086,"depth":788,"text":1087},{"id":1107,"depth":788,"text":1108},{"id":1129,"depth":788,"text":1129},{"id":1141,"depth":788,"text":1142},{"id":1053,"depth":3,"text":1228},{"title":1302,"date":1303,"path":1304,"tags":1305,"body":1307},"wolai再打包遇到的问题--electron应用的dev判断机制","2021-12-03 22:53:25","/2021/12/03/dev-app-update-in-wolai",[881,1306],"electron",{"type":14,"value":1308,"toc":1545},[1309,1322,1328,1331,1343,1346,1354,1359,1366,1375,1403,1406,1409,1494,1497,1503,1506,1542],[17,1310,1311,1312,1317,1318,1321],{},"之前对于electron懵懵懂懂的时候就把 ",[27,1313,1316],{"href":1314,"rel":1315},"https://www.wolai.com/",[31],"wolai"," 给打包上了 AUR ，那会儿年少无知，也不懂得把内置的 electron 拆开来换成系统内置的以节省空间。前一阵子给CN源打完 Motrix 以后突然想起来自己在 AUR 上还有维护一个叫 wolai 的electron 应用，于是打算把软件内置的 electron 拆出来。尝试使用 ",[100,1319,1320],{},"electron /path/to/app.asar"," 命令启动的时候发现了以下的问题。",[17,1323,1324],{},[65,1325],{"alt":1326,"src":1327},"报错了","https://static.031130.xyz/uploads/2024/08/12/62f3caf822bec.webp",[17,1329,1330],{},"虽然这个报错无关紧要，直接右上角叉掉也不影响软件正常使用，但是就这样推上 AUR 似乎有些不太妥当。于是使用搜索引擎查找答案。",[17,1332,1333,1334,1337,1338],{},"发现是使用系统自带的 electron 启动时，app.asar 内置的一个叫 ",[100,1335,1336],{},"electron-updater"," 的模块在自动检测更新时会误认为我们此时处于开发模式，于是会尝试读取 app.asar 内部的 dev-app-update.yml 以查询更新。",[1047,1339,1340],{},[27,1341,1055],{"href":1051,"ariaDescribedBy":1342,"dataFootnoteRef":67,"id":1054},[1053],[17,1344,1345],{},"但问题在于这个 app.asar 并不是 wolai 开发者在开发时使用 development 模式打出来的包，应该是 production ，所以内置的那个文件名叫 app-update.yml ，少了个dev 前缀，就很尴尬。",[17,1347,1348,1349],{},"以下内容来自一篇简书的文章",[1047,1350,1351],{},[27,1352,1063],{"href":1060,"ariaDescribedBy":1353,"dataFootnoteRef":67,"id":1062},[1053],[991,1355,1356],{},[17,1357,1358],{},"所以调试的时候可以建一个default-app.yml文件放在D:\\hzhh123\\workspace\\vue-work\\electron-demo1\\node_modules\\electron\\dist\\resources\\default_app.asar 下，这里就涉及到asar解压缩，但是这样会很麻烦，打包后也需要这样替换，麻烦，所幸electron-updater中提供了这个文件的属性配置updateConfigPath，可以通过设置这个属性来解决这个问题",[17,1360,1361,1362,1365],{},"很遗憾，我们并不是该应用的开发者，并不能指定",[100,1363,1364],{},"electron-uploader","构建时的参数，所以只能考虑解压缩 app.asar 手动放入 dev-app-update.yml 的方案。",[17,1367,1368,1369,1374],{},"根据又一篇简书的文章",[1047,1370,1371],{},[27,1372,1071],{"href":1068,"ariaDescribedBy":1373,"dataFootnoteRef":67,"id":1070},[1053],"，我们了解到 npm 中有一个叫 asar 的程序可以帮助我们解压缩 app.asar。我这里直接将内容搬过来",[991,1376,1377,1380,1391,1394],{},[17,1378,1379],{},"解压",[216,1381,1385],{"className":1382,"code":1383,"language":1384,"meta":67,"style":67},"language-undefined shiki shiki-themes one-light one-dark-pro","asar extract 压缩文件  解压文件夹\n","undefined",[100,1386,1387],{"__ignoreMap":67},[691,1388,1389],{"class":693,"line":694},[691,1390,1383],{},[17,1392,1393],{},"压缩：如果压缩文件存在，则会被替换",[216,1395,1397],{"className":1382,"code":1396,"language":1384,"meta":67,"style":67},"asar pack 文件夹  压缩文件名\n",[100,1398,1399],{"__ignoreMap":67},[691,1400,1401],{"class":693,"line":694},[691,1402,1396],{},[17,1404,1405],{},"原文是让我们直接使用 npm 下载安装 asar 程序，然而这就会让打包过程变得很复杂，所幸 Archlinux 官方源中已经将这个程序打完了，我们可以直接将 asar 写入 makedepends。",[17,1407,1408],{},"大概就写成了这个样子。",[216,1410,1412],{"className":685,"code":1411,"language":687,"meta":67,"style":67},"asar extract ${srcdir}/squashfs-root/resources/app.asar ${srcdir}/new_app\nmv  ${srcdir}/squashfs-root/resources/app-update.yml ${srcdir}/new_app/dev-app-update.yml\nasar pack ${srcdir}/new_app ${srcdir}/squashfs-root/resources/app.asar\n",[100,1413,1414,1445,1469],{"__ignoreMap":67},[691,1415,1416,1419,1422,1426,1430,1433,1436,1438,1440,1442],{"class":693,"line":694},[691,1417,1418],{"class":697},"asar",[691,1420,1421],{"class":701}," extract",[691,1423,1425],{"class":1424},"sr1Ac"," ${",[691,1427,1429],{"class":1428},"sJa8x","srcdir",[691,1431,1432],{"class":1424},"}",[691,1434,1435],{"class":701},"/squashfs-root/resources/app.asar",[691,1437,1425],{"class":1424},[691,1439,1429],{"class":1428},[691,1441,1432],{"class":1424},[691,1443,1444],{"class":701},"/new_app\n",[691,1446,1447,1450,1453,1455,1457,1460,1462,1464,1466],{"class":693,"line":3},[691,1448,1449],{"class":697},"mv",[691,1451,1452],{"class":1424},"  ${",[691,1454,1429],{"class":1428},[691,1456,1432],{"class":1424},[691,1458,1459],{"class":701},"/squashfs-root/resources/app-update.yml",[691,1461,1425],{"class":1424},[691,1463,1429],{"class":1428},[691,1465,1432],{"class":1424},[691,1467,1468],{"class":701},"/new_app/dev-app-update.yml\n",[691,1470,1471,1473,1476,1478,1480,1482,1485,1487,1489,1491],{"class":693,"line":788},[691,1472,1418],{"class":697},[691,1474,1475],{"class":701}," pack",[691,1477,1425],{"class":1424},[691,1479,1429],{"class":1428},[691,1481,1432],{"class":1424},[691,1483,1484],{"class":701},"/new_app",[691,1486,1425],{"class":1424},[691,1488,1429],{"class":1428},[691,1490,1432],{"class":1424},[691,1492,1493],{"class":701},"/squashfs-root/resources/app.asar\n",[17,1495,1496],{},"程序正常启动，没有弹出之前的对话框了。",[17,1498,1499],{},[65,1500],{"alt":1501,"src":1502},"成功啦","https://static.031130.xyz/uploads/2024/08/12/62f3cafb6b04d.webp",[17,1504,1505],{},"参考:",[1220,1507,1509,1512],{"className":1508,"dataFootnotes":67},[1223],[105,1510,1228],{"className":1511,"id":1053},[1227],[1230,1513,1514,1524,1533],{},[47,1515,1516,1520,1521],{"id":1234},[27,1517,1518],{"href":1518,"rel":1519},"https://github.com/electron-userland/electron-builder/issues/1505",[31]," ",[27,1522,1245],{"href":1241,"ariaLabel":1242,"className":1523,"dataFootnoteBackref":67},[1244],[47,1525,1526,1520,1530],{"id":1248},[27,1527,1528],{"href":1528,"rel":1529},"https://www.jianshu.com/p/15bde714e198",[31],[27,1531,1245],{"href":1257,"ariaLabel":1258,"className":1532,"dataFootnoteBackref":67},[1244],[47,1534,1535,1520,1539],{"id":1262},[27,1536,1537],{"href":1537,"rel":1538},"https://www.jianshu.com/p/17d97e6bf174",[31],[27,1540,1245],{"href":1271,"ariaLabel":1272,"className":1541,"dataFootnoteBackref":67},[1244],[865,1543,1544],{},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .sr1Ac, html code.shiki .sr1Ac{--shiki-default:#E45649;--shiki-dark:#ABB2BF}html pre.shiki code .sJa8x, html code.shiki .sJa8x{--shiki-default:#E45649;--shiki-dark:#E06C75}",{"title":67,"searchDepth":3,"depth":3,"links":1546},[1547],{"id":1053,"depth":3,"text":1228},{"title":1549,"date":1550,"path":1551,"tags":1552,"body":1554},"Typora与我","2021-11-26 23:05:05","/2021/11/26/typora-and-me",[1553],"Casual Talk",{"type":14,"value":1555,"toc":1648},[1556,1559,1562,1565,1567,1570,1579,1582,1588,1595,1597,1608,1611,1621,1624,1634],[17,1557,1558],{},"Typora 要收费了，$14.9 买断制，支持三设备激活。而且尚且不知道这里买断的是单个大版本更新还是多个大版本更新。",[17,1560,1561],{},"很多人说，不要紧，我们有VsCode、我们有Vnote、我们有MarkText。。。",[17,1563,1564],{},"但我还是不习惯。",[1006,1566],{},[17,1568,1569],{},"Typora真的就是个非常纯粹的Markdown编辑器，他有所见即所得的视觉效果，同时为我提供了沉浸式的写作体验。",[17,1571,1572,1573,1578],{},"当我在使用Typora写文章的时候，我就是个非常单纯的内容创作者，我不需要去考虑各种Markdown的语法格式，我只需要用文字写下我所想的，然后通过右键菜单把文字的样式调整到一个能够合理突出主次的程度，便完成了。若是用的时间长了，记住了打开菜单时旁边现实的快捷键，那速度便更快了。即使有插入图片/视频的需求，我也只需要将图片复制进 Typora 的编辑框，我在Typora预先设置好的自定义上传命令会自动调用我部署在本地的",[27,1574,1577],{"href":1575,"rel":1576},"https://github.com/xiebruce/PicUploader",[31],"PicUploader","完成上传，并将媒体文件以 Markdown/html 语法呈现在编辑框中。",[17,1580,1581],{},"这样一来，我的行文思路就是连贯、不受打断的。即使需要从系统中截取一些图片作说明用途，我也可以通过 Flameshot 截取图片并简单画几个箭头、标几个序号或者框几个按钮后复制到剪切板，并最终粘贴到Typora的编辑框中，整个过程就像是我在和别人QQ聊天时截个图发过去一般简单。",[17,1583,1584],{},[65,1585],{"alt":1586,"src":1587},"gif缩略图有点小，建议是点开来看","https://static.031130.xyz/uploads/2024/08/12/62f3b881e3c4c.gif",[17,1589,1590,1591,1594],{},"倘若我使用别的Markdown编辑器，我便需要将图片保存到本地、手动上传到图床、手动写markdown的",[100,1592,1593],{},"![]()","语法，如此一来，我的精力就被分散了，那我也就不会有为文章插入图片的兴趣，抑或是插入完某张图片以后深感心力憔悴，便把写了一半的文章束之高阁，欺骗自己将来有一天我会继续完成这篇文章。",[1006,1596],{},[17,1598,1599],{},[297,1600,1601,1602,1607],{},"总而言之，Typora对于我而言确实是非常有用的工具，而我将在接下来的半年到一年时间中过渡到其他的开源Markdown编辑器中。即使改变我的使用习惯将是一件非常痛苦的事情，但我不得不这么做。Typora内置的electron在Archlinux的滚动更新下不知道过多久会出现与系统不兼容的情况",[1047,1603,1604],{},[27,1605,1055],{"href":1051,"ariaDescribedBy":1606,"dataFootnoteRef":67,"id":1054},[1053],"，所以这意味着继续使用老版本的Typora并不是长久之策，我需要在此之前尽快切换到其他的Markdown编辑器。而我不是个商业公司的Markdown工程师，单纯为了个人兴趣而花大价钱去买这一款生产力工具却无法得到经济回馈似乎并不是一个明智的选择。",[17,1609,1610],{},"反转了，仔细阅读Typora官网的Q&A后发现了这么一条:",[991,1612,1613,1618],{},[17,1614,1615],{},[935,1616,1617],{},"Can I use Typora for free ?",[17,1619,1620],{},"You will have a 15 days free trial before the purchase. If you use  dev version or Linux version, you will have unlimited trial time if you  keep Typora updated. But we may show “trial button” or disable certain  features to encourage you to purchase our app, but basic and most  functions will be kept.",[17,1622,1623],{},"看起来 Dev 版和 Linux版本在最新版本可以无限试用下去，那我不考虑改变我的写作习惯了。",[991,1625,1626],{},[17,1627,1628,1629],{},"注: Dev 版藏得有点深，在",[27,1630,1633],{"href":1631,"rel":1632},"https://typora.io/releases/dev",[31],"这里",[1220,1635,1637,1640],{"className":1636,"dataFootnotes":67},[1223],[105,1638,1228],{"className":1639,"id":1053},[1227],[1230,1641,1642],{},[47,1643,1644,1645],{"id":1234},"baidunetdisk-bin内置的electron已经无法在如今的Archlinux上跑起来了，目前唯一的解决方案是拆包、并使用系统级的electron去启动百度网盘，也就是AUR的baidunetdisk-electron。但是typora运用了一些混淆/加密的手段，使得只有他内置的electron才可以正确启动程序。 ",[27,1646,1245],{"href":1241,"ariaLabel":1242,"className":1647,"dataFootnoteBackref":67},[1244],{"title":67,"searchDepth":3,"depth":3,"links":1649},[1650],{"id":1053,"depth":3,"text":1228},{"title":1652,"date":1653,"path":1654,"tags":1655,"body":1657},"我是来吹CloudflareMirrors的","2021-11-21 01:48:49","/2021/11/21/use-cloudflare-mirrors",[1656],"Cloudflare",{"type":14,"value":1658,"toc":1733},[1659,1668,1671,1678,1681,1686,1715,1722,1727,1730],[17,1660,1661,1662,1667],{},"Cloudflare也开始提供",[27,1663,1666],{"href":1664,"rel":1665},"https://cloudflaremirrors.com/",[31],"Linux开源镜像站","了。",[17,1669,1670],{},"虽然在中国大陆地区，Cloudflare速度日常抽风，不适合作为我们本机镜像源，但完全可以用于境外VPS。平常我们对国内的镜像站比较熟悉，也知道自己的网络环境使用哪个镜像站会稍微快一些，但一旦出了国，这些经验就没有用了。",[17,1672,1673,1674,1677],{},"作为一家老牌的CDN网站加速服务提供商，Cloudflare提供的网络服务在全球范围内都非常快（",[297,1675,1676],{},"嗯，对，全球范围不包含中国大陆","）",[17,1679,1680],{},"无论你的vps是在美国日本，还是香港新加坡，cloudflare都能提供非常稳定高速的服务，只需要记住cloudflare镜像站的域名，便可以抛弃挑选镜像站的烦恼。",[17,1682,1683],{},[65,1684],{"alt":67,"src":1685},"https://static.031130.xyz/uploads/2024/08/12/62f3c9a9448a4.webp",[17,1687,1688,1689,1692,1693,1697,1698,1703,1704,1697,1709,1714],{},"根据网页上所说，cloudflare会以「反代就近的镜像站」+「缓存」的形式来提供服务，",[297,1690,1691],{},"既然都要通过cloudflare网络，那中国大陆地区就可以彻底别想了","，能够给几乎所有地区提供不错的服务。目前说是只提供了「",[27,1694,881],{"href":1695,"rel":1696},"https://cloudflaremirrors.com/archlinux/",[31],"」和「",[27,1699,1702],{"href":1700,"rel":1701},"https://cloudflaremirrors.com/debian/",[31],"Debian","」的服务，但是根据我考证下来，其实「",[27,1705,1708],{"href":1706,"rel":1707},"https://cloudflaremirrors.com/ubuntu/",[31],"Ubuntu",[27,1710,1713],{"href":1711,"rel":1712},"https://cloudflaremirrors.com/centos/",[31],"CentOS","」也有，只不过没写在页面上罢了。那么废话不多说，我们上境外的vps测一下下载速度如何。",[17,1716,1717,1721],{},[27,1718,1720],{"href":1664,"rel":1719},[31],"cloudflaremirrors"," 在我这台位于美国达拉斯机房的1Gbps机器上可以跑到80MB/s+的速度，虽然没有跑满理论速率，但也算是相当喜人的成绩了。",[17,1723,1724],{},[65,1725],{"alt":67,"src":1726},"https://static.031130.xyz/uploads/2024/08/12/62f3ccc8d7c82.webp",[17,1728,1729],{},"小结:",[17,1731,1732],{},"CloudflareMirrors非常适合境外的vps使用，免去了用户自行给一个个镜像站测速的麻烦。",{"title":67,"searchDepth":3,"depth":3,"links":1734},[],{"title":1736,"date":1737,"path":1738,"tags":1739,"body":1742},"deepin-elf-verify究竟是何物？","2021-11-20","/2021/11/20/what-is-deepin-elf-verify",[1740,1741],"deepin","Linux",{"type":14,"value":1743,"toc":2006},[1744,1746,1760,1763,1783,1816,1819,1824,1831,1834,1840,1843,1851,1854,1860,1865,1883,1911,1914,1919,1926,1932,1938,1941,1945,1951,1954,1983,1987,1992,1998,2003],[105,1745,635],{"id":635},[17,1747,1748,1749,1752,1753,1756,1757,1759],{},"越来越多上架在 Deepin 应用商店中的 deb 包中开始依赖了一个叫做 ",[100,1750,1751],{},"deepin-elf-verify"," 的依赖，今天来讲讲这个",[297,1754,1755],{},"神奇","的 ",[100,1758,1751],{}," 到底为何物，为什么这么多程序都要依赖于他来工作。",[105,1761,1762],{"id":1762},"下载拆包",[17,1764,1765,1766,1771,1772,1777,1778,1780,1781,672],{},"打开 ",[27,1767,1770],{"href":1768,"rel":1769},"https://mirrors.bfsu.edu.cn/",[31],"Bfsu镜像站"," ，可以很轻松地找到 ",[27,1773,1776],{"href":1774,"rel":1775},"https://mirrors.bfsu.edu.cn/deepin/dists/apricot/main/binary-amd64/Packages",[31],"Packages"," —— 在 apt 源中记录了各个文件信息（包括他在仓库中的相对位置）的这么一个",[205,1779,1755],{},"的文件，就是体积有点大，达到了68MB的样子。我们可以通过以下命令检索今天的主角——",[100,1782,1751],{},[216,1784,1786],{"className":685,"code":1785,"language":687,"meta":67,"style":67},"curl -s https://mirrors.bfsu.edu.cn/deepin/dists/apricot/main/binary-amd64/Packages | grep deepin-elf-sign | grep pool\n",[100,1787,1788],{"__ignoreMap":67},[691,1789,1790,1793,1796,1799,1803,1806,1809,1811,1813],{"class":693,"line":694},[691,1791,1792],{"class":697},"curl",[691,1794,1795],{"class":813}," -s",[691,1797,1798],{"class":701}," https://mirrors.bfsu.edu.cn/deepin/dists/apricot/main/binary-amd64/Packages",[691,1800,1802],{"class":1801},"s5ixo"," | ",[691,1804,1805],{"class":697},"grep",[691,1807,1808],{"class":701}," deepin-elf-sign",[691,1810,1802],{"class":1801},[691,1812,1805],{"class":697},[691,1814,1815],{"class":701}," pool\n",[17,1817,1818],{},"得到了输出:",[991,1820,1821],{},[17,1822,1823],{},"Filename: pool/main/d/deepin-elf-verify/deepin-elf-verify_0.2.0.6-1_amd64.deb",[17,1825,1826,1827],{},"我们就可以把完整的下载链接拼出来: ",[27,1828,1829],{"href":1829,"rel":1830},"https://mirrors.bfsu.edu.cn/deepin/pool/main/d/deepin-elf-verify/deepin-elf-verify_0.2.0.6-1_amd64.deb",[31],[17,1832,1833],{},"下载解压，大概是这么一个目录结构:",[216,1835,1838],{"className":1836,"code":1837,"language":221},[219],"deepin-elf-verify_0.2.0.6-1_amd64\n├── control.tar.xz\n├── data.tar.xz\n└── debian-binary\n",[100,1839,1837],{"__ignoreMap":67},[17,1841,1842],{},"是个常规的deb包该有的结构了。",[44,1844,1845,1848],{},[47,1846,1847],{},"control.tar.xz 中存放了deb包的相关信息",[47,1849,1850],{},"data.tar.xz 是整个包最终会被安装到系统中的文件",[17,1852,1853],{},"终于到了激动人心的时刻了，打开 data.tar.xz ！",[17,1855,1856],{},[65,1857],{"alt":1858,"src":1859},"空的？","https://static.031130.xyz/uploads/2024/08/12/62f3ccc192986.webp",[17,1861,1862],{},[935,1863,1864],{},"搞错了，再来",[17,1866,1867,1868,1873,1874,1876,1877,1879,1880,1882],{},"打开UOS的",[27,1869,1872],{"href":1870,"rel":1871},"https://uos.deepin.cn/uos/",[31],"源链接","，使用",[100,1875,1792],{},"+",[100,1878,1805],{},"检索",[100,1881,1751],{},"在源中的相对位置",[216,1884,1886],{"className":685,"code":1885,"language":687,"meta":67,"style":67},"curl -sL https://uos.deepin.cn/uos/dists/eagle/main/binary-amd64/Packages | grep deepin-elf-verify | grep pool\n",[100,1887,1888],{"__ignoreMap":67},[691,1889,1890,1892,1895,1898,1900,1902,1905,1907,1909],{"class":693,"line":694},[691,1891,1792],{"class":697},[691,1893,1894],{"class":813}," -sL",[691,1896,1897],{"class":701}," https://uos.deepin.cn/uos/dists/eagle/main/binary-amd64/Packages",[691,1899,1802],{"class":1801},[691,1901,1805],{"class":697},[691,1903,1904],{"class":701}," deepin-elf-verify",[691,1906,1802],{"class":1801},[691,1908,1805],{"class":697},[691,1910,1815],{"class":701},[17,1912,1913],{},"获得输出:",[991,1915,1916],{},[17,1917,1918],{},"Filename: pool/main/d/deepin-elf-verify/deepin-elf-verify_0.0.14.5-1_amd64.deb\nFilename: pool/main/d/deepin-elf-verify/deepin-elf-verify-dbgsym_0.0.14.5-1_amd64.deb",[17,1920,1921,1922],{},"拼接为链接: ",[27,1923,1924],{"href":1924,"rel":1925},"https://uos.deepin.cn/uos/pool/main/d/deepin-elf-verify/deepin-elf-verify_0.0.14.5-1_amd64.deb",[31],[17,1927,1928,1929],{},"下载后打开 ",[100,1930,1931],{},"data.tar.xz",[17,1933,1934],{},[65,1935],{"alt":1936,"src":1937},"看来还是有东西的","https://static.031130.xyz/uploads/2024/08/12/62f3ccc53d544.webp",[105,1939,1940],{"id":1940},"说说结论吧",[677,1942,1944],{"id":1943},"对于uos","对于UOS",[17,1946,1947,1948,1950],{},"在UOS下，",[100,1949,1751],{},"用于检测用户运行的进程是否被deepin信任的证书签名过，虽然有些过于限制用户，对于一个将要广泛用于政府机关的发行版而言是可以理解的。",[677,1952,1953],{"id":1953},"对于deepin",[44,1955,1956,1961,1970],{},[47,1957,1958,1960],{},[100,1959,1751],{}," 在 deepin 上就是个空包。",[47,1962,1963,1964,1966,1967,1969],{},"当我们使用 deepin 安装一个含有 ",[100,1965,1751],{}," 的软件包时，apt 会自动从源内搜索并安装 ",[100,1968,1751],{},"，由于是个空包，他对于系统不会有任何负担。",[47,1971,1972,1973,1975,1976,1979,1980,1982],{},"大多数依赖",[100,1974,1751],{},"的程序都把依赖写成了",[100,1977,1978],{},"deepin-elf-verify (>= 0.0.16.7-1)","，而在deepin源中，",[100,1981,1751],{},"版本号是 0.2.0.6，因此在未来的很长一段时间里应该都是满足要求的，说明统信那边并没有「想要让deepin装不上UOS的包」的这种想法，可见在这一点上，统信还没有明显的偏心。",[677,1984,1986],{"id":1985},"在别的deb发行版下","在别的Deb发行版下",[17,1988,1989,1991],{},[100,1990,1751],{},"存在于、并且仅仅存在于 deepin 和 UOS 的源内。",[17,1993,1994,1995,1997],{},"而当我们使用别的 deb 发行版（如Debian、Ubuntu）时，apt 无法在他们自己的源内找到 ",[100,1996,1751],{}," ，apt就会报错并且停止安装。",[17,1999,2000],{},[935,2001,2002],{},"小结: 至于其最终目的，是为了__________________________",[865,2004,2005],{},"html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":67,"searchDepth":3,"depth":3,"links":2007},[2008,2009,2010],{"id":635,"depth":3,"text":635},{"id":1762,"depth":3,"text":1762},{"id":1940,"depth":3,"text":1940,"children":2011},[2012,2013,2014],{"id":1943,"depth":788,"text":1944},{"id":1953,"depth":788,"text":1953},{"id":1985,"depth":788,"text":1986},127,1761837276283]