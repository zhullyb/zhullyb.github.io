[{"data":1,"prerenderedAt":2202},["ShallowReactive",2],{"randomIndex/page/11/":3,"index-page-11":4,"posts-total":2201},11,[5,428,810,1542,1650,1756,1898,2016,2075,2152],{"title":6,"date":7,"path":8,"tags":9,"body":10},"下载一份openharmony的源码","2021-06-06 16:47:34","/2021/06/06/download-openharmony-source-code",null,{"type":11,"value":12,"toc":425},"minimark",[13,20,23,36,52,63,72,210,217,229,236,248,255,277,287,294,306,316,319,325,329,332,338,345,368,374,381,384,390,397,403,409,415,421],[14,15,16],"blockquote",{},[17,18,19],"p",{},"不知道为什么，总是有人告诉我鸿蒙已经开源了，不信可以自己去看源码balabala，其实鸿蒙的手机端目前为止依然没有开源，或者说没有完整完整开源。本文我将介绍如何拉取一份openharmony开源的源码。",[17,21,22],{},"首先需要准备以下东西",[24,25,26,30,33],"ul",{},[27,28,29],"li",{},"一台装有类unix环境的电脑（wsl大概也行）",[27,31,32],{},"6G磁盘剩余空间",[27,34,35],{},"互联网（如果使用手机流量的话大概是1.5G）",[37,38,40,47],"ol",{"start":39},0,[27,41,42,46],{},[43,44,45],"h4",{"id":45},"安装git","没什么好说的，不再赘述。",[27,48,49],{},[43,50,51],{"id":51},"设置git用户名和邮箱",[53,54,59],"pre",{"className":55,"code":57,"language":58},[56],"language-text","git config --global user.email \"you@example.com\"\ngit config --global user.name \"Your Name\"\n","text",[60,61,57],"code",{"__ignoreMap":62},"",[37,64,66],{"start":65},2,[27,67,68],{},[43,69,71],{"id":70},"下载repo这个大多数发行版自己都有打包但是都比较滞后不如直接下载最新版的二进制文件设置好path变量直接用","下载repo（这个大多数发行版自己都有打包，但是都比较滞后，不如直接下载最新版的二进制文件设置好path变量直接用）",[53,73,77],{"className":74,"code":75,"language":76,"meta":62,"style":62},"language-bash shiki shiki-themes github-light github-dark","mkdir -p ~/bin\ncurl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo\nchmod a+x ~/bin/repo\n\ncat >> ~/.bashrc \u003C\u003CEOF\n\n# set PATH so it includes user's private bin if it exists\nif [ -d \"\\$HOME/bin\" ] ; then\n    PATH=\"\\$HOME/bin:\\$PATH\"\nfi\nEOF\n\nsource ~/.bashrc\n","bash",[60,78,79,96,111,122,129,147,152,158,170,186,192,196,201],{"__ignoreMap":62},[80,81,84,88,92],"span",{"class":82,"line":83},"line",1,[80,85,87],{"class":86},"sScJk","mkdir",[80,89,91],{"class":90},"sj4cs"," -p",[80,93,95],{"class":94},"sZZnC"," ~/bin\n",[80,97,98,101,104,108],{"class":82,"line":65},[80,99,100],{"class":86},"curl",[80,102,103],{"class":94}," https://storage.googleapis.com/git-repo-downloads/repo",[80,105,107],{"class":106},"szBVR"," >",[80,109,110],{"class":94}," ~/bin/repo\n",[80,112,114,117,120],{"class":82,"line":113},3,[80,115,116],{"class":86},"chmod",[80,118,119],{"class":94}," a+x",[80,121,110],{"class":94},[80,123,125],{"class":82,"line":124},4,[80,126,128],{"emptyLinePlaceholder":127},true,"\n",[80,130,132,135,138,141,144],{"class":82,"line":131},5,[80,133,134],{"class":86},"cat",[80,136,137],{"class":106}," >>",[80,139,140],{"class":94}," ~/.bashrc",[80,142,143],{"class":106}," \u003C\u003C",[80,145,146],{"class":94},"EOF\n",[80,148,150],{"class":82,"line":149},6,[80,151,128],{"emptyLinePlaceholder":127},[80,153,155],{"class":82,"line":154},7,[80,156,157],{"class":94},"# set PATH so it includes user's private bin if it exists\n",[80,159,161,164,167],{"class":82,"line":160},8,[80,162,163],{"class":94},"if [ -d \"",[80,165,166],{"class":90},"\\$",[80,168,169],{"class":94},"HOME/bin\" ] ; then\n",[80,171,173,176,178,181,183],{"class":82,"line":172},9,[80,174,175],{"class":94},"    PATH=\"",[80,177,166],{"class":90},[80,179,180],{"class":94},"HOME/bin:",[80,182,166],{"class":90},[80,184,185],{"class":94},"PATH\"\n",[80,187,189],{"class":82,"line":188},10,[80,190,191],{"class":94},"fi\n",[80,193,194],{"class":82,"line":3},[80,195,146],{"class":94},[80,197,199],{"class":82,"line":198},12,[80,200,128],{"emptyLinePlaceholder":127},[80,202,204,207],{"class":82,"line":203},13,[80,205,206],{"class":90},"source",[80,208,209],{"class":94}," ~/.bashrc\n",[37,211,212],{"start":113},[27,213,214],{},[43,215,216],{"id":216},"新建一个文件夹以同步源码",[53,218,220],{"className":74,"code":219,"language":76,"meta":62,"style":62},"mkdir openharmony\n",[60,221,222],{"__ignoreMap":62},[80,223,224,226],{"class":82,"line":83},[80,225,87],{"class":86},[80,227,228],{"class":94}," openharmony\n",[37,230,231],{"start":124},[27,232,233],{},[43,234,235],{"id":235},"进入这个文件夹",[53,237,239],{"className":74,"code":238,"language":76,"meta":62,"style":62},"cd openharmony\n",[60,240,241],{"__ignoreMap":62},[80,242,243,246],{"class":82,"line":83},[80,244,245],{"class":90},"cd",[80,247,228],{"class":94},[37,249,250],{"start":131},[27,251,252],{},[43,253,254],{"id":254},"初始化repo",[53,256,258],{"className":74,"code":257,"language":76,"meta":62,"style":62},"repo init -u https://gitee.com/openharmony/manifest.git --depth=1\n",[60,259,260],{"__ignoreMap":62},[80,261,262,265,268,271,274],{"class":82,"line":83},[80,263,264],{"class":86},"repo",[80,266,267],{"class":94}," init",[80,269,270],{"class":90}," -u",[80,272,273],{"class":94}," https://gitee.com/openharmony/manifest.git",[80,275,276],{"class":90}," --depth=1\n",[17,278,279,280,283,284,286],{},"​\t注:  ",[60,281,282],{},"--depth=1","是为了仅保留一层commit记录，防止过多的历史commit占用空间，如果你想保留历\t史commit，那可以把这里的",[60,285,282],{},"去掉。",[37,288,289],{"start":149},[27,290,291],{},[43,292,293],{"id":293},"使用repo正式开始同步源码",[53,295,297],{"className":74,"code":296,"language":76,"meta":62,"style":62},"repo sync\n",[60,298,299],{"__ignoreMap":62},[80,300,301,303],{"class":82,"line":83},[80,302,264],{"class":86},[80,304,305],{"class":94}," sync\n",[17,307,308,309,312,313],{},"repo在sync的时候其实可以加很多选项，可以通过",[60,310,311],{},"repo help","自行研究，我自己常用的是",[60,314,315],{},"repo sync  --force-sync --current-branch --no-tags --no-clone-bundle --optimized-fetch --prune -j$(nproc --all) -f1",[17,317,318],{},"看到以下提示代表同步成功",[53,320,323],{"className":321,"code":322,"language":58},[56],"repo sync has finished successfully.\n",[60,324,322],{"__ignoreMap":62},[326,327,328],"h3",{"id":328},"后话",[17,330,331],{},"结果就当源码下载好并开始checkout后，出现了以下错误",[53,333,336],{"className":334,"code":335,"language":58},[56],"Garbage collecting: 100% (220/220), done in 1.204s\nUpdating files: 100% (35/35), done.\nUpdating files: 100% (27/27), done.\ngit-lfs filter-process --skip: line 1: git-lfs: command not found\nfatal: the remote end hung up unexpectedly\nerror.GitError: Cannot checkout device_hisilicon_modules: Cannot initialize work tree for device_hisilicon_modules\nerror: Cannot checkout device_hisilicon_modules\n",[60,337,335],{"__ignoreMap":62},[17,339,340,341,344],{},"看着error很容易可以发现是我的系统没有",[60,342,343],{},"git-lfs","的原因，看样子openharmony使用了git-lfs来储存了某个大文件。",[53,346,348],{"className":74,"code":347,"language":76,"meta":62,"style":62},"sudo pacman -S git-lfs  #别的发行版请自行查找相关安装方法\n",[60,349,350],{"__ignoreMap":62},[80,351,352,355,358,361,364],{"class":82,"line":83},[80,353,354],{"class":86},"sudo",[80,356,357],{"class":94}," pacman",[80,359,360],{"class":90}," -S",[80,362,363],{"class":94}," git-lfs",[80,365,367],{"class":366},"sJ8bj","  #别的发行版请自行查找相关安装方法\n",[17,369,370,371,373],{},"于是乎，安装好",[60,372,343],{},"重新sync源码",[17,375,376,377,380],{},"oepnharmony目录下，",[60,378,379],{},".repo","文件夹内是你从git服务器上下载下来的原始数据，repo将在所有数据下载完成以后将他们自动checkout成代码。",[17,382,383],{},"源码结构是下面这个样子",[53,385,388],{"className":386,"code":387,"language":58},[56],".\n├── applications\n├── base\n├── build\n├── build.py -> build/lite/build.py\n├── build.sh -> build/build_scripts/build.sh\n├── developtools\n├── device\n├── docs\n├── domains\n├── drivers\n├── foundation\n├── .gn -> build/core/gn/dotfile.gn\n├── interface\n├── kernel\n├── prebuilts\n├── productdefine\n├── .repo\n├── test\n├── third_party\n├── utils\n└── vendor\n\n18 directories, 3 files\n",[60,389,387],{"__ignoreMap":62},[17,391,392],{},[393,394],"img",{"alt":395,"src":396},"这里是OpenHarmony包含.repo原始数据的全部大小","https://static.031130.xyz/uploads/2024/08/12/62f3cb1057a22.webp",[17,398,399],{},[393,400],{"alt":401,"src":402},"这里是OpenHarmony的.repo原始数据的大小","https://static.031130.xyz/uploads/2024/08/12/62f3cb13027fb.webp",[17,404,405],{},[406,407,408],"strong",{},"我提供个参考数据，AOSP源码不含.repo原始数据的大小是40G，就openharmony这个代码量，恐怕很难让我相信这是一个兼容安卓应用的系统的完整代码。",[17,410,411],{},[393,412],{"alt":413,"src":414},"这里是AOSP的.repo原始数据大小","https://static.031130.xyz/uploads/2024/08/12/62f3cb15ccbf1.webp",[17,416,417],{},[393,418],{"alt":419,"src":420},"这里是AOSP包含.repo原始数据的大小","https://static.031130.xyz/uploads/2024/08/12/62f3cb182333b.webp",[422,423,424],"style",{},"html pre.shiki code .sScJk, html code.shiki .sScJk{--shiki-default:#6F42C1;--shiki-dark:#B392F0}html pre.shiki code .sj4cs, html code.shiki .sj4cs{--shiki-default:#005CC5;--shiki-dark:#79B8FF}html pre.shiki code .sZZnC, html code.shiki .sZZnC{--shiki-default:#032F62;--shiki-dark:#9ECBFF}html pre.shiki code .szBVR, html code.shiki .szBVR{--shiki-default:#D73A49;--shiki-dark:#F97583}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sJ8bj, html code.shiki .sJ8bj{--shiki-default:#6A737D;--shiki-dark:#6A737D}",{"title":62,"searchDepth":65,"depth":65,"links":426},[427],{"id":328,"depth":113,"text":328},{"title":429,"date":430,"path":431,"tags":432,"body":436},"在Windows与Linux双系统下共享蓝牙鼠标","2021-05-30","/2021/05/30/share-xiaomi-bluetooth-mouse-on-both-windows-and-linux",[433,434,435],"Linux","Archlinux","Windows",{"type":11,"value":437,"toc":808},[438,457,460,473,479,485,488,499,505,508,514,519,522,649,655,658,664,711,714,798,805],[14,439,440,451,454],{},[17,441,442,443,450],{},"我自己使用的鼠标是一只",[444,445,449],"a",{"href":446,"rel":447},"https://www.mi.com/mouse",[448],"nofollow","小米的无线蓝牙双模鼠标","。但是由于我的USB接口不是很充裕，我平时还是蓝牙鼠标用的比较多。",[17,452,453],{},"但是，每当我在Windows和Archlinux上切换时，我不得不重新配对我的蓝牙鼠标。原因我在翻译Archwiki上关于蓝牙鼠标相关叙述时已经解释得非常清楚了，我摘在下面：",[17,455,456],{},"“首先，计算机保存蓝牙设备的 MAC 地址和配对密钥；然后，蓝牙设备保存计算机的 MAC 地址和配对密钥。这两步通常不会有问题，不过设备蓝牙端口的 MAC 地址在 Linux 和 Windows 上都是相同的 (这在硬件层面上就设定好了)。然而，当在 Windows 或 Linux  中重新配对设备时，它会生成一个新密钥，覆盖了蓝牙设备之前保存的密钥，即与 Windows 配对产生的密钥会覆盖原先与 Linux  配对的密钥，反之亦然。“",[17,458,459],{},"先在Linux上连接蓝牙鼠标，再重启到Windows重新配对蓝牙蓝牙鼠标。",[17,461,462,463,468,469,472],{},"到",[444,464,467],{"href":465,"rel":466},"https://docs.microsoft.com/en-us/sysinternals/downloads/psexec",[448],"微软官网","下载",[60,470,471],{},"PsExec.zip","，解压后，记住你所解压的路径。",[17,474,475,476],{},"在Windows中，使用管理员权限打开",[60,477,478],{},"cmd.exe",[17,480,481],{},[393,482],{"alt":483,"src":484},"在Windows下使用管理员权限打开cmd","https://static.031130.xyz/uploads/2024/08/12/62f3cb081565a.webp",[17,486,487],{},"cd到PsExec解压目录，使用如下命令将我们所需要的蓝牙密钥信息保存到C盘根目录下。",[53,489,493],{"className":490,"code":491,"language":492,"meta":62,"style":62},"language-cmd shiki shiki-themes github-light github-dark","psexec.exe -s -i regedit /e C:\\BTKeys.reg HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Services\\BTHPORT\\Parameters\\Keys\n","cmd",[60,494,495],{"__ignoreMap":62},[80,496,497],{"class":82,"line":83},[80,498,491],{},[17,500,501],{},[393,502],{"alt":503,"src":504},"使用psexec获取蓝牙信息","https://static.031130.xyz/uploads/2024/08/12/62f3cb0aae88f.webp",[17,506,507],{},"根目录的BTkeys.reg可以直接用记事本打开，内容大概是下面这个样子",[17,509,510],{},[393,511],{"alt":512,"src":513},"BTkeys.reg","https://static.031130.xyz/uploads/2024/08/12/62f3cb0d9e04f.webp",[14,515,516],{},[17,517,518],{},"为了方便后面的解说，我用各种颜色标注了起来。",[17,520,521],{},"在Linux下获取su权限以后，我们需要将Linux下随机分配给鼠标的蓝牙地址改成在Windows上获取的那个地址。上图中「红部分」划出来的就是Windows下获取的地址。",[53,523,525],{"className":74,"code":524,"language":76,"meta":62,"style":62},"[zhullyb@Archlinux ~]$ su\nPassword: \n[root@Archlinux zhullyb]# cd /var/lib/bluetooth/E0\\:94\\:67\\:74\\:0D\\:5F/\n[root@Archlinux E0:94:67:74:0D:5F]# ls\nC6:2A:1B:33:2E:71  cache  settings\n[root@Archlinux E0:94:67:74:0D:5F]# mv C6\\:2A\\:1B\\:33\\:2E\\:71/ C4\\:F6\\:B3\\:2C\\:BD\\:7E\n",[60,526,527,539,547,578,583,594],{"__ignoreMap":62},[80,528,529,533,536],{"class":82,"line":83},[80,530,532],{"class":531},"sVt8B","[zhullyb@Archlinux ",[80,534,535],{"class":106},"~",[80,537,538],{"class":531},"]$ su\n",[80,540,541,544],{"class":82,"line":65},[80,542,543],{"class":86},"Password:",[80,545,546],{"class":531}," \n",[80,548,549,552,555,558,560,563,565,568,570,573,575],{"class":82,"line":113},[80,550,551],{"class":531},"[root@Archlinux zhullyb]# cd /var/lib/bluetooth/E0",[80,553,554],{"class":90},"\\:",[80,556,557],{"class":531},"94",[80,559,554],{"class":90},[80,561,562],{"class":531},"67",[80,564,554],{"class":90},[80,566,567],{"class":531},"74",[80,569,554],{"class":90},[80,571,572],{"class":531},"0D",[80,574,554],{"class":90},[80,576,577],{"class":531},"5F/\n",[80,579,580],{"class":82,"line":124},[80,581,582],{"class":531},"[root@Archlinux E0:94:67:74:0D:5F]# ls\n",[80,584,585,588,591],{"class":82,"line":131},[80,586,587],{"class":86},"C6:2A:1B:33:2E:71",[80,589,590],{"class":94},"  cache",[80,592,593],{"class":94},"  settings\n",[80,595,596,599,601,604,606,609,611,614,616,619,621,624,626,629,631,634,636,639,641,644,646],{"class":82,"line":149},[80,597,598],{"class":531},"[root@Archlinux E0:94:67:74:0D:5F]# mv C6",[80,600,554],{"class":90},[80,602,603],{"class":531},"2A",[80,605,554],{"class":90},[80,607,608],{"class":531},"1B",[80,610,554],{"class":90},[80,612,613],{"class":531},"33",[80,615,554],{"class":90},[80,617,618],{"class":531},"2E",[80,620,554],{"class":90},[80,622,623],{"class":531},"71/ C4",[80,625,554],{"class":90},[80,627,628],{"class":531},"F6",[80,630,554],{"class":90},[80,632,633],{"class":531},"B3",[80,635,554],{"class":90},[80,637,638],{"class":531},"2C",[80,640,554],{"class":90},[80,642,643],{"class":531},"BD",[80,645,554],{"class":90},[80,647,648],{"class":531},"7E\n",[17,650,651,652],{},"再编辑",[60,653,654],{},"/var/lib/bluetooth/\u003C本机蓝牙地址>/\u003C鼠标蓝牙地址>/info",[17,656,657],{},"原文件如下：",[53,659,662],{"className":660,"code":661,"language":58},[56],"[General]\nName=MiMouse\nAppearance=0x03c2\nAddressType=static\nSupportedTechnologies=LE;\nTrusted=true\nBlocked=false\nWakeAllowed=true\nServices=00001530-1212-efde-1523-785feabcd123;00001800-0000-1000-8000-00805f9b34fb;00001801-0000-1000-8000-00805f9b34fb;0000180a-0000-1000-8000-00805f9b34fb;0000180f-0000-1000-8000-00805f9b34fb;00001812-0000-1000-8000-00805f9b34fb;\n\n[IdentityResolvingKey]\nKey=067764BF59A7531E978AFDC6BB5EC8E1\n\n[LongTermKey]\nKey=E3C49B4F3256018192942EB0CDDEE6A3\nAuthenticated=0\nEncSize=16\nEDiv=28209\nRand=15970850852728832717\n\n[DeviceID]\nSource=2\nVendor=10007\nProduct=64\nVersion=40\n\n[ConnectionParameters]\nMinInterval=6\nMaxInterval=9\nLatency=100\nTimeout=600\n",[60,663,661],{"__ignoreMap":62},[24,665,666,681,701],{},[27,667,668,669,672,673,676,677,680],{},"「黄色部分」",[60,670,671],{},"LTK"," 对应 ",[60,674,675],{},"LongTermKey"," 下的 ",[60,678,679],{},"Key","，把小写转换成大写并删去逗号即可。",[27,682,683,684,672,687,690,691,694,695,694,698],{},"「绿色部分」",[60,685,686],{},"ERand",[60,688,689],{},"Rand","。这里比较特殊的是，我们必须先将 Windows 中的值倒转过来再转换为 10 进制。即",[60,692,693],{},"c2,83,7f,8f,7c,76,b4,02","->",[60,696,697],{},"02,b4,76,7c,8f,7f,83,c2",[60,699,700],{},"194910961239294914",[27,702,703,704,672,707,710],{},"「蓝色部分」",[60,705,706],{},"EDIV",[60,708,709],{},"EDiv","。把 16 进制转换成 10 进制即可，这里就不用倒转了。",[17,712,713],{},"具体的转换方法我不再赘述，我把我的转换过程放在下面，我相信各位读者能够看懂。",[53,715,717],{"className":74,"code":716,"language":76,"meta":62,"style":62},"[zhullyb@Archlinux ~]$ echo 'e3,c0,b2,8e,64,2b,12,16,d8,c2,d7,d4,59,55,92,cd' | tr a-z A-Z | sed 's/[[:punct:]]//g'\nE3C0B28E642B1216D8C2D7D4595592CD\n[zhullyb@Archlinux ~]$ echo $((16#02B4767C8F7F83C2))    #这里我是手动倒叙的\n194910961239294914\n[zhullyb@Archlinux ~]$ echo $((16#000055a3))\n21923\n",[60,718,719,751,756,774,779,793],{"__ignoreMap":62},[80,720,721,723,725,728,731,734,737,740,743,745,748],{"class":82,"line":83},[80,722,532],{"class":531},[80,724,535],{"class":106},[80,726,727],{"class":531},"]$ echo ",[80,729,730],{"class":94},"'e3,c0,b2,8e,64,2b,12,16,d8,c2,d7,d4,59,55,92,cd'",[80,732,733],{"class":106}," |",[80,735,736],{"class":86}," tr",[80,738,739],{"class":94}," a-z",[80,741,742],{"class":94}," A-Z",[80,744,733],{"class":106},[80,746,747],{"class":86}," sed",[80,749,750],{"class":94}," 's/[[:punct:]]//g'\n",[80,752,753],{"class":82,"line":65},[80,754,755],{"class":86},"E3C0B28E642B1216D8C2D7D4595592CD\n",[80,757,758,760,762,765,768,771],{"class":82,"line":113},[80,759,532],{"class":531},[80,761,535],{"class":106},[80,763,764],{"class":531},"]$ echo $((",[80,766,767],{"class":86},"16#02B4767C8F7F83C2",[80,769,770],{"class":531},"))    ",[80,772,773],{"class":366},"#这里我是手动倒叙的\n",[80,775,776],{"class":82,"line":124},[80,777,778],{"class":86},"194910961239294914\n",[80,780,781,783,785,787,790],{"class":82,"line":131},[80,782,532],{"class":531},[80,784,535],{"class":106},[80,786,764],{"class":531},[80,788,789],{"class":86},"16#000055a3",[80,791,792],{"class":531},"))\n",[80,794,795],{"class":82,"line":149},[80,796,797],{"class":86},"21923\n",[17,799,800,801,804],{},"做完这些操作以后，",[60,802,803],{},"sudo systemctl start bluetooth","即可",[422,806,807],{},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sVt8B, html code.shiki .sVt8B{--shiki-default:#24292E;--shiki-dark:#E1E4E8}html pre.shiki code .szBVR, html code.shiki .szBVR{--shiki-default:#D73A49;--shiki-dark:#F97583}html pre.shiki code .sScJk, html code.shiki .sScJk{--shiki-default:#6F42C1;--shiki-dark:#B392F0}html pre.shiki code .sj4cs, html code.shiki .sj4cs{--shiki-default:#005CC5;--shiki-dark:#79B8FF}html pre.shiki code .sZZnC, html code.shiki .sZZnC{--shiki-default:#032F62;--shiki-dark:#9ECBFF}html pre.shiki code .sJ8bj, html code.shiki .sJ8bj{--shiki-default:#6A737D;--shiki-dark:#6A737D}",{"title":62,"searchDepth":65,"depth":65,"links":809},[],{"title":811,"date":812,"path":813,"tags":434,"body":814},"选择最新的Archlinux镜像源","2021-05-29","/2021/05/29/choose-the-last-archlinux-mirror-site-in-china",{"type":11,"value":815,"toc":1538},[816,820,823,832,835,841,852,858,1425,1428,1434,1437,1441,1449,1452,1513,1520,1526,1532,1535],[326,817,819],{"id":818},"找到最新的archlinux镜像源","找到最新的Archlinux镜像源",[17,821,822],{},"我是testing+kde-unstable用户，平均每天更新4次，对于我而言，选择最新的Archlinux镜像是非常重要的。",[17,824,825,826,831],{},"Archlinux的主源并不开放给个人用户使用，仅开放给",[444,827,830],{"href":828,"rel":829},"https://archlinux.org/mirrors/tier/1/",[448],"一级镜像站","进行同步，因此我们需要手动寻找国内较新的镜像站。（理论上来说一级镜像站应该比二级镜像站更新，但是有些一级镜像站的同步频率并不高，同步延迟可能会比某些二级镜像站还要高）",[17,833,834],{},"一个archlinux的镜像目录大概是长下面这个样子",[53,836,839],{"className":837,"code":838,"language":58},[56],"archlinux/\n├── community\n├── community-staging\n├── community-testing\n├── core\n├── extra\n├── gnome-unstable\n├── images\n├── iso\n├── kde-unstable\n├── lastsync\n├── lastupdate\n├── multilib\n├── multilib-staging\n├── multilib-testing\n├── pool\n├── staging\n└── testing\n",[60,840,838],{"__ignoreMap":62},[17,842,843,844,847,848,851],{},"其中的",[60,845,846],{},"lastsync","和",[60,849,850],{},"lastupdate","用unix时间戳记录着上一次同步时间和镜像的上一次变更时间。",[17,853,854,855,857],{},"因此，我们只需要对比各个镜像站的",[60,856,846],{},"谁比较新就行了，我写了如下的辣鸡脚本",[53,859,861],{"className":74,"code":860,"language":76,"meta":62,"style":62},"#!/bin/bash\n\ntuna=$(curl -s https://mirrors.tuna.tsinghua.edu.cn/archlinux/lastsync)\nbfsu=$(curl -s https://mirrors.bfsu.edu.cn/archlinux/lastsync)\nsjtug=$(curl -s https://mirror.sjtu.edu.cn/archlinux/lastsync)\naliyun=$(curl -s https://mirrors.aliyun.com/archlinux/lastsync)\nustc=$(curl -s https://mirrors.ustc.edu.cn/archlinux/lastsync)\nzju=$(curl -s https://mirrors.zju.edu.cn/archlinux/lastsync)\ncqu=$(curl -s https://mirrors.cqu.edu.cn/archlinux/lastsync)\nlzu=$(curl -s https://mirror.lzu.edu.cn/archlinux/lastsync)\nneusoft=$(curl -s https://mirrors.neusoft.edu.cn/archlinux/lastsync)\ndgut=$(curl -s https://mirrors.dgut.edu.cn/archlinux/lastsync)\nnetease=$(curl -s https://mirrors.163.com/archlinux/lastsync)\ntencent=$(curl -s https://mirrors.tencent.com/archlinux/lastsync)\nhit=$(curl -s https://mirrors.hit.edu.cn/archlinux/lastsync)\nhuaweicloud=$(curl -s https://mirrors.huaweicloud.com/archlinux/lastsync)\nsohu=$(curl -s https://mirrors.sohu.com/archlinux/lastsync)\nopentuna=$(curl -s https://opentuna.cn/archlinux/lastsync)\npku=$(curl -s https://mirrors.pku.edu.cn/archlinux/lastsync)\nnju=$(curl -s https://mirrors.nju.edu.cn/archlinux/lastsync)\nnjupt=$(curl -s https://mirrors.nju.edu.cn/archlinux/lastsync)\n\necho \"\"\"\n$tuna        #tuna\n$bfsu        #bfsu\n$sjtug       #sjtug\n$aliyun      #aliyun\n$ustc        #ustc\n$zju         #zju\n$cqu         #cqu\n$lzu         #lzu\n$neusoft     #neusoft\n$dgut        #dgut\n$netease     #netease\n$tencent     #tencent\n$hit         #hit\n$huaweicloud #huaweicloud\n$sohu        #sohu\n$opentuna    #opentuna\n$pku         #pku\n$nju         #nju\n$njupt       #njupt\n\"\"\"  | sort -r\n",[60,862,863,868,872,894,912,930,948,966,984,1002,1020,1038,1056,1074,1093,1112,1131,1150,1169,1188,1207,1225,1230,1239,1248,1257,1266,1275,1284,1293,1302,1311,1320,1329,1338,1347,1356,1365,1374,1383,1392,1401,1410],{"__ignoreMap":62},[80,864,865],{"class":82,"line":83},[80,866,867],{"class":366},"#!/bin/bash\n",[80,869,870],{"class":82,"line":65},[80,871,128],{"emptyLinePlaceholder":127},[80,873,874,877,880,883,885,888,891],{"class":82,"line":113},[80,875,876],{"class":531},"tuna",[80,878,879],{"class":106},"=",[80,881,882],{"class":531},"$(",[80,884,100],{"class":86},[80,886,887],{"class":90}," -s",[80,889,890],{"class":94}," https://mirrors.tuna.tsinghua.edu.cn/archlinux/lastsync",[80,892,893],{"class":531},")\n",[80,895,896,899,901,903,905,907,910],{"class":82,"line":124},[80,897,898],{"class":531},"bfsu",[80,900,879],{"class":106},[80,902,882],{"class":531},[80,904,100],{"class":86},[80,906,887],{"class":90},[80,908,909],{"class":94}," https://mirrors.bfsu.edu.cn/archlinux/lastsync",[80,911,893],{"class":531},[80,913,914,917,919,921,923,925,928],{"class":82,"line":131},[80,915,916],{"class":531},"sjtug",[80,918,879],{"class":106},[80,920,882],{"class":531},[80,922,100],{"class":86},[80,924,887],{"class":90},[80,926,927],{"class":94}," https://mirror.sjtu.edu.cn/archlinux/lastsync",[80,929,893],{"class":531},[80,931,932,935,937,939,941,943,946],{"class":82,"line":149},[80,933,934],{"class":531},"aliyun",[80,936,879],{"class":106},[80,938,882],{"class":531},[80,940,100],{"class":86},[80,942,887],{"class":90},[80,944,945],{"class":94}," https://mirrors.aliyun.com/archlinux/lastsync",[80,947,893],{"class":531},[80,949,950,953,955,957,959,961,964],{"class":82,"line":154},[80,951,952],{"class":531},"ustc",[80,954,879],{"class":106},[80,956,882],{"class":531},[80,958,100],{"class":86},[80,960,887],{"class":90},[80,962,963],{"class":94}," https://mirrors.ustc.edu.cn/archlinux/lastsync",[80,965,893],{"class":531},[80,967,968,971,973,975,977,979,982],{"class":82,"line":160},[80,969,970],{"class":531},"zju",[80,972,879],{"class":106},[80,974,882],{"class":531},[80,976,100],{"class":86},[80,978,887],{"class":90},[80,980,981],{"class":94}," https://mirrors.zju.edu.cn/archlinux/lastsync",[80,983,893],{"class":531},[80,985,986,989,991,993,995,997,1000],{"class":82,"line":172},[80,987,988],{"class":531},"cqu",[80,990,879],{"class":106},[80,992,882],{"class":531},[80,994,100],{"class":86},[80,996,887],{"class":90},[80,998,999],{"class":94}," https://mirrors.cqu.edu.cn/archlinux/lastsync",[80,1001,893],{"class":531},[80,1003,1004,1007,1009,1011,1013,1015,1018],{"class":82,"line":188},[80,1005,1006],{"class":531},"lzu",[80,1008,879],{"class":106},[80,1010,882],{"class":531},[80,1012,100],{"class":86},[80,1014,887],{"class":90},[80,1016,1017],{"class":94}," https://mirror.lzu.edu.cn/archlinux/lastsync",[80,1019,893],{"class":531},[80,1021,1022,1025,1027,1029,1031,1033,1036],{"class":82,"line":3},[80,1023,1024],{"class":531},"neusoft",[80,1026,879],{"class":106},[80,1028,882],{"class":531},[80,1030,100],{"class":86},[80,1032,887],{"class":90},[80,1034,1035],{"class":94}," https://mirrors.neusoft.edu.cn/archlinux/lastsync",[80,1037,893],{"class":531},[80,1039,1040,1043,1045,1047,1049,1051,1054],{"class":82,"line":198},[80,1041,1042],{"class":531},"dgut",[80,1044,879],{"class":106},[80,1046,882],{"class":531},[80,1048,100],{"class":86},[80,1050,887],{"class":90},[80,1052,1053],{"class":94}," https://mirrors.dgut.edu.cn/archlinux/lastsync",[80,1055,893],{"class":531},[80,1057,1058,1061,1063,1065,1067,1069,1072],{"class":82,"line":203},[80,1059,1060],{"class":531},"netease",[80,1062,879],{"class":106},[80,1064,882],{"class":531},[80,1066,100],{"class":86},[80,1068,887],{"class":90},[80,1070,1071],{"class":94}," https://mirrors.163.com/archlinux/lastsync",[80,1073,893],{"class":531},[80,1075,1077,1080,1082,1084,1086,1088,1091],{"class":82,"line":1076},14,[80,1078,1079],{"class":531},"tencent",[80,1081,879],{"class":106},[80,1083,882],{"class":531},[80,1085,100],{"class":86},[80,1087,887],{"class":90},[80,1089,1090],{"class":94}," https://mirrors.tencent.com/archlinux/lastsync",[80,1092,893],{"class":531},[80,1094,1096,1099,1101,1103,1105,1107,1110],{"class":82,"line":1095},15,[80,1097,1098],{"class":531},"hit",[80,1100,879],{"class":106},[80,1102,882],{"class":531},[80,1104,100],{"class":86},[80,1106,887],{"class":90},[80,1108,1109],{"class":94}," https://mirrors.hit.edu.cn/archlinux/lastsync",[80,1111,893],{"class":531},[80,1113,1115,1118,1120,1122,1124,1126,1129],{"class":82,"line":1114},16,[80,1116,1117],{"class":531},"huaweicloud",[80,1119,879],{"class":106},[80,1121,882],{"class":531},[80,1123,100],{"class":86},[80,1125,887],{"class":90},[80,1127,1128],{"class":94}," https://mirrors.huaweicloud.com/archlinux/lastsync",[80,1130,893],{"class":531},[80,1132,1134,1137,1139,1141,1143,1145,1148],{"class":82,"line":1133},17,[80,1135,1136],{"class":531},"sohu",[80,1138,879],{"class":106},[80,1140,882],{"class":531},[80,1142,100],{"class":86},[80,1144,887],{"class":90},[80,1146,1147],{"class":94}," https://mirrors.sohu.com/archlinux/lastsync",[80,1149,893],{"class":531},[80,1151,1153,1156,1158,1160,1162,1164,1167],{"class":82,"line":1152},18,[80,1154,1155],{"class":531},"opentuna",[80,1157,879],{"class":106},[80,1159,882],{"class":531},[80,1161,100],{"class":86},[80,1163,887],{"class":90},[80,1165,1166],{"class":94}," https://opentuna.cn/archlinux/lastsync",[80,1168,893],{"class":531},[80,1170,1172,1175,1177,1179,1181,1183,1186],{"class":82,"line":1171},19,[80,1173,1174],{"class":531},"pku",[80,1176,879],{"class":106},[80,1178,882],{"class":531},[80,1180,100],{"class":86},[80,1182,887],{"class":90},[80,1184,1185],{"class":94}," https://mirrors.pku.edu.cn/archlinux/lastsync",[80,1187,893],{"class":531},[80,1189,1191,1194,1196,1198,1200,1202,1205],{"class":82,"line":1190},20,[80,1192,1193],{"class":531},"nju",[80,1195,879],{"class":106},[80,1197,882],{"class":531},[80,1199,100],{"class":86},[80,1201,887],{"class":90},[80,1203,1204],{"class":94}," https://mirrors.nju.edu.cn/archlinux/lastsync",[80,1206,893],{"class":531},[80,1208,1210,1213,1215,1217,1219,1221,1223],{"class":82,"line":1209},21,[80,1211,1212],{"class":531},"njupt",[80,1214,879],{"class":106},[80,1216,882],{"class":531},[80,1218,100],{"class":86},[80,1220,887],{"class":90},[80,1222,1204],{"class":94},[80,1224,893],{"class":531},[80,1226,1228],{"class":82,"line":1227},22,[80,1229,128],{"emptyLinePlaceholder":127},[80,1231,1233,1236],{"class":82,"line":1232},23,[80,1234,1235],{"class":90},"echo",[80,1237,1238],{"class":94}," \"\"\"\n",[80,1240,1242,1245],{"class":82,"line":1241},24,[80,1243,1244],{"class":531},"$tuna",[80,1246,1247],{"class":94},"        #tuna\n",[80,1249,1251,1254],{"class":82,"line":1250},25,[80,1252,1253],{"class":531},"$bfsu",[80,1255,1256],{"class":94},"        #bfsu\n",[80,1258,1260,1263],{"class":82,"line":1259},26,[80,1261,1262],{"class":531},"$sjtug",[80,1264,1265],{"class":94},"       #sjtug\n",[80,1267,1269,1272],{"class":82,"line":1268},27,[80,1270,1271],{"class":531},"$aliyun",[80,1273,1274],{"class":94},"      #aliyun\n",[80,1276,1278,1281],{"class":82,"line":1277},28,[80,1279,1280],{"class":531},"$ustc",[80,1282,1283],{"class":94},"        #ustc\n",[80,1285,1287,1290],{"class":82,"line":1286},29,[80,1288,1289],{"class":531},"$zju",[80,1291,1292],{"class":94},"         #zju\n",[80,1294,1296,1299],{"class":82,"line":1295},30,[80,1297,1298],{"class":531},"$cqu",[80,1300,1301],{"class":94},"         #cqu\n",[80,1303,1305,1308],{"class":82,"line":1304},31,[80,1306,1307],{"class":531},"$lzu",[80,1309,1310],{"class":94},"         #lzu\n",[80,1312,1314,1317],{"class":82,"line":1313},32,[80,1315,1316],{"class":531},"$neusoft",[80,1318,1319],{"class":94},"     #neusoft\n",[80,1321,1323,1326],{"class":82,"line":1322},33,[80,1324,1325],{"class":531},"$dgut",[80,1327,1328],{"class":94},"        #dgut\n",[80,1330,1332,1335],{"class":82,"line":1331},34,[80,1333,1334],{"class":531},"$netease",[80,1336,1337],{"class":94},"     #netease\n",[80,1339,1341,1344],{"class":82,"line":1340},35,[80,1342,1343],{"class":531},"$tencent",[80,1345,1346],{"class":94},"     #tencent\n",[80,1348,1350,1353],{"class":82,"line":1349},36,[80,1351,1352],{"class":531},"$hit",[80,1354,1355],{"class":94},"         #hit\n",[80,1357,1359,1362],{"class":82,"line":1358},37,[80,1360,1361],{"class":531},"$huaweicloud",[80,1363,1364],{"class":94}," #huaweicloud\n",[80,1366,1368,1371],{"class":82,"line":1367},38,[80,1369,1370],{"class":531},"$sohu",[80,1372,1373],{"class":94},"        #sohu\n",[80,1375,1377,1380],{"class":82,"line":1376},39,[80,1378,1379],{"class":531},"$opentuna",[80,1381,1382],{"class":94},"    #opentuna\n",[80,1384,1386,1389],{"class":82,"line":1385},40,[80,1387,1388],{"class":531},"$pku",[80,1390,1391],{"class":94},"         #pku\n",[80,1393,1395,1398],{"class":82,"line":1394},41,[80,1396,1397],{"class":531},"$nju",[80,1399,1400],{"class":94},"         #nju\n",[80,1402,1404,1407],{"class":82,"line":1403},42,[80,1405,1406],{"class":531},"$njupt",[80,1408,1409],{"class":94},"       #njupt\n",[80,1411,1413,1416,1419,1422],{"class":82,"line":1412},43,[80,1414,1415],{"class":94},"\"\"\"",[80,1417,1418],{"class":106},"  |",[80,1420,1421],{"class":86}," sort",[80,1423,1424],{"class":90}," -r\n",[17,1426,1427],{},"其运行结果如下",[53,1429,1432],{"className":1430,"code":1431,"language":58},[56],"1622248120     #neusoft\n1622247879        #dgut\n1622247698         #hit\n1622246042         #zju\n1622246042        #tuna\n1622246042        #bfsu\n1622242426       #sjtug\n1622242426       #njupt\n1622242426         #nju\n1622240702        #ustc\n1622240522         #cqu\n1622238783     #netease\n1622235120         #lzu\n1622232241 #huaweicloud\n1622230871     #tencent\n1622217845      #aliyun\n1622217001         #pku\n1622203750        #sohu\n1622166379    #opentuna\n",[60,1433,1431],{"__ignoreMap":62},[17,1435,1436],{},"通过不同时刻的多次测试可以看出，国内同步频率最高的是东软（neusoft）的镜像。顺手一查，没错，是个一级镜像站。通过unix时间戳得知，东软的archlinux镜像几乎是每分钟同步一次，恐怖如斯。。。",[1438,1439,1440],"h2",{"id":1440},"获得更好的下载速度",[17,1442,1443,1444],{},"我们已经得知东软是国内同步频率最高的Archlinux镜像站了，但是我用东软镜像站的下载速度并不太好看。此时，我们就要搬出依云大佬的神器——",[444,1445,1448],{"href":1446,"rel":1447},"https://blog.lilydjwg.me/2020/10/29/pacsync.215578.html",[448],"pacsync",[17,1450,1451],{},"在root用户下使用如下命令装载pacysnc后",[53,1453,1455],{"className":74,"code":1454,"language":76,"meta":62,"style":62},"echo '#!/bin/bash -e\n\nunshare -m bash \u003C\u003C'EOF'\nmount --make-rprivate /\nfor f in /etc/pacman.d/*.sync; do\n  filename=\"${f%.*}\"\n  mount --bind \"$f\" \"$filename\"\ndone\npacman -Sy\nEOF' > /usr/bin/pacsync\n",[60,1456,1457,1464,1468,1473,1478,1483,1488,1493,1498,1503],{"__ignoreMap":62},[80,1458,1459,1461],{"class":82,"line":83},[80,1460,1235],{"class":90},[80,1462,1463],{"class":94}," '#!/bin/bash -e\n",[80,1465,1466],{"class":82,"line":65},[80,1467,128],{"emptyLinePlaceholder":127},[80,1469,1470],{"class":82,"line":113},[80,1471,1472],{"class":94},"unshare -m bash \u003C\u003C'EOF'\n",[80,1474,1475],{"class":82,"line":124},[80,1476,1477],{"class":94},"mount --make-rprivate /\n",[80,1479,1480],{"class":82,"line":131},[80,1481,1482],{"class":94},"for f in /etc/pacman.d/*.sync; do\n",[80,1484,1485],{"class":82,"line":149},[80,1486,1487],{"class":94},"  filename=\"${f%.*}\"\n",[80,1489,1490],{"class":82,"line":154},[80,1491,1492],{"class":94},"  mount --bind \"$f\" \"$filename\"\n",[80,1494,1495],{"class":82,"line":160},[80,1496,1497],{"class":94},"done\n",[80,1499,1500],{"class":82,"line":172},[80,1501,1502],{"class":94},"pacman -Sy\n",[80,1504,1505,1508,1510],{"class":82,"line":188},[80,1506,1507],{"class":94},"EOF'",[80,1509,107],{"class":106},[80,1511,1512],{"class":94}," /usr/bin/pacsync\n",[17,1514,1515,1516,1519],{},"创建",[60,1517,1518],{},"/etc/pacman.d/mirrorlist.sync","指定我们用来同步pacman数据库（比如东软）",[17,1521,1522,1525],{},[60,1523,1524],{},"/etc/pacman.d/mirrorlist","中存放其他国内镜像源地址（按照同步速度从上到下）",[17,1527,1528,1529],{},"以后的同步命令为 ",[60,1530,1531],{},"sudo pacsync && yay -Su",[17,1533,1534],{},"觉得命令过长的话设置alias可以是个不错的选择。",[422,1536,1537],{},"html pre.shiki code .sJ8bj, html code.shiki .sJ8bj{--shiki-default:#6A737D;--shiki-dark:#6A737D}html pre.shiki code .sVt8B, html code.shiki .sVt8B{--shiki-default:#24292E;--shiki-dark:#E1E4E8}html pre.shiki code .szBVR, html code.shiki .szBVR{--shiki-default:#D73A49;--shiki-dark:#F97583}html pre.shiki code .sScJk, html code.shiki .sScJk{--shiki-default:#6F42C1;--shiki-dark:#B392F0}html pre.shiki code .sj4cs, html code.shiki .sj4cs{--shiki-default:#005CC5;--shiki-dark:#79B8FF}html pre.shiki code .sZZnC, html code.shiki .sZZnC{--shiki-default:#032F62;--shiki-dark:#9ECBFF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":62,"searchDepth":65,"depth":65,"links":1539},[1540,1541],{"id":818,"depth":113,"text":819},{"id":1440,"depth":65,"text":1440},{"title":1543,"date":1544,"path":1545,"tags":1546,"body":1548},"请给 tuna/ustc 镜像站减压","2021-05-27 21:25:48","/2021/05/27/relieve-the-pressure-of-tuna-mirror-site-please",[433,1547],"镜像站",{"type":11,"value":1549,"toc":1643},[1550,1559,1565,1568,1579,1582,1590,1598,1604,1607,1613,1616,1622,1625,1631,1634,1640],[17,1551,1552,1553,1558],{},"不知道从什么时候开始，我总觉得tuna的镜像站提供的下载速度越来越慢，直到我前几天翻开tuna镜像站的「",[444,1554,1557],{"href":1555,"rel":1556},"https://mirrors.tuna.tsinghua.edu.cn/status/#server-status",[448],"服务器状态","」，我被眼前的景象给震惊到了。",[17,1560,1561],{},[393,1562],{"alt":1563,"src":1564},"本图截于2021年5月27日晚","https://static.031130.xyz/uploads/2024/08/12/62f3baac63cd2.webp",[17,1566,1567],{},"我在这里大致观察了一下这张图：服务器流量主要是由四个部分组成，「http-ipv4」、「https-ipv4」、「http-ipv6」和「https-ipv6」。光是从过去24小时的平均出站流量来计算的话，大约就是2.4Gb/s，如果观察图中的流量高峰期的话，大概是4Gb/s的一个速率。这个流量大小是什么概念呢？根据我个人浅薄的建站经验来讲，这个流量可以让大部分供应商把你的网站判断为正在遭受攻击，你将被强制进入黑洞模式。然而对于tuna的镜像站而言，这个流量速率确是日常。换句话说，tuna的服务器都相当于每时每刻都在被来自全国的开发者“攻击”。",[14,1569,1570,1573],{},[17,1571,1572],{},"来自 2022 年的竹林: 我是真没想到去年 tuna 的网络负载只有这点的。2022 年的负载图在下面附上，已经翻了一倍不止了",[17,1574,1575],{},[393,1576],{"alt":1577,"src":1578},"本图截于2022年8月10日晚","https://static.031130.xyz/uploads/2024/08/12/62f3ba4204ecb.webp",[17,1580,1581],{},"因此，我们也就不难理解为什么tuna近些年来经常出现断流等一系列问题了。",[14,1583,1584,1587],{},[17,1585,1586],{},"客观上 TUNA 和 UTSC 是国内知名度和镜像项目数量以及同步速度都靠前的镜像站，但也因为如此，这两个镜像站每日的带宽负载是很大的；能跑满我的本地带宽速度是较理想的情况，但是那么大的负载，时间跨度长了体验到的波动差异也就多了起来。至少在我这里，长时间使用两个镜像站的速度波动挺大的。TUNA 也曾微言过带宽日益不堪重负，所以从道德情感和技术理论等角度上，尽管他们是理想的镜像站点，我个人不会优先使用这两个镜像站，也不会优先推荐别人使用。",[17,1588,1589],{},"——WPlanck",[17,1591,1592,1593,1597],{},"国内的开源镜像站我大多都已经收集到",[444,1594,1596],{"href":1595},"/2020/07/11/china-mainland-mirrorlist/","这一篇博客中","了，以下几个镜像站是我重点推荐的。",[326,1599,1600],{"id":898},[444,1601,898],{"href":1602,"rel":1603},"https://mirrors.bfsu.edu.cn/",[448],[17,1605,1606],{},"tuna的姊妹站，通俗来讲就是tuna派人维护，北京外国语大学出钱。人少、稳定、涵盖项目较广。",[326,1608,1609],{"id":916},[444,1610,916],{"href":1611,"rel":1612},"https://mirrors.sjtug.sjtu.edu.cn/",[448],[17,1614,1615],{},"上海交大的站点，也有不少项目，据说sjtug上的manjaro镜像是国内几个开源镜像站中同步最勤快的，用的人也不多。",[326,1617,1618],{"id":1155},[444,1619,1155],{"href":1620,"rel":1621},"https://opentuna.cn/",[448],[17,1623,1624],{},"tuna那边用国内aws服务器搭的站点，速度超快，不过比较可惜的是现在同步的项目不多，同步频率低，大概是一天一次的样子。",[326,1626,1627],{"id":1174},[444,1628,1174],{"href":1629,"rel":1630},"https://mirrors.pku.edu.cn/Mirrors",[448],[17,1632,1633],{},"是不是没想到北大也有镜像站？没记错的话是今年三四月左右刚开的，和opentuna情况差不多，用的人少、速度快、同步的项目不多。",[326,1635,1636],{"id":1098},[444,1637,1098],{"href":1638,"rel":1639},"https://mirrors.hit.edu.cn/",[448],[17,1641,1642],{},"哈尔滨工业大学的镜像站，速度我跑下来感觉一般，不是特别亮眼，不过同步频率高。",{"title":62,"searchDepth":65,"depth":65,"links":1644},[1645,1646,1647,1648,1649],{"id":898,"depth":113,"text":898},{"id":916,"depth":113,"text":916},{"id":1155,"depth":113,"text":1155},{"id":1174,"depth":113,"text":1174},{"id":1098,"depth":113,"text":1098},{"title":1651,"date":1652,"path":1653,"tags":434,"body":1654},"我为什么选择Archlinux？","2021-05-23","/2021/05/23/why-i-use-archlinux",{"type":11,"value":1655,"toc":1747},[1656,1659,1662,1665,1672,1675,1682,1685,1688,1692,1695,1698,1701,1704,1707,1710,1713,1716,1724,1728,1731,1734,1738,1741,1744],[17,1657,1658],{},"对于我而言，我用Archlinux主要的原因就是实用主义。我可以很负责的说，Arch真的是在我所有用过的发行版当中最符合实用主义的一个了。",[17,1660,1661],{},"很多大佬一提到Archlinux就扯些什么kiss原则，在我看来则不然。",[1438,1663,1664],{"id":1664},"整洁规范的系统",[17,1666,1667,1668,1671],{},"规范代码为的不是为了什么",[406,1669,1670],{},"Art of Code","，而是可读性的提升；遵循kiss原则亦是如此。",[17,1673,1674],{},"配置文件的路径写好了，符合规范，我们就能一下子找到，我们是为了实用主义而遵守kiss原则。",[17,1676,1677,1678],{},"同样的，我同样可以为了实用主义而破坏kiss原则。",[1679,1680,1681],"del",{},"比如在我的archiso-zhullyb中，我添加了一个pacman的hook将我的定制内核重命名为linux以确保其能够正确被ventoy所识别，这也是为了实用主义。",[17,1683,1684],{},"那么，什么时候我会破坏kiss原则呢？当我认为破坏kiss原则所带来的利大于弊时，我就会考虑以一个并不规范但却有效的方法来处理问题。",[17,1686,1687],{},"但很有趣的是，由于Archlinux的官方总是将kiss奉为圣旨，这就给我们提供了一个非常nice的环境了——在一个非常规范的系统内，破坏kiss原则所带来的代价并不会很大，这就好比在一个布线整齐的机房内临时私拉两三根线并不会给维护带来多大的困难。",[1438,1689,1691],{"id":1690},"archlinux对上游软件包的发行策略","Archlinux对上游软件包的发行策略",[17,1693,1694],{},"不同于apt在源内提供了统一软件的多个版本供用户选择，pacman剑走偏锋，默认用户系统内所有软件都是最新的。",[17,1696,1697],{},"由此带来了一个好处——不会出现由于版本过高/过低导致的依赖问题。只要我保证系统内的所有软件都是最新的，就不会出问题，非常的简单粗暴。",[17,1699,1700],{},"此外，不考虑依赖版本这一特点对于打包人来说也是一种解脱。",[1438,1702,1703],{"id":1703},"pacman简单的打包方式",[17,1705,1706],{},"不同于deb以及rpm，pacman的软件包应该是所有发行版中最省事儿的。",[17,1708,1709],{},"打包软件时，我们只需要写（改）一份PKGBUILD，就可以仅仅通过在PKGBUILD所在的路径执行makepkg命令来完成一次打包，这相比起deb而言可谓是天差地别。如此简单有效的打包方式注定其将被实用主义者所青睐。",[1438,1711,1712],{"id":1712},"超低的社区贡献成本",[17,1714,1715],{},"很多发行版社区开发与贡献其实并不容易参与进去，我拿Ubuntu来做个比较。",[14,1717,1718,1721],{},[17,1719,1720],{},"附: Archwiki是先斩后奏类型的文档，在你按下保存按钮的那一刻，wiki将立即被更新，所有访客都将看到你改动后的内容。wiki文档拥有变更记录，不担心有人恶意搞破坏，向wiki管理员提出举报后破坏者的账号会被及时封禁，wiki可以非常简单地回滚到之前的状态。",[17,1722,1723],{},"AUR同样也是，你可以随意上传自己的PKGBUILD，可以被别的用户及时看到。如果上传恶意脚本，在别的用户举报后你将迅速被封号。",[326,1725,1727],{"id":1726},"wiki方面","Wiki方面",[17,1729,1730],{},"Ubuntu其实是我第一个上手的Linux发行版，在为期半年的Ubuntu体验中，我对于社区做出的贡献为0。这倒也不是我不热衷于参与社区贡献，而是对Ubuntu社区的贡献成本太高了。去贡献文档翻译，需要等待漫长的审核过程，在第一篇汉化文章正式展现在别的用户眼前后，我一定会被激发出继续翻译第二篇的热情。然而，面对太长的审核周期，再高涨的热情恐怕也会被浇灭。",[17,1732,1733],{},"Arch的社区则不一样，他并不像别的社区那样严谨——只要注册个wiki的账号便可以开始贡献文档。你可以随意地编辑一篇文章或者是新增一篇自己的文章，编辑后的文章将能够立即被别的用户所阅读到，没有任何审核过程，有了这份热情，我便继续翻译别的文档，我想，这应该就是archwiki为何涵盖面如此之广的原因。",[326,1735,1737],{"id":1736},"aur方面","AUR方面",[17,1739,1740],{},"同样也是拿Ubuntu对比。",[17,1742,1743],{},"在Archlinux下，我只需要简单的写一个PKGBUILD即可轻松构建一个软件包，同时，我也可以将这份有我攥写的PKGBUILD上传到AUR供别的用户使用。AUR作为一个公开的储存库，任何Arch用户都可以通过AUR Helper轻松得从AUR中获取我写的PKGBUILD并在本地打成自己的包。与此同时，我也可以创建一个私人源，直接发行我构建的二进制包。",[17,1745,1746],{},"Ubutnu则不然，他的打包方式则要麻烦得多，同时也没有类似PKGBUILD一样的东西便于用户分享自己的打包脚本。唯一能够分享自己的劳动成果的方式无非就是直接分享自己打出来的deb包，最多也不过是建立自己的ppa，这对于用户来说是极为麻烦的。用户需要处心积虑地寻找自己所需要的deb包或是含有目标包的ppa地址并手动添加，不像Archlinux有AUR这种东西能够让我们知道在哪里能够找到我们所需要的包。",{"title":62,"searchDepth":65,"depth":65,"links":1748},[1749,1750,1751,1752],{"id":1664,"depth":65,"text":1664},{"id":1690,"depth":65,"text":1691},{"id":1703,"depth":65,"text":1703},{"id":1712,"depth":65,"text":1712,"children":1753},[1754,1755],{"id":1726,"depth":113,"text":1727},{"id":1736,"depth":113,"text":1737},{"title":1757,"date":1758,"path":1759,"tags":1760,"body":1763},"使用vercel创建一个随机图片api","2021-05-21","/2021/05/21/create-a-random-picture-api-with-vercel",[1761,1762],"Network","vercel",{"type":11,"value":1764,"toc":1896},[1765,1776,1787,1790,1793,1804,1807,1812,1825,1831,1834,1840,1893],[17,1766,1767,1768,1775],{},"如果你的网络环境不算太差的话，你在访问我博客的时候应该可以看到顶部有一张背景图。假如你访问我的博客时留心观察，你或许会发现每次你访问我博客时的背景都是不一样的。如果你没玩够，或许你可以尝试",[444,1769,1772],{"href":1770,"rel":1771},"https://randompic.zhul.in/api/randomtoppic.php",[448],[406,1773,1774],{},"点击这里","，我总共搜集了20张壁纸供诸位赏玩。",[17,1777,1778,1779,1786],{},"是的，这是使用php实现的随机图片api，托管于vercel，你可以在",[444,1780,1783],{"href":1781,"rel":1782},"https://note.aya1.top/#/4-phpapi",[448],[406,1784,1785],{},"aya的博客","上找到我使用的代码。具体配置方式我不再赘述。",[17,1788,1789],{},"然而，我们还需要解决一个问题: php在哪里运行？",[17,1791,1792],{},"如果你拥有自己的服务器，在国内访问速度毫不逊色，那就好办了，直接扔自己服务器上即可。然而，我并没有。我需要找到一个在国内访问速度给力的地方来部署我的api，以确保访客在打开我的博客时可以在第一时间获取到图片的真实链接并开始加载。",[17,1794,1795,1796,1799,1800,1803],{},"起初，我将其部署在我的好朋友(",[1679,1797,1798],{},"你可以猜猜他是谁",")的国内vps上，访问速度自然不用说。然而，他的服务器",[406,1801,1802],{},"不支持https","，这就导致使用chrome访问的时候chrome不会自动访问我的api，博客顶部一片惨蓝。。。",[17,1805,1806],{},"随后，我使用的是000webhost提供的虚拟主机，国内访问起来也还不错，大概正常运行了半个月左右的时间，然后莫名开始502了。我懂，作为不交钱的白嫖用户应该自觉滚蛋了，这点觉悟咱还是有。",[17,1808,1809],{},[406,1810,1811],{},"随后，我找到了目前的方案——vercel",[17,1813,1814,1815,1818,1819,1824],{},"vercel是被我用来部署静态网页的，但我没想到他也能",[406,1816,1817],{},"支持php","。参考了",[444,1820,1823],{"href":1821,"rel":1822},"https://github.com/juicyfx/vercel-php",[448],"vercel-php","项目后，我大致了解了整个仓库结构。",[53,1826,1829],{"className":1827,"code":1828,"language":58},[56],"project\n├── api\n│   └── index.php\n└── vercel.json\n",[60,1830,1828],{"__ignoreMap":62},[17,1832,1833],{},"php和附带的资源文件(如果有的话)一定要放到api文件夹下才能够正常被vercel识别。",[17,1835,1836,1837],{},"以下附",[60,1838,1839],{},"vercel.json",[53,1841,1845],{"className":1842,"code":1843,"language":1844,"meta":62,"style":62},"language-json shiki shiki-themes github-light github-dark","{\n  \"functions\": {\n    \"api/index.php\": {\n      \"runtime\": \"vercel-php@0.4.0\"\n    }\n  }\n}\n","json",[60,1846,1847,1852,1860,1867,1878,1883,1888],{"__ignoreMap":62},[80,1848,1849],{"class":82,"line":83},[80,1850,1851],{"class":531},"{\n",[80,1853,1854,1857],{"class":82,"line":65},[80,1855,1856],{"class":90},"  \"functions\"",[80,1858,1859],{"class":531},": {\n",[80,1861,1862,1865],{"class":82,"line":113},[80,1863,1864],{"class":90},"    \"api/index.php\"",[80,1866,1859],{"class":531},[80,1868,1869,1872,1875],{"class":82,"line":124},[80,1870,1871],{"class":90},"      \"runtime\"",[80,1873,1874],{"class":531},": ",[80,1876,1877],{"class":94},"\"vercel-php@0.4.0\"\n",[80,1879,1880],{"class":82,"line":131},[80,1881,1882],{"class":531},"    }\n",[80,1884,1885],{"class":82,"line":149},[80,1886,1887],{"class":531},"  }\n",[80,1889,1890],{"class":82,"line":154},[80,1891,1892],{"class":531},"}\n",[422,1894,1895],{},"html pre.shiki code .sVt8B, html code.shiki .sVt8B{--shiki-default:#24292E;--shiki-dark:#E1E4E8}html pre.shiki code .sj4cs, html code.shiki .sj4cs{--shiki-default:#005CC5;--shiki-dark:#79B8FF}html pre.shiki code .sZZnC, html code.shiki .sZZnC{--shiki-default:#032F62;--shiki-dark:#9ECBFF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":62,"searchDepth":65,"depth":65,"links":1897},[],{"title":1899,"date":1900,"path":1901,"tags":1902,"body":1904},"禁止deepin-wine-tim使用simsun字体渲染","2021-04-27","/2021/04/27/hide-simsun-from-deepin-wine-tim",[434,433,1903],"Bwrap",{"type":11,"value":1905,"toc":2014},[1906,1919,1922,1925,1930,1933,1936,1947,1954,1960,1963,1977,1983,1989,1992,1997,2000,2005,2008],[14,1907,1908],{},[17,1909,1910,1911,1914,1915,1918],{},"本文中，我通过bwrap命令对运行Tim的wine程序屏蔽了simsun字体以获得了一个更为舒适的字体渲染效果。我所使用的Tim为",[60,1912,1913],{},"deepin-wine-tim","，至于",[60,1916,1917],{},"deepin-wine-qq","通过相同的方式应该也能达到相同的效果，spark商店的Tim我自己测试下来似乎是没法达到这样的效果，而使用其他方法安装simsun字体的网友们则需要注意灵活变通，不要照抄我给出的字体路径。",[17,1920,1921],{},"在Archlinux下，我们通常会使用deepin-wine5来运行QQ/Tim.",[17,1923,1924],{},"但是当我们在系统中倒入simsun字体时，无论使用什么奇迹淫巧似乎都无法阻止deepin-wine5找到simsun并优先使用它。于是，字体渲染就会变成如图这样奇奇怪怪的画风:",[17,1926,1927],{},[393,1928],{"alt":62,"src":1929},"https://static.031130.xyz/uploads/2024/08/12/62f3c887040ff.webp",[17,1931,1932],{},"但是我并不喜欢这样的渲染效果，使用simsun渲染出来的字体总感觉有一种上世纪的风格，况且，在我的1080p小屏下显示并不清晰。",[17,1934,1935],{},"于是，在尝试了更改注册表、在wine容器的系统路径下直接塞入字体文件等等方式无果后，我选择了逃避——直接让wine程序读取不到simsun。",[17,1937,1938,1939,1942,1943,1946],{},"我的simsun是通过",[60,1940,1941],{},"ttf-ms-win10-zh_cn","这个包安装上去的，被安装在",[60,1944,1945],{},"/usr/share/fonts/TTF/","路径下。",[17,1948,1949,1950,1953],{},"使用",[60,1951,1952],{},"pacman -Qo /usr/share/fonts/TTF/","命令查找这个路径下所安装的字体包，我这里的输出如下:",[53,1955,1958],{"className":1956,"code":1957,"language":58},[56],"[zhullyb@Archlinux ~]$ pacman -Qo /usr/share/fonts/TTF/\n/usr/share/fonts/TTF/ is owned by ttf-cascadia-code 2102.25-1\n/usr/share/fonts/TTF/ is owned by ttf-fira-code 5.2-1\n/usr/share/fonts/TTF/ is owned by ttf-hack 3.003-3\n/usr/share/fonts/TTF/ is owned by ttf-monaco 6.1-6\n/usr/share/fonts/TTF/ is owned by ttf-ms-win10-zh_cn 2019ltsc-1\n/usr/share/fonts/TTF/ is owned by ttf-opensans 1.101-2\n",[60,1959,1957],{"__ignoreMap":62},[17,1961,1962],{},"可以看到，并没有什么对wine程序运行特别重要的字体包，于是我计划通过bwrap命令对运行Tim的wine程序直接屏蔽这个路径。",[17,1964,1965,1966,1969,1970,1973,1974],{},"首先安装提供",[60,1967,1968],{},"bwrap","命令的",[60,1971,1972],{},"bubblewrap","程序: ",[60,1975,1976],{},"sudo pacman -S bubblewrap --needed",[17,1978,1979,1980],{},"通过查找deepin-wine-tim的desktop文件发现Tim的启动命令是",[60,1981,1982],{},"/opt/apps/com.qq.office.deepin/files/run.sh",[17,1984,1985,1986],{},"在终端中输入命令进行测试",[60,1987,1988],{},"bwrap --dev-bind / / --tmpfs /usr/share/fonts/TTF/ /opt/apps/com.qq.office.deepin/files/run.sh",[17,1990,1991],{},"出现如下界面，看来方法是可行的。",[17,1993,1994],{},[393,1995],{"alt":62,"src":1996},"https://static.031130.xyz/uploads/2024/08/12/62f3c88b119f8.webp",[17,1998,1999],{},"于是，我们进一步更改deepin-wine-tim的desktop文件，以方便我们不需要每次都在Terminal中执行这么一大长串命令。需要更改的地方如下图红色方框圈出部分",[17,2001,2002],{},[393,2003],{"alt":62,"src":2004},"https://static.031130.xyz/uploads/2024/08/12/62f3c88f41790.webp",[17,2006,2007],{},"我这里附一下图中的命令方便诸位复制粘贴。",[53,2009,2012],{"className":2010,"code":2011,"language":58},[56],"[zhullyb@Archlinux ~]$ cat /usr/share/applications/com.qq.office.deepin.desktop \n#!/usr/bin/env xdg-open\n\n[Desktop Entry]\nEncoding=UTF-8\nType=Application\nX-Created-By=Deepin WINE Team\nCategories=chat;Network;\nIcon=com.qq.office.deepin\nExec=bwrap --dev-bind / / --tmpfs /usr/share/fonts/TTF/ /opt/apps/com.qq.office.deepin/files/run.sh\nName=TIM\nName[zh_CN]=TIM\nComment=Tencent TIM Client on Deepin Wine\nStartupWMClass=tim.exe\nMimeType=\n",[60,2013,2011],{"__ignoreMap":62},{"title":62,"searchDepth":65,"depth":65,"links":2015},[],{"title":2017,"date":2018,"path":2019,"tags":2020,"body":2021},"在系统使用暗色主题时禁用Firefox的夜间模式","2021-04-23","/2021/04/23/disable-firefox-nightmode-when-your-system-is-using-that","笔记",{"type":11,"value":2022,"toc":2073},[2023,2026,2029,2036,2039,2045,2052,2058,2064],[17,2024,2025],{},"在我使用Archlinux的时候经常会使用一些暗色主题，但是我并不希望我浏览网页时一些自作聪明的网页自动切换成夜间模式。",[17,2027,2028],{},"这个设置我找了好久，每次在谷歌上检索都会跳出来一堆教我改Firefox主题的、用插件开夜间模式的，却都不是我的目的。",[17,2030,2031,2032,2035],{},"我们所需要做的是在浏览器地址栏输入",[60,2033,2034],{},"about:config","进入高级设置",[17,2037,2038],{},"搜索并添加一个值",[53,2040,2043],{"className":2041,"code":2042,"language":58},[56],"ui.systemUsesDarkTheme\n",[60,2044,2042],{"__ignoreMap":62},[17,2046,2047,2048,2051],{},"将这个选项的",[406,2049,2050],{},"数值","设置为0即可。",[17,2053,2054],{},[393,2055],{"alt":2056,"src":2057},"步骤1","https://static.031130.xyz/uploads/2024/08/12/62f36c8f05efd.webp",[17,2059,2060],{},[393,2061],{"alt":2062,"src":2063},"步骤2","https://static.031130.xyz/uploads/2024/08/12/62f36cce30773.webp",[17,2065,2066,2067,2072],{},"2021.12.13更新: Firefox 更新 95.0 以后，如果遇到原方案失效的问题，可以参考 ",[444,2068,2071],{"href":2069,"rel":2070},"https://blog.cubercsl.site/post/%E5%9C%A8%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%9A%97%E8%89%B2%E4%B8%BB%E9%A2%98%E6%97%B6%E7%A6%81%E6%AD%A2%E7%94%A8-firefox-%E7%9A%84%E5%A4%9C%E9%97%B4%E6%A8%A1%E5%BC%8F/",[448],"CSL的博客","。",{"title":62,"searchDepth":65,"depth":65,"links":2074},[],{"title":2076,"date":2077,"path":2078,"tags":2020,"body":2079},"记一次在Gitlab部署Jekyll博客时遇到的jekyll-github-metadata报错问题","2021-04-16","/2021/04/16/fuck-jekyll-github-metadata-on-gitlab",{"type":11,"value":2080,"toc":2150},[2081,2084,2087,2092,2095,2101,2110,2135,2145],[17,2082,2083],{},"我的博客是挂在GitlabPages上的，在为博客更换主题的时候遇到了一点点小麻烦。",[17,2085,2086],{},"报错如图：",[17,2088,2089],{},[393,2090],{"alt":62,"src":2091},"https://static.031130.xyz/uploads/2024/08/12/62f3caf233039.webp",[17,2093,2094],{},"当然，我这边也会附上详细的报错日志，以便后人能够通过关键词搜索到。",[53,2096,2099],{"className":2097,"code":2098,"language":58},[56],"Configuration file: /builds/zhullyb/test/_config.yml\n            Source: /builds/zhullyb/test\n       Destination: public\n Incremental build: disabled. Enable with --incremental\n      Generating... \n       Jekyll Feed: Generating feed for posts\n   GitHub Metadata: No GitHub API authentication could be found. Some fields may be missing or have incorrect data.\n   GitHub Metadata: Error processing value 'url':\n             ERROR: YOUR SITE COULD NOT BE BUILT:\n                    ------------------------------------\n                    No repo name found. Specify using PAGES_REPO_NWO environment variables, 'repository' in your configuration, or set up an 'origin' git remote pointing to your github.com repository.\nCleaning up file based variables 00:01\nERROR: Job failed: exit code 1\n",[60,2100,2098],{"__ignoreMap":62},[17,2102,2103,2104,2109],{},"经过了一番瞎折腾以后，我依然没有解决问题，而每次push都要等待gitlab的ci构建两三分钟，实在磨不动的我去看了",[444,2105,2108],{"href":2106,"rel":2107},"https://github.com/jekyll/github-metadata",[448],"jekyll-github-metadata","的README，结合上文的报错，我一下子就看懂了。",[17,2111,2112,2114,2115,2118,2119,2118,2122,2118,2125,847,2128,2131,2132],{},[60,2113,2108],{},"可以通过github中的信息自动为jekyll提供",[60,2116,2117],{},"site.github","、",[60,2120,2121],{},"site.title",[60,2123,2124],{},"site.description",[60,2126,2127],{},"site.url",[60,2129,2130],{},"site.baseurl","。而由于我们在用的是Gitlab，所以jekyll-github-metadata就无法获取到这些信息，需要我们手动指定。报错中缺少的就是",[60,2133,2134],{},"url",[17,2136,2137,2138,2141,2142,2144],{},"于是打开",[60,2139,2140],{},"_config.yml","，把",[60,2143,2134],{},"给补上，顺便把别的变量一同加上，如图：",[17,2146,2147],{},[393,2148],{"alt":62,"src":2149},"https://static.031130.xyz/uploads/2024/08/12/62f3caf51bdb5.webp",{"title":62,"searchDepth":65,"depth":65,"links":2151},[],{"title":2153,"date":2077,"path":2154,"tags":2155,"body":2156},"我在Archlinux上的常用软件","/2021/04/16/the-software-i-use-on-archlinux",[2020,434],{"type":11,"value":2157,"toc":2199},[2158,2166,2169,2172,2175,2178,2181,2184,2187,2190,2193,2196],[14,2159,2160,2163],{},[17,2161,2162],{},"最近基本固定了在Archlinux上的常用软件，也供各位参考一下。",[17,2164,2165],{},"我是KDE用户，所以KDE家的软件会用得比较多。",[17,2167,2168],{},"浏览器：Firefox，Chromium备用（主要是使用chromium的网页翻译功能，还有就是打开一些对Firefox不太友好的网站）",[17,2170,2171],{},"下载器：curl，wget，motrix\t根据不同使用场景更换下载器",[17,2173,2174],{},"终端：konsole",[17,2176,2177],{},"输入法：fcitx5-chinese-addons",[17,2179,2180],{},"即时通讯：telegram，deepin-wine-tim，deepin-wine-wechat，electron-qq，wechat-uos，linuxqq",[17,2182,2183],{},"播放器：vlc",[17,2185,2186],{},"编辑器：nano，kate，visual-studio-code-bin，typora，wps",[17,2188,2189],{},"图形类：pinta，drawio-desktop-bin，imagemagick",[17,2191,2192],{},"文件管理器：dolphin",[17,2194,2195],{},"文件传输：sftp（命令行里的），filezilla",[17,2197,2198],{},"系统、网络工具：latte-dock-git，v2raya，htop，gtop",{"title":62,"searchDepth":65,"depth":65,"links":2200},[],127,1761695681529]