[{"data":1,"prerenderedAt":2187},["ShallowReactive",2],{"randomIndex/page/11/":3,"index-page-11":4,"posts-total":2186},22,[5,431,794,1527,1635,1741,1883,2001,2060,2137],{"title":6,"date":7,"path":8,"tags":9,"body":10},"下载一份openharmony的源码","2021-06-06 16:47:34","/2021/06/06/download-openharmony-source-code",null,{"type":11,"value":12,"toc":428},"minimark",[13,20,23,36,52,63,72,213,220,232,239,251,258,280,290,297,309,319,322,328,332,335,341,348,371,377,384,387,393,400,406,412,418,424],[14,15,16],"blockquote",{},[17,18,19],"p",{},"不知道为什么，总是有人告诉我鸿蒙已经开源了，不信可以自己去看源码balabala，其实鸿蒙的手机端目前为止依然没有开源，或者说没有完整完整开源。本文我将介绍如何拉取一份openharmony开源的源码。",[17,21,22],{},"首先需要准备以下东西",[24,25,26,30,33],"ul",{},[27,28,29],"li",{},"一台装有类unix环境的电脑（wsl大概也行）",[27,31,32],{},"6G磁盘剩余空间",[27,34,35],{},"互联网（如果使用手机流量的话大概是1.5G）",[37,38,40,47],"ol",{"start":39},0,[27,41,42,46],{},[43,44,45],"h4",{"id":45},"安装git","没什么好说的，不再赘述。",[27,48,49],{},[43,50,51],{"id":51},"设置git用户名和邮箱",[53,54,59],"pre",{"className":55,"code":57,"language":58},[56],"language-text","git config --global user.email \"you@example.com\"\ngit config --global user.name \"Your Name\"\n","text",[60,61,57],"code",{"__ignoreMap":62},"",[37,64,66],{"start":65},2,[27,67,68],{},[43,69,71],{"id":70},"下载repo这个大多数发行版自己都有打包但是都比较滞后不如直接下载最新版的二进制文件设置好path变量直接用","下载repo（这个大多数发行版自己都有打包，但是都比较滞后，不如直接下载最新版的二进制文件设置好path变量直接用）",[53,73,77],{"className":74,"code":75,"language":76,"meta":62,"style":62},"language-bash shiki shiki-themes one-light one-dark-pro","mkdir -p ~/bin\ncurl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo\nchmod a+x ~/bin/repo\n\ncat >> ~/.bashrc \u003C\u003CEOF\n\n# set PATH so it includes user's private bin if it exists\nif [ -d \"\\$HOME/bin\" ] ; then\n    PATH=\"\\$HOME/bin:\\$PATH\"\nfi\nEOF\n\nsource ~/.bashrc\n","bash",[60,78,79,96,111,123,130,148,153,159,172,188,194,199,204],{"__ignoreMap":62},[80,81,84,88,92],"span",{"class":82,"line":83},"line",1,[80,85,87],{"class":86},"sAdtL","mkdir",[80,89,91],{"class":90},"sAGMh"," -p",[80,93,95],{"class":94},"sDhpE"," ~/bin\n",[80,97,98,101,104,108],{"class":82,"line":65},[80,99,100],{"class":86},"curl",[80,102,103],{"class":94}," https://storage.googleapis.com/git-repo-downloads/repo",[80,105,107],{"class":106},"s5ixo"," > ",[80,109,110],{"class":94},"~/bin/repo\n",[80,112,114,117,120],{"class":82,"line":113},3,[80,115,116],{"class":86},"chmod",[80,118,119],{"class":94}," a+x",[80,121,122],{"class":94}," ~/bin/repo\n",[80,124,126],{"class":82,"line":125},4,[80,127,129],{"emptyLinePlaceholder":128},true,"\n",[80,131,133,136,139,142,145],{"class":82,"line":132},5,[80,134,135],{"class":86},"cat",[80,137,138],{"class":106}," >> ",[80,140,141],{"class":94},"~/.bashrc",[80,143,144],{"class":106}," \u003C\u003C",[80,146,147],{"class":106},"EOF\n",[80,149,151],{"class":82,"line":150},6,[80,152,129],{"emptyLinePlaceholder":128},[80,154,156],{"class":82,"line":155},7,[80,157,158],{"class":94},"# set PATH so it includes user's private bin if it exists\n",[80,160,162,165,169],{"class":82,"line":161},8,[80,163,164],{"class":94},"if [ -d \"",[80,166,168],{"class":167},"s_Sar","\\$",[80,170,171],{"class":94},"HOME/bin\" ] ; then\n",[80,173,175,178,180,183,185],{"class":82,"line":174},9,[80,176,177],{"class":94},"    PATH=\"",[80,179,168],{"class":167},[80,181,182],{"class":94},"HOME/bin:",[80,184,168],{"class":167},[80,186,187],{"class":94},"PATH\"\n",[80,189,191],{"class":82,"line":190},10,[80,192,193],{"class":94},"fi\n",[80,195,197],{"class":82,"line":196},11,[80,198,147],{"class":106},[80,200,202],{"class":82,"line":201},12,[80,203,129],{"emptyLinePlaceholder":128},[80,205,207,210],{"class":82,"line":206},13,[80,208,209],{"class":167},"source",[80,211,212],{"class":94}," ~/.bashrc\n",[37,214,215],{"start":113},[27,216,217],{},[43,218,219],{"id":219},"新建一个文件夹以同步源码",[53,221,223],{"className":74,"code":222,"language":76,"meta":62,"style":62},"mkdir openharmony\n",[60,224,225],{"__ignoreMap":62},[80,226,227,229],{"class":82,"line":83},[80,228,87],{"class":86},[80,230,231],{"class":94}," openharmony\n",[37,233,234],{"start":125},[27,235,236],{},[43,237,238],{"id":238},"进入这个文件夹",[53,240,242],{"className":74,"code":241,"language":76,"meta":62,"style":62},"cd openharmony\n",[60,243,244],{"__ignoreMap":62},[80,245,246,249],{"class":82,"line":83},[80,247,248],{"class":167},"cd",[80,250,231],{"class":94},[37,252,253],{"start":132},[27,254,255],{},[43,256,257],{"id":257},"初始化repo",[53,259,261],{"className":74,"code":260,"language":76,"meta":62,"style":62},"repo init -u https://gitee.com/openharmony/manifest.git --depth=1\n",[60,262,263],{"__ignoreMap":62},[80,264,265,268,271,274,277],{"class":82,"line":83},[80,266,267],{"class":86},"repo",[80,269,270],{"class":94}," init",[80,272,273],{"class":90}," -u",[80,275,276],{"class":94}," https://gitee.com/openharmony/manifest.git",[80,278,279],{"class":90}," --depth=1\n",[17,281,282,283,286,287,289],{},"​\t注:  ",[60,284,285],{},"--depth=1","是为了仅保留一层commit记录，防止过多的历史commit占用空间，如果你想保留历\t史commit，那可以把这里的",[60,288,285],{},"去掉。",[37,291,292],{"start":150},[27,293,294],{},[43,295,296],{"id":296},"使用repo正式开始同步源码",[53,298,300],{"className":74,"code":299,"language":76,"meta":62,"style":62},"repo sync\n",[60,301,302],{"__ignoreMap":62},[80,303,304,306],{"class":82,"line":83},[80,305,267],{"class":86},[80,307,308],{"class":94}," sync\n",[17,310,311,312,315,316],{},"repo在sync的时候其实可以加很多选项，可以通过",[60,313,314],{},"repo help","自行研究，我自己常用的是",[60,317,318],{},"repo sync  --force-sync --current-branch --no-tags --no-clone-bundle --optimized-fetch --prune -j$(nproc --all) -f1",[17,320,321],{},"看到以下提示代表同步成功",[53,323,326],{"className":324,"code":325,"language":58},[56],"repo sync has finished successfully.\n",[60,327,325],{"__ignoreMap":62},[329,330,331],"h3",{"id":331},"后话",[17,333,334],{},"结果就当源码下载好并开始checkout后，出现了以下错误",[53,336,339],{"className":337,"code":338,"language":58},[56],"Garbage collecting: 100% (220/220), done in 1.204s\nUpdating files: 100% (35/35), done.\nUpdating files: 100% (27/27), done.\ngit-lfs filter-process --skip: line 1: git-lfs: command not found\nfatal: the remote end hung up unexpectedly\nerror.GitError: Cannot checkout device_hisilicon_modules: Cannot initialize work tree for device_hisilicon_modules\nerror: Cannot checkout device_hisilicon_modules\n",[60,340,338],{"__ignoreMap":62},[17,342,343,344,347],{},"看着error很容易可以发现是我的系统没有",[60,345,346],{},"git-lfs","的原因，看样子openharmony使用了git-lfs来储存了某个大文件。",[53,349,351],{"className":74,"code":350,"language":76,"meta":62,"style":62},"sudo pacman -S git-lfs  #别的发行版请自行查找相关安装方法\n",[60,352,353],{"__ignoreMap":62},[80,354,355,358,361,364,367],{"class":82,"line":83},[80,356,357],{"class":86},"sudo",[80,359,360],{"class":94}," pacman",[80,362,363],{"class":90}," -S",[80,365,366],{"class":94}," git-lfs",[80,368,370],{"class":369},"sW2Sy","  #别的发行版请自行查找相关安装方法\n",[17,372,373,374,376],{},"于是乎，安装好",[60,375,346],{},"重新sync源码",[17,378,379,380,383],{},"oepnharmony目录下，",[60,381,382],{},".repo","文件夹内是你从git服务器上下载下来的原始数据，repo将在所有数据下载完成以后将他们自动checkout成代码。",[17,385,386],{},"源码结构是下面这个样子",[53,388,391],{"className":389,"code":390,"language":58},[56],".\n├── applications\n├── base\n├── build\n├── build.py -> build/lite/build.py\n├── build.sh -> build/build_scripts/build.sh\n├── developtools\n├── device\n├── docs\n├── domains\n├── drivers\n├── foundation\n├── .gn -> build/core/gn/dotfile.gn\n├── interface\n├── kernel\n├── prebuilts\n├── productdefine\n├── .repo\n├── test\n├── third_party\n├── utils\n└── vendor\n\n18 directories, 3 files\n",[60,392,390],{"__ignoreMap":62},[17,394,395],{},[396,397],"img",{"alt":398,"src":399},"这里是OpenHarmony包含.repo原始数据的全部大小","https://static.031130.xyz/uploads/2024/08/12/62f3cb1057a22.webp",[17,401,402],{},[396,403],{"alt":404,"src":405},"这里是OpenHarmony的.repo原始数据的大小","https://static.031130.xyz/uploads/2024/08/12/62f3cb13027fb.webp",[17,407,408],{},[409,410,411],"strong",{},"我提供个参考数据，AOSP源码不含.repo原始数据的大小是40G，就openharmony这个代码量，恐怕很难让我相信这是一个兼容安卓应用的系统的完整代码。",[17,413,414],{},[396,415],{"alt":416,"src":417},"这里是AOSP的.repo原始数据大小","https://static.031130.xyz/uploads/2024/08/12/62f3cb15ccbf1.webp",[17,419,420],{},[396,421],{"alt":422,"src":423},"这里是AOSP包含.repo原始数据的大小","https://static.031130.xyz/uploads/2024/08/12/62f3cb182333b.webp",[425,426,427],"style",{},"html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html pre.shiki code .s_Sar, html code.shiki .s_Sar{--shiki-default:#0184BC;--shiki-dark:#56B6C2}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sW2Sy, html code.shiki .sW2Sy{--shiki-default:#A0A1A7;--shiki-default-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic}",{"title":62,"searchDepth":65,"depth":65,"links":429},[430],{"id":331,"depth":113,"text":331},{"title":432,"date":433,"path":434,"tags":435,"body":439},"在Windows与Linux双系统下共享蓝牙鼠标","2021-05-30","/2021/05/30/share-xiaomi-bluetooth-mouse-on-both-windows-and-linux",[436,437,438],"Linux","Archlinux","Windows",{"type":11,"value":440,"toc":792},[441,460,463,476,482,488,491,502,508,511,517,522,525,645,651,654,660,707,710,782,789],[14,442,443,454,457],{},[17,444,445,446,453],{},"我自己使用的鼠标是一只",[447,448,452],"a",{"href":449,"rel":450},"https://www.mi.com/mouse",[451],"nofollow","小米的无线蓝牙双模鼠标","。但是由于我的USB接口不是很充裕，我平时还是蓝牙鼠标用的比较多。",[17,455,456],{},"但是，每当我在Windows和Archlinux上切换时，我不得不重新配对我的蓝牙鼠标。原因我在翻译Archwiki上关于蓝牙鼠标相关叙述时已经解释得非常清楚了，我摘在下面：",[17,458,459],{},"“首先，计算机保存蓝牙设备的 MAC 地址和配对密钥；然后，蓝牙设备保存计算机的 MAC 地址和配对密钥。这两步通常不会有问题，不过设备蓝牙端口的 MAC 地址在 Linux 和 Windows 上都是相同的 (这在硬件层面上就设定好了)。然而，当在 Windows 或 Linux  中重新配对设备时，它会生成一个新密钥，覆盖了蓝牙设备之前保存的密钥，即与 Windows 配对产生的密钥会覆盖原先与 Linux  配对的密钥，反之亦然。“",[17,461,462],{},"先在Linux上连接蓝牙鼠标，再重启到Windows重新配对蓝牙蓝牙鼠标。",[17,464,465,466,471,472,475],{},"到",[447,467,470],{"href":468,"rel":469},"https://docs.microsoft.com/en-us/sysinternals/downloads/psexec",[451],"微软官网","下载",[60,473,474],{},"PsExec.zip","，解压后，记住你所解压的路径。",[17,477,478,479],{},"在Windows中，使用管理员权限打开",[60,480,481],{},"cmd.exe",[17,483,484],{},[396,485],{"alt":486,"src":487},"在Windows下使用管理员权限打开cmd","https://static.031130.xyz/uploads/2024/08/12/62f3cb081565a.webp",[17,489,490],{},"cd到PsExec解压目录，使用如下命令将我们所需要的蓝牙密钥信息保存到C盘根目录下。",[53,492,496],{"className":493,"code":494,"language":495,"meta":62,"style":62},"language-cmd shiki shiki-themes one-light one-dark-pro","psexec.exe -s -i regedit /e C:\\BTKeys.reg HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Services\\BTHPORT\\Parameters\\Keys\n","cmd",[60,497,498],{"__ignoreMap":62},[80,499,500],{"class":82,"line":83},[80,501,494],{},[17,503,504],{},[396,505],{"alt":506,"src":507},"使用psexec获取蓝牙信息","https://static.031130.xyz/uploads/2024/08/12/62f3cb0aae88f.webp",[17,509,510],{},"根目录的BTkeys.reg可以直接用记事本打开，内容大概是下面这个样子",[17,512,513],{},[396,514],{"alt":515,"src":516},"BTkeys.reg","https://static.031130.xyz/uploads/2024/08/12/62f3cb0d9e04f.webp",[14,518,519],{},[17,520,521],{},"为了方便后面的解说，我用各种颜色标注了起来。",[17,523,524],{},"在Linux下获取su权限以后，我们需要将Linux下随机分配给鼠标的蓝牙地址改成在Windows上获取的那个地址。上图中「红部分」划出来的就是Windows下获取的地址。",[53,526,528],{"className":74,"code":527,"language":76,"meta":62,"style":62},"[zhullyb@Archlinux ~]$ su\nPassword: \n[root@Archlinux zhullyb]# cd /var/lib/bluetooth/E0\\:94\\:67\\:74\\:0D\\:5F/\n[root@Archlinux E0:94:67:74:0D:5F]# ls\nC6:2A:1B:33:2E:71  cache  settings\n[root@Archlinux E0:94:67:74:0D:5F]# mv C6\\:2A\\:1B\\:33\\:2E\\:71/ C4\\:F6\\:B3\\:2C\\:BD\\:7E\n",[60,529,530,535,543,574,579,590],{"__ignoreMap":62},[80,531,532],{"class":82,"line":83},[80,533,534],{"class":106},"[zhullyb@Archlinux ~]$ su\n",[80,536,537,540],{"class":82,"line":65},[80,538,539],{"class":86},"Password:",[80,541,542],{"class":106}," \n",[80,544,545,548,551,554,556,559,561,564,566,569,571],{"class":82,"line":113},[80,546,547],{"class":106},"[root@Archlinux zhullyb]# cd /var/lib/bluetooth/E0",[80,549,550],{"class":167},"\\:",[80,552,553],{"class":106},"94",[80,555,550],{"class":167},[80,557,558],{"class":106},"67",[80,560,550],{"class":167},[80,562,563],{"class":106},"74",[80,565,550],{"class":167},[80,567,568],{"class":106},"0D",[80,570,550],{"class":167},[80,572,573],{"class":106},"5F/\n",[80,575,576],{"class":82,"line":125},[80,577,578],{"class":106},"[root@Archlinux E0:94:67:74:0D:5F]# ls\n",[80,580,581,584,587],{"class":82,"line":132},[80,582,583],{"class":86},"C6:2A:1B:33:2E:71",[80,585,586],{"class":94},"  cache",[80,588,589],{"class":94},"  settings\n",[80,591,592,595,597,600,602,605,607,610,612,615,617,620,622,625,627,630,632,635,637,640,642],{"class":82,"line":150},[80,593,594],{"class":106},"[root@Archlinux E0:94:67:74:0D:5F]# mv C6",[80,596,550],{"class":167},[80,598,599],{"class":106},"2A",[80,601,550],{"class":167},[80,603,604],{"class":106},"1B",[80,606,550],{"class":167},[80,608,609],{"class":106},"33",[80,611,550],{"class":167},[80,613,614],{"class":106},"2E",[80,616,550],{"class":167},[80,618,619],{"class":106},"71/ C4",[80,621,550],{"class":167},[80,623,624],{"class":106},"F6",[80,626,550],{"class":167},[80,628,629],{"class":106},"B3",[80,631,550],{"class":167},[80,633,634],{"class":106},"2C",[80,636,550],{"class":167},[80,638,639],{"class":106},"BD",[80,641,550],{"class":167},[80,643,644],{"class":106},"7E\n",[17,646,647,648],{},"再编辑",[60,649,650],{},"/var/lib/bluetooth/\u003C本机蓝牙地址>/\u003C鼠标蓝牙地址>/info",[17,652,653],{},"原文件如下：",[53,655,658],{"className":656,"code":657,"language":58},[56],"[General]\nName=MiMouse\nAppearance=0x03c2\nAddressType=static\nSupportedTechnologies=LE;\nTrusted=true\nBlocked=false\nWakeAllowed=true\nServices=00001530-1212-efde-1523-785feabcd123;00001800-0000-1000-8000-00805f9b34fb;00001801-0000-1000-8000-00805f9b34fb;0000180a-0000-1000-8000-00805f9b34fb;0000180f-0000-1000-8000-00805f9b34fb;00001812-0000-1000-8000-00805f9b34fb;\n\n[IdentityResolvingKey]\nKey=067764BF59A7531E978AFDC6BB5EC8E1\n\n[LongTermKey]\nKey=E3C49B4F3256018192942EB0CDDEE6A3\nAuthenticated=0\nEncSize=16\nEDiv=28209\nRand=15970850852728832717\n\n[DeviceID]\nSource=2\nVendor=10007\nProduct=64\nVersion=40\n\n[ConnectionParameters]\nMinInterval=6\nMaxInterval=9\nLatency=100\nTimeout=600\n",[60,659,657],{"__ignoreMap":62},[24,661,662,677,697],{},[27,663,664,665,668,669,672,673,676],{},"「黄色部分」",[60,666,667],{},"LTK"," 对应 ",[60,670,671],{},"LongTermKey"," 下的 ",[60,674,675],{},"Key","，把小写转换成大写并删去逗号即可。",[27,678,679,680,668,683,686,687,690,691,690,694],{},"「绿色部分」",[60,681,682],{},"ERand",[60,684,685],{},"Rand","。这里比较特殊的是，我们必须先将 Windows 中的值倒转过来再转换为 10 进制。即",[60,688,689],{},"c2,83,7f,8f,7c,76,b4,02","->",[60,692,693],{},"02,b4,76,7c,8f,7f,83,c2",[60,695,696],{},"194910961239294914",[27,698,699,700,668,703,706],{},"「蓝色部分」",[60,701,702],{},"EDIV",[60,704,705],{},"EDiv","。把 16 进制转换成 10 进制即可，这里就不用倒转了。",[17,708,709],{},"具体的转换方法我不再赘述，我把我的转换过程放在下面，我相信各位读者能够看懂。",[53,711,713],{"className":74,"code":712,"language":76,"meta":62,"style":62},"[zhullyb@Archlinux ~]$ echo 'e3,c0,b2,8e,64,2b,12,16,d8,c2,d7,d4,59,55,92,cd' | tr a-z A-Z | sed 's/[[:punct:]]//g'\nE3C0B28E642B1216D8C2D7D4595592CD\n[zhullyb@Archlinux ~]$ echo $((16#02B4767C8F7F83C2))    #这里我是手动倒叙的\n194910961239294914\n[zhullyb@Archlinux ~]$ echo $((16#000055a3))\n21923\n",[60,714,715,743,748,762,767,777],{"__ignoreMap":62},[80,716,717,720,723,726,729,732,735,737,740],{"class":82,"line":83},[80,718,719],{"class":106},"[zhullyb@Archlinux ~]$ echo ",[80,721,722],{"class":94},"'e3,c0,b2,8e,64,2b,12,16,d8,c2,d7,d4,59,55,92,cd'",[80,724,725],{"class":106}," | ",[80,727,728],{"class":86},"tr",[80,730,731],{"class":94}," a-z",[80,733,734],{"class":94}," A-Z",[80,736,725],{"class":106},[80,738,739],{"class":86},"sed",[80,741,742],{"class":94}," 's/[[:punct:]]//g'\n",[80,744,745],{"class":82,"line":65},[80,746,747],{"class":86},"E3C0B28E642B1216D8C2D7D4595592CD\n",[80,749,750,753,756,759],{"class":82,"line":113},[80,751,752],{"class":106},"[zhullyb@Archlinux ~]$ echo $((",[80,754,755],{"class":86},"16#02B4767C8F7F83C2",[80,757,758],{"class":106},"))    ",[80,760,761],{"class":369},"#这里我是手动倒叙的\n",[80,763,764],{"class":82,"line":125},[80,765,766],{"class":86},"194910961239294914\n",[80,768,769,771,774],{"class":82,"line":132},[80,770,752],{"class":106},[80,772,773],{"class":86},"16#000055a3",[80,775,776],{"class":106},"))\n",[80,778,779],{"class":82,"line":150},[80,780,781],{"class":86},"21923\n",[17,783,784,785,788],{},"做完这些操作以后，",[60,786,787],{},"sudo systemctl start bluetooth","即可",[425,790,791],{},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .s_Sar, html code.shiki .s_Sar{--shiki-default:#0184BC;--shiki-dark:#56B6C2}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .sW2Sy, html code.shiki .sW2Sy{--shiki-default:#A0A1A7;--shiki-default-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic}",{"title":62,"searchDepth":65,"depth":65,"links":793},[],{"title":795,"date":796,"path":797,"tags":437,"body":798},"选择最新的Archlinux镜像源","2021-05-29","/2021/05/29/choose-the-last-archlinux-mirror-site-in-china",{"type":11,"value":799,"toc":1523},[800,804,807,816,819,825,836,842,1410,1413,1419,1422,1426,1434,1437,1498,1505,1511,1517,1520],[329,801,803],{"id":802},"找到最新的archlinux镜像源","找到最新的Archlinux镜像源",[17,805,806],{},"我是testing+kde-unstable用户，平均每天更新4次，对于我而言，选择最新的Archlinux镜像是非常重要的。",[17,808,809,810,815],{},"Archlinux的主源并不开放给个人用户使用，仅开放给",[447,811,814],{"href":812,"rel":813},"https://archlinux.org/mirrors/tier/1/",[451],"一级镜像站","进行同步，因此我们需要手动寻找国内较新的镜像站。（理论上来说一级镜像站应该比二级镜像站更新，但是有些一级镜像站的同步频率并不高，同步延迟可能会比某些二级镜像站还要高）",[17,817,818],{},"一个archlinux的镜像目录大概是长下面这个样子",[53,820,823],{"className":821,"code":822,"language":58},[56],"archlinux/\n├── community\n├── community-staging\n├── community-testing\n├── core\n├── extra\n├── gnome-unstable\n├── images\n├── iso\n├── kde-unstable\n├── lastsync\n├── lastupdate\n├── multilib\n├── multilib-staging\n├── multilib-testing\n├── pool\n├── staging\n└── testing\n",[60,824,822],{"__ignoreMap":62},[17,826,827,828,831,832,835],{},"其中的",[60,829,830],{},"lastsync","和",[60,833,834],{},"lastupdate","用unix时间戳记录着上一次同步时间和镜像的上一次变更时间。",[17,837,838,839,841],{},"因此，我们只需要对比各个镜像站的",[60,840,830],{},"谁比较新就行了，我写了如下的辣鸡脚本",[53,843,845],{"className":74,"code":844,"language":76,"meta":62,"style":62},"#!/bin/bash\n\ntuna=$(curl -s https://mirrors.tuna.tsinghua.edu.cn/archlinux/lastsync)\nbfsu=$(curl -s https://mirrors.bfsu.edu.cn/archlinux/lastsync)\nsjtug=$(curl -s https://mirror.sjtu.edu.cn/archlinux/lastsync)\naliyun=$(curl -s https://mirrors.aliyun.com/archlinux/lastsync)\nustc=$(curl -s https://mirrors.ustc.edu.cn/archlinux/lastsync)\nzju=$(curl -s https://mirrors.zju.edu.cn/archlinux/lastsync)\ncqu=$(curl -s https://mirrors.cqu.edu.cn/archlinux/lastsync)\nlzu=$(curl -s https://mirror.lzu.edu.cn/archlinux/lastsync)\nneusoft=$(curl -s https://mirrors.neusoft.edu.cn/archlinux/lastsync)\ndgut=$(curl -s https://mirrors.dgut.edu.cn/archlinux/lastsync)\nnetease=$(curl -s https://mirrors.163.com/archlinux/lastsync)\ntencent=$(curl -s https://mirrors.tencent.com/archlinux/lastsync)\nhit=$(curl -s https://mirrors.hit.edu.cn/archlinux/lastsync)\nhuaweicloud=$(curl -s https://mirrors.huaweicloud.com/archlinux/lastsync)\nsohu=$(curl -s https://mirrors.sohu.com/archlinux/lastsync)\nopentuna=$(curl -s https://opentuna.cn/archlinux/lastsync)\npku=$(curl -s https://mirrors.pku.edu.cn/archlinux/lastsync)\nnju=$(curl -s https://mirrors.nju.edu.cn/archlinux/lastsync)\nnjupt=$(curl -s https://mirrors.nju.edu.cn/archlinux/lastsync)\n\necho \"\"\"\n$tuna        #tuna\n$bfsu        #bfsu\n$sjtug       #sjtug\n$aliyun      #aliyun\n$ustc        #ustc\n$zju         #zju\n$cqu         #cqu\n$lzu         #lzu\n$neusoft     #neusoft\n$dgut        #dgut\n$netease     #netease\n$tencent     #tencent\n$hit         #hit\n$huaweicloud #huaweicloud\n$sohu        #sohu\n$opentuna    #opentuna\n$pku         #pku\n$nju         #nju\n$njupt       #njupt\n\"\"\"  | sort -r\n",[60,846,847,852,856,880,898,916,934,952,970,988,1006,1024,1042,1060,1079,1098,1117,1136,1155,1174,1193,1211,1215,1224,1233,1242,1251,1260,1269,1278,1287,1296,1305,1314,1323,1332,1341,1350,1359,1368,1377,1386,1395],{"__ignoreMap":62},[80,848,849],{"class":82,"line":83},[80,850,851],{"class":369},"#!/bin/bash\n",[80,853,854],{"class":82,"line":65},[80,855,129],{"emptyLinePlaceholder":128},[80,857,858,862,866,869,871,874,877],{"class":82,"line":113},[80,859,861],{"class":860},"sJa8x","tuna",[80,863,865],{"class":864},"sknuh","=",[80,867,868],{"class":106},"$(",[80,870,100],{"class":86},[80,872,873],{"class":90}," -s",[80,875,876],{"class":94}," https://mirrors.tuna.tsinghua.edu.cn/archlinux/lastsync",[80,878,879],{"class":106},")\n",[80,881,882,885,887,889,891,893,896],{"class":82,"line":125},[80,883,884],{"class":860},"bfsu",[80,886,865],{"class":864},[80,888,868],{"class":106},[80,890,100],{"class":86},[80,892,873],{"class":90},[80,894,895],{"class":94}," https://mirrors.bfsu.edu.cn/archlinux/lastsync",[80,897,879],{"class":106},[80,899,900,903,905,907,909,911,914],{"class":82,"line":132},[80,901,902],{"class":860},"sjtug",[80,904,865],{"class":864},[80,906,868],{"class":106},[80,908,100],{"class":86},[80,910,873],{"class":90},[80,912,913],{"class":94}," https://mirror.sjtu.edu.cn/archlinux/lastsync",[80,915,879],{"class":106},[80,917,918,921,923,925,927,929,932],{"class":82,"line":150},[80,919,920],{"class":860},"aliyun",[80,922,865],{"class":864},[80,924,868],{"class":106},[80,926,100],{"class":86},[80,928,873],{"class":90},[80,930,931],{"class":94}," https://mirrors.aliyun.com/archlinux/lastsync",[80,933,879],{"class":106},[80,935,936,939,941,943,945,947,950],{"class":82,"line":155},[80,937,938],{"class":860},"ustc",[80,940,865],{"class":864},[80,942,868],{"class":106},[80,944,100],{"class":86},[80,946,873],{"class":90},[80,948,949],{"class":94}," https://mirrors.ustc.edu.cn/archlinux/lastsync",[80,951,879],{"class":106},[80,953,954,957,959,961,963,965,968],{"class":82,"line":161},[80,955,956],{"class":860},"zju",[80,958,865],{"class":864},[80,960,868],{"class":106},[80,962,100],{"class":86},[80,964,873],{"class":90},[80,966,967],{"class":94}," https://mirrors.zju.edu.cn/archlinux/lastsync",[80,969,879],{"class":106},[80,971,972,975,977,979,981,983,986],{"class":82,"line":174},[80,973,974],{"class":860},"cqu",[80,976,865],{"class":864},[80,978,868],{"class":106},[80,980,100],{"class":86},[80,982,873],{"class":90},[80,984,985],{"class":94}," https://mirrors.cqu.edu.cn/archlinux/lastsync",[80,987,879],{"class":106},[80,989,990,993,995,997,999,1001,1004],{"class":82,"line":190},[80,991,992],{"class":860},"lzu",[80,994,865],{"class":864},[80,996,868],{"class":106},[80,998,100],{"class":86},[80,1000,873],{"class":90},[80,1002,1003],{"class":94}," https://mirror.lzu.edu.cn/archlinux/lastsync",[80,1005,879],{"class":106},[80,1007,1008,1011,1013,1015,1017,1019,1022],{"class":82,"line":196},[80,1009,1010],{"class":860},"neusoft",[80,1012,865],{"class":864},[80,1014,868],{"class":106},[80,1016,100],{"class":86},[80,1018,873],{"class":90},[80,1020,1021],{"class":94}," https://mirrors.neusoft.edu.cn/archlinux/lastsync",[80,1023,879],{"class":106},[80,1025,1026,1029,1031,1033,1035,1037,1040],{"class":82,"line":201},[80,1027,1028],{"class":860},"dgut",[80,1030,865],{"class":864},[80,1032,868],{"class":106},[80,1034,100],{"class":86},[80,1036,873],{"class":90},[80,1038,1039],{"class":94}," https://mirrors.dgut.edu.cn/archlinux/lastsync",[80,1041,879],{"class":106},[80,1043,1044,1047,1049,1051,1053,1055,1058],{"class":82,"line":206},[80,1045,1046],{"class":860},"netease",[80,1048,865],{"class":864},[80,1050,868],{"class":106},[80,1052,100],{"class":86},[80,1054,873],{"class":90},[80,1056,1057],{"class":94}," https://mirrors.163.com/archlinux/lastsync",[80,1059,879],{"class":106},[80,1061,1063,1066,1068,1070,1072,1074,1077],{"class":82,"line":1062},14,[80,1064,1065],{"class":860},"tencent",[80,1067,865],{"class":864},[80,1069,868],{"class":106},[80,1071,100],{"class":86},[80,1073,873],{"class":90},[80,1075,1076],{"class":94}," https://mirrors.tencent.com/archlinux/lastsync",[80,1078,879],{"class":106},[80,1080,1082,1085,1087,1089,1091,1093,1096],{"class":82,"line":1081},15,[80,1083,1084],{"class":860},"hit",[80,1086,865],{"class":864},[80,1088,868],{"class":106},[80,1090,100],{"class":86},[80,1092,873],{"class":90},[80,1094,1095],{"class":94}," https://mirrors.hit.edu.cn/archlinux/lastsync",[80,1097,879],{"class":106},[80,1099,1101,1104,1106,1108,1110,1112,1115],{"class":82,"line":1100},16,[80,1102,1103],{"class":860},"huaweicloud",[80,1105,865],{"class":864},[80,1107,868],{"class":106},[80,1109,100],{"class":86},[80,1111,873],{"class":90},[80,1113,1114],{"class":94}," https://mirrors.huaweicloud.com/archlinux/lastsync",[80,1116,879],{"class":106},[80,1118,1120,1123,1125,1127,1129,1131,1134],{"class":82,"line":1119},17,[80,1121,1122],{"class":860},"sohu",[80,1124,865],{"class":864},[80,1126,868],{"class":106},[80,1128,100],{"class":86},[80,1130,873],{"class":90},[80,1132,1133],{"class":94}," https://mirrors.sohu.com/archlinux/lastsync",[80,1135,879],{"class":106},[80,1137,1139,1142,1144,1146,1148,1150,1153],{"class":82,"line":1138},18,[80,1140,1141],{"class":860},"opentuna",[80,1143,865],{"class":864},[80,1145,868],{"class":106},[80,1147,100],{"class":86},[80,1149,873],{"class":90},[80,1151,1152],{"class":94}," https://opentuna.cn/archlinux/lastsync",[80,1154,879],{"class":106},[80,1156,1158,1161,1163,1165,1167,1169,1172],{"class":82,"line":1157},19,[80,1159,1160],{"class":860},"pku",[80,1162,865],{"class":864},[80,1164,868],{"class":106},[80,1166,100],{"class":86},[80,1168,873],{"class":90},[80,1170,1171],{"class":94}," https://mirrors.pku.edu.cn/archlinux/lastsync",[80,1173,879],{"class":106},[80,1175,1177,1180,1182,1184,1186,1188,1191],{"class":82,"line":1176},20,[80,1178,1179],{"class":860},"nju",[80,1181,865],{"class":864},[80,1183,868],{"class":106},[80,1185,100],{"class":86},[80,1187,873],{"class":90},[80,1189,1190],{"class":94}," https://mirrors.nju.edu.cn/archlinux/lastsync",[80,1192,879],{"class":106},[80,1194,1196,1199,1201,1203,1205,1207,1209],{"class":82,"line":1195},21,[80,1197,1198],{"class":860},"njupt",[80,1200,865],{"class":864},[80,1202,868],{"class":106},[80,1204,100],{"class":86},[80,1206,873],{"class":90},[80,1208,1190],{"class":94},[80,1210,879],{"class":106},[80,1212,1213],{"class":82,"line":3},[80,1214,129],{"emptyLinePlaceholder":128},[80,1216,1218,1221],{"class":82,"line":1217},23,[80,1219,1220],{"class":167},"echo",[80,1222,1223],{"class":94}," \"\"\"\n",[80,1225,1227,1230],{"class":82,"line":1226},24,[80,1228,1229],{"class":860},"$tuna",[80,1231,1232],{"class":94},"        #tuna\n",[80,1234,1236,1239],{"class":82,"line":1235},25,[80,1237,1238],{"class":860},"$bfsu",[80,1240,1241],{"class":94},"        #bfsu\n",[80,1243,1245,1248],{"class":82,"line":1244},26,[80,1246,1247],{"class":860},"$sjtug",[80,1249,1250],{"class":94},"       #sjtug\n",[80,1252,1254,1257],{"class":82,"line":1253},27,[80,1255,1256],{"class":860},"$aliyun",[80,1258,1259],{"class":94},"      #aliyun\n",[80,1261,1263,1266],{"class":82,"line":1262},28,[80,1264,1265],{"class":860},"$ustc",[80,1267,1268],{"class":94},"        #ustc\n",[80,1270,1272,1275],{"class":82,"line":1271},29,[80,1273,1274],{"class":860},"$zju",[80,1276,1277],{"class":94},"         #zju\n",[80,1279,1281,1284],{"class":82,"line":1280},30,[80,1282,1283],{"class":860},"$cqu",[80,1285,1286],{"class":94},"         #cqu\n",[80,1288,1290,1293],{"class":82,"line":1289},31,[80,1291,1292],{"class":860},"$lzu",[80,1294,1295],{"class":94},"         #lzu\n",[80,1297,1299,1302],{"class":82,"line":1298},32,[80,1300,1301],{"class":860},"$neusoft",[80,1303,1304],{"class":94},"     #neusoft\n",[80,1306,1308,1311],{"class":82,"line":1307},33,[80,1309,1310],{"class":860},"$dgut",[80,1312,1313],{"class":94},"        #dgut\n",[80,1315,1317,1320],{"class":82,"line":1316},34,[80,1318,1319],{"class":860},"$netease",[80,1321,1322],{"class":94},"     #netease\n",[80,1324,1326,1329],{"class":82,"line":1325},35,[80,1327,1328],{"class":860},"$tencent",[80,1330,1331],{"class":94},"     #tencent\n",[80,1333,1335,1338],{"class":82,"line":1334},36,[80,1336,1337],{"class":860},"$hit",[80,1339,1340],{"class":94},"         #hit\n",[80,1342,1344,1347],{"class":82,"line":1343},37,[80,1345,1346],{"class":860},"$huaweicloud",[80,1348,1349],{"class":94}," #huaweicloud\n",[80,1351,1353,1356],{"class":82,"line":1352},38,[80,1354,1355],{"class":860},"$sohu",[80,1357,1358],{"class":94},"        #sohu\n",[80,1360,1362,1365],{"class":82,"line":1361},39,[80,1363,1364],{"class":860},"$opentuna",[80,1366,1367],{"class":94},"    #opentuna\n",[80,1369,1371,1374],{"class":82,"line":1370},40,[80,1372,1373],{"class":860},"$pku",[80,1375,1376],{"class":94},"         #pku\n",[80,1378,1380,1383],{"class":82,"line":1379},41,[80,1381,1382],{"class":860},"$nju",[80,1384,1385],{"class":94},"         #nju\n",[80,1387,1389,1392],{"class":82,"line":1388},42,[80,1390,1391],{"class":860},"$njupt",[80,1393,1394],{"class":94},"       #njupt\n",[80,1396,1398,1401,1404,1407],{"class":82,"line":1397},43,[80,1399,1400],{"class":94},"\"\"\"",[80,1402,1403],{"class":106},"  | ",[80,1405,1406],{"class":86},"sort",[80,1408,1409],{"class":90}," -r\n",[17,1411,1412],{},"其运行结果如下",[53,1414,1417],{"className":1415,"code":1416,"language":58},[56],"1622248120     #neusoft\n1622247879        #dgut\n1622247698         #hit\n1622246042         #zju\n1622246042        #tuna\n1622246042        #bfsu\n1622242426       #sjtug\n1622242426       #njupt\n1622242426         #nju\n1622240702        #ustc\n1622240522         #cqu\n1622238783     #netease\n1622235120         #lzu\n1622232241 #huaweicloud\n1622230871     #tencent\n1622217845      #aliyun\n1622217001         #pku\n1622203750        #sohu\n1622166379    #opentuna\n",[60,1418,1416],{"__ignoreMap":62},[17,1420,1421],{},"通过不同时刻的多次测试可以看出，国内同步频率最高的是东软（neusoft）的镜像。顺手一查，没错，是个一级镜像站。通过unix时间戳得知，东软的archlinux镜像几乎是每分钟同步一次，恐怖如斯。。。",[1423,1424,1425],"h2",{"id":1425},"获得更好的下载速度",[17,1427,1428,1429],{},"我们已经得知东软是国内同步频率最高的Archlinux镜像站了，但是我用东软镜像站的下载速度并不太好看。此时，我们就要搬出依云大佬的神器——",[447,1430,1433],{"href":1431,"rel":1432},"https://blog.lilydjwg.me/2020/10/29/pacsync.215578.html",[451],"pacsync",[17,1435,1436],{},"在root用户下使用如下命令装载pacysnc后",[53,1438,1440],{"className":74,"code":1439,"language":76,"meta":62,"style":62},"echo '#!/bin/bash -e\n\nunshare -m bash \u003C\u003C'EOF'\nmount --make-rprivate /\nfor f in /etc/pacman.d/*.sync; do\n  filename=\"${f%.*}\"\n  mount --bind \"$f\" \"$filename\"\ndone\npacman -Sy\nEOF' > /usr/bin/pacsync\n",[60,1441,1442,1449,1453,1458,1463,1468,1473,1478,1483,1488],{"__ignoreMap":62},[80,1443,1444,1446],{"class":82,"line":83},[80,1445,1220],{"class":167},[80,1447,1448],{"class":94}," '#!/bin/bash -e\n",[80,1450,1451],{"class":82,"line":65},[80,1452,129],{"emptyLinePlaceholder":128},[80,1454,1455],{"class":82,"line":113},[80,1456,1457],{"class":94},"unshare -m bash \u003C\u003C'EOF'\n",[80,1459,1460],{"class":82,"line":125},[80,1461,1462],{"class":94},"mount --make-rprivate /\n",[80,1464,1465],{"class":82,"line":132},[80,1466,1467],{"class":94},"for f in /etc/pacman.d/*.sync; do\n",[80,1469,1470],{"class":82,"line":150},[80,1471,1472],{"class":94},"  filename=\"${f%.*}\"\n",[80,1474,1475],{"class":82,"line":155},[80,1476,1477],{"class":94},"  mount --bind \"$f\" \"$filename\"\n",[80,1479,1480],{"class":82,"line":161},[80,1481,1482],{"class":94},"done\n",[80,1484,1485],{"class":82,"line":174},[80,1486,1487],{"class":94},"pacman -Sy\n",[80,1489,1490,1493,1495],{"class":82,"line":190},[80,1491,1492],{"class":94},"EOF'",[80,1494,107],{"class":106},[80,1496,1497],{"class":94},"/usr/bin/pacsync\n",[17,1499,1500,1501,1504],{},"创建",[60,1502,1503],{},"/etc/pacman.d/mirrorlist.sync","指定我们用来同步pacman数据库（比如东软）",[17,1506,1507,1510],{},[60,1508,1509],{},"/etc/pacman.d/mirrorlist","中存放其他国内镜像源地址（按照同步速度从上到下）",[17,1512,1513,1514],{},"以后的同步命令为 ",[60,1515,1516],{},"sudo pacsync && yay -Su",[17,1518,1519],{},"觉得命令过长的话设置alias可以是个不错的选择。",[425,1521,1522],{},"html pre.shiki code .sW2Sy, html code.shiki .sW2Sy{--shiki-default:#A0A1A7;--shiki-default-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic}html pre.shiki code .sJa8x, html code.shiki .sJa8x{--shiki-default:#E45649;--shiki-dark:#E06C75}html pre.shiki code .sknuh, html code.shiki .sknuh{--shiki-default:#383A42;--shiki-dark:#56B6C2}html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .s_Sar, html code.shiki .s_Sar{--shiki-default:#0184BC;--shiki-dark:#56B6C2}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":62,"searchDepth":65,"depth":65,"links":1524},[1525,1526],{"id":802,"depth":113,"text":803},{"id":1425,"depth":65,"text":1425},{"title":1528,"date":1529,"path":1530,"tags":1531,"body":1533},"请给 tuna/ustc 镜像站减压","2021-05-27 21:25:48","/2021/05/27/relieve-the-pressure-of-tuna-mirror-site-please",[436,1532],"镜像站",{"type":11,"value":1534,"toc":1628},[1535,1544,1550,1553,1564,1567,1575,1583,1589,1592,1598,1601,1607,1610,1616,1619,1625],[17,1536,1537,1538,1543],{},"不知道从什么时候开始，我总觉得tuna的镜像站提供的下载速度越来越慢，直到我前几天翻开tuna镜像站的「",[447,1539,1542],{"href":1540,"rel":1541},"https://mirrors.tuna.tsinghua.edu.cn/status/#server-status",[451],"服务器状态","」，我被眼前的景象给震惊到了。",[17,1545,1546],{},[396,1547],{"alt":1548,"src":1549},"本图截于2021年5月27日晚","https://static.031130.xyz/uploads/2024/08/12/62f3baac63cd2.webp",[17,1551,1552],{},"我在这里大致观察了一下这张图：服务器流量主要是由四个部分组成，「http-ipv4」、「https-ipv4」、「http-ipv6」和「https-ipv6」。光是从过去24小时的平均出站流量来计算的话，大约就是2.4Gb/s，如果观察图中的流量高峰期的话，大概是4Gb/s的一个速率。这个流量大小是什么概念呢？根据我个人浅薄的建站经验来讲，这个流量可以让大部分供应商把你的网站判断为正在遭受攻击，你将被强制进入黑洞模式。然而对于tuna的镜像站而言，这个流量速率确是日常。换句话说，tuna的服务器都相当于每时每刻都在被来自全国的开发者“攻击”。",[14,1554,1555,1558],{},[17,1556,1557],{},"来自 2022 年的竹林: 我是真没想到去年 tuna 的网络负载只有这点的。2022 年的负载图在下面附上，已经翻了一倍不止了",[17,1559,1560],{},[396,1561],{"alt":1562,"src":1563},"本图截于2022年8月10日晚","https://static.031130.xyz/uploads/2024/08/12/62f3ba4204ecb.webp",[17,1565,1566],{},"因此，我们也就不难理解为什么tuna近些年来经常出现断流等一系列问题了。",[14,1568,1569,1572],{},[17,1570,1571],{},"客观上 TUNA 和 UTSC 是国内知名度和镜像项目数量以及同步速度都靠前的镜像站，但也因为如此，这两个镜像站每日的带宽负载是很大的；能跑满我的本地带宽速度是较理想的情况，但是那么大的负载，时间跨度长了体验到的波动差异也就多了起来。至少在我这里，长时间使用两个镜像站的速度波动挺大的。TUNA 也曾微言过带宽日益不堪重负，所以从道德情感和技术理论等角度上，尽管他们是理想的镜像站点，我个人不会优先使用这两个镜像站，也不会优先推荐别人使用。",[17,1573,1574],{},"——WPlanck",[17,1576,1577,1578,1582],{},"国内的开源镜像站我大多都已经收集到",[447,1579,1581],{"href":1580},"/2020/07/11/china-mainland-mirrorlist/","这一篇博客中","了，以下几个镜像站是我重点推荐的。",[329,1584,1585],{"id":884},[447,1586,884],{"href":1587,"rel":1588},"https://mirrors.bfsu.edu.cn/",[451],[17,1590,1591],{},"tuna的姊妹站，通俗来讲就是tuna派人维护，北京外国语大学出钱。人少、稳定、涵盖项目较广。",[329,1593,1594],{"id":902},[447,1595,902],{"href":1596,"rel":1597},"https://mirrors.sjtug.sjtu.edu.cn/",[451],[17,1599,1600],{},"上海交大的站点，也有不少项目，据说sjtug上的manjaro镜像是国内几个开源镜像站中同步最勤快的，用的人也不多。",[329,1602,1603],{"id":1141},[447,1604,1141],{"href":1605,"rel":1606},"https://opentuna.cn/",[451],[17,1608,1609],{},"tuna那边用国内aws服务器搭的站点，速度超快，不过比较可惜的是现在同步的项目不多，同步频率低，大概是一天一次的样子。",[329,1611,1612],{"id":1160},[447,1613,1160],{"href":1614,"rel":1615},"https://mirrors.pku.edu.cn/Mirrors",[451],[17,1617,1618],{},"是不是没想到北大也有镜像站？没记错的话是今年三四月左右刚开的，和opentuna情况差不多，用的人少、速度快、同步的项目不多。",[329,1620,1621],{"id":1084},[447,1622,1084],{"href":1623,"rel":1624},"https://mirrors.hit.edu.cn/",[451],[17,1626,1627],{},"哈尔滨工业大学的镜像站，速度我跑下来感觉一般，不是特别亮眼，不过同步频率高。",{"title":62,"searchDepth":65,"depth":65,"links":1629},[1630,1631,1632,1633,1634],{"id":884,"depth":113,"text":884},{"id":902,"depth":113,"text":902},{"id":1141,"depth":113,"text":1141},{"id":1160,"depth":113,"text":1160},{"id":1084,"depth":113,"text":1084},{"title":1636,"date":1637,"path":1638,"tags":437,"body":1639},"我为什么选择Archlinux？","2021-05-23","/2021/05/23/why-i-use-archlinux",{"type":11,"value":1640,"toc":1732},[1641,1644,1647,1650,1657,1660,1667,1670,1673,1677,1680,1683,1686,1689,1692,1695,1698,1701,1709,1713,1716,1719,1723,1726,1729],[17,1642,1643],{},"对于我而言，我用Archlinux主要的原因就是实用主义。我可以很负责的说，Arch真的是在我所有用过的发行版当中最符合实用主义的一个了。",[17,1645,1646],{},"很多大佬一提到Archlinux就扯些什么kiss原则，在我看来则不然。",[1423,1648,1649],{"id":1649},"整洁规范的系统",[17,1651,1652,1653,1656],{},"规范代码为的不是为了什么",[409,1654,1655],{},"Art of Code","，而是可读性的提升；遵循kiss原则亦是如此。",[17,1658,1659],{},"配置文件的路径写好了，符合规范，我们就能一下子找到，我们是为了实用主义而遵守kiss原则。",[17,1661,1662,1663],{},"同样的，我同样可以为了实用主义而破坏kiss原则。",[1664,1665,1666],"del",{},"比如在我的archiso-zhullyb中，我添加了一个pacman的hook将我的定制内核重命名为linux以确保其能够正确被ventoy所识别，这也是为了实用主义。",[17,1668,1669],{},"那么，什么时候我会破坏kiss原则呢？当我认为破坏kiss原则所带来的利大于弊时，我就会考虑以一个并不规范但却有效的方法来处理问题。",[17,1671,1672],{},"但很有趣的是，由于Archlinux的官方总是将kiss奉为圣旨，这就给我们提供了一个非常nice的环境了——在一个非常规范的系统内，破坏kiss原则所带来的代价并不会很大，这就好比在一个布线整齐的机房内临时私拉两三根线并不会给维护带来多大的困难。",[1423,1674,1676],{"id":1675},"archlinux对上游软件包的发行策略","Archlinux对上游软件包的发行策略",[17,1678,1679],{},"不同于apt在源内提供了统一软件的多个版本供用户选择，pacman剑走偏锋，默认用户系统内所有软件都是最新的。",[17,1681,1682],{},"由此带来了一个好处——不会出现由于版本过高/过低导致的依赖问题。只要我保证系统内的所有软件都是最新的，就不会出问题，非常的简单粗暴。",[17,1684,1685],{},"此外，不考虑依赖版本这一特点对于打包人来说也是一种解脱。",[1423,1687,1688],{"id":1688},"pacman简单的打包方式",[17,1690,1691],{},"不同于deb以及rpm，pacman的软件包应该是所有发行版中最省事儿的。",[17,1693,1694],{},"打包软件时，我们只需要写（改）一份PKGBUILD，就可以仅仅通过在PKGBUILD所在的路径执行makepkg命令来完成一次打包，这相比起deb而言可谓是天差地别。如此简单有效的打包方式注定其将被实用主义者所青睐。",[1423,1696,1697],{"id":1697},"超低的社区贡献成本",[17,1699,1700],{},"很多发行版社区开发与贡献其实并不容易参与进去，我拿Ubuntu来做个比较。",[14,1702,1703,1706],{},[17,1704,1705],{},"附: Archwiki是先斩后奏类型的文档，在你按下保存按钮的那一刻，wiki将立即被更新，所有访客都将看到你改动后的内容。wiki文档拥有变更记录，不担心有人恶意搞破坏，向wiki管理员提出举报后破坏者的账号会被及时封禁，wiki可以非常简单地回滚到之前的状态。",[17,1707,1708],{},"AUR同样也是，你可以随意上传自己的PKGBUILD，可以被别的用户及时看到。如果上传恶意脚本，在别的用户举报后你将迅速被封号。",[329,1710,1712],{"id":1711},"wiki方面","Wiki方面",[17,1714,1715],{},"Ubuntu其实是我第一个上手的Linux发行版，在为期半年的Ubuntu体验中，我对于社区做出的贡献为0。这倒也不是我不热衷于参与社区贡献，而是对Ubuntu社区的贡献成本太高了。去贡献文档翻译，需要等待漫长的审核过程，在第一篇汉化文章正式展现在别的用户眼前后，我一定会被激发出继续翻译第二篇的热情。然而，面对太长的审核周期，再高涨的热情恐怕也会被浇灭。",[17,1717,1718],{},"Arch的社区则不一样，他并不像别的社区那样严谨——只要注册个wiki的账号便可以开始贡献文档。你可以随意地编辑一篇文章或者是新增一篇自己的文章，编辑后的文章将能够立即被别的用户所阅读到，没有任何审核过程，有了这份热情，我便继续翻译别的文档，我想，这应该就是archwiki为何涵盖面如此之广的原因。",[329,1720,1722],{"id":1721},"aur方面","AUR方面",[17,1724,1725],{},"同样也是拿Ubuntu对比。",[17,1727,1728],{},"在Archlinux下，我只需要简单的写一个PKGBUILD即可轻松构建一个软件包，同时，我也可以将这份有我攥写的PKGBUILD上传到AUR供别的用户使用。AUR作为一个公开的储存库，任何Arch用户都可以通过AUR Helper轻松得从AUR中获取我写的PKGBUILD并在本地打成自己的包。与此同时，我也可以创建一个私人源，直接发行我构建的二进制包。",[17,1730,1731],{},"Ubutnu则不然，他的打包方式则要麻烦得多，同时也没有类似PKGBUILD一样的东西便于用户分享自己的打包脚本。唯一能够分享自己的劳动成果的方式无非就是直接分享自己打出来的deb包，最多也不过是建立自己的ppa，这对于用户来说是极为麻烦的。用户需要处心积虑地寻找自己所需要的deb包或是含有目标包的ppa地址并手动添加，不像Archlinux有AUR这种东西能够让我们知道在哪里能够找到我们所需要的包。",{"title":62,"searchDepth":65,"depth":65,"links":1733},[1734,1735,1736,1737],{"id":1649,"depth":65,"text":1649},{"id":1675,"depth":65,"text":1676},{"id":1688,"depth":65,"text":1688},{"id":1697,"depth":65,"text":1697,"children":1738},[1739,1740],{"id":1711,"depth":113,"text":1712},{"id":1721,"depth":113,"text":1722},{"title":1742,"date":1743,"path":1744,"tags":1745,"body":1748},"使用vercel创建一个随机图片api","2021-05-21","/2021/05/21/create-a-random-picture-api-with-vercel",[1746,1747],"Network","vercel",{"type":11,"value":1749,"toc":1881},[1750,1761,1772,1775,1778,1789,1792,1797,1810,1816,1819,1825,1878],[17,1751,1752,1753,1760],{},"如果你的网络环境不算太差的话，你在访问我博客的时候应该可以看到顶部有一张背景图。假如你访问我的博客时留心观察，你或许会发现每次你访问我博客时的背景都是不一样的。如果你没玩够，或许你可以尝试",[447,1754,1757],{"href":1755,"rel":1756},"https://randompic.zhul.in/api/randomtoppic.php",[451],[409,1758,1759],{},"点击这里","，我总共搜集了20张壁纸供诸位赏玩。",[17,1762,1763,1764,1771],{},"是的，这是使用php实现的随机图片api，托管于vercel，你可以在",[447,1765,1768],{"href":1766,"rel":1767},"https://note.aya1.top/#/4-phpapi",[451],[409,1769,1770],{},"aya的博客","上找到我使用的代码。具体配置方式我不再赘述。",[17,1773,1774],{},"然而，我们还需要解决一个问题: php在哪里运行？",[17,1776,1777],{},"如果你拥有自己的服务器，在国内访问速度毫不逊色，那就好办了，直接扔自己服务器上即可。然而，我并没有。我需要找到一个在国内访问速度给力的地方来部署我的api，以确保访客在打开我的博客时可以在第一时间获取到图片的真实链接并开始加载。",[17,1779,1780,1781,1784,1785,1788],{},"起初，我将其部署在我的好朋友(",[1664,1782,1783],{},"你可以猜猜他是谁",")的国内vps上，访问速度自然不用说。然而，他的服务器",[409,1786,1787],{},"不支持https","，这就导致使用chrome访问的时候chrome不会自动访问我的api，博客顶部一片惨蓝。。。",[17,1790,1791],{},"随后，我使用的是000webhost提供的虚拟主机，国内访问起来也还不错，大概正常运行了半个月左右的时间，然后莫名开始502了。我懂，作为不交钱的白嫖用户应该自觉滚蛋了，这点觉悟咱还是有。",[17,1793,1794],{},[409,1795,1796],{},"随后，我找到了目前的方案——vercel",[17,1798,1799,1800,1803,1804,1809],{},"vercel是被我用来部署静态网页的，但我没想到他也能",[409,1801,1802],{},"支持php","。参考了",[447,1805,1808],{"href":1806,"rel":1807},"https://github.com/juicyfx/vercel-php",[451],"vercel-php","项目后，我大致了解了整个仓库结构。",[53,1811,1814],{"className":1812,"code":1813,"language":58},[56],"project\n├── api\n│   └── index.php\n└── vercel.json\n",[60,1815,1813],{"__ignoreMap":62},[17,1817,1818],{},"php和附带的资源文件(如果有的话)一定要放到api文件夹下才能够正常被vercel识别。",[17,1820,1821,1822],{},"以下附",[60,1823,1824],{},"vercel.json",[53,1826,1830],{"className":1827,"code":1828,"language":1829,"meta":62,"style":62},"language-json shiki shiki-themes one-light one-dark-pro","{\n  \"functions\": {\n    \"api/index.php\": {\n      \"runtime\": \"vercel-php@0.4.0\"\n    }\n  }\n}\n","json",[60,1831,1832,1837,1845,1852,1863,1868,1873],{"__ignoreMap":62},[80,1833,1834],{"class":82,"line":83},[80,1835,1836],{"class":106},"{\n",[80,1838,1839,1842],{"class":82,"line":65},[80,1840,1841],{"class":860},"  \"functions\"",[80,1843,1844],{"class":106},": {\n",[80,1846,1847,1850],{"class":82,"line":113},[80,1848,1849],{"class":860},"    \"api/index.php\"",[80,1851,1844],{"class":106},[80,1853,1854,1857,1860],{"class":82,"line":125},[80,1855,1856],{"class":860},"      \"runtime\"",[80,1858,1859],{"class":106},": ",[80,1861,1862],{"class":94},"\"vercel-php@0.4.0\"\n",[80,1864,1865],{"class":82,"line":132},[80,1866,1867],{"class":106},"    }\n",[80,1869,1870],{"class":82,"line":150},[80,1871,1872],{"class":106},"  }\n",[80,1874,1875],{"class":82,"line":155},[80,1876,1877],{"class":106},"}\n",[425,1879,1880],{},"html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html pre.shiki code .sJa8x, html code.shiki .sJa8x{--shiki-default:#E45649;--shiki-dark:#E06C75}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":62,"searchDepth":65,"depth":65,"links":1882},[],{"title":1884,"date":1885,"path":1886,"tags":1887,"body":1889},"禁止deepin-wine-tim使用simsun字体渲染","2021-04-27","/2021/04/27/hide-simsun-from-deepin-wine-tim",[437,436,1888],"Bwrap",{"type":11,"value":1890,"toc":1999},[1891,1904,1907,1910,1915,1918,1921,1932,1939,1945,1948,1962,1968,1974,1977,1982,1985,1990,1993],[14,1892,1893],{},[17,1894,1895,1896,1899,1900,1903],{},"本文中，我通过bwrap命令对运行Tim的wine程序屏蔽了simsun字体以获得了一个更为舒适的字体渲染效果。我所使用的Tim为",[60,1897,1898],{},"deepin-wine-tim","，至于",[60,1901,1902],{},"deepin-wine-qq","通过相同的方式应该也能达到相同的效果，spark商店的Tim我自己测试下来似乎是没法达到这样的效果，而使用其他方法安装simsun字体的网友们则需要注意灵活变通，不要照抄我给出的字体路径。",[17,1905,1906],{},"在Archlinux下，我们通常会使用deepin-wine5来运行QQ/Tim.",[17,1908,1909],{},"但是当我们在系统中倒入simsun字体时，无论使用什么奇迹淫巧似乎都无法阻止deepin-wine5找到simsun并优先使用它。于是，字体渲染就会变成如图这样奇奇怪怪的画风:",[17,1911,1912],{},[396,1913],{"alt":62,"src":1914},"https://static.031130.xyz/uploads/2024/08/12/62f3c887040ff.webp",[17,1916,1917],{},"但是我并不喜欢这样的渲染效果，使用simsun渲染出来的字体总感觉有一种上世纪的风格，况且，在我的1080p小屏下显示并不清晰。",[17,1919,1920],{},"于是，在尝试了更改注册表、在wine容器的系统路径下直接塞入字体文件等等方式无果后，我选择了逃避——直接让wine程序读取不到simsun。",[17,1922,1923,1924,1927,1928,1931],{},"我的simsun是通过",[60,1925,1926],{},"ttf-ms-win10-zh_cn","这个包安装上去的，被安装在",[60,1929,1930],{},"/usr/share/fonts/TTF/","路径下。",[17,1933,1934,1935,1938],{},"使用",[60,1936,1937],{},"pacman -Qo /usr/share/fonts/TTF/","命令查找这个路径下所安装的字体包，我这里的输出如下:",[53,1940,1943],{"className":1941,"code":1942,"language":58},[56],"[zhullyb@Archlinux ~]$ pacman -Qo /usr/share/fonts/TTF/\n/usr/share/fonts/TTF/ is owned by ttf-cascadia-code 2102.25-1\n/usr/share/fonts/TTF/ is owned by ttf-fira-code 5.2-1\n/usr/share/fonts/TTF/ is owned by ttf-hack 3.003-3\n/usr/share/fonts/TTF/ is owned by ttf-monaco 6.1-6\n/usr/share/fonts/TTF/ is owned by ttf-ms-win10-zh_cn 2019ltsc-1\n/usr/share/fonts/TTF/ is owned by ttf-opensans 1.101-2\n",[60,1944,1942],{"__ignoreMap":62},[17,1946,1947],{},"可以看到，并没有什么对wine程序运行特别重要的字体包，于是我计划通过bwrap命令对运行Tim的wine程序直接屏蔽这个路径。",[17,1949,1950,1951,1954,1955,1958,1959],{},"首先安装提供",[60,1952,1953],{},"bwrap","命令的",[60,1956,1957],{},"bubblewrap","程序: ",[60,1960,1961],{},"sudo pacman -S bubblewrap --needed",[17,1963,1964,1965],{},"通过查找deepin-wine-tim的desktop文件发现Tim的启动命令是",[60,1966,1967],{},"/opt/apps/com.qq.office.deepin/files/run.sh",[17,1969,1970,1971],{},"在终端中输入命令进行测试",[60,1972,1973],{},"bwrap --dev-bind / / --tmpfs /usr/share/fonts/TTF/ /opt/apps/com.qq.office.deepin/files/run.sh",[17,1975,1976],{},"出现如下界面，看来方法是可行的。",[17,1978,1979],{},[396,1980],{"alt":62,"src":1981},"https://static.031130.xyz/uploads/2024/08/12/62f3c88b119f8.webp",[17,1983,1984],{},"于是，我们进一步更改deepin-wine-tim的desktop文件，以方便我们不需要每次都在Terminal中执行这么一大长串命令。需要更改的地方如下图红色方框圈出部分",[17,1986,1987],{},[396,1988],{"alt":62,"src":1989},"https://static.031130.xyz/uploads/2024/08/12/62f3c88f41790.webp",[17,1991,1992],{},"我这里附一下图中的命令方便诸位复制粘贴。",[53,1994,1997],{"className":1995,"code":1996,"language":58},[56],"[zhullyb@Archlinux ~]$ cat /usr/share/applications/com.qq.office.deepin.desktop \n#!/usr/bin/env xdg-open\n\n[Desktop Entry]\nEncoding=UTF-8\nType=Application\nX-Created-By=Deepin WINE Team\nCategories=chat;Network;\nIcon=com.qq.office.deepin\nExec=bwrap --dev-bind / / --tmpfs /usr/share/fonts/TTF/ /opt/apps/com.qq.office.deepin/files/run.sh\nName=TIM\nName[zh_CN]=TIM\nComment=Tencent TIM Client on Deepin Wine\nStartupWMClass=tim.exe\nMimeType=\n",[60,1998,1996],{"__ignoreMap":62},{"title":62,"searchDepth":65,"depth":65,"links":2000},[],{"title":2002,"date":2003,"path":2004,"tags":2005,"body":2006},"在系统使用暗色主题时禁用Firefox的夜间模式","2021-04-23","/2021/04/23/disable-firefox-nightmode-when-your-system-is-using-that","笔记",{"type":11,"value":2007,"toc":2058},[2008,2011,2014,2021,2024,2030,2037,2043,2049],[17,2009,2010],{},"在我使用Archlinux的时候经常会使用一些暗色主题，但是我并不希望我浏览网页时一些自作聪明的网页自动切换成夜间模式。",[17,2012,2013],{},"这个设置我找了好久，每次在谷歌上检索都会跳出来一堆教我改Firefox主题的、用插件开夜间模式的，却都不是我的目的。",[17,2015,2016,2017,2020],{},"我们所需要做的是在浏览器地址栏输入",[60,2018,2019],{},"about:config","进入高级设置",[17,2022,2023],{},"搜索并添加一个值",[53,2025,2028],{"className":2026,"code":2027,"language":58},[56],"ui.systemUsesDarkTheme\n",[60,2029,2027],{"__ignoreMap":62},[17,2031,2032,2033,2036],{},"将这个选项的",[409,2034,2035],{},"数值","设置为0即可。",[17,2038,2039],{},[396,2040],{"alt":2041,"src":2042},"步骤1","https://static.031130.xyz/uploads/2024/08/12/62f36c8f05efd.webp",[17,2044,2045],{},[396,2046],{"alt":2047,"src":2048},"步骤2","https://static.031130.xyz/uploads/2024/08/12/62f36cce30773.webp",[17,2050,2051,2052,2057],{},"2021.12.13更新: Firefox 更新 95.0 以后，如果遇到原方案失效的问题，可以参考 ",[447,2053,2056],{"href":2054,"rel":2055},"https://blog.cubercsl.site/post/%E5%9C%A8%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%9A%97%E8%89%B2%E4%B8%BB%E9%A2%98%E6%97%B6%E7%A6%81%E6%AD%A2%E7%94%A8-firefox-%E7%9A%84%E5%A4%9C%E9%97%B4%E6%A8%A1%E5%BC%8F/",[451],"CSL的博客","。",{"title":62,"searchDepth":65,"depth":65,"links":2059},[],{"title":2061,"date":2062,"path":2063,"tags":2005,"body":2064},"记一次在Gitlab部署Jekyll博客时遇到的jekyll-github-metadata报错问题","2021-04-16","/2021/04/16/fuck-jekyll-github-metadata-on-gitlab",{"type":11,"value":2065,"toc":2135},[2066,2069,2072,2077,2080,2086,2095,2120,2130],[17,2067,2068],{},"我的博客是挂在GitlabPages上的，在为博客更换主题的时候遇到了一点点小麻烦。",[17,2070,2071],{},"报错如图：",[17,2073,2074],{},[396,2075],{"alt":62,"src":2076},"https://static.031130.xyz/uploads/2024/08/12/62f3caf233039.webp",[17,2078,2079],{},"当然，我这边也会附上详细的报错日志，以便后人能够通过关键词搜索到。",[53,2081,2084],{"className":2082,"code":2083,"language":58},[56],"Configuration file: /builds/zhullyb/test/_config.yml\n            Source: /builds/zhullyb/test\n       Destination: public\n Incremental build: disabled. Enable with --incremental\n      Generating... \n       Jekyll Feed: Generating feed for posts\n   GitHub Metadata: No GitHub API authentication could be found. Some fields may be missing or have incorrect data.\n   GitHub Metadata: Error processing value 'url':\n             ERROR: YOUR SITE COULD NOT BE BUILT:\n                    ------------------------------------\n                    No repo name found. Specify using PAGES_REPO_NWO environment variables, 'repository' in your configuration, or set up an 'origin' git remote pointing to your github.com repository.\nCleaning up file based variables 00:01\nERROR: Job failed: exit code 1\n",[60,2085,2083],{"__ignoreMap":62},[17,2087,2088,2089,2094],{},"经过了一番瞎折腾以后，我依然没有解决问题，而每次push都要等待gitlab的ci构建两三分钟，实在磨不动的我去看了",[447,2090,2093],{"href":2091,"rel":2092},"https://github.com/jekyll/github-metadata",[451],"jekyll-github-metadata","的README，结合上文的报错，我一下子就看懂了。",[17,2096,2097,2099,2100,2103,2104,2103,2107,2103,2110,831,2113,2116,2117],{},[60,2098,2093],{},"可以通过github中的信息自动为jekyll提供",[60,2101,2102],{},"site.github","、",[60,2105,2106],{},"site.title",[60,2108,2109],{},"site.description",[60,2111,2112],{},"site.url",[60,2114,2115],{},"site.baseurl","。而由于我们在用的是Gitlab，所以jekyll-github-metadata就无法获取到这些信息，需要我们手动指定。报错中缺少的就是",[60,2118,2119],{},"url",[17,2121,2122,2123,2126,2127,2129],{},"于是打开",[60,2124,2125],{},"_config.yml","，把",[60,2128,2119],{},"给补上，顺便把别的变量一同加上，如图：",[17,2131,2132],{},[396,2133],{"alt":62,"src":2134},"https://static.031130.xyz/uploads/2024/08/12/62f3caf51bdb5.webp",{"title":62,"searchDepth":65,"depth":65,"links":2136},[],{"title":2138,"date":2062,"path":2139,"tags":2140,"body":2141},"我在Archlinux上的常用软件","/2021/04/16/the-software-i-use-on-archlinux",[2005,437],{"type":11,"value":2142,"toc":2184},[2143,2151,2154,2157,2160,2163,2166,2169,2172,2175,2178,2181],[14,2144,2145,2148],{},[17,2146,2147],{},"最近基本固定了在Archlinux上的常用软件，也供各位参考一下。",[17,2149,2150],{},"我是KDE用户，所以KDE家的软件会用得比较多。",[17,2152,2153],{},"浏览器：Firefox，Chromium备用（主要是使用chromium的网页翻译功能，还有就是打开一些对Firefox不太友好的网站）",[17,2155,2156],{},"下载器：curl，wget，motrix\t根据不同使用场景更换下载器",[17,2158,2159],{},"终端：konsole",[17,2161,2162],{},"输入法：fcitx5-chinese-addons",[17,2164,2165],{},"即时通讯：telegram，deepin-wine-tim，deepin-wine-wechat，electron-qq，wechat-uos，linuxqq",[17,2167,2168],{},"播放器：vlc",[17,2170,2171],{},"编辑器：nano，kate，visual-studio-code-bin，typora，wps",[17,2173,2174],{},"图形类：pinta，drawio-desktop-bin，imagemagick",[17,2176,2177],{},"文件管理器：dolphin",[17,2179,2180],{},"文件传输：sftp（命令行里的），filezilla",[17,2182,2183],{},"系统、网络工具：latte-dock-git，v2raya，htop，gtop",{"title":62,"searchDepth":65,"depth":65,"links":2185},[],127,1761837276339]