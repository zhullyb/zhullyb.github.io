[{"data":1,"prerenderedAt":6386},["ShallowReactive",2],{"randomIndex/page/3/":3,"index-page-3":4,"posts-total":6385},23,[5,438,1896,2366,2643,3033,3456,3514,5084,5646],{"title":6,"date":7,"path":8,"tags":9,"body":12},"为 Hexo 添加 follow 认证","2024-10-23 23:11:32","/2024/10/23/follow-cert-for-hexo-feed",[10,11],"Hexo","Follow",{"type":13,"value":14,"toc":434},"minimark",[15,19,23,30,33,36,46,53,59,65,76,109,168,171,174,185,196,295,301,306,309,361,414,417,420,422,430],[16,17,18],"h2",{"id":18},"前言",[20,21,22],"p",{},"Follow 从今天开始不需要邀请码就可以开始使用部分功能了，除了只能订阅五个订阅源、成就系统没开放、签到不能获得 power 以外，还有部分功能没有解锁（如下图）",[20,24,25],{},[26,27],"img",{"alt":28,"src":29},"","https://static.031130.xyz/uploads/2024/10/23/d3a69a7bcde58.webp",[20,31,32],{},"我注意到 Follow 的认证机制目前对于 Hexo 用户还是相对不友好的，起码对于 Hexo 用户来说。",[20,34,35],{},"「内容」方案要我们在网页（也可能是 rss，follow 没有给出非常明确的指示）上添加非常明显的一段文本，我并不是很喜欢这种行为。",[37,38,43],"pre",{"className":39,"code":41,"language":42},[40],"language-text","This message is used to verify that this feed (feedId:56144913816835091) belongs to me (userId:70410173045150720). Join me in enjoying the next generation information browser https://follow.is.\n","text",[44,45,41],"code",{"__ignoreMap":28},[20,47,48,49,52],{},"「描述」方案要求我们在 rss 的 xml 文件的 ",[44,50,51],{},"\u003Cdescription />"," 字段添加一段丑丑的代码。无论是使用 follow 的读者还是其他 rss reader 的读者都会看到博客的 description 中含有一段丑丑的代码，这对于强迫症的我来说是无法忍受的，更别提 atom 类型的订阅根本没有这个字段。",[37,54,57],{"className":55,"code":56,"language":42},[40],"feedId:56144913816835091+userId:70410173045150720\n",[44,58,56],{"__ignoreMap":28},[20,60,61],{},[26,62],{"alt":63,"src":64},"即使是在 follow 中，这样的文字也是非常眨眼","https://static.031130.xyz/uploads/2024/10/23/10dfda54f4dcc.webp",[20,66,67,68,71,72,75],{},"「RSS 标签」方案是我唯一能接受的方案，这个方案需要我们在 rss 的 xml 文件中添加一个名为 ",[44,69,70],{},"\u003Cfollow_challenge>"," 的标签，或者是 json 文件中的一个 ",[44,73,74],{},"follow_challenge"," 对象。虽然具有一定的侵入性，但对于读者来说不会受到影响——应该没有除了 follow 以外的 rss reader 对这个字段进行解析。",[37,77,81],{"className":78,"code":79,"language":80,"meta":28,"style":28},"language-xml shiki shiki-themes one-light one-dark-pro","\u003Cfollow_challenge>\n    \u003CfeedId>56144913816835091\u003C/feedId>\n    \u003CuserId>70410173045150720\u003C/userId>\n\u003C/follow_challenge>\n","xml",[44,82,83,91,97,103],{"__ignoreMap":28},[84,85,88],"span",{"class":86,"line":87},"line",1,[84,89,90],{},"\u003Cfollow_challenge>\n",[84,92,94],{"class":86,"line":93},2,[84,95,96],{},"    \u003CfeedId>56144913816835091\u003C/feedId>\n",[84,98,100],{"class":86,"line":99},3,[84,101,102],{},"    \u003CuserId>70410173045150720\u003C/userId>\n",[84,104,106],{"class":86,"line":105},4,[84,107,108],{},"\u003C/follow_challenge>\n",[37,110,114],{"className":111,"code":112,"language":113,"meta":28,"style":28},"language-json shiki shiki-themes one-light one-dark-pro","{\n  \"follow_challenge\": {\n    \"feed_id\": \"56144913816835091\",\n    \"user_id\": \"70410173045150720\"\n  }\n}\n","json",[44,115,116,122,131,146,156,162],{"__ignoreMap":28},[84,117,118],{"class":86,"line":87},[84,119,121],{"class":120},"s5ixo","{\n",[84,123,124,128],{"class":86,"line":93},[84,125,127],{"class":126},"sJa8x","  \"follow_challenge\"",[84,129,130],{"class":120},": {\n",[84,132,133,136,139,143],{"class":86,"line":99},[84,134,135],{"class":126},"    \"feed_id\"",[84,137,138],{"class":120},": ",[84,140,142],{"class":141},"sDhpE","\"56144913816835091\"",[84,144,145],{"class":120},",\n",[84,147,148,151,153],{"class":86,"line":105},[84,149,150],{"class":126},"    \"user_id\"",[84,152,138],{"class":120},[84,154,155],{"class":141},"\"70410173045150720\"\n",[84,157,159],{"class":86,"line":158},5,[84,160,161],{"class":120},"  }\n",[84,163,165],{"class":86,"line":164},6,[84,166,167],{"class":120},"}\n",[16,169,170],{"id":170},"正篇",[20,172,173],{},"那么问题来了，Hexo 用户应该如何使用「RSS 标签」的方案给我们的博客进行 Follow 认证呢？",[20,175,176,177,184],{},"首先确认前提，我在使用 ",[178,179,183],"a",{"href":180,"rel":181},"https://github.com/hexojs/hexo-generator-feed",[182],"nofollow","hexo-generator-feed"," 这个 npm 库来生成 Hexo 博客的 rss 订阅文件。",[20,186,187,188,191,192,195],{},"在项目的 README 文件中，我们知道可以在 ",[44,189,190],{},"_config.yml"," 文件中指定 rss 生成时使用的模板文件。模板文件位于 ",[44,193,194],{},"./node_modules/hexo-generator-feed"," 路径下，atom.xml 和 rss2.xml 就是这个库所使用的模板文件。我正在使用 atom，所以我把 atom.xml 复制一份放到博客的根目录下魔改模板。下面是 _config.yml 的 feed 配置，你可以看到我在最后两行指定了 template 模板文件。",[37,197,201],{"className":198,"code":199,"language":200,"meta":28,"style":28},"language-yml shiki shiki-themes one-light one-dark-pro","feed:\n    type: atom\n    path: rss.xml\n    limit: 0\n    hub:\n    content: true\n    content_limit:\n    content_limit_delim: ' '\n    template:\n      - atom.xml\n","yml",[44,202,203,211,221,231,242,249,259,267,278,286],{"__ignoreMap":28},[84,204,205,208],{"class":86,"line":87},[84,206,207],{"class":126},"feed",[84,209,210],{"class":120},":\n",[84,212,213,216,218],{"class":86,"line":93},[84,214,215],{"class":126},"    type",[84,217,138],{"class":120},[84,219,220],{"class":141},"atom\n",[84,222,223,226,228],{"class":86,"line":99},[84,224,225],{"class":126},"    path",[84,227,138],{"class":120},[84,229,230],{"class":141},"rss.xml\n",[84,232,233,236,238],{"class":86,"line":105},[84,234,235],{"class":126},"    limit",[84,237,138],{"class":120},[84,239,241],{"class":240},"sAGMh","0\n",[84,243,244,247],{"class":86,"line":158},[84,245,246],{"class":126},"    hub",[84,248,210],{"class":120},[84,250,251,254,256],{"class":86,"line":164},[84,252,253],{"class":126},"    content",[84,255,138],{"class":120},[84,257,258],{"class":240},"true\n",[84,260,262,265],{"class":86,"line":261},7,[84,263,264],{"class":126},"    content_limit",[84,266,210],{"class":120},[84,268,270,273,275],{"class":86,"line":269},8,[84,271,272],{"class":126},"    content_limit_delim",[84,274,138],{"class":120},[84,276,277],{"class":141},"' '\n",[84,279,281,284],{"class":86,"line":280},9,[84,282,283],{"class":126},"    template",[84,285,210],{"class":120},[84,287,289,292],{"class":86,"line":288},10,[84,290,291],{"class":120},"      - ",[84,293,294],{"class":141},"atom.xml\n",[20,296,297,298,300],{},"如果是个人用途，其实可以直接硬编码，在文件的倒数第二行把我们复制的 ",[44,299,70],{}," 放进去。",[20,302,303],{},[26,304],{"alt":28,"src":305},"https://static.031130.xyz/uploads/2024/10/23/fae341d7985ea.webp",[20,307,308],{},"或者如果我们想要写得考究一些，那么可以是下面这个样子的",[37,310,312],{"className":198,"code":311,"language":200,"meta":28,"style":28},"feed:\n  template:\n    - atom.xml\n  follow_challenge:\n    feedId: 56144913816835091\n    userId: 70410173045150720\n",[44,313,314,320,327,334,341,351],{"__ignoreMap":28},[84,315,316,318],{"class":86,"line":87},[84,317,207],{"class":126},[84,319,210],{"class":120},[84,321,322,325],{"class":86,"line":93},[84,323,324],{"class":126},"  template",[84,326,210],{"class":120},[84,328,329,332],{"class":86,"line":99},[84,330,331],{"class":120},"    - ",[84,333,294],{"class":141},[84,335,336,339],{"class":86,"line":105},[84,337,338],{"class":126},"  follow_challenge",[84,340,210],{"class":120},[84,342,343,346,348],{"class":86,"line":158},[84,344,345],{"class":126},"    feedId",[84,347,138],{"class":120},[84,349,350],{"class":240},"56144913816835091\n",[84,352,353,356,358],{"class":86,"line":164},[84,354,355],{"class":126},"    userId",[84,357,138],{"class":120},[84,359,360],{"class":240},"70410173045150720\n",[37,362,364],{"className":78,"code":363,"language":80,"meta":28,"style":28},"\u003C!-- //... -->\n  {% endfor %}\n  {% if config.feed.follow_challenge %}\n    \u003Cfollow_challenge>\n      \u003CfeedId>{{ config.feed.follow_challenge.feedId }}\u003C/feedId>\n      \u003CuserId>{{ config.feed.follow_challenge.userId }}\u003C/userId>\n    \u003C/follow_challenge>\n  {% endif %}\n\u003C/feed>\n",[44,365,366,374,379,384,389,394,399,404,409],{"__ignoreMap":28},[84,367,368,371],{"class":86,"line":87},[84,369,370],{},"\u003C!--",[84,372,373],{}," //... -->\n",[84,375,376],{"class":86,"line":93},[84,377,378],{},"  {% endfor %}\n",[84,380,381],{"class":86,"line":99},[84,382,383],{},"  {% if config.feed.follow_challenge %}\n",[84,385,386],{"class":86,"line":105},[84,387,388],{},"    \u003Cfollow_challenge>\n",[84,390,391],{"class":86,"line":158},[84,392,393],{},"      \u003CfeedId>{{ config.feed.follow_challenge.feedId }}\u003C/feedId>\n",[84,395,396],{"class":86,"line":164},[84,397,398],{},"      \u003CuserId>{{ config.feed.follow_challenge.userId }}\u003C/userId>\n",[84,400,401],{"class":86,"line":261},[84,402,403],{},"    \u003C/follow_challenge>\n",[84,405,406],{"class":86,"line":269},[84,407,408],{},"  {% endif %}\n",[84,410,411],{"class":86,"line":280},[84,412,413],{},"\u003C/feed>\n",[415,416],"hr",{},[20,418,419],{},"（说起来，这两个小改动一改，其实完全可以上传 npmjs.com 作为一个新的插件，不过我有点懒了）",[415,421],{},[20,423,424,425],{},"文末附一个 follow 邀请码: ",[84,426,429],{"className":427},[428],"heimu","6O0oBazB9s",[431,432,433],"style",{},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html pre.shiki code .sJa8x, html code.shiki .sJa8x{--shiki-default:#E45649;--shiki-dark:#E06C75}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}",{"title":28,"searchDepth":93,"depth":93,"links":435},[436,437],{"id":18,"depth":93,"text":18},{"id":170,"depth":93,"text":170},{"title":439,"date":440,"path":441,"tags":442,"body":445},"使用 GPT 对 waline 的评论进行审查","2024-10-12 16:11:06","/2024/10/12/use-gpt-to-review-waline-comments",[443,444],"waline","GPT",{"type":13,"value":446,"toc":1894},[447,450,465,468,474,483,492,1236,1251,1254,1257,1260,1609,1612,1623,1629,1647,1652,1830,1835,1883,1886,1891],[20,448,449],{},"前一阵子收到了这么一条来自 waline 的评论提醒。",[451,452,453],"blockquote",{},[20,454,455,456,460,461],{},"New comment on 竹林里有冰的博客\n【网站名称】：竹林里有冰的博客\n【评论者昵称】：专业数据库\n【评论者邮箱】：",[178,457,459],{"href":458},"mailto:rakhiranijhhg@gmail.com","rakhiranijhhg@gmail.com","\n【内容】：总之，优化专业数据库对于保持数据准确性、提高系统性能和推动业务成功至关重要。通过遵循本文中概述的策略，您可以提高数据库操作的效率并释放新的增长机会。\n【地址】：",[178,462,463],{"href":463,"rel":464},"https://zhul.in/2021/04/04/yay-more/#66f7a8889ab78865d5f5ae19",[182],[20,466,467],{},"评论的内容不仅透露着一股 AI 味，还和文章内容可谓是一点关系都没有，点开评论者的网站一看，一股塑料机翻味，怕是又是个来蹭 SEO 的广告哥。",[20,469,470],{},[26,471],{"alt":472,"src":473},"广告哥留下的网站","https://static.031130.xyz/uploads/2024/10/07/4673580090861.webp",[20,475,476,477,482],{},"根据 ",[178,478,481],{"href":479,"rel":480},"https://waline.js.org/advanced/faq.html#%E5%8F%91%E5%B8%83%E8%AF%84%E8%AE%BA%E5%BE%88%E6%85%A2%E6%80%8E%E4%B9%88%E5%8A%9E",[182],"waline 的官方文档","所言，waline 是使用了 Akismet 提供的垃圾内容检测服务的。可惜它似乎对 AI 生成的垃圾没有分辨能力。因此我计划使用 GPT 代替 Akismet 对 waline 的新评论进行审核。",[20,484,485,486,491],{},"walinejs/plugin 提供了一个 ",[178,487,490],{"href":488,"rel":489},"https://github.com/walinejs/plugins/blob/master/packages/tencent-tms/index.js",[182],"tencent-cms"," 的插件，功能是使用腾讯云的内容审查接口审查评论内容，这和我们需要的功能很像，主体部分和调用方法可以直接借鉴。",[37,493,497],{"className":494,"code":495,"language":496,"meta":28,"style":28},"language-javascript shiki shiki-themes one-light one-dark-pro","// index.js\n\nconst tencentcloud = require(\"tencentcloud-sdk-nodejs-tms\");\nconst TmsClient = tencentcloud.tms.v20201229.Client;\n\n\nmodule.exports = function({secretId, secretKey, region}) {\n  if (!secretId || !secretKey || !region) {\n    return {};\n  }\n\n  const clientConfig = {\n    credential: {\n      secretId,\n      secretKey,\n    },\n    region,\n    profile: {\n      httpProfile: {\n        endpoint: \"tms.tencentcloudapi.com\",\n      },\n    },\n  };\n  \n  return {\n    hooks: {\n      async preSave(data) {\n        const { userInfo } = this.ctx.state;\n        const isAdmin = userInfo.type === 'administrator';\n        // ignore admin comment\n        if (isAdmin) {\n          return;\n        }\n\n        const client = new TmsClient(clientConfig);\n        try {\n          const resp = await client.TextModeration({ Content: data.comment });\n          if (!resp.Suggestion) {\n            throw new Error('Suggestion is empty. Tencent Cloud TMS info:', resp);\n          }\n\n          switch(resp.Suggestion) {\n            case 'Pass':\n              data.status = 'approved';\n              break;\n            case 'Block':\n              data.status = 'spam';\n              break;\n              case 'Review':\n              default:\n                data.status = 'waiting';\n                break;\n          }\n        } catch(e) {\n          console.log(e);\n          data.status = 'waiting';\n        }\n      },\n    },\n  };\n}\n","javascript",[44,498,499,505,511,538,570,574,578,614,645,653,657,662,676,688,696,704,710,718,728,738,751,757,762,767,773,781,791,807,840,866,872,885,893,899,904,926,934,974,994,1016,1022,1027,1043,1054,1072,1080,1090,1106,1113,1124,1132,1149,1157,1162,1178,1195,1211,1216,1221,1226,1231],{"__ignoreMap":28},[84,500,501],{"class":86,"line":87},[84,502,504],{"class":503},"sW2Sy","// index.js\n",[84,506,507],{"class":86,"line":93},[84,508,510],{"emptyLinePlaceholder":509},true,"\n",[84,512,513,517,521,525,529,532,535],{"class":86,"line":99},[84,514,516],{"class":515},"sLKXg","const",[84,518,520],{"class":519},"sNmU0"," tencentcloud",[84,522,524],{"class":523},"s_Sar"," =",[84,526,528],{"class":527},"sAdtL"," require",[84,530,531],{"class":120},"(",[84,533,534],{"class":141},"\"tencentcloud-sdk-nodejs-tms\"",[84,536,537],{"class":120},");\n",[84,539,540,542,545,547,550,553,557,559,562,564,567],{"class":86,"line":105},[84,541,516],{"class":515},[84,543,544],{"class":519}," TmsClient",[84,546,524],{"class":523},[84,548,520],{"class":549},"s7GmK",[84,551,552],{"class":120},".",[84,554,556],{"class":555},"s2QsP","tms",[84,558,552],{"class":120},[84,560,561],{"class":555},"v20201229",[84,563,552],{"class":120},[84,565,566],{"class":126},"Client",[84,568,569],{"class":120},";\n",[84,571,572],{"class":86,"line":158},[84,573,510],{"emptyLinePlaceholder":509},[84,575,576],{"class":86,"line":164},[84,577,510],{"emptyLinePlaceholder":509},[84,579,580,583,585,588,590,593,596,600,603,606,608,611],{"class":86,"line":261},[84,581,582],{"class":555},"module",[84,584,552],{"class":120},[84,586,587],{"class":555},"exports",[84,589,524],{"class":523},[84,591,592],{"class":515}," function",[84,594,595],{"class":120},"({",[84,597,599],{"class":598},"s8iYz","secretId",[84,601,602],{"class":120},", ",[84,604,605],{"class":598},"secretKey",[84,607,602],{"class":120},[84,609,610],{"class":598},"region",[84,612,613],{"class":120},"}) {\n",[84,615,616,619,622,625,628,631,634,636,638,640,642],{"class":86,"line":269},[84,617,618],{"class":515},"  if",[84,620,621],{"class":120}," (",[84,623,624],{"class":523},"!",[84,626,599],{"class":627},"sz0mV",[84,629,630],{"class":523}," ||",[84,632,633],{"class":523}," !",[84,635,605],{"class":627},[84,637,630],{"class":523},[84,639,633],{"class":523},[84,641,610],{"class":627},[84,643,644],{"class":120},") {\n",[84,646,647,650],{"class":86,"line":280},[84,648,649],{"class":515},"    return",[84,651,652],{"class":120}," {};\n",[84,654,655],{"class":86,"line":288},[84,656,161],{"class":120},[84,658,660],{"class":86,"line":659},11,[84,661,510],{"emptyLinePlaceholder":509},[84,663,665,668,671,673],{"class":86,"line":664},12,[84,666,667],{"class":515},"  const",[84,669,670],{"class":519}," clientConfig",[84,672,524],{"class":523},[84,674,675],{"class":120}," {\n",[84,677,679,682,686],{"class":86,"line":678},13,[84,680,681],{"class":126},"    credential",[84,683,685],{"class":684},"st7oF",":",[84,687,675],{"class":120},[84,689,691,694],{"class":86,"line":690},14,[84,692,693],{"class":627},"      secretId",[84,695,145],{"class":120},[84,697,699,702],{"class":86,"line":698},15,[84,700,701],{"class":627},"      secretKey",[84,703,145],{"class":120},[84,705,707],{"class":86,"line":706},16,[84,708,709],{"class":120},"    },\n",[84,711,713,716],{"class":86,"line":712},17,[84,714,715],{"class":627},"    region",[84,717,145],{"class":120},[84,719,721,724,726],{"class":86,"line":720},18,[84,722,723],{"class":126},"    profile",[84,725,685],{"class":684},[84,727,675],{"class":120},[84,729,731,734,736],{"class":86,"line":730},19,[84,732,733],{"class":126},"      httpProfile",[84,735,685],{"class":684},[84,737,675],{"class":120},[84,739,741,744,746,749],{"class":86,"line":740},20,[84,742,743],{"class":126},"        endpoint",[84,745,685],{"class":684},[84,747,748],{"class":141}," \"tms.tencentcloudapi.com\"",[84,750,145],{"class":120},[84,752,754],{"class":86,"line":753},21,[84,755,756],{"class":120},"      },\n",[84,758,760],{"class":86,"line":759},22,[84,761,709],{"class":120},[84,763,764],{"class":86,"line":3},[84,765,766],{"class":120},"  };\n",[84,768,770],{"class":86,"line":769},24,[84,771,772],{"class":120},"  \n",[84,774,776,779],{"class":86,"line":775},25,[84,777,778],{"class":515},"  return",[84,780,675],{"class":120},[84,782,784,787,789],{"class":86,"line":783},26,[84,785,786],{"class":126},"    hooks",[84,788,685],{"class":684},[84,790,675],{"class":120},[84,792,794,797,800,802,805],{"class":86,"line":793},27,[84,795,796],{"class":515},"      async",[84,798,799],{"class":527}," preSave",[84,801,531],{"class":120},[84,803,804],{"class":598},"data",[84,806,644],{"class":120},[84,808,810,813,816,819,822,825,828,830,833,835,838],{"class":86,"line":809},28,[84,811,812],{"class":515},"        const",[84,814,815],{"class":120}," { ",[84,817,818],{"class":519},"userInfo",[84,820,821],{"class":120}," } ",[84,823,824],{"class":523},"=",[84,826,827],{"class":555}," this",[84,829,552],{"class":120},[84,831,832],{"class":555},"ctx",[84,834,552],{"class":120},[84,836,837],{"class":126},"state",[84,839,569],{"class":120},[84,841,843,845,848,850,853,855,858,861,864],{"class":86,"line":842},29,[84,844,812],{"class":515},[84,846,847],{"class":519}," isAdmin",[84,849,524],{"class":523},[84,851,852],{"class":549}," userInfo",[84,854,552],{"class":120},[84,856,857],{"class":126},"type",[84,859,860],{"class":523}," ===",[84,862,863],{"class":141}," 'administrator'",[84,865,569],{"class":120},[84,867,869],{"class":86,"line":868},30,[84,870,871],{"class":503},"        // ignore admin comment\n",[84,873,875,878,880,883],{"class":86,"line":874},31,[84,876,877],{"class":515},"        if",[84,879,621],{"class":120},[84,881,882],{"class":627},"isAdmin",[84,884,644],{"class":120},[84,886,888,891],{"class":86,"line":887},32,[84,889,890],{"class":515},"          return",[84,892,569],{"class":120},[84,894,896],{"class":86,"line":895},33,[84,897,898],{"class":120},"        }\n",[84,900,902],{"class":86,"line":901},34,[84,903,510],{"emptyLinePlaceholder":509},[84,905,907,909,912,914,917,919,921,924],{"class":86,"line":906},35,[84,908,812],{"class":515},[84,910,911],{"class":519}," client",[84,913,524],{"class":523},[84,915,916],{"class":515}," new",[84,918,544],{"class":527},[84,920,531],{"class":120},[84,922,923],{"class":627},"clientConfig",[84,925,537],{"class":120},[84,927,929,932],{"class":86,"line":928},36,[84,930,931],{"class":515},"        try",[84,933,675],{"class":120},[84,935,937,940,943,945,948,950,952,955,958,961,963,966,968,971],{"class":86,"line":936},37,[84,938,939],{"class":515},"          const",[84,941,942],{"class":519}," resp",[84,944,524],{"class":523},[84,946,947],{"class":515}," await",[84,949,911],{"class":549},[84,951,552],{"class":120},[84,953,954],{"class":527},"TextModeration",[84,956,957],{"class":120},"({ ",[84,959,960],{"class":126},"Content",[84,962,685],{"class":684},[84,964,965],{"class":549}," data",[84,967,552],{"class":120},[84,969,970],{"class":126},"comment",[84,972,973],{"class":120}," });\n",[84,975,977,980,982,984,987,989,992],{"class":86,"line":976},38,[84,978,979],{"class":515},"          if",[84,981,621],{"class":120},[84,983,624],{"class":523},[84,985,986],{"class":549},"resp",[84,988,552],{"class":120},[84,990,991],{"class":126},"Suggestion",[84,993,644],{"class":120},[84,995,997,1000,1002,1005,1007,1010,1012,1014],{"class":86,"line":996},39,[84,998,999],{"class":515},"            throw",[84,1001,916],{"class":515},[84,1003,1004],{"class":527}," Error",[84,1006,531],{"class":120},[84,1008,1009],{"class":141},"'Suggestion is empty. Tencent Cloud TMS info:'",[84,1011,602],{"class":120},[84,1013,986],{"class":627},[84,1015,537],{"class":120},[84,1017,1019],{"class":86,"line":1018},40,[84,1020,1021],{"class":120},"          }\n",[84,1023,1025],{"class":86,"line":1024},41,[84,1026,510],{"emptyLinePlaceholder":509},[84,1028,1030,1033,1035,1037,1039,1041],{"class":86,"line":1029},42,[84,1031,1032],{"class":515},"          switch",[84,1034,531],{"class":120},[84,1036,986],{"class":549},[84,1038,552],{"class":120},[84,1040,991],{"class":126},[84,1042,644],{"class":120},[84,1044,1046,1049,1052],{"class":86,"line":1045},43,[84,1047,1048],{"class":515},"            case",[84,1050,1051],{"class":141}," 'Pass'",[84,1053,210],{"class":120},[84,1055,1057,1060,1062,1065,1067,1070],{"class":86,"line":1056},44,[84,1058,1059],{"class":549},"              data",[84,1061,552],{"class":120},[84,1063,1064],{"class":126},"status",[84,1066,524],{"class":523},[84,1068,1069],{"class":141}," 'approved'",[84,1071,569],{"class":120},[84,1073,1075,1078],{"class":86,"line":1074},45,[84,1076,1077],{"class":515},"              break",[84,1079,569],{"class":120},[84,1081,1083,1085,1088],{"class":86,"line":1082},46,[84,1084,1048],{"class":515},[84,1086,1087],{"class":141}," 'Block'",[84,1089,210],{"class":120},[84,1091,1093,1095,1097,1099,1101,1104],{"class":86,"line":1092},47,[84,1094,1059],{"class":549},[84,1096,552],{"class":120},[84,1098,1064],{"class":126},[84,1100,524],{"class":523},[84,1102,1103],{"class":141}," 'spam'",[84,1105,569],{"class":120},[84,1107,1109,1111],{"class":86,"line":1108},48,[84,1110,1077],{"class":515},[84,1112,569],{"class":120},[84,1114,1116,1119,1122],{"class":86,"line":1115},49,[84,1117,1118],{"class":515},"              case",[84,1120,1121],{"class":141}," 'Review'",[84,1123,210],{"class":120},[84,1125,1127,1130],{"class":86,"line":1126},50,[84,1128,1129],{"class":515},"              default",[84,1131,210],{"class":120},[84,1133,1135,1138,1140,1142,1144,1147],{"class":86,"line":1134},51,[84,1136,1137],{"class":549},"                data",[84,1139,552],{"class":120},[84,1141,1064],{"class":126},[84,1143,524],{"class":523},[84,1145,1146],{"class":141}," 'waiting'",[84,1148,569],{"class":120},[84,1150,1152,1155],{"class":86,"line":1151},52,[84,1153,1154],{"class":515},"                break",[84,1156,569],{"class":120},[84,1158,1160],{"class":86,"line":1159},53,[84,1161,1021],{"class":120},[84,1163,1165,1168,1171,1173,1176],{"class":86,"line":1164},54,[84,1166,1167],{"class":120},"        } ",[84,1169,1170],{"class":515},"catch",[84,1172,531],{"class":120},[84,1174,1175],{"class":627},"e",[84,1177,644],{"class":120},[84,1179,1181,1184,1186,1189,1191,1193],{"class":86,"line":1180},55,[84,1182,1183],{"class":549},"          console",[84,1185,552],{"class":120},[84,1187,1188],{"class":527},"log",[84,1190,531],{"class":120},[84,1192,1175],{"class":627},[84,1194,537],{"class":120},[84,1196,1198,1201,1203,1205,1207,1209],{"class":86,"line":1197},56,[84,1199,1200],{"class":549},"          data",[84,1202,552],{"class":120},[84,1204,1064],{"class":126},[84,1206,524],{"class":523},[84,1208,1146],{"class":141},[84,1210,569],{"class":120},[84,1212,1214],{"class":86,"line":1213},57,[84,1215,898],{"class":120},[84,1217,1219],{"class":86,"line":1218},58,[84,1220,756],{"class":120},[84,1222,1224],{"class":86,"line":1223},59,[84,1225,709],{"class":120},[84,1227,1229],{"class":86,"line":1228},60,[84,1230,766],{"class":120},[84,1232,1234],{"class":86,"line":1233},61,[84,1235,167],{"class":120},[20,1237,1238,1239,1244,1245,1250],{},"可以看到，我们需要在这个被 module.exports 导出的函数中，return 一个对象，如果使用 hooks 编写的话可以调用",[178,1240,1243],{"href":1241,"rel":1242},"https://waline.js.org/reference/server/config.html#%E8%AF%84%E8%AE%BA-hooks",[182],"一些生命周期 hook",": 在 preSave 阶段，我们可以通过标注 data.status 参数来反馈评论类型。approved 为接受，spam 为垃圾邮件，waiting 为等待人工审核；除此之外，还可以",[178,1246,1249],{"href":1247,"rel":1248},"https://waline.js.org/reference/server/plugin.html#%E5%9F%BA%E4%BA%8E%E4%B8%AD%E9%97%B4%E4%BB%B6%E5%88%B6%E4%BD%9C",[182],"基于 Koa 中间件制作插件","，文档中有具体的描述。",[20,1252,1253],{},"index.js 顶部是需要引入的依赖。当然，如果需要引入外部的第三方包的话，需要在 packages.json 中加入需要的依赖（使用包管理器的命令进行安装）。",[20,1255,1256],{},"有了这些基础知识，就能手搓一个基于 GPT 的评论审查插件。",[20,1258,1259],{},"OpenAI 提供的是标准的 Restful API，本身的鉴权逻辑也不复杂，其实没必要调用 SDK，直接使用 fetch 调用就行。",[37,1261,1263],{"className":494,"code":1262,"language":496,"meta":28,"style":28},"const doReview = async (comment) => {\n  const response = await fetch(openaiBaseUrl + '/v1/chat/completions', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${openaiApiKey}`,\n    },\n    body: JSON.stringify({\n      model: openaiModel,\n      messages: [\n        {\n          role: 'system',\n          content: prompt\n        },\n        {\n          role: 'user',\n          content: comment,\n        },\n      ],\n    }),\n  });\n  const data = await response.json();\n  if (data && data.choices && data.choices.length > 0) {\n    return data.choices[0].message.content;\n  } else {\n    return 'waiting';\n  }\n}\n",[44,1264,1265,1289,1317,1329,1338,1350,1375,1379,1397,1409,1419,1424,1436,1446,1451,1455,1466,1477,1481,1486,1491,1496,1515,1554,1583,1593,1601,1605],{"__ignoreMap":28},[84,1266,1267,1269,1272,1274,1277,1279,1281,1284,1287],{"class":86,"line":87},[84,1268,516],{"class":515},[84,1270,1271],{"class":527}," doReview",[84,1273,524],{"class":523},[84,1275,1276],{"class":515}," async",[84,1278,621],{"class":120},[84,1280,970],{"class":598},[84,1282,1283],{"class":120},") ",[84,1285,1286],{"class":515},"=>",[84,1288,675],{"class":120},[84,1290,1291,1293,1296,1298,1300,1303,1305,1308,1311,1314],{"class":86,"line":93},[84,1292,667],{"class":515},[84,1294,1295],{"class":519}," response",[84,1297,524],{"class":523},[84,1299,947],{"class":515},[84,1301,1302],{"class":527}," fetch",[84,1304,531],{"class":120},[84,1306,1307],{"class":627},"openaiBaseUrl",[84,1309,1310],{"class":523}," +",[84,1312,1313],{"class":141}," '/v1/chat/completions'",[84,1315,1316],{"class":120},", {\n",[84,1318,1319,1322,1324,1327],{"class":86,"line":99},[84,1320,1321],{"class":126},"    method",[84,1323,685],{"class":684},[84,1325,1326],{"class":141}," 'POST'",[84,1328,145],{"class":120},[84,1330,1331,1334,1336],{"class":86,"line":105},[84,1332,1333],{"class":126},"    headers",[84,1335,685],{"class":684},[84,1337,675],{"class":120},[84,1339,1340,1343,1345,1348],{"class":86,"line":158},[84,1341,1342],{"class":141},"      'Content-Type'",[84,1344,685],{"class":684},[84,1346,1347],{"class":141}," 'application/json'",[84,1349,145],{"class":120},[84,1351,1352,1355,1357,1360,1364,1367,1370,1373],{"class":86,"line":164},[84,1353,1354],{"class":141},"      'Authorization'",[84,1356,685],{"class":684},[84,1358,1359],{"class":141}," `Bearer ",[84,1361,1363],{"class":1362},"sAOjX","${",[84,1365,1366],{"class":627},"openaiApiKey",[84,1368,1369],{"class":1362},"}",[84,1371,1372],{"class":141},"`",[84,1374,145],{"class":120},[84,1376,1377],{"class":86,"line":261},[84,1378,709],{"class":120},[84,1380,1381,1384,1386,1389,1391,1394],{"class":86,"line":269},[84,1382,1383],{"class":126},"    body",[84,1385,685],{"class":684},[84,1387,1388],{"class":519}," JSON",[84,1390,552],{"class":120},[84,1392,1393],{"class":527},"stringify",[84,1395,1396],{"class":120},"({\n",[84,1398,1399,1402,1404,1407],{"class":86,"line":280},[84,1400,1401],{"class":126},"      model",[84,1403,685],{"class":684},[84,1405,1406],{"class":627}," openaiModel",[84,1408,145],{"class":120},[84,1410,1411,1414,1416],{"class":86,"line":288},[84,1412,1413],{"class":126},"      messages",[84,1415,685],{"class":684},[84,1417,1418],{"class":120}," [\n",[84,1420,1421],{"class":86,"line":659},[84,1422,1423],{"class":120},"        {\n",[84,1425,1426,1429,1431,1434],{"class":86,"line":664},[84,1427,1428],{"class":126},"          role",[84,1430,685],{"class":684},[84,1432,1433],{"class":141}," 'system'",[84,1435,145],{"class":120},[84,1437,1438,1441,1443],{"class":86,"line":678},[84,1439,1440],{"class":126},"          content",[84,1442,685],{"class":684},[84,1444,1445],{"class":627}," prompt\n",[84,1447,1448],{"class":86,"line":690},[84,1449,1450],{"class":120},"        },\n",[84,1452,1453],{"class":86,"line":698},[84,1454,1423],{"class":120},[84,1456,1457,1459,1461,1464],{"class":86,"line":706},[84,1458,1428],{"class":126},[84,1460,685],{"class":684},[84,1462,1463],{"class":141}," 'user'",[84,1465,145],{"class":120},[84,1467,1468,1470,1472,1475],{"class":86,"line":712},[84,1469,1440],{"class":126},[84,1471,685],{"class":684},[84,1473,1474],{"class":627}," comment",[84,1476,145],{"class":120},[84,1478,1479],{"class":86,"line":720},[84,1480,1450],{"class":120},[84,1482,1483],{"class":86,"line":730},[84,1484,1485],{"class":120},"      ],\n",[84,1487,1488],{"class":86,"line":740},[84,1489,1490],{"class":120},"    }),\n",[84,1492,1493],{"class":86,"line":753},[84,1494,1495],{"class":120},"  });\n",[84,1497,1498,1500,1502,1504,1506,1508,1510,1512],{"class":86,"line":759},[84,1499,667],{"class":515},[84,1501,965],{"class":519},[84,1503,524],{"class":523},[84,1505,947],{"class":515},[84,1507,1295],{"class":549},[84,1509,552],{"class":120},[84,1511,113],{"class":527},[84,1513,1514],{"class":120},"();\n",[84,1516,1517,1519,1521,1523,1526,1528,1530,1533,1535,1537,1539,1541,1543,1546,1549,1552],{"class":86,"line":3},[84,1518,618],{"class":515},[84,1520,621],{"class":120},[84,1522,804],{"class":627},[84,1524,1525],{"class":523}," &&",[84,1527,965],{"class":549},[84,1529,552],{"class":120},[84,1531,1532],{"class":126},"choices",[84,1534,1525],{"class":523},[84,1536,965],{"class":549},[84,1538,552],{"class":120},[84,1540,1532],{"class":555},[84,1542,552],{"class":120},[84,1544,1545],{"class":126},"length",[84,1547,1548],{"class":523}," >",[84,1550,1551],{"class":240}," 0",[84,1553,644],{"class":120},[84,1555,1556,1558,1560,1562,1564,1567,1570,1573,1576,1578,1581],{"class":86,"line":769},[84,1557,649],{"class":515},[84,1559,965],{"class":549},[84,1561,552],{"class":120},[84,1563,1532],{"class":126},[84,1565,1566],{"class":120},"[",[84,1568,1569],{"class":240},"0",[84,1571,1572],{"class":120},"].",[84,1574,1575],{"class":555},"message",[84,1577,552],{"class":120},[84,1579,1580],{"class":126},"content",[84,1582,569],{"class":120},[84,1584,1585,1588,1591],{"class":86,"line":775},[84,1586,1587],{"class":120},"  } ",[84,1589,1590],{"class":515},"else",[84,1592,675],{"class":120},[84,1594,1595,1597,1599],{"class":86,"line":783},[84,1596,649],{"class":515},[84,1598,1146],{"class":141},[84,1600,569],{"class":120},[84,1602,1603],{"class":86,"line":793},[84,1604,161],{"class":120},[84,1606,1607],{"class":86,"line":809},[84,1608,167],{"class":120},[20,1610,1611],{},"再配合相应的封装，一款基于 GPT 的 waline 评论审核插件就完成了",[1613,1614,1615],"ul",{},[1616,1617,1618],"li",{},[178,1619,1622],{"href":1620,"rel":1621},"https://github.com/zhullyb/waline-plugin-llm-reviewer",[182],"zhullyb/waline-plugin-llm-reviewer",[20,1624,1625],{},[1626,1627,1628],"strong",{},"如何安装",[37,1630,1634],{"className":1631,"code":1632,"language":1633,"meta":28,"style":28},"language-bash shiki shiki-themes one-light one-dark-pro","npm install waline-plugin-llm-reviewer\n","bash",[44,1635,1636],{"__ignoreMap":28},[84,1637,1638,1641,1644],{"class":86,"line":87},[84,1639,1640],{"class":527},"npm",[84,1642,1643],{"class":141}," install",[84,1645,1646],{"class":141}," waline-plugin-llm-reviewer\n",[20,1648,1649],{},[1626,1650,1651],{},"如何使用",[37,1653,1655],{"className":494,"code":1654,"language":496,"meta":28,"style":28},"// index.js\nconst Waline = require('@waline/vercel');\nconst GPTReviewer = require('waline-plugin-llm-reviewer');\n\nmodule.exports = Waline({\n  plugins: [\n    GptReviewer({\n        openaiBaseUrl: process.env.OPENAI_BASE_URL,\n        openaiModel: process.env.OPENAI_MODEL,\n        openaiApiKey: process.env.OPENAI_API_KEY,\n        openaiPrompt: process.env.OPENAI_PROMPT,\n    })\n  ]\n});\n",[44,1656,1657,1661,1679,1697,1701,1715,1724,1731,1755,1775,1795,1815,1820,1825],{"__ignoreMap":28},[84,1658,1659],{"class":86,"line":87},[84,1660,504],{"class":503},[84,1662,1663,1665,1668,1670,1672,1674,1677],{"class":86,"line":93},[84,1664,516],{"class":515},[84,1666,1667],{"class":519}," Waline",[84,1669,524],{"class":523},[84,1671,528],{"class":527},[84,1673,531],{"class":120},[84,1675,1676],{"class":141},"'@waline/vercel'",[84,1678,537],{"class":120},[84,1680,1681,1683,1686,1688,1690,1692,1695],{"class":86,"line":99},[84,1682,516],{"class":515},[84,1684,1685],{"class":519}," GPTReviewer",[84,1687,524],{"class":523},[84,1689,528],{"class":527},[84,1691,531],{"class":120},[84,1693,1694],{"class":141},"'waline-plugin-llm-reviewer'",[84,1696,537],{"class":120},[84,1698,1699],{"class":86,"line":105},[84,1700,510],{"emptyLinePlaceholder":509},[84,1702,1703,1705,1707,1709,1711,1713],{"class":86,"line":158},[84,1704,582],{"class":555},[84,1706,552],{"class":120},[84,1708,587],{"class":555},[84,1710,524],{"class":523},[84,1712,1667],{"class":527},[84,1714,1396],{"class":120},[84,1716,1717,1720,1722],{"class":86,"line":164},[84,1718,1719],{"class":126},"  plugins",[84,1721,685],{"class":684},[84,1723,1418],{"class":120},[84,1725,1726,1729],{"class":86,"line":261},[84,1727,1728],{"class":527},"    GptReviewer",[84,1730,1396],{"class":120},[84,1732,1733,1736,1738,1741,1743,1747,1749,1753],{"class":86,"line":269},[84,1734,1735],{"class":126},"        openaiBaseUrl",[84,1737,685],{"class":684},[84,1739,1740],{"class":549}," process",[84,1742,552],{"class":120},[84,1744,1746],{"class":1745},"sC09Y","env",[84,1748,552],{"class":120},[84,1750,1752],{"class":1751},"sRZ4U","OPENAI_BASE_URL",[84,1754,145],{"class":120},[84,1756,1757,1760,1762,1764,1766,1768,1770,1773],{"class":86,"line":280},[84,1758,1759],{"class":126},"        openaiModel",[84,1761,685],{"class":684},[84,1763,1740],{"class":549},[84,1765,552],{"class":120},[84,1767,1746],{"class":1745},[84,1769,552],{"class":120},[84,1771,1772],{"class":1751},"OPENAI_MODEL",[84,1774,145],{"class":120},[84,1776,1777,1780,1782,1784,1786,1788,1790,1793],{"class":86,"line":288},[84,1778,1779],{"class":126},"        openaiApiKey",[84,1781,685],{"class":684},[84,1783,1740],{"class":549},[84,1785,552],{"class":120},[84,1787,1746],{"class":1745},[84,1789,552],{"class":120},[84,1791,1792],{"class":1751},"OPENAI_API_KEY",[84,1794,145],{"class":120},[84,1796,1797,1800,1802,1804,1806,1808,1810,1813],{"class":86,"line":659},[84,1798,1799],{"class":126},"        openaiPrompt",[84,1801,685],{"class":684},[84,1803,1740],{"class":549},[84,1805,552],{"class":120},[84,1807,1746],{"class":1745},[84,1809,552],{"class":120},[84,1811,1812],{"class":1751},"OPENAI_PROMPT",[84,1814,145],{"class":120},[84,1816,1817],{"class":86,"line":664},[84,1818,1819],{"class":120},"    })\n",[84,1821,1822],{"class":86,"line":678},[84,1823,1824],{"class":120},"  ]\n",[84,1826,1827],{"class":86,"line":690},[84,1828,1829],{"class":120},"});\n",[20,1831,1832],{},[1626,1833,1834],{},"环境变量",[1613,1836,1837,1851,1859,1867,1875],{},[1616,1838,1839,1842,1843,1850],{},[44,1840,1841],{},"ASISMET_KEY",": Waline 使用的反垃圾评论服务，",[1626,1844,1845,1846,1849],{},"建议设置为 ",[44,1847,1848],{},"false"," 以禁用","。",[1616,1852,1853,1855,1856],{},[44,1854,1752],{},": API 基础 URL。例如 ",[44,1857,1858],{},"https://api.openai.com",[1616,1860,1861,1863,1864],{},[44,1862,1772],{},": 模型名称。例如 ",[44,1865,1866],{},"gpt-4o-mini",[1616,1868,1869,1871,1872],{},[44,1870,1792],{},": API 密钥。例如 ",[44,1873,1874],{},"ak-xxxxxx",[1616,1876,1877,1879,1880],{},[44,1878,1812],{},"(可选): 模型的提示。例如 ",[44,1881,1882],{},"这是一个评论审查: ",[20,1884,1885],{},"在 waline 中设置好对应的环境变量，使用 npm 安装好对应的包，就算大功告成了。",[20,1887,1888],{},[26,1889],{"alt":28,"src":1890},"https://static.031130.xyz/uploads/2024/10/12/45f06a78286de.webp",[431,1892,1893],{},"html pre.shiki code .sW2Sy, html code.shiki .sW2Sy{--shiki-default:#A0A1A7;--shiki-default-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic}html pre.shiki code .sLKXg, html code.shiki .sLKXg{--shiki-default:#A626A4;--shiki-dark:#C678DD}html pre.shiki code .sNmU0, html code.shiki .sNmU0{--shiki-default:#986801;--shiki-dark:#E5C07B}html pre.shiki code .s_Sar, html code.shiki .s_Sar{--shiki-default:#0184BC;--shiki-dark:#56B6C2}html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .s7GmK, html code.shiki .s7GmK{--shiki-default:#383A42;--shiki-dark:#E5C07B}html pre.shiki code .s2QsP, html code.shiki .s2QsP{--shiki-default:#E45649;--shiki-dark:#E5C07B}html pre.shiki code .sJa8x, html code.shiki .sJa8x{--shiki-default:#E45649;--shiki-dark:#E06C75}html pre.shiki code .s8iYz, html code.shiki .s8iYz{--shiki-default:#383A42;--shiki-default-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic}html pre.shiki code .sz0mV, html code.shiki .sz0mV{--shiki-default:#383A42;--shiki-dark:#E06C75}html pre.shiki code .st7oF, html code.shiki .st7oF{--shiki-default:#0184BC;--shiki-dark:#ABB2BF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sAOjX, html code.shiki .sAOjX{--shiki-default:#CA1243;--shiki-dark:#C678DD}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}html pre.shiki code .sC09Y, html code.shiki .sC09Y{--shiki-default:#C18401;--shiki-dark:#E5C07B}html pre.shiki code .sRZ4U, html code.shiki .sRZ4U{--shiki-default:#986801;--shiki-dark:#E06C75}",{"title":28,"searchDepth":93,"depth":93,"links":1895},[],{"title":1897,"date":1898,"path":1899,"tags":1900,"body":1902},"基于 JavaScript 的 Hexo Fluid 主题 banner 随机背景图实现","2024-09-25 00:00:42","/2024/09/25/random-banner-backgroud-image-implement-for-hexo-fluid-with-javascript",[1901,10],"JavaScript",{"type":13,"value":1903,"toc":2353},[1904,1908,1917,1923,1928,1936,1942,1945,1948,1951,1955,1958,1962,1965,1968,1983,1989,1993,1996,2051,2054,2063,2327,2330,2338,2341,2350],[16,1905,1907],{"id":1906},"为什么要换掉随机图片-api","为什么要换掉随机图片 API",[20,1909,1910,1911,1916],{},"因为 API 太慢了。根据 ",[178,1912,1915],{"href":1913,"rel":1914},"https://pagespeed.web.dev/",[182],"PageSpeed"," 的测速，使用 API 的图片加载时间来到了整整 2.5s，这似乎有些不可忍受。",[20,1918,1919],{},[26,1920],{"alt":1921,"src":1922},"PageSpeed 测速","https://static.031130.xyz/uploads/2024/09/25/3ef1a17bca955.webp",[1924,1925,1927],"h3",{"id":1926},"vercel-冷启动问题","Vercel 冷启动问题",[20,1929,1930,1931,1935],{},"当初年少无知，为了实现 banner 随机背景图，选择了",[178,1932,1934],{"href":1933},"/2021/05/21/create-a-random-picture-api-with-vercel/","使用 vercel 创建随机图片 API","。这带来了一些问题，首先 vercel 在站点一段时间没人访问以后会进入一种类似休眠的模式，下一次启动将会经历一个冷启动（cold start）的过程。我认为这对于一个图片背景的随机 API 而言是不可忍受的。",[20,1937,1938],{},[26,1939],{"alt":1940,"src":1941},"冷启动","https://static.031130.xyz/uploads/2024/09/24/f8cb9fd7a963e.webp",[20,1943,1944],{},"观察图上就可以发现，第一次访问时花费了 1.9 秒，第二次只需要 0.5 秒，这是因为第一次是冷启动，需要花费更多时间。",[1924,1946,1947],{"id":1947},"多一次网络请求",[20,1949,1950],{},"抛开冷启动不谈，引入 API 就会导致一次额外的网络请求。访客的浏览器将会先请求随机图片 API，然后根据 API 返回的 302 相应去请求真正的图片，而且这一过程是没法并行的，只能串行执行，这会浪费更多的等待时间。",[1924,1952,1954],{"id":1953},"vercel-在大陆境内的访问质量","Vercel 在大陆境内的访问质量",[20,1956,1957],{},"Vercel 在大陆境内的访问质量其实并不算好，即使是使用了所谓的优选节点，也不一定能保证整个大陆境内大部分访客都有不错的访问质量，因此使用 Vercel 搭建 API 的行为并不是最优解。",[16,1959,1961],{"id":1960},"转向-javascript-实现","转向 JavaScript 实现",[20,1963,1964],{},"这个方案本身没多少复杂的，只不过是三年前的我对前端一无所知不敢操刀罢了。",[1924,1966,1967],{"id":1967},"删除原有的背景图",[20,1969,1970,1971,1974,1975,1978,1979,1982],{},"在 ",[44,1972,1973],{},"_config.fluid.yml"," 中，将所有的 ",[44,1976,1977],{},"banner_img:"," 字段全部置空，防止其加载默认的 ",[44,1980,1981],{},"/img/default.png"," 而白白浪费用户的流量。这个字段一共在配置文件中出现了九次。",[20,1984,1985],{},[26,1986],{"alt":1987,"src":1988},"字段置空","https://static.031130.xyz/uploads/2024/09/25/70bd0b27f5aad.webp",[1924,1990,1992],{"id":1991},"添加-js","添加 js",[20,1994,1995],{},"我们的目标是修改 id 为 banner 的 div 块的 backgroud 的 css 属性，Hexo Fluid 默认的生成内容是这样的",[37,1997,2001],{"className":1998,"code":1999,"language":2000,"meta":28,"style":28},"language-html shiki shiki-themes one-light one-dark-pro","\u003Cdiv id=\"banner\" class=\"banner\" parallax=true style=\"background: url('/img/default.png') no-repeat center center; background-size: cover;\">\n","html",[44,2002,2003],{"__ignoreMap":28},[84,2004,2005,2008,2011,2014,2016,2019,2022,2024,2026,2029,2031,2034,2037,2039,2042,2046,2048],{"class":86,"line":87},[84,2006,2007],{"class":120},"\u003C",[84,2009,2010],{"class":126},"div",[84,2012,2013],{"class":240}," id",[84,2015,824],{"class":120},[84,2017,2018],{"class":141},"\"banner\"",[84,2020,2021],{"class":240}," class",[84,2023,824],{"class":120},[84,2025,2018],{"class":141},[84,2027,2028],{"class":240}," parallax",[84,2030,824],{"class":120},[84,2032,2033],{"class":141},"true",[84,2035,2036],{"class":240}," style",[84,2038,824],{"class":120},[84,2040,2041],{"class":141},"\"",[84,2043,2045],{"class":2044},"s-4uI","background: url('/img/default.png') no-repeat center center; background-size: cover;",[84,2047,2041],{"class":141},[84,2049,2050],{"class":120},">\n",[20,2052,2053],{},"我们可以通过 id 来定位这个元素，修改其 style.background 属性。",[20,2055,2056,2057,2062],{},"可以在任何地方引入下面的 js 代码，在这篇名为",[178,2058,2061],{"href":2059,"rel":2060},"https://www.zywvvd.com/notes/hexo/theme/fluid/fluid-add-umami/fluid-add-umami/",[182],"《Fluid -23- 添加 Umami 统计》"," 的文章里的方案是可供参考的。",[37,2064,2066],{"className":494,"code":2065,"language":496,"meta":28,"style":28},"const imgs = [\n    \"https://example.com/1.jpg\",\n    \"https://example.com/2.jpg\",\n    \"https://example.com/3.jpg\",\n    \"https://example.com/4.jpg\",\n    \"https://example.com/5.jpg\",\n    \"https://example.com/6.jpg\",\n    \"https://example.com/7.jpg\",\n    \"https://example.com/8.jpg\",\n    \"https://example.com/9.jpg\",\n    \"https://example.com/10.jpg\",\n    \"https://example.com/11.jpg\",\n    \"https://example.com/12.jpg\",\n    \"https://example.com/13.jpg\",\n    \"https://example.com/14.jpg\",\n    \"https://example.com/15.jpg\",\n    \"https://example.com/16.jpg\",\n    \"https://example.com/17.jpg\",\n    \"https://example.com/18.jpg\",\n    \"https://example.com/19.jpg\",\n    \"https://example.com/20.jpg\",\n]\n\nconst luck_img = imgs[Math.floor(Math.random() * imgs.length)]\nconst banner = document.getElementById('banner')\nbanner.style.background = `url(${luck_img}) center center / cover no-repeat`\n",[44,2067,2068,2079,2086,2093,2100,2107,2114,2121,2128,2135,2142,2149,2156,2163,2170,2177,2184,2191,2198,2205,2212,2219,2224,2228,2273,2298],{"__ignoreMap":28},[84,2069,2070,2072,2075,2077],{"class":86,"line":87},[84,2071,516],{"class":515},[84,2073,2074],{"class":519}," imgs",[84,2076,524],{"class":523},[84,2078,1418],{"class":120},[84,2080,2081,2084],{"class":86,"line":93},[84,2082,2083],{"class":141},"    \"https://example.com/1.jpg\"",[84,2085,145],{"class":120},[84,2087,2088,2091],{"class":86,"line":99},[84,2089,2090],{"class":141},"    \"https://example.com/2.jpg\"",[84,2092,145],{"class":120},[84,2094,2095,2098],{"class":86,"line":105},[84,2096,2097],{"class":141},"    \"https://example.com/3.jpg\"",[84,2099,145],{"class":120},[84,2101,2102,2105],{"class":86,"line":158},[84,2103,2104],{"class":141},"    \"https://example.com/4.jpg\"",[84,2106,145],{"class":120},[84,2108,2109,2112],{"class":86,"line":164},[84,2110,2111],{"class":141},"    \"https://example.com/5.jpg\"",[84,2113,145],{"class":120},[84,2115,2116,2119],{"class":86,"line":261},[84,2117,2118],{"class":141},"    \"https://example.com/6.jpg\"",[84,2120,145],{"class":120},[84,2122,2123,2126],{"class":86,"line":269},[84,2124,2125],{"class":141},"    \"https://example.com/7.jpg\"",[84,2127,145],{"class":120},[84,2129,2130,2133],{"class":86,"line":280},[84,2131,2132],{"class":141},"    \"https://example.com/8.jpg\"",[84,2134,145],{"class":120},[84,2136,2137,2140],{"class":86,"line":288},[84,2138,2139],{"class":141},"    \"https://example.com/9.jpg\"",[84,2141,145],{"class":120},[84,2143,2144,2147],{"class":86,"line":659},[84,2145,2146],{"class":141},"    \"https://example.com/10.jpg\"",[84,2148,145],{"class":120},[84,2150,2151,2154],{"class":86,"line":664},[84,2152,2153],{"class":141},"    \"https://example.com/11.jpg\"",[84,2155,145],{"class":120},[84,2157,2158,2161],{"class":86,"line":678},[84,2159,2160],{"class":141},"    \"https://example.com/12.jpg\"",[84,2162,145],{"class":120},[84,2164,2165,2168],{"class":86,"line":690},[84,2166,2167],{"class":141},"    \"https://example.com/13.jpg\"",[84,2169,145],{"class":120},[84,2171,2172,2175],{"class":86,"line":698},[84,2173,2174],{"class":141},"    \"https://example.com/14.jpg\"",[84,2176,145],{"class":120},[84,2178,2179,2182],{"class":86,"line":706},[84,2180,2181],{"class":141},"    \"https://example.com/15.jpg\"",[84,2183,145],{"class":120},[84,2185,2186,2189],{"class":86,"line":712},[84,2187,2188],{"class":141},"    \"https://example.com/16.jpg\"",[84,2190,145],{"class":120},[84,2192,2193,2196],{"class":86,"line":720},[84,2194,2195],{"class":141},"    \"https://example.com/17.jpg\"",[84,2197,145],{"class":120},[84,2199,2200,2203],{"class":86,"line":730},[84,2201,2202],{"class":141},"    \"https://example.com/18.jpg\"",[84,2204,145],{"class":120},[84,2206,2207,2210],{"class":86,"line":740},[84,2208,2209],{"class":141},"    \"https://example.com/19.jpg\"",[84,2211,145],{"class":120},[84,2213,2214,2217],{"class":86,"line":753},[84,2215,2216],{"class":141},"    \"https://example.com/20.jpg\"",[84,2218,145],{"class":120},[84,2220,2221],{"class":86,"line":759},[84,2222,2223],{"class":120},"]\n",[84,2225,2226],{"class":86,"line":3},[84,2227,510],{"emptyLinePlaceholder":509},[84,2229,2230,2232,2235,2237,2239,2241,2244,2246,2249,2251,2253,2255,2258,2261,2264,2266,2268,2270],{"class":86,"line":769},[84,2231,516],{"class":515},[84,2233,2234],{"class":519}," luck_img",[84,2236,524],{"class":523},[84,2238,2074],{"class":627},[84,2240,1566],{"class":120},[84,2242,2243],{"class":549},"Math",[84,2245,552],{"class":120},[84,2247,2248],{"class":527},"floor",[84,2250,531],{"class":120},[84,2252,2243],{"class":549},[84,2254,552],{"class":120},[84,2256,2257],{"class":527},"random",[84,2259,2260],{"class":120},"() ",[84,2262,2263],{"class":523},"*",[84,2265,2074],{"class":549},[84,2267,552],{"class":120},[84,2269,1545],{"class":126},[84,2271,2272],{"class":120},")]\n",[84,2274,2275,2277,2280,2282,2285,2287,2290,2292,2295],{"class":86,"line":775},[84,2276,516],{"class":515},[84,2278,2279],{"class":519}," banner",[84,2281,524],{"class":523},[84,2283,2284],{"class":549}," document",[84,2286,552],{"class":120},[84,2288,2289],{"class":527},"getElementById",[84,2291,531],{"class":120},[84,2293,2294],{"class":141},"'banner'",[84,2296,2297],{"class":120},")\n",[84,2299,2300,2303,2305,2307,2309,2312,2314,2317,2319,2322,2324],{"class":86,"line":783},[84,2301,2302],{"class":549},"banner",[84,2304,552],{"class":120},[84,2306,431],{"class":555},[84,2308,552],{"class":120},[84,2310,2311],{"class":126},"background",[84,2313,524],{"class":523},[84,2315,2316],{"class":141}," `url(",[84,2318,1363],{"class":1362},[84,2320,2321],{"class":627},"luck_img",[84,2323,1369],{"class":1362},[84,2325,2326],{"class":141},") center center / cover no-repeat`\n",[16,2328,2329],{"id":2329},"成果",[20,2331,2332,2333,2337],{},"博客能够在不引入外部 api 的情况下通过 js 自主实现随机的 banner 背景图，",[2334,2335,2336],"del",{},"但 pagespeed 的测速结果并没有明显好转","，因为 pagespeed 模拟了低速 4G 的访问速度，无论如何都无法提升大文件的加载速度。不过避免了多一次网络请求后，打开页面时的加载速度确实有提升。",[16,2339,2340],{"id":2340},"参见",[1613,2342,2343],{},[1616,2344,2345],{},[178,2346,2349],{"href":2347,"rel":2348},"https://vercel.com/guides/how-can-i-improve-serverless-function-lambda-cold-start-performance-on-vercel",[182],"How can I improve function cold start performance on Vercel?",[431,2351,2352],{},"html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html pre.shiki code .sJa8x, html code.shiki .sJa8x{--shiki-default:#E45649;--shiki-dark:#E06C75}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .s-4uI, html code.shiki .s-4uI{--shiki-default:#383A42;--shiki-dark:#98C379}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sLKXg, html code.shiki .sLKXg{--shiki-default:#A626A4;--shiki-dark:#C678DD}html pre.shiki code .sNmU0, html code.shiki .sNmU0{--shiki-default:#986801;--shiki-dark:#E5C07B}html pre.shiki code .s_Sar, html code.shiki .s_Sar{--shiki-default:#0184BC;--shiki-dark:#56B6C2}html pre.shiki code .sz0mV, html code.shiki .sz0mV{--shiki-default:#383A42;--shiki-dark:#E06C75}html pre.shiki code .s7GmK, html code.shiki .s7GmK{--shiki-default:#383A42;--shiki-dark:#E5C07B}html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .s2QsP, html code.shiki .s2QsP{--shiki-default:#E45649;--shiki-dark:#E5C07B}html pre.shiki code .sAOjX, html code.shiki .sAOjX{--shiki-default:#CA1243;--shiki-dark:#C678DD}",{"title":28,"searchDepth":93,"depth":93,"links":2354},[2355,2360,2364,2365],{"id":1906,"depth":93,"text":1907,"children":2356},[2357,2358,2359],{"id":1926,"depth":99,"text":1927},{"id":1947,"depth":99,"text":1947},{"id":1953,"depth":99,"text":1954},{"id":1960,"depth":93,"text":1961,"children":2361},[2362,2363],{"id":1967,"depth":99,"text":1967},{"id":1991,"depth":99,"text":1992},{"id":2329,"depth":93,"text":2329},{"id":2340,"depth":93,"text":2340},{"title":2367,"date":2368,"path":2369,"tags":2370,"body":2375},"使用向日葵智能插座 C2 用电记录推算宿舍上次烧水时间","2024-09-24 05:17:47","/2024/09/24/log-last-water-boiling-water-with-sunlogin-adapter-power-consumption",[2371,2372,2373,2374],"IoT","Python","Hardware","Bot",{"type":13,"value":2376,"toc":2641},[2377,2383,2389,2396,2412,2418,2425,2431,2446,2449,2455,2458,2532,2546,2549,2626,2629,2632,2638],[20,2378,2379,2380],{},"我宿舍里入口处有一张公用的桌子，上面有一个烧水壶。根据生活经验，当用手摸烧水壶外壳能感受到明显热量时，水壶内的水大概是两小时内烧的，绝对能喝；但如果用手摸烧水壶外壳感受不到明显热量时，水壶内的水就不知道是什么时候烧的了，可能是三小时前，也可能是三天前。此时，在不寻求外部科学仪器介入的情况下，唯一能做的是询问寝室成员上一次水是谁烧的，是什么时候烧的。但寝室成员并不总是能够及时回答，可能在睡觉，也可能不在寝室里，",[2334,2381,2382],{},"还有可能出现记忆错乱。",[20,2384,2385,2386],{},"因此，",[1626,2387,2388],{},"我们需要一种可靠的方案获取上一次烧水时间。",[20,2390,2391,2392,2395],{},"前两天陪黄老板出门吃宵夜的时候和他提到了这个难题，我提出在烧水壶附近加装物理按钮，按动时向局域网内的 HomeServer 发送请求记录准确的烧水时间。他提出可以在烧水壶前加装智能插座，使用智能插座的耗电量来推算上一次烧水时间。这是一个可行方案，上次烧水时间不需要分钟级的精准度，",[1626,2393,2394],{},"小时级的精准度在这个需求上完全够用","，这是一个更好的方案。",[20,2397,2398,2399,2403,2404,2407,2408,2411],{},"在「",[178,2400,2402],{"href":2401},"/2023/11/01/unveiling-sunflower-smart-adapter-api-intercepting-utilizing-api-android-packet-sniffing/","使用 Root 后的安卓手机获取向日葵智能插座 C2 的开关 api","」这篇文章中，我有过抓包向日葵官方 app 的流量数据的经验，这一次直接故技重施。很可惜，我发现",[1626,2405,2406],{},"用电量数据","并不能直接从局域网内向智能插座获取，",[1626,2409,2410],{},"必须要从向日葵官方的服务器拉下来","。其实想想也知道，用电数据一旦精确到小时级，日积月累下来会对硬件的存储提出一定的挑战，而比较合理的方案就是由硬件向官方的服务器每小时通信一次记录下来。",[20,2413,2414],{},[26,2415],{"alt":2416,"src":2417},"抓包","https://static.031130.xyz/uploads/2024/09/24/bd6b0bdbab1da.webp",[20,2419,2420,2421,2424],{},"不过好消息是，",[1626,2422,2423],{},"官方服务器的这个接口并没有进行鉴权","，不需要进行额外的操作，一条 curl 命令都能下载下来。",[20,2426,2427],{},[26,2428],{"alt":2429,"src":2430},"curl 命令下载用电量数据","https://static.031130.xyz/uploads/2024/09/24/bf4ad72e00044.webp",[37,2432,2436],{"className":2433,"code":2434,"language":2435,"meta":28,"style":28},"language-shell shiki shiki-themes one-light one-dark-pro","https://sl-api.oray.com/smartplug/powerconsumes/${SN}\n","shell",[44,2437,2438],{"__ignoreMap":28},[84,2439,2440,2443],{"class":86,"line":87},[84,2441,2442],{"class":527},"https://sl-api.oray.com/smartplug/powerconsumes/$",[84,2444,2445],{"class":141},"{SN}\n",[20,2447,2448],{},"SN 码也不需要自己去抓包，直接在官方应用的设备关于页面就能看到。",[20,2450,2451],{},[26,2452],{"alt":2453,"src":2454},"关于页面","https://static.031130.xyz/uploads/2024/09/24/edca671f53571.webp",[20,2456,2457],{},"json 数据的结构很明显，最外层是一个 Array，里面有若干个 object",[37,2459,2461],{"className":111,"code":2460,"language":113,"meta":28,"style":28},"[\n  {\n    \"consume\": 0,\n    \"starttime\": 1727125200,\n    \"endtime\": 1727128740,\n    \"index\": 0\n  },\n...\n]\n",[44,2462,2463,2468,2473,2484,2496,2508,2517,2522,2528],{"__ignoreMap":28},[84,2464,2465],{"class":86,"line":87},[84,2466,2467],{"class":120},"[\n",[84,2469,2470],{"class":86,"line":93},[84,2471,2472],{"class":120},"  {\n",[84,2474,2475,2478,2480,2482],{"class":86,"line":99},[84,2476,2477],{"class":126},"    \"consume\"",[84,2479,138],{"class":120},[84,2481,1569],{"class":240},[84,2483,145],{"class":120},[84,2485,2486,2489,2491,2494],{"class":86,"line":105},[84,2487,2488],{"class":126},"    \"starttime\"",[84,2490,138],{"class":120},[84,2492,2493],{"class":240},"1727125200",[84,2495,145],{"class":120},[84,2497,2498,2501,2503,2506],{"class":86,"line":158},[84,2499,2500],{"class":126},"    \"endtime\"",[84,2502,138],{"class":120},[84,2504,2505],{"class":240},"1727128740",[84,2507,145],{"class":120},[84,2509,2510,2513,2515],{"class":86,"line":164},[84,2511,2512],{"class":126},"    \"index\"",[84,2514,138],{"class":120},[84,2516,241],{"class":240},[84,2518,2519],{"class":86,"line":261},[84,2520,2521],{"class":120},"  },\n",[84,2523,2524],{"class":86,"line":269},[84,2525,2527],{"class":2526},"sUNH4","...\n",[84,2529,2530],{"class":86,"line":280},[84,2531,2223],{"class":120},[1613,2533,2534,2537,2540,2543],{},[1616,2535,2536],{},"consume: 这段时间消耗的用电量，单位 Wh",[1616,2538,2539],{},"starttime: 开始时间，unix 时间戳",[1616,2541,2542],{},"endtime: 结束时间，unix 时间戳",[1616,2544,2545],{},"index: 智能插座的第几个孔位（为插排预留的参数，智能插座只有 0 这一个位置）",[20,2547,2548],{},"所以我们要做的就是每小时下载一次这个 json 文件，需要时从 json 中寻找上一次用电量较高的小时，取那个小时的 starttime 时间戳转换为东八区人类可读的时间即可。",[37,2550,2554],{"className":2551,"code":2552,"language":2553,"meta":28,"style":28},"language-python shiki shiki-themes one-light one-dark-pro","def last_water():\n    with open('power.json', 'r') as f:\n        powers = json.load(f)\n    for i in powers:\n        if i.get('consume') >= 30:\n            t = i.get('starttime')\n            break\n    last_water_time = datetime.datetime.fromtimestamp(t)\n    now = datetime.datetime.now()\n    time_delta = now - last_water_time\n    sec = time_delta.total_seconds()\n    hours = sec / 3600\n    lwt_str = last_water_time.strftime('%m月%d日%H点')\n    return f\"上次烧水时间为「{lwt_str}」，距离现在「{hours:.2f}」小时\"\n","python",[44,2555,2556,2561,2566,2571,2576,2581,2586,2591,2596,2601,2606,2611,2616,2621],{"__ignoreMap":28},[84,2557,2558],{"class":86,"line":87},[84,2559,2560],{},"def last_water():\n",[84,2562,2563],{"class":86,"line":93},[84,2564,2565],{},"    with open('power.json', 'r') as f:\n",[84,2567,2568],{"class":86,"line":99},[84,2569,2570],{},"        powers = json.load(f)\n",[84,2572,2573],{"class":86,"line":105},[84,2574,2575],{},"    for i in powers:\n",[84,2577,2578],{"class":86,"line":158},[84,2579,2580],{},"        if i.get('consume') >= 30:\n",[84,2582,2583],{"class":86,"line":164},[84,2584,2585],{},"            t = i.get('starttime')\n",[84,2587,2588],{"class":86,"line":261},[84,2589,2590],{},"            break\n",[84,2592,2593],{"class":86,"line":269},[84,2594,2595],{},"    last_water_time = datetime.datetime.fromtimestamp(t)\n",[84,2597,2598],{"class":86,"line":280},[84,2599,2600],{},"    now = datetime.datetime.now()\n",[84,2602,2603],{"class":86,"line":288},[84,2604,2605],{},"    time_delta = now - last_water_time\n",[84,2607,2608],{"class":86,"line":659},[84,2609,2610],{},"    sec = time_delta.total_seconds()\n",[84,2612,2613],{"class":86,"line":664},[84,2614,2615],{},"    hours = sec / 3600\n",[84,2617,2618],{"class":86,"line":678},[84,2619,2620],{},"    lwt_str = last_water_time.strftime('%m月%d日%H点')\n",[84,2622,2623],{"class":86,"line":690},[84,2624,2625],{},"    return f\"上次烧水时间为「{lwt_str}」，距离现在「{hours:.2f}」小时\"\n",[20,2627,2628],{},"至于每小时下载的任务，我这里是使用 crontab + curl 命令实现的，用 python 写个死循环跑也可以。",[20,2630,2631],{},"那么数据都取到了，剩下的就是人机交互的部分，这部分夸张点的可以写 web，写小程序，甚至写个安卓应用挂个桌面插件，想怎么做都可以。我这里就单纯将数据接入 qqbot 扔到了宿舍群，简单写了个关键词触发。",[20,2633,2634],{},[26,2635],{"alt":2636,"src":2637},"宿舍群","https://static.031130.xyz/uploads/2024/09/24/1a0637d61471f.webp",[431,2639,2640],{},"html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html pre.shiki code .sJa8x, html code.shiki .sJa8x{--shiki-default:#E45649;--shiki-dark:#E06C75}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}html pre.shiki code .sUNH4, html code.shiki .sUNH4{--shiki-default:white;--shiki-dark:#FFFFFF}",{"title":28,"searchDepth":93,"depth":93,"links":2642},[],{"title":2644,"date":2645,"path":2646,"tags":2647,"body":2653},"使用 Caddy 反向代理 dockerhub 需要几步？","2024-09-21 01:29:17","/2024/09/21/how-to-reverse-proxy-dockerhub-with-caddy",[2648,2649,2650,2651,2652],"Caddy","Docker","mitmproxy","Network","Linux",{"type":13,"value":2654,"toc":3025},[2655,2658,2661,2664,2667,2675,2678,2687,2735,2738,2754,2760,2778,2781,2787,2790,2796,2800,2806,2811,2816,2822,2827,2830,2836,2839,2932,2935,2939,2950,2965,2968,2982,2985,2987,2994,3000,3003,3006,3008,3015,3022],[20,2656,2657],{},"几个月前，由于众所周知的原因，中国大陆境内失去了所有公共的 dockerhub 镜像（或者说是反代）。网上随即涌现了一批自建 dockerhub 反代的，有用 Cloudflare Workers 的，也有用 nginx 的，甚至还有自建 registry 的。",[20,2659,2660],{},"我使用 caddy 去反代 dockerhub 的原因很简单，一是配置简单，二是通过一台国内访问质量良好的境外服务器进行反向代理的访问质量会比 Cloudflare 减速器好很多。",[20,2662,2663],{},"在网上一阵搜索后，并没有发现任何使用 caddy 去反向代理 dockerhub 的文章， 于是本文应运而生。",[16,2665,2666],{"id":2666},"遇事不决先抓包",[20,2668,2669,2670,2674],{},"为了弄清楚 docker 从 dockerhub 拉取镜像的过程，需要先对网络请求进行抓包。具体的抓包方案我使用的是 mitmproxy，手动信任 ssl 证书的操作在「",[178,2671,2673],{"href":2672},"/2024/02/29/capture-https-traffic-on-linux-with-mitmproxy/","在 Linux 下使用 mitmproxy 抓取 HTTPS 流量","」这篇文章中已经讲过了，只需要配置 dockerd 使用本机的 8080 端口进行代理即可。",[20,2676,2677],{},"docker pull 时，是调用 dockerd 进行镜像拉取，而 dockerd 在绝大多数发行版上都是由 systemd 进程直接启用了，在 shell 中直接设置环境变量的方式并不能进行代理，而透明代理的方案会引入大量无关请求，增加流量分析的难度。",[20,2679,2680,2681,2686],{},"比较好的方案是直接在 systemd 服务这一层设置好代理的环境变量，我这里参考的是「",[178,2682,2685],{"href":2683,"rel":2684},"https://yeasy.gitbook.io/docker_practice/advanced_network/http_https_proxy",[182],"配置 HTTP/HTTPS 网络代理 | Docker — 从入门到实践","」这篇文章。",[37,2688,2690],{"className":1631,"code":2689,"language":1633,"meta":28,"style":28},"$ cat /etc/systemd/system/docker.service.d/http-proxy.conf \n\n[Service]\nEnvironment=\"HTTP_PROXY=http://127.0.0.1:8080\"\nEnvironment=\"HTTPS_PROXY=http://127.0.0.1:8080\"\n",[44,2691,2692,2706,2710,2715,2726],{"__ignoreMap":28},[84,2693,2694,2697,2700,2703],{"class":86,"line":87},[84,2695,2696],{"class":527},"$",[84,2698,2699],{"class":141}," cat",[84,2701,2702],{"class":141}," /etc/systemd/system/docker.service.d/http-proxy.conf",[84,2704,2705],{"class":120}," \n",[84,2707,2708],{"class":86,"line":93},[84,2709,510],{"emptyLinePlaceholder":509},[84,2711,2712],{"class":86,"line":99},[84,2713,2714],{"class":120},"[Service]\n",[84,2716,2717,2720,2723],{"class":86,"line":105},[84,2718,2719],{"class":126},"Environment",[84,2721,824],{"class":2722},"sknuh",[84,2724,2725],{"class":141},"\"HTTP_PROXY=http://127.0.0.1:8080\"\n",[84,2727,2728,2730,2732],{"class":86,"line":158},[84,2729,2719],{"class":126},[84,2731,824],{"class":2722},[84,2733,2734],{"class":141},"\"HTTPS_PROXY=http://127.0.0.1:8080\"\n",[20,2736,2737],{},"重启完 systemd 服务，万事俱备，我拉取了一个较小的 docker 镜像，顺利得到了预期的结果。",[37,2739,2741],{"className":1631,"code":2740,"language":1633,"meta":28,"style":28},"docker pull svenstaro/miniserve:latest\n",[44,2742,2743],{"__ignoreMap":28},[84,2744,2745,2748,2751],{"class":86,"line":87},[84,2746,2747],{"class":527},"docker",[84,2749,2750],{"class":141}," pull",[84,2752,2753],{"class":141}," svenstaro/miniserve:latest\n",[20,2755,2756],{},[26,2757],{"alt":2758,"src":2759},"抓包结果","https://static.031130.xyz/uploads/2024/09/21/acbee0959be78.webp",[20,2761,2762,2763,2766,2767,2770,2771,2773,2774,2777],{},"docker 先请求了 ",[44,2764,2765],{},"registry-1.docker.io"," 得到了 401 的 http 状态码后转去访问了 ",[44,2768,2769],{},"auth.docker.io","，得到了 Authorization 字段以后重新请求 ",[44,2772,2765],{},"，获取源数据后被 307 转发到了 ",[44,2775,2776],{},"production.cloudflare.docker.com"," 上。",[20,2779,2780],{},"其中，第一个 401 响应的响应头中，用 WWW-Authenticate 字段标注了 auth 鉴权的域",[20,2782,2783],{},[26,2784],{"alt":2785,"src":2786},"WWW-Authenticate","https://static.031130.xyz/uploads/2024/09/21/e905c55e76a25.webp",[20,2788,2789],{},"而 307 响应的响应头中，使用 Location 字段标注了被转发到的 url",[20,2791,2792],{},[26,2793],{"alt":2794,"src":2795},"Location","https://static.031130.xyz/uploads/2024/09/21/6a2e0bf6a8284.webp",[16,2797,2799],{"id":2798},"三个域名都需要反向代理嘛","三个域名都需要反向代理嘛？",[20,2801,2802,2803,2805],{},"首先，作为我们提供反代服务的入口，",[44,2804,2765],{}," 一定是需要代理的，否则就无法提供反代后的服务。",[20,2807,2808,2810],{},[44,2809,2769],{}," 只出现了一次，需要反代嘛？根据它在境内的访问质量，恐怕是需要反代的。",[20,2812,2813],{},[26,2814],{"alt":2769,"src":2815},"https://static.031130.xyz/uploads/2024/09/21/4a70c8cac6a4c.webp",[20,2817,2818,2819,2821],{},"最后就是 ",[44,2820,2776],{}," ，这也是我们最终下载镜像文件的地方，99% 以上的流量都是打到这里去的，而 cloudflare 在境内的访问质量是知名的减速器，完全不可以信赖。",[20,2823,2824],{},[1626,2825,2826],{},"因此，三个域名都需要反代。",[16,2828,2829],{"id":2829},"如何反代",[20,2831,2832,2833,2835],{},"分三个域名各自代理，在 ",[44,2834,2765],{}," 那一块进行特殊处理，将响应头中的 WWW-Authenticate 和 location 字段进行关键词替换，将原域名替换为反代域名。",[20,2837,2838],{},"最后的成果大概就是这个样子:",[37,2840,2844],{"className":2841,"code":2842,"language":2843,"meta":28,"style":28},"language-caddyfile shiki shiki-themes one-light one-dark-pro","dockerhub.example.com {\n    reverse_proxy https://registry-1.docker.io {\n        header_up Host {http.reverse_proxy.upstream.hostport}\n        header_down WWW-Authenticate \"https://auth.docker.io\" \"https://auth.dockerhub.example.com\"\n        header_down Location \"https://production.cloudflare.docker.com\" \"https://production.dockerhub.example.com\"\n    }\n}\n\nauth.dockerhub.example.com {\n    reverse_proxy https://auth.docker.io {\n        header_up Host {http.reverse_proxy.upstream.hostport}\n    }\n}\n\nproduction.dockerhub.example.com {\n    reverse_proxy https://production.cloudflare.docker.com {\n        header_up Host {http.reverse_proxy.upstream.hostport}\n    }\n}\n","caddyfile",[44,2845,2846,2851,2856,2861,2866,2871,2876,2880,2884,2889,2894,2898,2902,2906,2910,2915,2920,2924,2928],{"__ignoreMap":28},[84,2847,2848],{"class":86,"line":87},[84,2849,2850],{},"dockerhub.example.com {\n",[84,2852,2853],{"class":86,"line":93},[84,2854,2855],{},"    reverse_proxy https://registry-1.docker.io {\n",[84,2857,2858],{"class":86,"line":99},[84,2859,2860],{},"        header_up Host {http.reverse_proxy.upstream.hostport}\n",[84,2862,2863],{"class":86,"line":105},[84,2864,2865],{},"        header_down WWW-Authenticate \"https://auth.docker.io\" \"https://auth.dockerhub.example.com\"\n",[84,2867,2868],{"class":86,"line":158},[84,2869,2870],{},"        header_down Location \"https://production.cloudflare.docker.com\" \"https://production.dockerhub.example.com\"\n",[84,2872,2873],{"class":86,"line":164},[84,2874,2875],{},"    }\n",[84,2877,2878],{"class":86,"line":261},[84,2879,167],{},[84,2881,2882],{"class":86,"line":269},[84,2883,510],{"emptyLinePlaceholder":509},[84,2885,2886],{"class":86,"line":280},[84,2887,2888],{},"auth.dockerhub.example.com {\n",[84,2890,2891],{"class":86,"line":288},[84,2892,2893],{},"    reverse_proxy https://auth.docker.io {\n",[84,2895,2896],{"class":86,"line":659},[84,2897,2860],{},[84,2899,2900],{"class":86,"line":664},[84,2901,2875],{},[84,2903,2904],{"class":86,"line":678},[84,2905,167],{},[84,2907,2908],{"class":86,"line":690},[84,2909,510],{"emptyLinePlaceholder":509},[84,2911,2912],{"class":86,"line":698},[84,2913,2914],{},"production.dockerhub.example.com {\n",[84,2916,2917],{"class":86,"line":706},[84,2918,2919],{},"    reverse_proxy https://production.cloudflare.docker.com {\n",[84,2921,2922],{"class":86,"line":712},[84,2923,2860],{},[84,2925,2926],{"class":86,"line":720},[84,2927,2875],{},[84,2929,2930],{"class":86,"line":730},[84,2931,167],{},[20,2933,2934],{},"PS: 推荐后两个域名使用 CNAME 解析到第一个域名，这样后面更改解析的时候更方便一些。",[16,2936,2938],{"id":2937},"如何设置-docker-使用反代","如何设置 docker 使用反代",[20,2940,2941,2942,2945,2946,2949],{},"可以直接在 ",[44,2943,2944],{},"docker pull"," 和 ",[44,2947,2948],{},"docker run"," 的命令前加上域名，比如原本的",[37,2951,2953],{"className":1631,"code":2952,"language":1633,"meta":28,"style":28},"docker run hello-world\n",[44,2954,2955],{"__ignoreMap":28},[84,2956,2957,2959,2962],{"class":86,"line":87},[84,2958,2747],{"class":527},[84,2960,2961],{"class":141}," run",[84,2963,2964],{"class":141}," hello-world\n",[20,2966,2967],{},"改成",[37,2969,2971],{"className":1631,"code":2970,"language":1633,"meta":28,"style":28},"docker run dockerhub.example.com/library/hello-world\n",[44,2972,2973],{"__ignoreMap":28},[84,2974,2975,2977,2979],{"class":86,"line":87},[84,2976,2747],{"class":527},[84,2978,2961],{"class":141},[84,2980,2981],{"class":141}," dockerhub.example.com/library/hello-world\n",[20,2983,2984],{},"（如果原本的镜像由 dockerhub 官方提供，没有用户名，路径需要加上 “library”）",[415,2986],{},[20,2988,2989,2990,2993],{},"也可以选择以前的方案，创建或修改 ",[44,2991,2992],{},"/etc/docker/daemon.json","：",[37,2995,2998],{"className":2996,"code":2997,"language":42},[40],"sudo mkdir -p /etc/docker\nsudo tee /etc/docker/daemon.json \u003C\u003C-'EOF'\n{\n    \"registry-mirrors\": [\n        \"https://dockerhub.example.com\"\n    ]\n}\nEOF\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n",[44,2999,2997],{"__ignoreMap":28},[16,3001,3002],{"id":3002},"验证",[20,3004,3005],{},"一般来说，能够在中国大陆境内的网络质量下较快地下拉镜像本身就代表反代成功了，但保险起见可以像本文的第一部分一样抓个包，看看是不是都走了自己的域名了。",[16,3007,2340],{"id":2340},[20,3009,3010],{},[178,3011,3014],{"href":3012,"rel":3013},"https://gist.github.com/y0ngb1n/7e8f16af3242c7815e7ca2f0833d3ea6",[182],"国内的 Docker Hub 镜像加速器，由国内教育机构与各大云服务商提供的镜像加速服务",[20,3016,3017],{},[178,3018,3021],{"href":3019,"rel":3020},"https://blog.hentioe.dev/posts/unhindered-accesss-dockerhub.html",[182],"无障碍访问 Docker Hub 的各种方法（自建 registry、Cloudflare 加速、Nginx 反代、代理 Docker 网络） | 绅士喵",[431,3023,3024],{},"html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html pre.shiki code .sJa8x, html code.shiki .sJa8x{--shiki-default:#E45649;--shiki-dark:#E06C75}html pre.shiki code .sknuh, html code.shiki .sknuh{--shiki-default:#383A42;--shiki-dark:#56B6C2}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":28,"searchDepth":93,"depth":93,"links":3026},[3027,3028,3029,3030,3031,3032],{"id":2666,"depth":93,"text":2666},{"id":2798,"depth":93,"text":2799},{"id":2829,"depth":93,"text":2829},{"id":2937,"depth":93,"text":2938},{"id":3002,"depth":93,"text":3002},{"id":2340,"depth":93,"text":2340},{"title":3034,"date":3035,"path":3036,"tags":3037,"body":3041},"将 Rustdesk 中继服务从 Arch Linux 迁移至 Debian","2024-09-20 03:20:38","/2024/09/20/migrate-rustdesk-server-from-arch-to-debian",[3038,3039,3040,2652],"Rustdesk","Archlinux","Debian",{"type":13,"value":3042,"toc":3447},[3043,3046,3062,3065,3069,3083,3089,3093,3338,3341,3344,3347,3350,3357,3363,3366,3372,3375,3378,3393,3396,3399,3405,3410,3413,3416,3421,3423,3444],[20,3044,3045],{},"这次迁移主要是两方面原因，一来是我安装了 Arch Linux 的 VPS 要过期了，续费价格过高，没有续费的动力；二来是手上的 VPS 越来越多，逐渐意识到 Arch Linux 作为滚动发行版，每次安装新的软件都要 Syu 甚至重启系统，实在没有太多的精力去维护，这也是为什么 Arch Linux 仅适合桌面发行版。",[20,3047,3048,3049,3054,3055,2945,3058,3061],{},"原本在 Arch Linux 上部署的 rustdesk server 我是按照这篇文章「",[178,3050,3053],{"href":3051,"rel":3052},"https://www.liyp.cc/archives/1698241638248",[182],"(水文)在archlinux上部署rustdesk服务端","」部署的。本身没什么技巧，直接从 AUR 安装现成的 rustdesk-server-bin，使用 systemctl 启用 ",[44,3056,3057],{},"rustdesk-server-hbbr.service",[44,3059,3060],{},"rustdesk-server-hbbs.service"," 两个服务即可。",[20,3063,3064],{},"Rustdesk 现在为 Debian 提供了官方的中继服务器的 deb 包，而谷歌搜了一圈都是下载 zip 包使用 pm2 管理进程，故写下此文。",[16,3066,3068],{"id":3067},"备份原服务器的-rustdesk-密钥","备份原服务器的 rustdesk 密钥",[20,3070,3071,3072,3075,3076,2945,3079,3082],{},"AUR 上的安装方案将密钥放在 ",[44,3073,3074],{},"/opt/rustdesk-server/data"," 直接用 sftp 获取 ",[44,3077,3078],{},"id_ed25519",[44,3080,3081],{},"id_ed25519.pub"," 两个文件就行。如果是新部署的没有这两个文件也没事，rustdesk 服务在启动时可以自动创建，只不过需要在客户端重新输入公钥。",[37,3084,3087],{"className":3085,"code":3086,"language":42},[40],"sftp> get /opt/rustdesk-server/data/id_ed25519\nsftp> get /opt/rustdesk-server/data/id_ed25519.pub\n",[44,3088,3086],{"__ignoreMap":28},[16,3090,3092],{"id":3091},"在新服务器上下载-deb-包进行安装","在新服务器上下载 deb 包，进行安装",[37,3094,3096],{"className":1631,"code":3095,"language":1633,"meta":28,"style":28},"apt install -y curl jq\nversion=$(curl -s https://api.github.com/repos/rustdesk/rustdesk-server/releases/latest | jq .tag_name)\n\nhbbr_deb=rustdesk-server-hbbr_${version:1:-1}_amd64.deb\nhbbs_deb=rustdesk-server-hbbs_${version:1:-1}_amd64.deb\nutils_deb=rustdesk-server-utils_${version:1:-1}_amd64.deb\n\nfor deb in $hbbr_deb $hbbs_deb $utils_deb\ndo\n    curl -L https://github.com/rustdesk/rustdesk-server/releases/download/${version:1:-1}/${deb} -o ${deb}\ndone\n\ndpkg -i $hbbr_deb $hbbs_deb $utils_deb\nrm $hbbr_deb $hbbs_deb $utils_deb\n",[44,3097,3098,3114,3144,3148,3178,3204,3230,3234,3254,3259,3304,3309,3313,3327],{"__ignoreMap":28},[84,3099,3100,3103,3105,3108,3111],{"class":86,"line":87},[84,3101,3102],{"class":527},"apt",[84,3104,1643],{"class":141},[84,3106,3107],{"class":240}," -y",[84,3109,3110],{"class":141}," curl",[84,3112,3113],{"class":141}," jq\n",[84,3115,3116,3119,3121,3124,3127,3130,3133,3136,3139,3142],{"class":86,"line":93},[84,3117,3118],{"class":126},"version",[84,3120,824],{"class":2722},[84,3122,3123],{"class":120},"$(",[84,3125,3126],{"class":527},"curl",[84,3128,3129],{"class":240}," -s",[84,3131,3132],{"class":141}," https://api.github.com/repos/rustdesk/rustdesk-server/releases/latest",[84,3134,3135],{"class":120}," | ",[84,3137,3138],{"class":527},"jq",[84,3140,3141],{"class":141}," .tag_name",[84,3143,2297],{"class":120},[84,3145,3146],{"class":86,"line":99},[84,3147,510],{"emptyLinePlaceholder":509},[84,3149,3150,3153,3155,3158,3161,3163,3165,3168,3171,3173,3175],{"class":86,"line":105},[84,3151,3152],{"class":126},"hbbr_deb",[84,3154,824],{"class":2722},[84,3156,3157],{"class":141},"rustdesk-server-hbbr_",[84,3159,1363],{"class":3160},"sr1Ac",[84,3162,3118],{"class":126},[84,3164,685],{"class":120},[84,3166,3167],{"class":126},"1",[84,3169,3170],{"class":120},":-",[84,3172,3167],{"class":126},[84,3174,1369],{"class":3160},[84,3176,3177],{"class":141},"_amd64.deb\n",[84,3179,3180,3183,3185,3188,3190,3192,3194,3196,3198,3200,3202],{"class":86,"line":158},[84,3181,3182],{"class":126},"hbbs_deb",[84,3184,824],{"class":2722},[84,3186,3187],{"class":141},"rustdesk-server-hbbs_",[84,3189,1363],{"class":3160},[84,3191,3118],{"class":126},[84,3193,685],{"class":120},[84,3195,3167],{"class":126},[84,3197,3170],{"class":120},[84,3199,3167],{"class":126},[84,3201,1369],{"class":3160},[84,3203,3177],{"class":141},[84,3205,3206,3209,3211,3214,3216,3218,3220,3222,3224,3226,3228],{"class":86,"line":164},[84,3207,3208],{"class":126},"utils_deb",[84,3210,824],{"class":2722},[84,3212,3213],{"class":141},"rustdesk-server-utils_",[84,3215,1363],{"class":3160},[84,3217,3118],{"class":126},[84,3219,685],{"class":120},[84,3221,3167],{"class":126},[84,3223,3170],{"class":120},[84,3225,3167],{"class":126},[84,3227,1369],{"class":3160},[84,3229,3177],{"class":141},[84,3231,3232],{"class":86,"line":261},[84,3233,510],{"emptyLinePlaceholder":509},[84,3235,3236,3239,3242,3245,3248,3251],{"class":86,"line":269},[84,3237,3238],{"class":515},"for",[84,3240,3241],{"class":126}," deb",[84,3243,3244],{"class":515}," in",[84,3246,3247],{"class":126}," $hbbr_deb",[84,3249,3250],{"class":126}," $hbbs_deb",[84,3252,3253],{"class":126}," $utils_deb\n",[84,3255,3256],{"class":86,"line":280},[84,3257,3258],{"class":515},"do\n",[84,3260,3261,3264,3267,3270,3272,3274,3276,3278,3280,3282,3284,3287,3289,3292,3294,3297,3300,3302],{"class":86,"line":288},[84,3262,3263],{"class":527},"    curl",[84,3265,3266],{"class":240}," -L",[84,3268,3269],{"class":141}," https://github.com/rustdesk/rustdesk-server/releases/download/",[84,3271,1363],{"class":3160},[84,3273,3118],{"class":126},[84,3275,685],{"class":120},[84,3277,3167],{"class":126},[84,3279,3170],{"class":120},[84,3281,3167],{"class":126},[84,3283,1369],{"class":3160},[84,3285,3286],{"class":141},"/",[84,3288,1363],{"class":3160},[84,3290,3291],{"class":126},"deb",[84,3293,1369],{"class":3160},[84,3295,3296],{"class":240}," -o",[84,3298,3299],{"class":3160}," ${",[84,3301,3291],{"class":126},[84,3303,167],{"class":3160},[84,3305,3306],{"class":86,"line":659},[84,3307,3308],{"class":515},"done\n",[84,3310,3311],{"class":86,"line":664},[84,3312,510],{"emptyLinePlaceholder":509},[84,3314,3315,3318,3321,3323,3325],{"class":86,"line":678},[84,3316,3317],{"class":527},"dpkg",[84,3319,3320],{"class":240}," -i",[84,3322,3247],{"class":126},[84,3324,3250],{"class":126},[84,3326,3253],{"class":126},[84,3328,3329,3332,3334,3336],{"class":86,"line":690},[84,3330,3331],{"class":527},"rm",[84,3333,3247],{"class":126},[84,3335,3250],{"class":126},[84,3337,3253],{"class":126},[20,3339,3340],{},"简单写了个脚本，仅适用 amd64，也没做异常处理，如果服务器在大陆境内需要自行解决 github 下载时可能出现的网络波动问题。",[20,3342,3343],{},"dpkg 安装结束后默认会启用两个 systemd 服务并开机自启，所以不需要使用 systemctl 手动启用。",[16,3345,3346],{"id":3346},"替换密钥",[20,3348,3349],{},"将刚刚备份的一个公钥和一个私钥放在 Debian 服务器的相应路径，问题是这个路径在哪里呢？",[20,3351,3352,3353,3356],{},"通过翻看 rustdesk 的 service 文件，我们大概可以定位到是在 ",[44,3354,3355],{},"/var/lib/rustdesk-server/"," 路径下的",[20,3358,3359],{},[26,3360],{"alt":3361,"src":3362},"service 问价你","https://static.031130.xyz/uploads/2024/09/20/59d08477f8a0b.webp",[20,3364,3365],{},"直接对两个密钥文件进行替换，重启 rustdesk 相关的两个 service 服务即可。",[20,3367,3368],{},[26,3369],{"alt":3370,"src":3371},"密钥文件","https://static.031130.xyz/uploads/2024/09/20/527c5b1151a57.webp",[16,3373,3374],{"id":3374},"开放服务器防火墙",[20,3376,3377],{},"需要开放如下端口，记得 Linux 的防火墙和云服务供应商面板（如果有的话）上都要开放",[1613,3379,3380,3387],{},[1616,3381,3382,3383,3386],{},"TCP(",[1626,3384,3385],{},"21115, 21116, 21117, 21118, 21119",")",[1616,3388,3389,3390,3386],{},"UDP(",[1626,3391,3392],{},"21116",[16,3394,3395],{"id":3395},"客户端设置",[20,3397,3398],{},"id_ed25519.pub 对应客户端中需要输入的 Key，大概长成下面这个样子",[37,3400,3403],{"className":3401,"code":3402,"language":42},[40],"rdtxujYccRLXwXOu2KR3V9cGgP51lEdSmE0HJHGNkn4=\n",[44,3404,3402],{"__ignoreMap":28},[20,3406,3407],{},[26,3408],{"alt":28,"src":3409},"https://static.031130.xyz/uploads/2024/09/20/cc715265b8b37.webp",[20,3411,3412],{},"ID 服务器直接输入中继服务器的 ip 或者解析到对应 ip 的域名即可，另外两个地址可以不填，RustDesk会自动推导（如果没有特别设定）",[16,3414,3415],{"id":3415},"成果展示",[20,3417,3418],{},[26,3419],{"alt":3415,"src":3420},"https://static.031130.xyz/uploads/2024/09/20/3108bac773390.webp",[16,3422,2340],{"id":2340},[1613,3424,3425,3432,3439],{},[1616,3426,3427],{},[178,3428,3431],{"href":3429,"rel":3430},"https://rustdesk.com/docs/en/self-host/rustdesk-server-oss/install/",[182],"Installation :: Documentation for RustDesk",[1616,3433,3434],{},[178,3435,3438],{"href":3436,"rel":3437},"https://catcat.blog/rustdesk-debian-%E8%87%AA%E5%BB%BA%E4%B8%AD%E7%BB%A7%E6%9C%8D%E5%8A%A1%E5%99%A8.html",[182],"RustDesk Debian 自建中继服务器",[1616,3440,3441],{},[178,3442,3053],{"href":3051,"rel":3443},[182],[431,3445,3446],{},"html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}html pre.shiki code .sJa8x, html code.shiki .sJa8x{--shiki-default:#E45649;--shiki-dark:#E06C75}html pre.shiki code .sknuh, html code.shiki .sknuh{--shiki-default:#383A42;--shiki-dark:#56B6C2}html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html pre.shiki code .sr1Ac, html code.shiki .sr1Ac{--shiki-default:#E45649;--shiki-dark:#ABB2BF}html pre.shiki code .sLKXg, html code.shiki .sLKXg{--shiki-default:#A626A4;--shiki-dark:#C678DD}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":28,"searchDepth":93,"depth":93,"links":3448},[3449,3450,3451,3452,3453,3454,3455],{"id":3067,"depth":93,"text":3068},{"id":3091,"depth":93,"text":3092},{"id":3346,"depth":93,"text":3346},{"id":3374,"depth":93,"text":3374},{"id":3395,"depth":93,"text":3395},{"id":3415,"depth":93,"text":3415},{"id":2340,"depth":93,"text":2340},{"title":3457,"date":3458,"path":3459,"tags":3460,"body":3463},"自建图床小记五——费用","2024-08-21 00:05:15","/2024/08/21/self-host-cdn-expense",[3461,3462],"图床","CDN",{"type":13,"value":3464,"toc":3512},[3465,3468,3474,3477,3480,3486,3492,3498,3501,3507],[20,3466,3467],{},"自建的图床自 8 月 13 日正式启用以来，已经过去一周多了，具体的费用是多少呢？原先设计的 0 额外投入有没有实现呢？",[20,3469,3470],{},[26,3471],{"alt":3472,"src":3473},"博客访问统计","https://static.031130.xyz/uploads/2024/08/21/74605f0ef84a9.webp",[20,3475,3476],{},"这是我的博客访问统计，在这一周多的时间内，一共有 1.27k 次页面访问，被 671 个访客访问了 769 次，平均下来每天也有一百多次的页面访问。",[20,3478,3479],{},"Cloudflare Workers 和 Cloudflare R2 的免费额度全部够用，用量全部小于免费额度的 1%。",[20,3481,3482],{},[26,3483],{"alt":3484,"src":3485},"R2 的免费额度","https://static.031130.xyz/uploads/2024/08/21/96ec475817b8f.webp",[20,3487,3488],{},[26,3489],{"alt":3490,"src":3491},"R2 的用量","https://static.031130.xyz/uploads/2024/08/21/7a26d392e6c90.webp",[20,3493,3494],{},[26,3495],{"alt":3496,"src":3497},"Cloudflare Workers 过去 24 小时内的请求次数","https://static.031130.xyz/uploads/2024/08/21/31a7f3c316b47.webp",[20,3499,3500],{},"又拍云联盟每年可以领取 67 元的代金券，平均每天控制在 0.18 元内即可实现白嫖。",[20,3502,3503],{},[26,3504],{"alt":3505,"src":3506},"又拍云账单","https://static.031130.xyz/uploads/2024/08/21/1c4eeac63a2fb.webp",[20,3508,3509],{},[1626,3510,3511],{},"可以看到，这一套图床在我博客当前和可见的未来的访客情况下，在不被人恶意刷流量的情况下，是不需要投入除域名续费以外的其他成本的。",{"title":28,"searchDepth":93,"depth":93,"links":3513},[],{"title":3515,"date":3516,"path":3517,"tags":3518,"body":3520},"自建图床小记四——上传脚本编写与图片迁移","2024-08-20 23:12:30","/2024/08/20/picbed-upload-script-and-image-migration",[2372,3461,2652,2651,3519],"Shell Script",{"type":13,"value":3521,"toc":5080},[3522,3539,3542,3545,3551,4550,4577,4613,4623,4626,4726,4747,4755,4758,4761,4764,5077],[20,3523,3524,3525,3529,3530,2945,3534,3538],{},"前面三篇小记分别讲述了",[178,3526,3528],{"href":3527},"/2024/08/12/new-picbed-based-on-cloudflare-and-upyun/","图床的整体架构","、",[178,3531,3533],{"href":3532},"/2024/08/13/build-restful-api-for-cloudflare-r2-with-cloudflare-workers/","用 Workers 构建 Restful API",[178,3535,3537],{"href":3536},"/2024/08/14/auto-renew-ssl-certificate-and-deploy-to-upyun-with-github-action/","自动更新部署 SSL 证书","，这一篇c处理由此带来的图片上传问题，主要是要为 Typora 编写自动上传脚本，并为博客原有的图片进行迁移。",[16,3540,3541],{"id":3541},"自动上传脚本",[20,3543,3544],{},"主要还是给 Typora 用，实现这种效果",[20,3546,3547],{},[26,3548],{"alt":3549,"src":3550},"Typora 自动上传","https://static.031130.xyz/uploads/2024/08/12/62f3b881e3c4c.gif",[37,3552,3554],{"className":1631,"code":3553,"language":1633,"meta":28,"style":28},"#!/bin/bash\n\nHOST=\"upload.example.com\"\nCDN_HOST=\"cdn.example.com\"\nUPLOAD_PATH=\"uploads/$(date +%Y/%m/%d)\"\n\nAUTH_TOKEN=\"1145141919810\"\n\nwebp=false\nmarkdown=false\nforce=false\nkeep=false\n\nwhile getopts \":mwfkp:\" opt; do\n    case $opt in\n        m|markdown) markdown=true ;;\n        w|webp) webp=true ;;\n        f|force) force=true ;;\n        k|keep) keep=true ;;\n        p|path) UPLOAD_PATH=$OPTARG ;;\n        \\?) echo \"Invalid option: -$OPTARG\" ;;\n    esac\ndone\nshift $((OPTIND - 1))\n\nUPLOAD_URL=\"https://$HOST/$UPLOAD_PATH\"\nif [[ \"$UPLOAD_URL\" == */ ]]; then\n    UPLOAD_URL=\"${UPLOAD_URL%?}\"\nfi\n\nfor image in \"$@\"; do\n    if [ \"$webp\" = true ]; then\n        cwebp -quiet \"$image\" -o \"${image%.*}.webp\"\n        image=\"${image%.*}.webp\"\n    fi\n\n    if [ \"$keep\" = true ]; then\n        FILENAME=$(basename \"$image\")\n    else\n        FILENAME=\"$(md5sum $image | cut -c 1-13).$(basename $image | cut -d. -f2)\"\n    fi\n\n    if [ \"$force\" = true ]; then\n        UPLOAD_RESPONSE=$(curl -s -X PUT \"${UPLOAD_URL}/$FILENAME\" \\\n            -w \"%{http_code}\" \\\n            --data-binary @\"$image\" \\\n            -H \"X-Custom-Auth-Key: $AUTH_TOKEN\" \\\n            -H \"Overwrite: true\" \\\n        )\n    else\n        UPLOAD_RESPONSE=$(curl -s -X PUT \"${UPLOAD_URL}/$FILENAME\" \\\n            -w \"%{http_code}\" \\\n            --data-binary @\"$image\" \\\n            -H \"X-Custom-Auth-Key: $AUTH_TOKEN\" \\\n        )\n    fi\n\n    UPLOAD_HTTP_CODE=$(echo \"$UPLOAD_RESPONSE\" | tail -n1)\n    \n    if [ -n \"$UPLOAD_PATH\" ]; then\n        CDN_URL=\"https://$CDN_HOST/$UPLOAD_PATH/$FILENAME\"\n    else\n        CDN_URL=\"https://$CDN_HOST/$FILENAME\"\n    fi\n\n    if [ \"$UPLOAD_HTTP_CODE\" != \"200\" ]; then\n        echo \"上传失败: $UPLOAD_RESPONSE\"\n        continue\n    fi\n\n    if [ \"$markdown\" = true ]; then\n        echo \"![](${CDN_URL})\"\n    else\n        echo \"${CDN_URL}\"\n    fi\ndone\n",[44,3555,3556,3561,3565,3575,3585,3601,3605,3615,3619,3629,3638,3647,3656,3660,3679,3690,3712,3731,3750,3769,3790,3809,3814,3818,3838,3842,3863,3887,3911,3916,3920,3941,3966,4001,4024,4029,4033,4054,4074,4079,4123,4127,4131,4152,4189,4199,4213,4228,4237,4242,4246,4278,4286,4298,4310,4314,4318,4322,4350,4355,4374,4396,4401,4418,4423,4428,4452,4465,4471,4476,4481,4503,4520,4525,4540,4545],{"__ignoreMap":28},[84,3557,3558],{"class":86,"line":87},[84,3559,3560],{"class":503},"#!/bin/bash\n",[84,3562,3563],{"class":86,"line":93},[84,3564,510],{"emptyLinePlaceholder":509},[84,3566,3567,3570,3572],{"class":86,"line":99},[84,3568,3569],{"class":126},"HOST",[84,3571,824],{"class":2722},[84,3573,3574],{"class":141},"\"upload.example.com\"\n",[84,3576,3577,3580,3582],{"class":86,"line":105},[84,3578,3579],{"class":126},"CDN_HOST",[84,3581,824],{"class":2722},[84,3583,3584],{"class":141},"\"cdn.example.com\"\n",[84,3586,3587,3590,3592,3595,3598],{"class":86,"line":158},[84,3588,3589],{"class":126},"UPLOAD_PATH",[84,3591,824],{"class":2722},[84,3593,3594],{"class":141},"\"uploads/$(",[84,3596,3597],{"class":527},"date",[84,3599,3600],{"class":141}," +%Y/%m/%d)\"\n",[84,3602,3603],{"class":86,"line":164},[84,3604,510],{"emptyLinePlaceholder":509},[84,3606,3607,3610,3612],{"class":86,"line":261},[84,3608,3609],{"class":126},"AUTH_TOKEN",[84,3611,824],{"class":2722},[84,3613,3614],{"class":141},"\"1145141919810\"\n",[84,3616,3617],{"class":86,"line":269},[84,3618,510],{"emptyLinePlaceholder":509},[84,3620,3621,3624,3626],{"class":86,"line":280},[84,3622,3623],{"class":126},"webp",[84,3625,824],{"class":2722},[84,3627,3628],{"class":141},"false\n",[84,3630,3631,3634,3636],{"class":86,"line":288},[84,3632,3633],{"class":126},"markdown",[84,3635,824],{"class":2722},[84,3637,3628],{"class":141},[84,3639,3640,3643,3645],{"class":86,"line":659},[84,3641,3642],{"class":126},"force",[84,3644,824],{"class":2722},[84,3646,3628],{"class":141},[84,3648,3649,3652,3654],{"class":86,"line":664},[84,3650,3651],{"class":126},"keep",[84,3653,824],{"class":2722},[84,3655,3628],{"class":141},[84,3657,3658],{"class":86,"line":678},[84,3659,510],{"emptyLinePlaceholder":509},[84,3661,3662,3665,3668,3671,3674,3677],{"class":86,"line":690},[84,3663,3664],{"class":515},"while",[84,3666,3667],{"class":523}," getopts",[84,3669,3670],{"class":141}," \":mwfkp:\"",[84,3672,3673],{"class":141}," opt",[84,3675,3676],{"class":120},"; ",[84,3678,3258],{"class":515},[84,3680,3681,3684,3687],{"class":86,"line":698},[84,3682,3683],{"class":515},"    case",[84,3685,3686],{"class":126}," $opt",[84,3688,3689],{"class":515}," in\n",[84,3691,3692,3696,3699,3701,3703,3705,3707,3709],{"class":86,"line":706},[84,3693,3695],{"class":3694},"sDaw7","        m",[84,3697,3698],{"class":120},"|",[84,3700,3633],{"class":3694},[84,3702,1283],{"class":120},[84,3704,3633],{"class":126},[84,3706,824],{"class":2722},[84,3708,2033],{"class":141},[84,3710,3711],{"class":120}," ;;\n",[84,3713,3714,3717,3719,3721,3723,3725,3727,3729],{"class":86,"line":712},[84,3715,3716],{"class":3694},"        w",[84,3718,3698],{"class":120},[84,3720,3623],{"class":3694},[84,3722,1283],{"class":120},[84,3724,3623],{"class":126},[84,3726,824],{"class":2722},[84,3728,2033],{"class":141},[84,3730,3711],{"class":120},[84,3732,3733,3736,3738,3740,3742,3744,3746,3748],{"class":86,"line":720},[84,3734,3735],{"class":3694},"        f",[84,3737,3698],{"class":120},[84,3739,3642],{"class":3694},[84,3741,1283],{"class":120},[84,3743,3642],{"class":126},[84,3745,824],{"class":2722},[84,3747,2033],{"class":141},[84,3749,3711],{"class":120},[84,3751,3752,3755,3757,3759,3761,3763,3765,3767],{"class":86,"line":730},[84,3753,3754],{"class":3694},"        k",[84,3756,3698],{"class":120},[84,3758,3651],{"class":3694},[84,3760,1283],{"class":120},[84,3762,3651],{"class":126},[84,3764,824],{"class":2722},[84,3766,2033],{"class":141},[84,3768,3711],{"class":120},[84,3770,3771,3774,3776,3779,3781,3783,3785,3788],{"class":86,"line":740},[84,3772,3773],{"class":3694},"        p",[84,3775,3698],{"class":120},[84,3777,3778],{"class":3694},"path",[84,3780,1283],{"class":120},[84,3782,3589],{"class":126},[84,3784,824],{"class":2722},[84,3786,3787],{"class":126},"$OPTARG",[84,3789,3711],{"class":120},[84,3791,3792,3795,3797,3800,3803,3805,3807],{"class":86,"line":753},[84,3793,3794],{"class":523},"        \\?",[84,3796,1283],{"class":120},[84,3798,3799],{"class":523},"echo",[84,3801,3802],{"class":141}," \"Invalid option: -",[84,3804,3787],{"class":126},[84,3806,2041],{"class":141},[84,3808,3711],{"class":120},[84,3810,3811],{"class":86,"line":759},[84,3812,3813],{"class":515},"    esac\n",[84,3815,3816],{"class":86,"line":3},[84,3817,3308],{"class":515},[84,3819,3820,3823,3826,3829,3832,3835],{"class":86,"line":769},[84,3821,3822],{"class":523},"shift",[84,3824,3825],{"class":120}," $((",[84,3827,3828],{"class":527},"OPTIND",[84,3830,3831],{"class":141}," -",[84,3833,3834],{"class":240}," 1",[84,3836,3837],{"class":120},"))\n",[84,3839,3840],{"class":86,"line":775},[84,3841,510],{"emptyLinePlaceholder":509},[84,3843,3844,3847,3849,3852,3855,3857,3860],{"class":86,"line":783},[84,3845,3846],{"class":126},"UPLOAD_URL",[84,3848,824],{"class":2722},[84,3850,3851],{"class":141},"\"https://",[84,3853,3854],{"class":126},"$HOST",[84,3856,3286],{"class":141},[84,3858,3859],{"class":126},"$UPLOAD_PATH",[84,3861,3862],{"class":141},"\"\n",[84,3864,3865,3868,3871,3873,3876,3878,3881,3884],{"class":86,"line":793},[84,3866,3867],{"class":515},"if",[84,3869,3870],{"class":120}," [[ ",[84,3872,2041],{"class":141},[84,3874,3875],{"class":126},"$UPLOAD_URL",[84,3877,2041],{"class":141},[84,3879,3880],{"class":2722}," ==",[84,3882,3883],{"class":120}," */ ]]; ",[84,3885,3886],{"class":515},"then\n",[84,3888,3889,3892,3894,3896,3899,3901,3904,3907,3909],{"class":86,"line":809},[84,3890,3891],{"class":126},"    UPLOAD_URL",[84,3893,824],{"class":2722},[84,3895,2041],{"class":141},[84,3897,1363],{"class":3898},"sTIpt",[84,3900,3846],{"class":126},[84,3902,3903],{"class":120},"%",[84,3905,3906],{"class":141},"?",[84,3908,1369],{"class":3898},[84,3910,3862],{"class":141},[84,3912,3913],{"class":86,"line":842},[84,3914,3915],{"class":515},"fi\n",[84,3917,3918],{"class":86,"line":868},[84,3919,510],{"emptyLinePlaceholder":509},[84,3921,3922,3924,3927,3929,3932,3935,3937,3939],{"class":86,"line":874},[84,3923,3238],{"class":515},[84,3925,3926],{"class":126}," image",[84,3928,3244],{"class":515},[84,3930,3931],{"class":141}," \"",[84,3933,3934],{"class":598},"$@",[84,3936,2041],{"class":141},[84,3938,3676],{"class":120},[84,3940,3258],{"class":515},[84,3942,3943,3946,3949,3951,3954,3956,3958,3961,3964],{"class":86,"line":887},[84,3944,3945],{"class":515},"    if",[84,3947,3948],{"class":120}," [ ",[84,3950,2041],{"class":141},[84,3952,3953],{"class":126},"$webp",[84,3955,2041],{"class":141},[84,3957,524],{"class":2722},[84,3959,3960],{"class":240}," true",[84,3962,3963],{"class":120}," ]; ",[84,3965,3886],{"class":515},[84,3967,3968,3971,3974,3976,3979,3981,3983,3985,3987,3990,3992,3994,3996,3998],{"class":86,"line":895},[84,3969,3970],{"class":527},"        cwebp",[84,3972,3973],{"class":240}," -quiet",[84,3975,3931],{"class":141},[84,3977,3978],{"class":126},"$image",[84,3980,2041],{"class":141},[84,3982,3296],{"class":240},[84,3984,3931],{"class":141},[84,3986,1363],{"class":3898},[84,3988,3989],{"class":126},"image",[84,3991,3903],{"class":120},[84,3993,552],{"class":141},[84,3995,2263],{"class":120},[84,3997,1369],{"class":3898},[84,3999,4000],{"class":141},".webp\"\n",[84,4002,4003,4006,4008,4010,4012,4014,4016,4018,4020,4022],{"class":86,"line":901},[84,4004,4005],{"class":126},"        image",[84,4007,824],{"class":2722},[84,4009,2041],{"class":141},[84,4011,1363],{"class":3898},[84,4013,3989],{"class":126},[84,4015,3903],{"class":120},[84,4017,552],{"class":141},[84,4019,2263],{"class":120},[84,4021,1369],{"class":3898},[84,4023,4000],{"class":141},[84,4025,4026],{"class":86,"line":906},[84,4027,4028],{"class":515},"    fi\n",[84,4030,4031],{"class":86,"line":928},[84,4032,510],{"emptyLinePlaceholder":509},[84,4034,4035,4037,4039,4041,4044,4046,4048,4050,4052],{"class":86,"line":936},[84,4036,3945],{"class":515},[84,4038,3948],{"class":120},[84,4040,2041],{"class":141},[84,4042,4043],{"class":126},"$keep",[84,4045,2041],{"class":141},[84,4047,524],{"class":2722},[84,4049,3960],{"class":240},[84,4051,3963],{"class":120},[84,4053,3886],{"class":515},[84,4055,4056,4059,4061,4063,4066,4068,4070,4072],{"class":86,"line":976},[84,4057,4058],{"class":126},"        FILENAME",[84,4060,824],{"class":2722},[84,4062,3123],{"class":120},[84,4064,4065],{"class":527},"basename",[84,4067,3931],{"class":141},[84,4069,3978],{"class":126},[84,4071,2041],{"class":141},[84,4073,2297],{"class":120},[84,4075,4076],{"class":86,"line":996},[84,4077,4078],{"class":515},"    else\n",[84,4080,4081,4083,4085,4088,4091,4094,4097,4100,4103,4106,4108,4110,4112,4114,4117,4120],{"class":86,"line":1018},[84,4082,4058],{"class":126},[84,4084,824],{"class":2722},[84,4086,4087],{"class":141},"\"$(",[84,4089,4090],{"class":527},"md5sum",[84,4092,4093],{"class":126}," $image",[84,4095,4096],{"class":120}," |",[84,4098,4099],{"class":527}," cut",[84,4101,4102],{"class":240}," -c",[84,4104,4105],{"class":141}," 1-13).$(",[84,4107,4065],{"class":527},[84,4109,4093],{"class":126},[84,4111,4096],{"class":120},[84,4113,4099],{"class":527},[84,4115,4116],{"class":240}," -d.",[84,4118,4119],{"class":240}," -f2",[84,4121,4122],{"class":141},")\"\n",[84,4124,4125],{"class":86,"line":1024},[84,4126,4028],{"class":515},[84,4128,4129],{"class":86,"line":1029},[84,4130,510],{"emptyLinePlaceholder":509},[84,4132,4133,4135,4137,4139,4142,4144,4146,4148,4150],{"class":86,"line":1045},[84,4134,3945],{"class":515},[84,4136,3948],{"class":120},[84,4138,2041],{"class":141},[84,4140,4141],{"class":126},"$force",[84,4143,2041],{"class":141},[84,4145,524],{"class":2722},[84,4147,3960],{"class":240},[84,4149,3963],{"class":120},[84,4151,3886],{"class":515},[84,4153,4154,4157,4159,4161,4163,4165,4168,4171,4173,4175,4177,4179,4181,4184,4186],{"class":86,"line":1056},[84,4155,4156],{"class":126},"        UPLOAD_RESPONSE",[84,4158,824],{"class":2722},[84,4160,3123],{"class":120},[84,4162,3126],{"class":527},[84,4164,3129],{"class":240},[84,4166,4167],{"class":240}," -X",[84,4169,4170],{"class":141}," PUT",[84,4172,3931],{"class":141},[84,4174,1363],{"class":3898},[84,4176,3846],{"class":126},[84,4178,1369],{"class":3898},[84,4180,3286],{"class":141},[84,4182,4183],{"class":126},"$FILENAME",[84,4185,2041],{"class":141},[84,4187,4188],{"class":523}," \\\n",[84,4190,4191,4194,4197],{"class":86,"line":1074},[84,4192,4193],{"class":240},"            -w",[84,4195,4196],{"class":141}," \"%{http_code}\"",[84,4198,4188],{"class":523},[84,4200,4201,4204,4207,4209,4211],{"class":86,"line":1082},[84,4202,4203],{"class":240},"            --data-binary",[84,4205,4206],{"class":141}," @\"",[84,4208,3978],{"class":126},[84,4210,2041],{"class":141},[84,4212,4188],{"class":523},[84,4214,4215,4218,4221,4224,4226],{"class":86,"line":1092},[84,4216,4217],{"class":240},"            -H",[84,4219,4220],{"class":141}," \"X-Custom-Auth-Key: ",[84,4222,4223],{"class":126},"$AUTH_TOKEN",[84,4225,2041],{"class":141},[84,4227,4188],{"class":523},[84,4229,4230,4232,4235],{"class":86,"line":1108},[84,4231,4217],{"class":240},[84,4233,4234],{"class":141}," \"Overwrite: true\"",[84,4236,4188],{"class":523},[84,4238,4239],{"class":86,"line":1115},[84,4240,4241],{"class":120},"        )\n",[84,4243,4244],{"class":86,"line":1126},[84,4245,4078],{"class":515},[84,4247,4248,4250,4252,4254,4256,4258,4260,4262,4264,4266,4268,4270,4272,4274,4276],{"class":86,"line":1134},[84,4249,4156],{"class":126},[84,4251,824],{"class":2722},[84,4253,3123],{"class":120},[84,4255,3126],{"class":527},[84,4257,3129],{"class":240},[84,4259,4167],{"class":240},[84,4261,4170],{"class":141},[84,4263,3931],{"class":141},[84,4265,1363],{"class":3898},[84,4267,3846],{"class":126},[84,4269,1369],{"class":3898},[84,4271,3286],{"class":141},[84,4273,4183],{"class":126},[84,4275,2041],{"class":141},[84,4277,4188],{"class":523},[84,4279,4280,4282,4284],{"class":86,"line":1151},[84,4281,4193],{"class":240},[84,4283,4196],{"class":141},[84,4285,4188],{"class":523},[84,4287,4288,4290,4292,4294,4296],{"class":86,"line":1159},[84,4289,4203],{"class":240},[84,4291,4206],{"class":141},[84,4293,3978],{"class":126},[84,4295,2041],{"class":141},[84,4297,4188],{"class":523},[84,4299,4300,4302,4304,4306,4308],{"class":86,"line":1164},[84,4301,4217],{"class":240},[84,4303,4220],{"class":141},[84,4305,4223],{"class":126},[84,4307,2041],{"class":141},[84,4309,4188],{"class":523},[84,4311,4312],{"class":86,"line":1180},[84,4313,4241],{"class":120},[84,4315,4316],{"class":86,"line":1197},[84,4317,4028],{"class":515},[84,4319,4320],{"class":86,"line":1213},[84,4321,510],{"emptyLinePlaceholder":509},[84,4323,4324,4327,4329,4331,4333,4335,4338,4340,4342,4345,4348],{"class":86,"line":1218},[84,4325,4326],{"class":126},"    UPLOAD_HTTP_CODE",[84,4328,824],{"class":2722},[84,4330,3123],{"class":120},[84,4332,3799],{"class":523},[84,4334,3931],{"class":141},[84,4336,4337],{"class":126},"$UPLOAD_RESPONSE",[84,4339,2041],{"class":141},[84,4341,3135],{"class":120},[84,4343,4344],{"class":527},"tail",[84,4346,4347],{"class":240}," -n1",[84,4349,2297],{"class":120},[84,4351,4352],{"class":86,"line":1223},[84,4353,4354],{"class":120},"    \n",[84,4356,4357,4359,4361,4364,4366,4368,4370,4372],{"class":86,"line":1228},[84,4358,3945],{"class":515},[84,4360,3948],{"class":120},[84,4362,4363],{"class":2722},"-n",[84,4365,3931],{"class":141},[84,4367,3859],{"class":126},[84,4369,2041],{"class":141},[84,4371,3963],{"class":120},[84,4373,3886],{"class":515},[84,4375,4376,4379,4381,4383,4386,4388,4390,4392,4394],{"class":86,"line":1233},[84,4377,4378],{"class":126},"        CDN_URL",[84,4380,824],{"class":2722},[84,4382,3851],{"class":141},[84,4384,4385],{"class":126},"$CDN_HOST",[84,4387,3286],{"class":141},[84,4389,3859],{"class":126},[84,4391,3286],{"class":141},[84,4393,4183],{"class":126},[84,4395,3862],{"class":141},[84,4397,4399],{"class":86,"line":4398},62,[84,4400,4078],{"class":515},[84,4402,4404,4406,4408,4410,4412,4414,4416],{"class":86,"line":4403},63,[84,4405,4378],{"class":126},[84,4407,824],{"class":2722},[84,4409,3851],{"class":141},[84,4411,4385],{"class":126},[84,4413,3286],{"class":141},[84,4415,4183],{"class":126},[84,4417,3862],{"class":141},[84,4419,4421],{"class":86,"line":4420},64,[84,4422,4028],{"class":515},[84,4424,4426],{"class":86,"line":4425},65,[84,4427,510],{"emptyLinePlaceholder":509},[84,4429,4431,4433,4435,4437,4440,4442,4445,4448,4450],{"class":86,"line":4430},66,[84,4432,3945],{"class":515},[84,4434,3948],{"class":120},[84,4436,2041],{"class":141},[84,4438,4439],{"class":126},"$UPLOAD_HTTP_CODE",[84,4441,2041],{"class":141},[84,4443,4444],{"class":2722}," !=",[84,4446,4447],{"class":141}," \"200\"",[84,4449,3963],{"class":120},[84,4451,3886],{"class":515},[84,4453,4455,4458,4461,4463],{"class":86,"line":4454},67,[84,4456,4457],{"class":523},"        echo",[84,4459,4460],{"class":141}," \"上传失败: ",[84,4462,4337],{"class":126},[84,4464,3862],{"class":141},[84,4466,4468],{"class":86,"line":4467},68,[84,4469,4470],{"class":515},"        continue\n",[84,4472,4474],{"class":86,"line":4473},69,[84,4475,4028],{"class":515},[84,4477,4479],{"class":86,"line":4478},70,[84,4480,510],{"emptyLinePlaceholder":509},[84,4482,4484,4486,4488,4490,4493,4495,4497,4499,4501],{"class":86,"line":4483},71,[84,4485,3945],{"class":515},[84,4487,3948],{"class":120},[84,4489,2041],{"class":141},[84,4491,4492],{"class":126},"$markdown",[84,4494,2041],{"class":141},[84,4496,524],{"class":2722},[84,4498,3960],{"class":240},[84,4500,3963],{"class":120},[84,4502,3886],{"class":515},[84,4504,4506,4508,4511,4513,4516,4518],{"class":86,"line":4505},72,[84,4507,4457],{"class":523},[84,4509,4510],{"class":141}," \"![](",[84,4512,1363],{"class":3898},[84,4514,4515],{"class":126},"CDN_URL",[84,4517,1369],{"class":3898},[84,4519,4122],{"class":141},[84,4521,4523],{"class":86,"line":4522},73,[84,4524,4078],{"class":515},[84,4526,4528,4530,4532,4534,4536,4538],{"class":86,"line":4527},74,[84,4529,4457],{"class":523},[84,4531,3931],{"class":141},[84,4533,1363],{"class":3898},[84,4535,4515],{"class":126},[84,4537,1369],{"class":3898},[84,4539,3862],{"class":141},[84,4541,4543],{"class":86,"line":4542},75,[84,4544,4028],{"class":515},[84,4546,4548],{"class":86,"line":4547},76,[84,4549,3308],{"class":515},[20,4551,4552,4553,3529,4556,2945,4559,4562,4563,4565,4566,2945,4568,4570,4571,2945,4573,4576],{},"这一次使用 Cloudflare Workers 构建的 Restful API 很有意思，使用了 ",[44,4554,4555],{},"GET",[44,4557,4558],{},"PUT",[44,4560,4561],{},"DELETE"," 三个请求类型。",[44,4564,4555],{}," 请求很常见，是用来获取图片的，",[44,4567,4558],{},[44,4569,4561],{}," 在 web 开发就不如 ",[44,4572,4555],{},[44,4574,4575],{},"POST"," 常见了，这一次也是让我体会到了这两个 http verb 在 Storage Bucket 操作中是有多么形象了。",[1613,4578,4579,4602],{},[1616,4580,4581,4583,4584,4587,4588,4591,4592,4595,4596,4598,4599,4601],{},[44,4582,4558],{}," - 从直观上来讲，就是将某个文件放到目标位置",[4585,4586],"br",{},"打个比方，我向 ",[44,4589,4590],{},"https://cdn.example.com/img/avatar.webp"," 打了一个请求，并带上了要上传的文件，那就意味着我将这个文件放到了 Storage Bucket 的 ",[44,4593,4594],{},"/img/avatar.webp"," 这个位置，所以我在上传后，应该就能用 ",[44,4597,4555],{}," 请求我刚才 ",[44,4600,4558],{}," 的那个 URL 获取我刚才上传的东西。如果那个路径存在文件，那么默认行为是直接覆盖。",[1616,4603,4604,4606,4607,4609,4610,4612],{},[44,4605,4561],{}," - 删除目标路径的文件",[4585,4608],{},"和 ",[44,4611,4558],{}," 一样，我在请求对应 URL 后，Storage Bucket 中对应 URL 路径的资源应该被删除。",[20,4614,4615,2945,4617,4619,4620,4622],{},[44,4616,4558],{},[44,4618,4561],{}," 这两个 Http Verb 让我们更像是在对一个真实的文件系统进行操作，而非那种传统的使用 ",[44,4621,4575],{}," 上传的图床那样，我们并不通过 POST 请求上传一个文件，然后获取资源最终被放置位置的 URL —— 我们自己决定资源被存放的位置。",[20,4624,4625],{},"在这个 Shell 脚本中，引入了四个可选选项",[37,4627,4629],{"className":1631,"code":4628,"language":1633,"meta":28,"style":28},"    m|markdown) markdown=true ;;\n    w|webp) webp=true ;;\n    f|force) force=true ;;\n    k|keep) keep=true ;;\n    p|path) UPLOAD_PATH=$OPTARG ;;\n",[44,4630,4631,4650,4669,4688,4707],{"__ignoreMap":28},[84,4632,4633,4636,4638,4640,4642,4644,4646,4648],{"class":86,"line":87},[84,4634,4635],{"class":527},"    m",[84,4637,3698],{"class":120},[84,4639,3633],{"class":527},[84,4641,1283],{"class":120},[84,4643,3633],{"class":126},[84,4645,824],{"class":2722},[84,4647,2033],{"class":141},[84,4649,3711],{"class":120},[84,4651,4652,4655,4657,4659,4661,4663,4665,4667],{"class":86,"line":93},[84,4653,4654],{"class":527},"    w",[84,4656,3698],{"class":120},[84,4658,3623],{"class":527},[84,4660,1283],{"class":120},[84,4662,3623],{"class":126},[84,4664,824],{"class":2722},[84,4666,2033],{"class":141},[84,4668,3711],{"class":120},[84,4670,4671,4674,4676,4678,4680,4682,4684,4686],{"class":86,"line":99},[84,4672,4673],{"class":527},"    f",[84,4675,3698],{"class":120},[84,4677,3642],{"class":527},[84,4679,1283],{"class":120},[84,4681,3642],{"class":126},[84,4683,824],{"class":2722},[84,4685,2033],{"class":141},[84,4687,3711],{"class":120},[84,4689,4690,4693,4695,4697,4699,4701,4703,4705],{"class":86,"line":105},[84,4691,4692],{"class":527},"    k",[84,4694,3698],{"class":120},[84,4696,3651],{"class":527},[84,4698,1283],{"class":120},[84,4700,3651],{"class":126},[84,4702,824],{"class":2722},[84,4704,2033],{"class":141},[84,4706,3711],{"class":120},[84,4708,4709,4712,4714,4716,4718,4720,4722,4724],{"class":86,"line":158},[84,4710,4711],{"class":527},"    p",[84,4713,3698],{"class":120},[84,4715,3778],{"class":527},[84,4717,1283],{"class":120},[84,4719,3589],{"class":126},[84,4721,824],{"class":2722},[84,4723,3787],{"class":126},[84,4725,3711],{"class":120},[1613,4727,4728,4735,4738,4741,4744],{},[1616,4729,4730,4731,4734],{},"markdown 选项决定返回值是否以 ",[44,4732,4733],{},"![]()"," 这种 URL 格式返回",[1616,4736,4737],{},"webp 决定上传过程中是否将图片转为 webp 后再上传",[1616,4739,4740],{},"force 决定如果遇到文件路径冲突，是否强制覆盖云端的文件",[1616,4742,4743],{},"keep 决定是否保留文件原有的文件名进行上传",[1616,4745,4746],{},"path 决定文件具体被存放的路径（或者使用默认的路径）",[20,4748,4749,4751,4752,4754],{},[44,4750,3569],{}," 是图床用于上传的地址，",[44,4753,3579],{}," 是图床用于被方可访问的地址。",[20,4756,4757],{},"由于急着用，也没考虑协程的处理方式，等等看后期有没有时间用 Python 重写吧。",[16,4759,4760],{"id":4760},"博客图床迁移脚本",[20,4762,4763],{},"因为只用一次，所以也没使用协程或者多线程的方式去上传文件——毕竟图片不多，也就两三百张。",[37,4765,4767],{"className":2551,"code":4766,"language":2553,"meta":28,"style":28},"import os\nimport re\nimport requests\n\n# 哪些后缀的文件需要检测是否存在老图床的 URL 并进行迁移？\nfile_extension = [\n    '.md',\n    '.yml',\n    '.html'\n]\n\npic_urls = []\n\n_files = []\n\n# 用于匹配老图床的正则表达式，这里是按照 lsky pro 的格式编写的\npattern = r'https://cdn.example.com/\\d{4}/\\d{2}/\\d{2}/[a-z0-9]{13}\\.[a-z]{3,4}'\n\n# 图片的上传部分，需要先从原 url 中下载图片，在上传到新图床中，如果需要的话可以在中途转换为 webp 格式\ndef upload(url):\n    \"\"\"\n    此处的返回值应该是新的 url\n    \"\"\"\n\n# 遍历目标后缀文件名的文件，如果存在老图床的 url，则将 url 加入到 pic_urls 列表中，并将这个文件的文件名（相对路径）添加到 _files 列表中\nfor root, dirs, files in os.walk(\".\"):\n    for file in files:\n        if file.endswith(tuple(file_extension)):\n            file_name = os.path.join(root, file)\n            with open(file_name, 'r') as f:\n                content = f.read()\n            urls = re.findall(pattern, content)\n            if urls:\n                pic_urls.extend(urls)\n                _files.append(file_name)\n\n# 先转为集合，再转回列表，进行去重\npic_urls = list(set(pic_urls))\nprint(\"共找到图片：\", len(pic_urls))\n\nurl_dict = {}\n\n# 将列表中的图片进行上传，每张图片最多尝试三次上传，如果三次都失败，则保留原连接\nfor i,u in enumerate(pci_urls, start=1):\n    for t in range(1,4):\n        try:\n            new_u = upload(u)\n            continue\n        except:\n            if t == 3:\n                new_u = u\n                print(f\"{u} 无法上传：{e}\")\n    url_dict[u] = new_u\n    print(f\"{i} / {len(pic_urls)}\")\n\n# 对 _files 列表中的文件一一完成替换\nfor file in _files:\n    with open(file, 'r') as f:\n        content = f.read()\n    for k, v in url_dict.items():\n        content = content.replace(k, v)\n    with open(file, 'w') as f:\n        f.write(content)\n    print(\"完成替换：\", file)\n",[44,4768,4769,4774,4779,4784,4788,4793,4798,4803,4808,4813,4817,4821,4826,4830,4835,4839,4844,4849,4853,4858,4863,4868,4873,4877,4881,4886,4891,4896,4901,4906,4911,4916,4921,4926,4931,4936,4940,4945,4950,4955,4959,4964,4968,4973,4978,4983,4988,4993,4998,5003,5008,5013,5018,5023,5028,5032,5037,5042,5047,5052,5057,5062,5067,5072],{"__ignoreMap":28},[84,4770,4771],{"class":86,"line":87},[84,4772,4773],{},"import os\n",[84,4775,4776],{"class":86,"line":93},[84,4777,4778],{},"import re\n",[84,4780,4781],{"class":86,"line":99},[84,4782,4783],{},"import requests\n",[84,4785,4786],{"class":86,"line":105},[84,4787,510],{"emptyLinePlaceholder":509},[84,4789,4790],{"class":86,"line":158},[84,4791,4792],{},"# 哪些后缀的文件需要检测是否存在老图床的 URL 并进行迁移？\n",[84,4794,4795],{"class":86,"line":164},[84,4796,4797],{},"file_extension = [\n",[84,4799,4800],{"class":86,"line":261},[84,4801,4802],{},"    '.md',\n",[84,4804,4805],{"class":86,"line":269},[84,4806,4807],{},"    '.yml',\n",[84,4809,4810],{"class":86,"line":280},[84,4811,4812],{},"    '.html'\n",[84,4814,4815],{"class":86,"line":288},[84,4816,2223],{},[84,4818,4819],{"class":86,"line":659},[84,4820,510],{"emptyLinePlaceholder":509},[84,4822,4823],{"class":86,"line":664},[84,4824,4825],{},"pic_urls = []\n",[84,4827,4828],{"class":86,"line":678},[84,4829,510],{"emptyLinePlaceholder":509},[84,4831,4832],{"class":86,"line":690},[84,4833,4834],{},"_files = []\n",[84,4836,4837],{"class":86,"line":698},[84,4838,510],{"emptyLinePlaceholder":509},[84,4840,4841],{"class":86,"line":706},[84,4842,4843],{},"# 用于匹配老图床的正则表达式，这里是按照 lsky pro 的格式编写的\n",[84,4845,4846],{"class":86,"line":712},[84,4847,4848],{},"pattern = r'https://cdn.example.com/\\d{4}/\\d{2}/\\d{2}/[a-z0-9]{13}\\.[a-z]{3,4}'\n",[84,4850,4851],{"class":86,"line":720},[84,4852,510],{"emptyLinePlaceholder":509},[84,4854,4855],{"class":86,"line":730},[84,4856,4857],{},"# 图片的上传部分，需要先从原 url 中下载图片，在上传到新图床中，如果需要的话可以在中途转换为 webp 格式\n",[84,4859,4860],{"class":86,"line":740},[84,4861,4862],{},"def upload(url):\n",[84,4864,4865],{"class":86,"line":753},[84,4866,4867],{},"    \"\"\"\n",[84,4869,4870],{"class":86,"line":759},[84,4871,4872],{},"    此处的返回值应该是新的 url\n",[84,4874,4875],{"class":86,"line":3},[84,4876,4867],{},[84,4878,4879],{"class":86,"line":769},[84,4880,510],{"emptyLinePlaceholder":509},[84,4882,4883],{"class":86,"line":775},[84,4884,4885],{},"# 遍历目标后缀文件名的文件，如果存在老图床的 url，则将 url 加入到 pic_urls 列表中，并将这个文件的文件名（相对路径）添加到 _files 列表中\n",[84,4887,4888],{"class":86,"line":783},[84,4889,4890],{},"for root, dirs, files in os.walk(\".\"):\n",[84,4892,4893],{"class":86,"line":793},[84,4894,4895],{},"    for file in files:\n",[84,4897,4898],{"class":86,"line":809},[84,4899,4900],{},"        if file.endswith(tuple(file_extension)):\n",[84,4902,4903],{"class":86,"line":842},[84,4904,4905],{},"            file_name = os.path.join(root, file)\n",[84,4907,4908],{"class":86,"line":868},[84,4909,4910],{},"            with open(file_name, 'r') as f:\n",[84,4912,4913],{"class":86,"line":874},[84,4914,4915],{},"                content = f.read()\n",[84,4917,4918],{"class":86,"line":887},[84,4919,4920],{},"            urls = re.findall(pattern, content)\n",[84,4922,4923],{"class":86,"line":895},[84,4924,4925],{},"            if urls:\n",[84,4927,4928],{"class":86,"line":901},[84,4929,4930],{},"                pic_urls.extend(urls)\n",[84,4932,4933],{"class":86,"line":906},[84,4934,4935],{},"                _files.append(file_name)\n",[84,4937,4938],{"class":86,"line":928},[84,4939,510],{"emptyLinePlaceholder":509},[84,4941,4942],{"class":86,"line":936},[84,4943,4944],{},"# 先转为集合，再转回列表，进行去重\n",[84,4946,4947],{"class":86,"line":976},[84,4948,4949],{},"pic_urls = list(set(pic_urls))\n",[84,4951,4952],{"class":86,"line":996},[84,4953,4954],{},"print(\"共找到图片：\", len(pic_urls))\n",[84,4956,4957],{"class":86,"line":1018},[84,4958,510],{"emptyLinePlaceholder":509},[84,4960,4961],{"class":86,"line":1024},[84,4962,4963],{},"url_dict = {}\n",[84,4965,4966],{"class":86,"line":1029},[84,4967,510],{"emptyLinePlaceholder":509},[84,4969,4970],{"class":86,"line":1045},[84,4971,4972],{},"# 将列表中的图片进行上传，每张图片最多尝试三次上传，如果三次都失败，则保留原连接\n",[84,4974,4975],{"class":86,"line":1056},[84,4976,4977],{},"for i,u in enumerate(pci_urls, start=1):\n",[84,4979,4980],{"class":86,"line":1074},[84,4981,4982],{},"    for t in range(1,4):\n",[84,4984,4985],{"class":86,"line":1082},[84,4986,4987],{},"        try:\n",[84,4989,4990],{"class":86,"line":1092},[84,4991,4992],{},"            new_u = upload(u)\n",[84,4994,4995],{"class":86,"line":1108},[84,4996,4997],{},"            continue\n",[84,4999,5000],{"class":86,"line":1115},[84,5001,5002],{},"        except:\n",[84,5004,5005],{"class":86,"line":1126},[84,5006,5007],{},"            if t == 3:\n",[84,5009,5010],{"class":86,"line":1134},[84,5011,5012],{},"                new_u = u\n",[84,5014,5015],{"class":86,"line":1151},[84,5016,5017],{},"                print(f\"{u} 无法上传：{e}\")\n",[84,5019,5020],{"class":86,"line":1159},[84,5021,5022],{},"    url_dict[u] = new_u\n",[84,5024,5025],{"class":86,"line":1164},[84,5026,5027],{},"    print(f\"{i} / {len(pic_urls)}\")\n",[84,5029,5030],{"class":86,"line":1180},[84,5031,510],{"emptyLinePlaceholder":509},[84,5033,5034],{"class":86,"line":1197},[84,5035,5036],{},"# 对 _files 列表中的文件一一完成替换\n",[84,5038,5039],{"class":86,"line":1213},[84,5040,5041],{},"for file in _files:\n",[84,5043,5044],{"class":86,"line":1218},[84,5045,5046],{},"    with open(file, 'r') as f:\n",[84,5048,5049],{"class":86,"line":1223},[84,5050,5051],{},"        content = f.read()\n",[84,5053,5054],{"class":86,"line":1228},[84,5055,5056],{},"    for k, v in url_dict.items():\n",[84,5058,5059],{"class":86,"line":1233},[84,5060,5061],{},"        content = content.replace(k, v)\n",[84,5063,5064],{"class":86,"line":4398},[84,5065,5066],{},"    with open(file, 'w') as f:\n",[84,5068,5069],{"class":86,"line":4403},[84,5070,5071],{},"        f.write(content)\n",[84,5073,5074],{"class":86,"line":4420},[84,5075,5076],{},"    print(\"完成替换：\", file)\n",[431,5078,5079],{},"html pre.shiki code .sW2Sy, html code.shiki .sW2Sy{--shiki-default:#A0A1A7;--shiki-default-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic}html pre.shiki code .sJa8x, html code.shiki .sJa8x{--shiki-default:#E45649;--shiki-dark:#E06C75}html pre.shiki code .sknuh, html code.shiki .sknuh{--shiki-default:#383A42;--shiki-dark:#56B6C2}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .sLKXg, html code.shiki .sLKXg{--shiki-default:#A626A4;--shiki-dark:#C678DD}html pre.shiki code .s_Sar, html code.shiki .s_Sar{--shiki-default:#0184BC;--shiki-dark:#56B6C2}html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html pre.shiki code .sDaw7, html code.shiki .sDaw7{--shiki-default:#0184BC;--shiki-dark:#E06C75}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}html pre.shiki code .sTIpt, html code.shiki .sTIpt{--shiki-default:#E45649;--shiki-dark:#98C379}html pre.shiki code .s8iYz, html code.shiki .s8iYz{--shiki-default:#383A42;--shiki-default-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":28,"searchDepth":93,"depth":93,"links":5081},[5082,5083],{"id":3541,"depth":93,"text":3541},{"id":4760,"depth":93,"text":4760},{"title":5085,"date":5086,"path":5087,"tags":5088,"body":5091},"自建图床小记三—— SSL 证书的自动更新与部署","2024-08-14 10:35:18","/2024/08/14/auto-renew-ssl-certificate-and-deploy-to-upyun-with-github-action",[2374,3462,5089,2651,2652,5090,3461],"Github Action","SSL",{"type":13,"value":5092,"toc":5634},[5093,5097,5100,5103,5107,5110,5113,5119,5122,5125,5131,5134,5138,5141,5150,5153,5156,5162,5168,5171,5177,5180,5220,5223,5229,5235,5239,5248,5255,5260,5296,5300,5330,5334,5364,5368,5417,5420,5449,5453,5492,5495,5504,5600,5606,5608,5631],[16,5094,5096],{"id":5095},"为什么要自动更新","为什么要自动更新？",[20,5098,5099],{},"众所周知，为站点开启 https 访问需要获得对应 host 的 ssl 证书，而如果希望证书被访客的浏览器所信任，需要拿到由 Certificate Authority (CA) 签发的 ssl 证书。在前一阵子那波 BAT 等大厂提供的云服务停止发放免费的由 TrustAsia/DigiCert 签发的一年有效期免费 ssl 证书之后，市面上已经没有被广泛信任的 CA 签发的免费的一年有效期的 ssl 证书了，于是不得不用回由 Let's Encrypt/ZeroSSL 等 CA 签发三个月免费证书。",[20,5101,5102],{},"但话又说回来，三个月有效期确实不太够，一年有效期的证书就一年一更，手动申请部署也不麻烦；三个月有效期的证书手动就有点麻烦了——我一般会在证书到期的前 15 天进行更新，防止最后几天自己太忙了没时间管。",[16,5104,5106],{"id":5105},"这套图床架构的自动更新有没有困难","这套图床架构的自动更新有没有困难？",[1924,5108,5109],{"id":5109},"境外",[20,5111,5112],{},"通过 Cloudflare SaaS 接入的域名通过验证后会自动获得由 Cloudflare 提供的由 Google Trust Services 签发的证书，不需要我们操心。",[20,5114,5115],{},[26,5116],{"alt":5117,"src":5118},"SSL Certificate provided by Cloudflare","https://static.031130.xyz/uploads/2024/08/14/831d714565906.webp",[1924,5120,5121],{"id":5121},"境内",[20,5123,5124],{},"咱选用的又拍云 CDN 提供了免费的 Let's Encrypt 证书及其自动续期服务，但需要我们把图床访问域名的 DNS CNAME 解析到他们家。",[20,5126,5127],{},[26,5128],{"alt":5129,"src":5130},"SSL Certificate provided by upyun","https://static.031130.xyz/uploads/2024/08/14/b16f7752ef522.webp",[20,5132,5133],{},"这里有个问题，我们这套图床架构在境外的解析是解析到 Cloudflare 的，不可能通过 Let's Encrypt 的 acme challenge。如果使用 upyun 申请 ssl 证书，则意味着每次更新都要我们手动将境外的 dns 解析记录暂时解析到又拍云，待证书更新成功后再解析回 Cloudflare，非常麻烦。",[16,5135,5137],{"id":5136},"使用-github-action-跑-acmesh-获取-ssl-证书","使用 Github Action 跑 acme.sh 获取 ssl 证书",[20,5139,5140],{},"本着「能使用长期免费稳定服务就使用长期免费稳定服务」的思想，决定使用 Github Action 申请 ssl 证书。",[20,5142,5143,5144,5149],{},"在 Github Action 跑 acme.sh 获取 ssl 证书意味着不能使用 http 文件检验的方式检验域名所有权，需要使用 dns 检验。截至本文写作时间，acme.sh 已经支持了 150+ 个主流的 DNS 解析商（Managed DNS providers）的 api，针对不支持 api 修改 dns 解析记录的，还可以使用 ",[178,5145,5148],{"href":5146,"rel":5147},"https://github.com/acmesh-official/acme.sh/wiki/DNS-alias-mode",[182],"DNS alias 模式","——即将需要申请 ssl 证书的域名先 cname 到一个工具人域名上，将工具人域名通过 NS 解析到 acme.sh 支持的 DNS 解析商，进而实现 CA 对域名所有权的验证。",[1924,5151,5152],{"id":5152},"先在本地跑起来",[20,5154,5155],{},"我采用的是 Cloudflare，直接在个人资料页创建一个具有编辑 DNS 权限的 API 令牌",[20,5157,5158],{},[26,5159],{"alt":5160,"src":5161},"创建令牌","https://static.031130.xyz/uploads/2024/08/14/c0262d4aea708.webp",[20,5163,5164],{},[26,5165],{"alt":5166,"src":5167},"获得令牌","https://static.031130.xyz/uploads/2024/08/14/f30bfc93970bc.webp",[20,5169,5170],{},"随后在自己的域名页面，找到区域 ID 和 账户 ID",[20,5172,5173],{},[26,5174],{"alt":5175,"src":5176},"区域 ID 和 账户 ID","https://static.031130.xyz/uploads/2024/08/14/4c8d4a2019812.webp",[20,5178,5179],{},"在自己的本机安装 acme.sh,设置好 Cloudflare DNS 的几个变量",[37,5181,5183],{"className":1631,"code":5182,"language":1633,"meta":28,"style":28},"export CF_Token=\"\"\nexport CF_Account_ID=\"\"\nexport CF_Zone_ID=\"\"\n",[44,5184,5185,5198,5209],{"__ignoreMap":28},[84,5186,5187,5190,5193,5195],{"class":86,"line":87},[84,5188,5189],{"class":515},"export",[84,5191,5192],{"class":126}," CF_Token",[84,5194,824],{"class":2722},[84,5196,5197],{"class":141},"\"\"\n",[84,5199,5200,5202,5205,5207],{"class":86,"line":93},[84,5201,5189],{"class":515},[84,5203,5204],{"class":126}," CF_Account_ID",[84,5206,824],{"class":2722},[84,5208,5197],{"class":141},[84,5210,5211,5213,5216,5218],{"class":86,"line":99},[84,5212,5189],{"class":515},[84,5214,5215],{"class":126}," CF_Zone_ID",[84,5217,824],{"class":2722},[84,5219,5197],{"class":141},[20,5221,5222],{},"随后可以尝试使用 acme.sh 签发 ssl 证书",[37,5224,5227],{"className":5225,"code":5226,"language":42},[40],"acme.sh --issue --dns dns_cf -d cdn.example.com\n",[44,5228,5226],{"__ignoreMap":28},[20,5230,5231],{},[26,5232],{"alt":5233,"src":5234},"ssl 证书到手","https://static.031130.xyz/uploads/2024/08/14/c78bc5afa3641.webp",[1924,5236,5238],{"id":5237},"上-github-action","上 Github Action",[20,5240,5241,5242,5247],{},"原本是打算直接用 ",[178,5243,5246],{"href":5244,"rel":5245},"https://github.com/Menci/acme",[182],"Menci/acme"," 这个 Action的，可惜遇到了点问题。",[20,5249,5250,5251,5254],{},"在我本地，Cloudflare 相关的 Token 和 ID 并没有被写入到 account.conf，而是被写在 ",[44,5252,5253],{},"cdn.example.com_ecc/cdn.exampe.com.conf","，大概就没办法直接用这个 Action 了，不得不转去手搓。不过好在 Menci/acme 中还是能抄到不少的。",[5256,5257,5259],"h4",{"id":5258},"压缩本地的-ca-文件夹","压缩本地的 ca 文件夹",[37,5261,5263],{"className":1631,"code":5262,"language":1633,"meta":28,"style":28},"cd $HOME/.acme.sh/ && tar cz ca | base64 -w0\n",[44,5264,5265],{"__ignoreMap":28},[84,5266,5267,5270,5273,5276,5279,5282,5285,5288,5290,5293],{"class":86,"line":87},[84,5268,5269],{"class":523},"cd",[84,5271,5272],{"class":126}," $HOME",[84,5274,5275],{"class":141},"/.acme.sh/",[84,5277,5278],{"class":120}," && ",[84,5280,5281],{"class":527},"tar",[84,5283,5284],{"class":141}," cz",[84,5286,5287],{"class":141}," ca",[84,5289,3135],{"class":120},[84,5291,5292],{"class":527},"base64",[84,5294,5295],{"class":240}," -w0\n",[5256,5297,5299],{"id":5298},"安装-acmesh","安装 acme.sh",[37,5301,5305],{"className":5302,"code":5303,"language":5304,"meta":28,"style":28},"language-yaml shiki shiki-themes one-light one-dark-pro","- name: Install acme.sh\n  run: curl https://get.acme.sh | sh\n","yaml",[44,5306,5307,5320],{"__ignoreMap":28},[84,5308,5309,5312,5315,5317],{"class":86,"line":87},[84,5310,5311],{"class":120},"- ",[84,5313,5314],{"class":126},"name",[84,5316,138],{"class":120},[84,5318,5319],{"class":141},"Install acme.sh\n",[84,5321,5322,5325,5327],{"class":86,"line":93},[84,5323,5324],{"class":126},"  run",[84,5326,138],{"class":120},[84,5328,5329],{"class":141},"curl https://get.acme.sh | sh\n",[5256,5331,5333],{"id":5332},"解压-ca-文件夹","解压 ca 文件夹",[37,5335,5337],{"className":5302,"code":5336,"language":5304,"meta":28,"style":28},"- name: Extract account files for acme.sh\n  run: |\n    echo \"${{ secrets.ACME_SH_ACCOUNT_TAR }}\" | base64 -d | tar -C ~/.acme.sh -xz\n",[44,5338,5339,5350,5359],{"__ignoreMap":28},[84,5340,5341,5343,5345,5347],{"class":86,"line":87},[84,5342,5311],{"class":120},[84,5344,5314],{"class":126},[84,5346,138],{"class":120},[84,5348,5349],{"class":141},"Extract account files for acme.sh\n",[84,5351,5352,5354,5356],{"class":86,"line":93},[84,5353,5324],{"class":126},[84,5355,138],{"class":120},[84,5357,5358],{"class":515},"|\n",[84,5360,5361],{"class":86,"line":99},[84,5362,5363],{"class":141},"    echo \"${{ secrets.ACME_SH_ACCOUNT_TAR }}\" | base64 -d | tar -C ~/.acme.sh -xz\n",[5256,5365,5367],{"id":5366},"执行-acmesh-申请证书","执行 acme.sh 申请证书",[37,5369,5371],{"className":5302,"code":5370,"language":5304,"meta":28,"style":28},"- name: Issue Certificate\n  run: |\n    export CF_Token=\"${{ secrets.CF_TOKEN }}\"\n    export CF_Zone_ID=\"${{ secrets.CF_ZONE_ID }}\"\n    export CF_Account_ID=\"${{ secrets.CF_ACCOUNT_ID }}\"\n    mkdir -p output\n    ~/.acme.sh/acme.sh --issue --dns dns_cf --force -d ${{ env.domain }} --fullchain-file output/fullchain.pem --key-file output/key.pem\n",[44,5372,5373,5384,5392,5397,5402,5407,5412],{"__ignoreMap":28},[84,5374,5375,5377,5379,5381],{"class":86,"line":87},[84,5376,5311],{"class":120},[84,5378,5314],{"class":126},[84,5380,138],{"class":120},[84,5382,5383],{"class":141},"Issue Certificate\n",[84,5385,5386,5388,5390],{"class":86,"line":93},[84,5387,5324],{"class":126},[84,5389,138],{"class":120},[84,5391,5358],{"class":515},[84,5393,5394],{"class":86,"line":99},[84,5395,5396],{"class":141},"    export CF_Token=\"${{ secrets.CF_TOKEN }}\"\n",[84,5398,5399],{"class":86,"line":105},[84,5400,5401],{"class":141},"    export CF_Zone_ID=\"${{ secrets.CF_ZONE_ID }}\"\n",[84,5403,5404],{"class":86,"line":158},[84,5405,5406],{"class":141},"    export CF_Account_ID=\"${{ secrets.CF_ACCOUNT_ID }}\"\n",[84,5408,5409],{"class":86,"line":164},[84,5410,5411],{"class":141},"    mkdir -p output\n",[84,5413,5414],{"class":86,"line":261},[84,5415,5416],{"class":141},"    ~/.acme.sh/acme.sh --issue --dns dns_cf --force -d ${{ env.domain }} --fullchain-file output/fullchain.pem --key-file output/key.pem\n",[5256,5418,5419],{"id":5419},"压缩证书",[37,5421,5423],{"className":5302,"code":5422,"language":5304,"meta":28,"style":28},"- name: zip Certificate\n  run: |\n    zip -j output/${{ env.domain }}_$(date +%Y%m%d).zip output/fullchain.pem output/key.pem\n",[44,5424,5425,5436,5444],{"__ignoreMap":28},[84,5426,5427,5429,5431,5433],{"class":86,"line":87},[84,5428,5311],{"class":120},[84,5430,5314],{"class":126},[84,5432,138],{"class":120},[84,5434,5435],{"class":141},"zip Certificate\n",[84,5437,5438,5440,5442],{"class":86,"line":93},[84,5439,5324],{"class":126},[84,5441,138],{"class":120},[84,5443,5358],{"class":515},[84,5445,5446],{"class":86,"line":99},[84,5447,5448],{"class":141},"    zip -j output/${{ env.domain }}_$(date +%Y%m%d).zip output/fullchain.pem output/key.pem\n",[5256,5450,5452],{"id":5451},"通过-tg-bot-发送压缩包给自己","通过 tg bot 发送压缩包给自己",[37,5454,5456],{"className":5302,"code":5455,"language":5304,"meta":28,"style":28},"- name: Push Certificate\n  run: |\n    TG_BOT_TOKEN=\"${{ secrets.TG_BOT_TOKEN }}\"\n    TG_CHAT_ID=\"${{ secrets.TG_CHAT_ID }}\"\n    curl -s -X POST https://api.telegram.org/bot${TG_BOT_TOKEN}/sendDocument -F chat_id=${TG_CHAT_ID} -F document=\"@output/${{ env.domain }}_$(date +%Y%m%d).zip\"\n",[44,5457,5458,5469,5477,5482,5487],{"__ignoreMap":28},[84,5459,5460,5462,5464,5466],{"class":86,"line":87},[84,5461,5311],{"class":120},[84,5463,5314],{"class":126},[84,5465,138],{"class":120},[84,5467,5468],{"class":141},"Push Certificate\n",[84,5470,5471,5473,5475],{"class":86,"line":93},[84,5472,5324],{"class":126},[84,5474,138],{"class":120},[84,5476,5358],{"class":515},[84,5478,5479],{"class":86,"line":99},[84,5480,5481],{"class":141},"    TG_BOT_TOKEN=\"${{ secrets.TG_BOT_TOKEN }}\"\n",[84,5483,5484],{"class":86,"line":105},[84,5485,5486],{"class":141},"    TG_CHAT_ID=\"${{ secrets.TG_CHAT_ID }}\"\n",[84,5488,5489],{"class":86,"line":158},[84,5490,5491],{"class":141},"    curl -s -X POST https://api.telegram.org/bot${TG_BOT_TOKEN}/sendDocument -F chat_id=${TG_CHAT_ID} -F document=\"@output/${{ env.domain }}_$(date +%Y%m%d).zip\"\n",[5256,5493,5494],{"id":5494},"部署到又拍云",[20,5496,5497,5498,5503],{},"这里使用的是 ",[178,5499,5502],{"href":5500,"rel":5501},"https://github.com/Menci/deploy-certificate-to-upyun/",[182],"menci/deploy-certificate-to-upyun","。由于又拍云没有提供上传 ssl 证书的 api，因此只能通过模拟用户登陆的方式实现。",[37,5505,5507],{"className":5302,"code":5506,"language":5304,"meta":28,"style":28},"- name: Deploy To Upyun\n  uses: Menci/deploy-certificate-to-upyun@beta-v2\n  with:\n    subaccount-username: ${{ secrets.UPYUN_SUBACCOUNT_USERNAME }}\n    subaccount-password: ${{ secrets.UPYUN_SUBACCOUNT_PASSWORD }}\n    fullchain-file: output/fullchain.pem\n    key-file: output/key.pem\n    domains: |\n      ${{ env.domain }}\n    delete-unused-certificates: true\n",[44,5508,5509,5520,5530,5537,5547,5557,5567,5577,5586,5591],{"__ignoreMap":28},[84,5510,5511,5513,5515,5517],{"class":86,"line":87},[84,5512,5311],{"class":120},[84,5514,5314],{"class":126},[84,5516,138],{"class":120},[84,5518,5519],{"class":141},"Deploy To Upyun\n",[84,5521,5522,5525,5527],{"class":86,"line":93},[84,5523,5524],{"class":126},"  uses",[84,5526,138],{"class":120},[84,5528,5529],{"class":141},"Menci/deploy-certificate-to-upyun@beta-v2\n",[84,5531,5532,5535],{"class":86,"line":99},[84,5533,5534],{"class":126},"  with",[84,5536,210],{"class":120},[84,5538,5539,5542,5544],{"class":86,"line":105},[84,5540,5541],{"class":126},"    subaccount-username",[84,5543,138],{"class":120},[84,5545,5546],{"class":141},"${{ secrets.UPYUN_SUBACCOUNT_USERNAME }}\n",[84,5548,5549,5552,5554],{"class":86,"line":158},[84,5550,5551],{"class":126},"    subaccount-password",[84,5553,138],{"class":120},[84,5555,5556],{"class":141},"${{ secrets.UPYUN_SUBACCOUNT_PASSWORD }}\n",[84,5558,5559,5562,5564],{"class":86,"line":164},[84,5560,5561],{"class":126},"    fullchain-file",[84,5563,138],{"class":120},[84,5565,5566],{"class":141},"output/fullchain.pem\n",[84,5568,5569,5572,5574],{"class":86,"line":261},[84,5570,5571],{"class":126},"    key-file",[84,5573,138],{"class":120},[84,5575,5576],{"class":141},"output/key.pem\n",[84,5578,5579,5582,5584],{"class":86,"line":269},[84,5580,5581],{"class":126},"    domains",[84,5583,138],{"class":120},[84,5585,5358],{"class":515},[84,5587,5588],{"class":86,"line":280},[84,5589,5590],{"class":141},"      ${{ env.domain }}\n",[84,5592,5593,5596,5598],{"class":86,"line":288},[84,5594,5595],{"class":126},"    delete-unused-certificates",[84,5597,138],{"class":120},[84,5599,258],{"class":240},[20,5601,5602],{},[26,5603],{"alt":5604,"src":5605},"SSL 证书成功部署到又拍云","https://static.031130.xyz/uploads/2024/08/14/222a754d25c97.webp",[16,5607,2340],{"id":2340},[1613,5609,5610,5617,5624],{},[1616,5611,5612],{},[178,5613,5616],{"href":5614,"rel":5615},"https://blog.men.ci/ssl-with-github-actions/",[182],"使用 GitHub Actions 自动申请与部署 ACME SSL 证书",[1616,5618,5619],{},[178,5620,5623],{"href":5621,"rel":5622},"https://shiping.date/82.html",[182],"（续）acme.sh脚本使用新cloudflare api令牌申请证书",[1616,5625,5626],{},[178,5627,5630],{"href":5628,"rel":5629},"https://github.com/acmesh-official/acme.sh",[182],"acmesh-official/acme.sh",[431,5632,5633],{},"html pre.shiki code .sLKXg, html code.shiki .sLKXg{--shiki-default:#A626A4;--shiki-dark:#C678DD}html pre.shiki code .sJa8x, html code.shiki .sJa8x{--shiki-default:#E45649;--shiki-dark:#E06C75}html pre.shiki code .sknuh, html code.shiki .sknuh{--shiki-default:#383A42;--shiki-dark:#56B6C2}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .s_Sar, html code.shiki .s_Sar{--shiki-default:#0184BC;--shiki-dark:#56B6C2}html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}",{"title":28,"searchDepth":93,"depth":93,"links":5635},[5636,5637,5641,5645],{"id":5095,"depth":93,"text":5096},{"id":5105,"depth":93,"text":5106,"children":5638},[5639,5640],{"id":5109,"depth":99,"text":5109},{"id":5121,"depth":99,"text":5121},{"id":5136,"depth":93,"text":5137,"children":5642},[5643,5644],{"id":5152,"depth":99,"text":5152},{"id":5237,"depth":99,"text":5238},{"id":2340,"depth":93,"text":2340},{"title":5647,"date":5648,"path":5649,"tags":5650,"body":5652},"自建图床小记二——使用 Workers 为 R2 构建 Restful API","2024-08-13 22:58:26","/2024/08/13/build-restful-api-for-cloudflare-r2-with-cloudflare-workers",[3461,5651,1901,2372],"Cloudflare",{"type":13,"value":5653,"toc":6367},[5654,5658,5661,5665,5671,5675,5681,5683,5688,5692,5695,5698,5705,5711,5714,5721,5723,5728,5732,5735,5738,5744,5748,5753,5768,5773,5777,5780,5784,5797,5803,5805,5810,5814,5817,5825,5829,5832,6148,6151,6165,6168,6172,6175,6180,6184,6187,6190,6259,6262,6269,6272,6275,6334,6336,6364],[16,5655,5657],{"id":5656},"访问-r2-的两种方式","访问 R2 的两种方式",[20,5659,5660],{},"一般来说，想要访问 Cloudflare R2 中的文件，会有两种方式。",[1924,5662,5664],{"id":5663},"一种是在-r2-的设置界面设置自定义域","一种是在 R2 的设置界面设置自定义域",[20,5666,5667],{},[26,5668],{"alt":5669,"src":5670},"设置自定义域","https://static.031130.xyz/uploads/2024/08/13/61fe9ede194af.webp",[1924,5672,5674],{"id":5673},"另一种是通过-cloudflare-workers-进行访问","另一种是通过 Cloudflare Workers 进行访问",[20,5676,5677],{},[26,5678],{"alt":5679,"src":5680},"通过 Cloudflare Workers","https://static.031130.xyz/uploads/2024/08/13/846164273571d.webp",[415,5682],{},[20,5684,5685],{},[1626,5686,5687],{},"那么应该选择哪种？选择 Cloudflare Workers！",[16,5689,5691],{"id":5690},"为什么是-cloudflare-workers","为什么是 Cloudflare Workers？",[20,5693,5694],{},"要回答这个问题比较困难，但可以回答另一个问题——「为什么不设置自定义域实现直接访问？」",[1924,5696,5697],{"id":5697},"自定义域的访问存在限制",[20,5699,5700,5701,5704],{},"设置自定义域的访问方式存在较多的限制，让我们先来复习一下",[178,5702,5703],{"href":3527},"上一篇博客中","提到的 DNS 解析方案 1",[20,5706,5707],{},[26,5708],{"alt":5709,"src":5710},"DNS 解析方案 1","https://static.031130.xyz/uploads/2024/08/13/03d8243b67593.webp",[20,5712,5713],{},"在这里，我们需要将图床访问域名通过 NS 接入 DnsPod 实现境内外的分流，但 R2 所允许设置的自定义域必须是通过 NS 接入 Cloudflare 的，这存在冲突。那如果我们先将自定义域设置为通过 NS 接入 Cloudflare 的工具人域名，再将图床访问域名通过 CNAME 解析到工具人域名会不会有问题呢？恭喜你获得 403 Forbidden。",[20,5715,5716,5717,5720],{},"如果通过",[178,5718,5719],{"href":3527},"上一篇文章","中的 DNS 解析方案 2 来进行 DNS 解析，能不能成功设置为 Cloudflare R2 的自定义域呢？也不行，Cloudflare R2 的自定义域会占用域名的解析，这意味着你无法将图床访问域名解析到用于分流的工具人域名。",[415,5722],{},[20,5724,5725],{},[1626,5726,5727],{},"结论：截至本文写作时间，设置自定义域的方案不适用于 DNS 分流的图床架构。",[1924,5729,5731],{"id":5730},"如何上传文件到-cloudflare-r2","如何上传文件到 Cloudflare R2？",[5256,5733,5734],{"id":5734},"网页端直接上传",[20,5736,5737],{},"最简单的上传方式是直接在 Cloudflare 进行网页上传，但这种方案不适合自动化脚本，也没法接入 Typora",[20,5739,5740],{},[26,5741],{"alt":5742,"src":5743},"直接在网页端进行上传","https://static.031130.xyz/uploads/2024/08/13/b4d1b5b3edfae.webp",[5256,5745,5747],{"id":5746},"使用-amazon-s3-的兼容-api","使用 Amazon S3 的兼容 API",[5749,5750,5752],"h5",{"id":5751},"手动调用-s3-api","手动调用 S3 API",[20,5754,5755,5756,5761,5762,5767],{},"Cloudflare R2 被设计为兼容 Amazon S3 的存储方案，自然兼容 Amazon S3 的上传 API，在 ",[178,5757,5760],{"href":5758,"rel":5759},"https://developers.cloudflare.com/r2/api/s3/api/",[182],"Cloudflare Docs 中有关于 S3 API 的实现情况","记载，大部分接口功能都是实现了的。但。。。但 S3 使用的是 ",[178,5763,5766],{"href":5764,"rel":5765},"https://docs.aws.amazon.com/zh_cn/IAM/latest/UserGuide/create-signed-request.html",[182],"AWS Signature"," 作为鉴权，你不会希望在每个自动化程序中都自己实现一次的。。。",[20,5769,5770],{},[26,5771],{"alt":5772,"src":5772},"https://docs.aws.amazon.com/zh_cn/IAM/latest/UserGuide/images/sigV4-using-auth-header.png",[5749,5774,5776],{"id":5775},"使用-aws-cli-等-sdk","使用 aws-cli 等 SDK",[20,5778,5779],{},"使用 aws-cli 可以自动实现计算 AWS Signature，这是一种可行的方案，但我可能会在别的服务中使用到我的图床，不是所有的服务所处的环境都能够执行 shell 命令，也不是所有的编程语言都有现成的 SDK 可用。",[5256,5781,5783],{"id":5782},"使用-cloudflare-workers-构建-restful-api","使用 Cloudflare Workers 构建 Restful API",[20,5785,5786,5791,5792,1850],{},[178,5787,5790],{"href":5788,"rel":5789},"https://developers.cloudflare.com/r2/api/workers/workers-api-usage/#5-access-your-r2-bucket-from-your-worker",[182],"在 Cloudflare Docs 中明确提出可以使用 Cloudflare Workers 访问 Cloudflare R2 Bucket，","通过 Workers 设置界面的按钮，可以非常方便的将 R2 Bucket 作为一个 R2Object 绑定到 JavaScript 的一个变量中，",[178,5793,5796],{"href":5794,"rel":5795},"https://developers.cloudflare.com/r2/api/workers/workers-api-reference/",[182],"这里有相关的开发文档",[20,5798,5799],{},[26,5800],{"alt":5801,"src":5802},"绑定为变量","https://static.031130.xyz/uploads/2024/08/13/45e58b47f3aeb.webp",[415,5804],{},[20,5806,5807],{},[1626,5808,5809],{},"结论: 从易用性上来看，使用 Cloudflare Workers 构建 Restful API 这种上传文件的方案是最为合适的。",[16,5811,5813],{"id":5812},"使用-cloudflare-workers-构建-restful-api-的方案有没有什么缺点","使用 Cloudflare Workers 构建 Restful API 的方案有没有什么缺点？",[20,5815,5816],{},"有。",[1613,5818,5819,5822],{},[1616,5820,5821],{},"Cloudflare Workers 的每日额度是有限的，在极端的流量下可能会用完（应该不会吧？）",[1616,5823,5824],{},"Cloudflare Workers 的内存限制为 128MB，在上传下载 > 100MB 的文件时可能会出错。有这种体积上传需求的场景建议使用别的上传方案。",[16,5826,5828],{"id":5827},"如何构建","如何构建？",[20,5830,5831],{},"直接贴代码",[37,5833,5835],{"className":494,"code":5834,"language":496,"meta":28,"style":28},"const hasValidHeader = (request, env) => {\n    return request.headers.get('X-Custom-Auth-Key') === env.AUTH_KEY_SECRET;\n};\n\nfunction authorizeRequest(request, env, key) {\n    switch (request.method) {\n        case 'PUT':\n        case 'DELETE':\n            return hasValidHeader(request, env);\n        case 'GET':\n            return true;\n        default:\n            return false;\n    }\n}\n\nexport default {\n    async fetch(request, env) {\n        const url = new URL(request.url);\n        const key = decodeURI(url.pathname.slice(1));\n\n        if (!authorizeRequest(request, env, key)) {\n            return new Response('Forbidden\\n', { status: 403 });\n        }\n\n        switch (request.method) {\n            case 'PUT':\n                const objectExists = await env.MY_BUCKET.get(key);\n\n                if (objectExists !== null) {\n                    if (request.headers.get('Overwrite') !== 'true') {\n                        return new Response('Object Already Exists\\n', { status: 409 });\n                    }\n                }\n\n                await env.MY_BUCKET.put(key, request.body);\n                return new Response(`Put ${key} successfully!\\n`);\n\n            case 'GET':\n                const object = await env.MY_BUCKET.get(key);\n\n                if (object === null) {\n                    return new Response('Object Not Found\\n', { status: 404 });\n                }\n\n                const headers = new Headers();\n                object.writeHttpMetadata(headers);\n                headers.set('etag', object.httpEtag);\n\n                return new Response(object.body, {\n                    headers,\n                });\n            case 'DELETE':\n                await env.MY_BUCKET.delete(key);\n                return new Response('Deleted!\\n');\n\n            default:\n                return new Response('Method Not Allowed\\n', {\n                    status: 405,\n                    headers: {\n                        Allow: 'PUT, GET, DELETE',\n                    },\n                });\n        }\n    },\n};\n",[44,5836,5837,5842,5847,5852,5856,5861,5866,5871,5876,5881,5886,5891,5896,5901,5905,5909,5913,5918,5923,5928,5933,5937,5942,5947,5951,5955,5960,5965,5970,5974,5979,5984,5989,5994,5999,6003,6008,6013,6017,6022,6027,6031,6036,6041,6045,6049,6054,6059,6064,6068,6073,6078,6083,6088,6093,6098,6102,6107,6112,6117,6122,6127,6132,6136,6140,6144],{"__ignoreMap":28},[84,5838,5839],{"class":86,"line":87},[84,5840,5841],{},"const hasValidHeader = (request, env) => {\n",[84,5843,5844],{"class":86,"line":93},[84,5845,5846],{},"    return request.headers.get('X-Custom-Auth-Key') === env.AUTH_KEY_SECRET;\n",[84,5848,5849],{"class":86,"line":99},[84,5850,5851],{},"};\n",[84,5853,5854],{"class":86,"line":105},[84,5855,510],{"emptyLinePlaceholder":509},[84,5857,5858],{"class":86,"line":158},[84,5859,5860],{},"function authorizeRequest(request, env, key) {\n",[84,5862,5863],{"class":86,"line":164},[84,5864,5865],{},"    switch (request.method) {\n",[84,5867,5868],{"class":86,"line":261},[84,5869,5870],{},"        case 'PUT':\n",[84,5872,5873],{"class":86,"line":269},[84,5874,5875],{},"        case 'DELETE':\n",[84,5877,5878],{"class":86,"line":280},[84,5879,5880],{},"            return hasValidHeader(request, env);\n",[84,5882,5883],{"class":86,"line":288},[84,5884,5885],{},"        case 'GET':\n",[84,5887,5888],{"class":86,"line":659},[84,5889,5890],{},"            return true;\n",[84,5892,5893],{"class":86,"line":664},[84,5894,5895],{},"        default:\n",[84,5897,5898],{"class":86,"line":678},[84,5899,5900],{},"            return false;\n",[84,5902,5903],{"class":86,"line":690},[84,5904,2875],{},[84,5906,5907],{"class":86,"line":698},[84,5908,167],{},[84,5910,5911],{"class":86,"line":706},[84,5912,510],{"emptyLinePlaceholder":509},[84,5914,5915],{"class":86,"line":712},[84,5916,5917],{},"export default {\n",[84,5919,5920],{"class":86,"line":720},[84,5921,5922],{},"    async fetch(request, env) {\n",[84,5924,5925],{"class":86,"line":730},[84,5926,5927],{},"        const url = new URL(request.url);\n",[84,5929,5930],{"class":86,"line":740},[84,5931,5932],{},"        const key = decodeURI(url.pathname.slice(1));\n",[84,5934,5935],{"class":86,"line":753},[84,5936,510],{"emptyLinePlaceholder":509},[84,5938,5939],{"class":86,"line":759},[84,5940,5941],{},"        if (!authorizeRequest(request, env, key)) {\n",[84,5943,5944],{"class":86,"line":3},[84,5945,5946],{},"            return new Response('Forbidden\\n', { status: 403 });\n",[84,5948,5949],{"class":86,"line":769},[84,5950,898],{},[84,5952,5953],{"class":86,"line":775},[84,5954,510],{"emptyLinePlaceholder":509},[84,5956,5957],{"class":86,"line":783},[84,5958,5959],{},"        switch (request.method) {\n",[84,5961,5962],{"class":86,"line":793},[84,5963,5964],{},"            case 'PUT':\n",[84,5966,5967],{"class":86,"line":809},[84,5968,5969],{},"                const objectExists = await env.MY_BUCKET.get(key);\n",[84,5971,5972],{"class":86,"line":842},[84,5973,510],{"emptyLinePlaceholder":509},[84,5975,5976],{"class":86,"line":868},[84,5977,5978],{},"                if (objectExists !== null) {\n",[84,5980,5981],{"class":86,"line":874},[84,5982,5983],{},"                    if (request.headers.get('Overwrite') !== 'true') {\n",[84,5985,5986],{"class":86,"line":887},[84,5987,5988],{},"                        return new Response('Object Already Exists\\n', { status: 409 });\n",[84,5990,5991],{"class":86,"line":895},[84,5992,5993],{},"                    }\n",[84,5995,5996],{"class":86,"line":901},[84,5997,5998],{},"                }\n",[84,6000,6001],{"class":86,"line":906},[84,6002,510],{"emptyLinePlaceholder":509},[84,6004,6005],{"class":86,"line":928},[84,6006,6007],{},"                await env.MY_BUCKET.put(key, request.body);\n",[84,6009,6010],{"class":86,"line":936},[84,6011,6012],{},"                return new Response(`Put ${key} successfully!\\n`);\n",[84,6014,6015],{"class":86,"line":976},[84,6016,510],{"emptyLinePlaceholder":509},[84,6018,6019],{"class":86,"line":996},[84,6020,6021],{},"            case 'GET':\n",[84,6023,6024],{"class":86,"line":1018},[84,6025,6026],{},"                const object = await env.MY_BUCKET.get(key);\n",[84,6028,6029],{"class":86,"line":1024},[84,6030,510],{"emptyLinePlaceholder":509},[84,6032,6033],{"class":86,"line":1029},[84,6034,6035],{},"                if (object === null) {\n",[84,6037,6038],{"class":86,"line":1045},[84,6039,6040],{},"                    return new Response('Object Not Found\\n', { status: 404 });\n",[84,6042,6043],{"class":86,"line":1056},[84,6044,5998],{},[84,6046,6047],{"class":86,"line":1074},[84,6048,510],{"emptyLinePlaceholder":509},[84,6050,6051],{"class":86,"line":1082},[84,6052,6053],{},"                const headers = new Headers();\n",[84,6055,6056],{"class":86,"line":1092},[84,6057,6058],{},"                object.writeHttpMetadata(headers);\n",[84,6060,6061],{"class":86,"line":1108},[84,6062,6063],{},"                headers.set('etag', object.httpEtag);\n",[84,6065,6066],{"class":86,"line":1115},[84,6067,510],{"emptyLinePlaceholder":509},[84,6069,6070],{"class":86,"line":1126},[84,6071,6072],{},"                return new Response(object.body, {\n",[84,6074,6075],{"class":86,"line":1134},[84,6076,6077],{},"                    headers,\n",[84,6079,6080],{"class":86,"line":1151},[84,6081,6082],{},"                });\n",[84,6084,6085],{"class":86,"line":1159},[84,6086,6087],{},"            case 'DELETE':\n",[84,6089,6090],{"class":86,"line":1164},[84,6091,6092],{},"                await env.MY_BUCKET.delete(key);\n",[84,6094,6095],{"class":86,"line":1180},[84,6096,6097],{},"                return new Response('Deleted!\\n');\n",[84,6099,6100],{"class":86,"line":1197},[84,6101,510],{"emptyLinePlaceholder":509},[84,6103,6104],{"class":86,"line":1213},[84,6105,6106],{},"            default:\n",[84,6108,6109],{"class":86,"line":1218},[84,6110,6111],{},"                return new Response('Method Not Allowed\\n', {\n",[84,6113,6114],{"class":86,"line":1223},[84,6115,6116],{},"                    status: 405,\n",[84,6118,6119],{"class":86,"line":1228},[84,6120,6121],{},"                    headers: {\n",[84,6123,6124],{"class":86,"line":1233},[84,6125,6126],{},"                        Allow: 'PUT, GET, DELETE',\n",[84,6128,6129],{"class":86,"line":4398},[84,6130,6131],{},"                    },\n",[84,6133,6134],{"class":86,"line":4403},[84,6135,6082],{},[84,6137,6138],{"class":86,"line":4420},[84,6139,898],{},[84,6141,6142],{"class":86,"line":4425},[84,6143,709],{},[84,6145,6146],{"class":86,"line":4430},[84,6147,5851],{},[20,6149,6150],{},"代码的大部分都是基于 Cloudflare Docs 中给出的样例，修改了几个小的优化点",[1613,6152,6153,6156,6162],{},[1616,6154,6155],{},"删除了 ALLOW_LIST 部分代码，默认所有文件都是可以被访问的",[1616,6157,6158,6159],{},"在上传一个文件时，如果目标路径存在同名文件，则不直接覆盖，而是返回 409 的异常 HTTP 相应，如果想要强制覆盖，则需要在 Http Header 中加入 ",[44,6160,6161],{},"Overwrite: true",[1616,6163,6164],{},"解出请求路径时，使用 decodeURI( ) 方法先进行解码，解决文件路径中含有中文时会导致请求失败的问题。",[20,6166,6167],{},"填入代码后，还需要绑定两个变量，一个是 R2 Bucket",[20,6169,6170],{},[26,6171],{"alt":28,"src":5802},[20,6173,6174],{},"另一个是自己的管理密码",[20,6176,6177],{},[26,6178],{"alt":28,"src":6179},"https://static.031130.xyz/uploads/2024/08/14/96da1f62f5fe7.webp",[16,6181,6183],{"id":6182},"如何使用-cloudflare-workers-构建的-restful-api-进行文件操作","如何使用 Cloudflare Workers 构建的 Restful API 进行文件操作？",[1924,6185,6186],{"id":6186},"上传",[20,6188,6189],{},"以 python 为例，上传一个文件 1MB.bin 到 /example/ 目录下，上传的 url 就是文件最终的存在路径。",[37,6191,6193],{"className":2551,"code":6192,"language":2553,"meta":28,"style":28},"import requests\n\nAUTH_KEY_SECRET='1145141919810'\n\nwith open('1MB.bin', ''rb) as f:\n    file_content = f.read()\n    \nrequests.put(\n    'https://r2.example.workers.dev/example/1MB.bin',\n    headers={\n        'X-Custom-Auth-Key': AUTH_KEY_SECRET,\n        'Overwrite': True   # 如果不需要强制覆盖可以删除这一行\n    }\n)\n",[44,6194,6195,6199,6203,6208,6212,6217,6222,6226,6231,6236,6241,6246,6251,6255],{"__ignoreMap":28},[84,6196,6197],{"class":86,"line":87},[84,6198,4783],{},[84,6200,6201],{"class":86,"line":93},[84,6202,510],{"emptyLinePlaceholder":509},[84,6204,6205],{"class":86,"line":99},[84,6206,6207],{},"AUTH_KEY_SECRET='1145141919810'\n",[84,6209,6210],{"class":86,"line":105},[84,6211,510],{"emptyLinePlaceholder":509},[84,6213,6214],{"class":86,"line":158},[84,6215,6216],{},"with open('1MB.bin', ''rb) as f:\n",[84,6218,6219],{"class":86,"line":164},[84,6220,6221],{},"    file_content = f.read()\n",[84,6223,6224],{"class":86,"line":261},[84,6225,4354],{},[84,6227,6228],{"class":86,"line":269},[84,6229,6230],{},"requests.put(\n",[84,6232,6233],{"class":86,"line":280},[84,6234,6235],{},"    'https://r2.example.workers.dev/example/1MB.bin',\n",[84,6237,6238],{"class":86,"line":288},[84,6239,6240],{},"    headers={\n",[84,6242,6243],{"class":86,"line":659},[84,6244,6245],{},"        'X-Custom-Auth-Key': AUTH_KEY_SECRET,\n",[84,6247,6248],{"class":86,"line":664},[84,6249,6250],{},"        'Overwrite': True   # 如果不需要强制覆盖可以删除这一行\n",[84,6252,6253],{"class":86,"line":678},[84,6254,2875],{},[84,6256,6257],{"class":86,"line":690},[84,6258,2297],{},[1924,6260,6261],{"id":6261},"访问",[20,6263,6264,6265,6268],{},"通过浏览器直接访问 ",[44,6266,6267],{},"https://r2.example.workers.dev/example/1MB.bin"," 应该就能访问到",[1924,6270,6271],{"id":6271},"删除",[20,6273,6274],{},"仍然以 python 为例，删除刚才的文件",[37,6276,6278],{"className":2551,"code":6277,"language":2553,"meta":28,"style":28},"import requests\n\nAUTH_KEY_SECRET='1145141919810'\n\nwith open('1MB.bin', ''rb) as f:\n    file_content = f.read()\n    \nrequests.delete(\n    'https://r2.example.workers.dev/example/1MB.bin',\n    headers={\n        'X-Custom-Auth-Key': AUTH_KEY_SECRET\n    }\n)\n",[44,6279,6280,6284,6288,6292,6296,6300,6304,6308,6313,6317,6321,6326,6330],{"__ignoreMap":28},[84,6281,6282],{"class":86,"line":87},[84,6283,4783],{},[84,6285,6286],{"class":86,"line":93},[84,6287,510],{"emptyLinePlaceholder":509},[84,6289,6290],{"class":86,"line":99},[84,6291,6207],{},[84,6293,6294],{"class":86,"line":105},[84,6295,510],{"emptyLinePlaceholder":509},[84,6297,6298],{"class":86,"line":158},[84,6299,6216],{},[84,6301,6302],{"class":86,"line":164},[84,6303,6221],{},[84,6305,6306],{"class":86,"line":261},[84,6307,4354],{},[84,6309,6310],{"class":86,"line":269},[84,6311,6312],{},"requests.delete(\n",[84,6314,6315],{"class":86,"line":280},[84,6316,6235],{},[84,6318,6319],{"class":86,"line":288},[84,6320,6240],{},[84,6322,6323],{"class":86,"line":659},[84,6324,6325],{},"        'X-Custom-Auth-Key': AUTH_KEY_SECRET\n",[84,6327,6328],{"class":86,"line":664},[84,6329,2875],{},[84,6331,6332],{"class":86,"line":678},[84,6333,2297],{},[16,6335,2340],{"id":2340},[1613,6337,6338,6345,6351,6358],{},[1616,6339,6340],{},[178,6341,6344],{"href":6342,"rel":6343},"https://blog.yswtrue.com/yong-cloudflare-de-r2-he-worker-lai-zuo-wen-jian-tuo-guan/",[182],"用 cloudflare 的 R2 和 worker 来做文件托管",[1616,6346,6347],{},[178,6348,6350],{"href":5794,"rel":6349},[182],"Workers API reference",[1616,6352,6353],{},[178,6354,6357],{"href":6355,"rel":6356},"https://developers.cloudflare.com/r2/api/workers/workers-api-usage/",[182],"Use R2 from Workers",[1616,6359,6360],{},[178,6361,6363],{"href":5764,"rel":6362},[182],"创建已签名的 AWS API 请求",[431,6365,6366],{},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":28,"searchDepth":93,"depth":93,"links":6368},[6369,6373,6377,6378,6379,6384],{"id":5656,"depth":93,"text":5657,"children":6370},[6371,6372],{"id":5663,"depth":99,"text":5664},{"id":5673,"depth":99,"text":5674},{"id":5690,"depth":93,"text":5691,"children":6374},[6375,6376],{"id":5697,"depth":99,"text":5697},{"id":5730,"depth":99,"text":5731},{"id":5812,"depth":93,"text":5813},{"id":5827,"depth":93,"text":5828},{"id":6182,"depth":93,"text":6183,"children":6380},[6381,6382,6383],{"id":6186,"depth":99,"text":6186},{"id":6261,"depth":99,"text":6261},{"id":6271,"depth":99,"text":6271},{"id":2340,"depth":93,"text":2340},127,1761738198141]