[{"data":1,"prerenderedAt":2697},["ShallowReactive",2],{"randomIndex/page/12/":3,"index-page-12":4,"posts-total":2696},2,[5,230,270,314,1537,1656,1948,2032,2138,2531],{"title":6,"date":7,"path":8,"tags":9,"body":10},"使用Chrome的同步api为chromium开启同步功能","2021-04-15","/2021/04/15/login-chromium-with-the-api-of-chrome","笔记",{"type":11,"value":12,"toc":228},"minimark",[13,17,26,38,72,75,81,93,155,169,176,224],[14,15,16],"p",{},"今年两三月的时候，Google限制了chromium的同步api次数，导致各个发行版内置的chromium将不再能继续使用Google的数据同步功能。",[14,18,19,20],{},"今天在翻 archlinuxcn 的群组的时候翻到了一段脚本: ",[21,22,23],"a",{"href":23,"rel":24},"https://gist.github.com/foutrelis/14e339596b89813aa9c37fd1b4e5d9d5",[25],"nofollow",[14,27,28,29,33,34,37],{},"大意就是说，由于Archlinux特殊的chromium启动方式导致我们可以在设置",[30,31,32],"code",{},"oauth2-client-id","和",[30,35,36],{},"oauth2-client-secret","的情况下通过chrome的同步api继续使用Google的同步服务，说得太多了也没必要，毕竟原文就在那里，看不看取决于你，我这里直接给命令吧。",[39,40,45],"pre",{"className":41,"code":42,"language":43,"meta":44,"style":44},"language-shell shiki shiki-themes github-light github-dark","echo \"--oauth2-client-id=77185425430.apps.googleusercontent.com\n--oauth2-client-secret=OTJgUOQcT7lO7GsGZq2G4IlT\" >> ~/.config/chromium-flags.conf\n","shell","",[30,46,47,60],{"__ignoreMap":44},[48,49,52,56],"span",{"class":50,"line":51},"line",1,[48,53,55],{"class":54},"sj4cs","echo",[48,57,59],{"class":58},"sZZnC"," \"--oauth2-client-id=77185425430.apps.googleusercontent.com\n",[48,61,62,65,69],{"class":50,"line":3},[48,63,64],{"class":58},"--oauth2-client-secret=OTJgUOQcT7lO7GsGZq2G4IlT\"",[48,66,68],{"class":67},"szBVR"," >>",[48,70,71],{"class":58}," ~/.config/chromium-flags.conf\n",[14,73,74],{},"再次打开chromium,你就会发现你心心念念的同步功能回来了。",[14,76,77],{},[78,79],"img",{"alt":44,"src":80},"https://static.031130.xyz/uploads/2024/08/12/62f3cafe4a5ec.webp",[14,82,83],{},[84,85,86,87,92],"del",{},"然而，并不是所有的发行版都像 Archlinux 这样考虑到 oauth，我们也不可能像 Archlinux 官方那样有这个闲情雅致为没一个 Chromium 去添加这个 ",[21,88,91],{"href":89,"rel":90},"https://github.com/archlinux/svntogit-packages/blob/packages/chromium/trunk/use-oauth2-client-switches-as-default.patch",[25],"patch"," 以后重新编译一遍，大部分人都是直接用发行版源里的。针对这种情况，我们可以直接手写一个脚本",[39,94,98],{"className":95,"code":96,"language":97,"meta":44,"style":44},"language-bash shiki shiki-themes github-light github-dark","#!/usr/bin/bash\nexport GOOGLE_DEFAULT_CLIENT_ID=77185425430.apps.googleusercontent.com\nexport GOOGLE_DEFAULT_CLIENT_SECRET=OTJgUOQcT7lO7GsGZq2G4IlT\nexec /usr/bin/chromium-browser \"$@\"     # 我用的 Fedora 的启动命令是 chromium-browser，别的发行版用户还请自行调整\n","bash",[30,99,100,106,121,134],{"__ignoreMap":44},[48,101,102],{"class":50,"line":51},[48,103,105],{"class":104},"sJ8bj","#!/usr/bin/bash\n",[48,107,108,111,115,118],{"class":50,"line":3},[48,109,110],{"class":67},"export",[48,112,114],{"class":113},"sVt8B"," GOOGLE_DEFAULT_CLIENT_ID",[48,116,117],{"class":67},"=",[48,119,120],{"class":113},"77185425430.apps.googleusercontent.com\n",[48,122,124,126,129,131],{"class":50,"line":123},3,[48,125,110],{"class":67},[48,127,128],{"class":113}," GOOGLE_DEFAULT_CLIENT_SECRET",[48,130,117],{"class":67},[48,132,133],{"class":113},"OTJgUOQcT7lO7GsGZq2G4IlT\n",[48,135,137,140,143,146,149,152],{"class":50,"line":136},4,[48,138,139],{"class":54},"exec",[48,141,142],{"class":58}," /usr/bin/chromium-browser",[48,144,145],{"class":58}," \"",[48,147,148],{"class":54},"$@",[48,150,151],{"class":58},"\"",[48,153,154],{"class":104},"     # 我用的 Fedora 的启动命令是 chromium-browser，别的发行版用户还请自行调整\n",[14,156,157,158,161,162,165,166,168],{},"当我满心欢喜地把脚本扔进 ",[30,159,160],{},"$HOME/.local/bin"," 后，我却突然发现 Fedora 官方源中把 chromium 的启动命令写死在了 ",[30,163,164],{},"/usr/bin/chromium-browser","，如果直接去改 ",[30,167,164],{}," 的话，每次更新都会被覆盖。",[14,170,171,175],{},[172,173,174],"strong",{},"正确的做法","应该是把 desktop 文件复制一份到桌面，再去改内容。",[39,177,179],{"className":95,"code":178,"language":97,"meta":44,"style":44},"mkdir -p $HOME/.local/share/applications/\ncp /usr/share/applications/chromium-browser.desktop $HOME/.local/share/applications/\nsed -i \"s|/usr/bin/chromium-browser|GOOGLE_DEFAULT_CLIENT_ID=77185425430.apps.googleusercontent.com GOOGLE_DEFAULT_CLIENT_SECRET=OTJgUOQcT7lO7GsGZq2G4IlT /usr/bin/chromium-browser|g\" $HOME/.local/share/applications/chromium-browser.desktop\n",[30,180,181,196,208],{"__ignoreMap":44},[48,182,183,187,190,193],{"class":50,"line":51},[48,184,186],{"class":185},"sScJk","mkdir",[48,188,189],{"class":54}," -p",[48,191,192],{"class":113}," $HOME",[48,194,195],{"class":58},"/.local/share/applications/\n",[48,197,198,201,204,206],{"class":50,"line":3},[48,199,200],{"class":185},"cp",[48,202,203],{"class":58}," /usr/share/applications/chromium-browser.desktop",[48,205,192],{"class":113},[48,207,195],{"class":58},[48,209,210,213,216,219,221],{"class":50,"line":123},[48,211,212],{"class":185},"sed",[48,214,215],{"class":54}," -i",[48,217,218],{"class":58}," \"s|/usr/bin/chromium-browser|GOOGLE_DEFAULT_CLIENT_ID=77185425430.apps.googleusercontent.com GOOGLE_DEFAULT_CLIENT_SECRET=OTJgUOQcT7lO7GsGZq2G4IlT /usr/bin/chromium-browser|g\"",[48,220,192],{"class":113},[48,222,223],{"class":58},"/.local/share/applications/chromium-browser.desktop\n",[225,226,227],"style",{},"html pre.shiki code .sj4cs, html code.shiki .sj4cs{--shiki-default:#005CC5;--shiki-dark:#79B8FF}html pre.shiki code .sZZnC, html code.shiki .sZZnC{--shiki-default:#032F62;--shiki-dark:#9ECBFF}html pre.shiki code .szBVR, html code.shiki .szBVR{--shiki-default:#D73A49;--shiki-dark:#F97583}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sJ8bj, html code.shiki .sJ8bj{--shiki-default:#6A737D;--shiki-dark:#6A737D}html pre.shiki code .sVt8B, html code.shiki .sVt8B{--shiki-default:#24292E;--shiki-dark:#E1E4E8}html pre.shiki code .sScJk, html code.shiki .sScJk{--shiki-default:#6F42C1;--shiki-dark:#B392F0}",{"title":44,"searchDepth":3,"depth":3,"links":229},[],{"title":231,"date":232,"path":233,"tags":234,"body":235},"Appimage的文件储存在哪里","2021-04-13","/2021/04/13/where-will-appimage-put-its-file","大佬对话笔记",{"type":11,"value":236,"toc":268},[237,240,246,249,254,257],[14,238,239],{},"我不饿：",[241,242,243],"blockquote",{},[14,244,245],{},"有人知道怎么删除appimage的用户数据吗？",[14,247,248],{},"liolok | 李皓奇:",[241,250,251],{},[14,252,253],{},"还是可以在用户的家目录下面乱写的吧",[14,255,256],{},"Lipis Apple:",[241,258,259,262,265],{},[14,260,261],{},"不太讲武德：~/.local/share/(app)",[14,263,264],{},"算讲武德：~/.config/(app)",[14,266,267],{},"不讲武德：~/.(app)",{"title":44,"searchDepth":3,"depth":3,"links":269},[],{"title":271,"date":272,"path":273,"tags":9,"body":274},"使用Motrix接管Firefox的下载","2021-04-11","/2021/04/11/use-motrix-install-of-firefox-to-download",{"type":11,"value":275,"toc":312},[276,281,284,287,290,299,302],[241,277,278],{},[14,279,280],{},"本文是一篇个人笔记，不具有太强的技术性，仅仅是为后来者指个方向。",[14,282,283],{},"熟悉我的人都知道，我是一个Firefox的忠实用户，原因有二：",[14,285,286],{},"​\t一/ Firefox国际版同步功能国内可用",[14,288,289],{},"​\t二/ moz://a（Firefox用户应该能在地址栏直接访问这个链接）",[14,291,292,293,298],{},"但是Motrix没有推出适用于Firefox的接管浏览器下载功能的插件，于是只能用",[21,294,297],{"href":295,"rel":296},"https://addons.mozilla.org/firefox/addon/aria2-integration",[25],"aria2的插件","。这个插件内置了AriaNG,对于aria2用户来说会比较实用，但是对于Motrix用户而言其实功能有些多余且不兼容，比如什么自动启动aria2什么的是无法实现的。",[14,300,301],{},"主要的配置过程我就图解了，退出前记得保存配置。",[14,303,304,308],{},[78,305],{"alt":306,"src":307},"step 1","https://static.031130.xyz/uploads/2024/08/12/62f36d3a79438.webp",[78,309],{"alt":310,"src":311},"step 2","https://static.031130.xyz/uploads/2024/08/12/62f36d3d08a23.webp",{"title":44,"searchDepth":3,"depth":3,"links":313},[],{"title":315,"date":316,"path":317,"tags":318,"body":320},"yay进阶","2021-04-04","/2021/04/04/yay-more",[319],"Archlinux",{"type":11,"value":321,"toc":1519},[322,340,345,350,354,371,376,386,391,402,410,413,418,446,453,463,469,482,485,491,494,500,510,516,519,525,528,534,537,543,546,552,563,569,572,578,584,587,593,604,610,620,626,633,642,648,651,657,660,664,667,673,679,686,692,699,705,708,714,717,723,726,729,732,735,741,744,750,753,759,762,768,771,777,784,790,793,799,802,805,811,814,820,823,829,832,835,841,846,852,858,861,867,870,876,879,890,896,899,905,908,911,914,921,924,930,933,939,945,951,954,957,963,966,972,975,981,985,991,993,996,1002,1005,1011,1014,1020,1025,1031,1033,1036,1042,1045,1051,1054,1060,1065,1071,1073,1076,1082,1085,1091,1094,1100,1103,1106,1112,1115,1121,1124,1127,1133,1136,1142,1145,1148,1154,1157,1163,1166,1169,1175,1178,1184,1187,1191,1194,1199,1206,1212,1215,1218,1223,1226,1232,1235,1238,1243,1246,1252,1255,1261,1264,1267,1272,1275,1281,1284,1290,1293,1299,1302,1305,1310,1313,1319,1322,1325,1330,1333,1339,1342,1345,1351,1354,1360,1363,1366,1372,1375,1381,1392,1410,1413,1429,1435,1445,1451,1460,1466,1469,1475,1478,1484,1487,1493,1496,1499,1505,1516],[241,323,324,327,330,333],{},[14,325,326],{},"yay是一个AUR Helper，他可以执行pacman的几乎所有操作，并在此基础上添加了很多额外用法。",[14,328,329],{},"我没有在网络上查找到关于yay的、除了pacman基础用法和安装AUR包以外的中文教程，英文的也几乎没有看到，这也是我写这篇文章的原因所在。",[14,331,332],{},"本文通篇详讲yay的每一个设置/选项（大概就是archwiki那种干涩的行文思路），最后会给出我自己的一些常用命令，但不会做解释。",[14,334,335,336,339],{},"写作时参考了yay的英文使用手册，如果你的arch安装了yay，那么即可通过",[30,337,338],{},"man yay","命令随时查阅它。",[14,341,342],{},[172,343,344],{},"Tips1: 本文中出现的foo一般是指包名，标注*的表示该选项默认启用。",[14,346,347],{},[172,348,349],{},"Tips2: 使用电脑端的访客可以在侧栏以获取目录。",[351,352,353],"h2",{"id":353},"基本用法",[14,355,356,357,360,361,33,364,367,368,370],{},"yay的基本用法是",[30,358,359],{},"yay \u003Coperation> [options] [targets]","、",[30,362,363],{},"yay foo",[30,365,366],{},"yay","，",[30,369,359],{},"的用法可以讨论的点比较多，我会在后文中一一道来。",[372,373,374],"h3",{"id":366},[30,375,366],{},[14,377,378,379,381,382,385],{},"当我们仅执行",[30,380,366],{},"，后面不跟任何参数时，yay会执行操作",[30,383,384],{},"yay -Syu","，他会先调用pacman更新源的数据库、更新所有从源内安装的软件包，并检查你的AUR包有没有更新。",[372,387,389],{"id":388},"yay-foo",[30,390,363],{},[14,392,393,394,397,398,401],{},"通过yay后面直接跟包名的命令会让yay直接在源和AUR内搜索带有",[30,395,396],{},"foo","关键词的包（包名和简介中只要出现foo都会被一网打尽），以下是我执行",[30,399,400],{},"yay dingtalk","的输出",[39,403,408],{"className":404,"code":406,"language":407},[405],"language-text","5 aur/com.dingtalk.deepin 5.0.15deepin7-1 (+0 0.00)\n    Deepin Wine dingtalk\n4 aur/deepin.com.dingtalk.com 5.1.28.12-2 (+1 0.12)\n    DingTalk Client on Deepin Wine\n3 aur/dingtalk 2.1.3-1 (+3 0.00)\n    钉钉桌面版，基于electron和钉钉网页版开发，支持Windows、Linux和macOS\n2 aur/dingtalk-linux 3.5.5-1 (+6 0.12)\n    May be the official Linux experimental version\n1 aur/dingtalk-electron 2.1.9-1 (+9 0.15)\n    钉钉Linux版本\n==> Packages to install (eg: 1 2 3, 1-3 or ^4)\n==\n","text",[30,409,406],{"__ignoreMap":44},[14,411,412],{},"输入每一项对应的序号即可进入相应的安装过程。",[372,414,416],{"id":415},"yay-operation-options-targets",[30,417,359],{},[14,419,420,421,33,424,427,428,430,431,434,435,438,439,33,442,445],{},"在这里，\u003Coperation>每次只能有一个，",[48,422,423],{},"options",[48,425,426],{},"targets","可以有多个，且多个",[48,429,423],{},"可以合起来写在一起。比如",[30,432,433],{},"yay -P -s -f","可以直接写成",[30,436,437],{},"yay -Psf","，顺序也可以颠倒，",[30,440,441],{},"-Psf",[30,443,444],{},"-sPf","没区别。",[447,448,450],"h4",{"id":449},"y-yay",[30,451,452],{},"-Y (--yay)",[14,454,455,456,33,459,462],{},"-Y行为其实是yay的默认行为，当你没有加其他的行为参数时，yay就会执行-Y参数，可以跟",[30,457,458],{},"--gendb",[30,460,461],{},"-c","。",[464,465,467],"h5",{"id":466},"gendb",[30,468,458],{},[14,470,471,472,475],{},"生成AUR数据库。",[172,473,474],{},"仅当从另一个AUR Helper迁移到yay时，才应使用此选项。",[84,476,477,478,481],{},"（根据我的个人理解，是根据你Arch内安装的源内找不到的包的包名去AUR里寻找对应的PKGBUILD，并且把能找到的PKGBUILD给clone到",[30,479,480],{},"~/.cache/yay/","目录下）",[14,483,484],{},"千玄子大佬说：“简单说来就是把在 AUR 的 PKGBUILD 下下来然后比对是否要更新。”",[464,486,488],{"id":487},"c-clean",[30,489,490],{},"-c（--clean）",[14,492,493],{},"清除不再需要的、没有被依赖的包。（相当于apt中的autoremove）",[447,495,497],{"id":496},"p-show",[30,498,499],{},"-P(--show)",[14,501,502,503,506,507],{},"执行特定的Print操作。可以跟的",[48,504,505],{},"option","有",[30,508,509],{},"-c、-f、-d、-g、-n、-s、-u、-w、-q",[464,511,513],{"id":512},"c-complete",[30,514,515],{},"-c(--complete)",[14,517,518],{},"Print所有源内和AUR软件包的列表。这是给命令行操作提供的，并不打算由用户直接使用。（意思是启用了这个选项以后你的终端会出现一大串长常的列表来告诉你你的Arch到底可以从哪里安装哪些包，并不是直接给你用的，是作为数据留给别的命令来玩耍的）",[464,520,522],{"id":521},"f-fish",[30,523,524],{},"-f(--fish)",[14,526,527],{},"在输出结果到终端时，会专门为fish用户做微调。（但是根据SamLukeYes大佬说他用fish体验下来并没有感知到加不加有什么区别，应该是属于感知不强的选项）",[464,529,531],{"id":530},"d-defaultconfig",[30,532,533],{},"-d(--defaultconfig)",[14,535,536],{},"Print默认的yay配置。",[464,538,540],{"id":539},"g-currentconfig",[30,541,542],{},"-g(--currentconfig)",[14,544,545],{},"Print当前的yay配置。",[464,547,549],{"id":548},"n-numberupgrades",[30,550,551],{},"-n(--numberupgrades)",[14,553,554,555,558,559,562],{},"数一数你现在还有多少AUR包待更新。yay作者不推荐你使用呢，他推荐你用",[30,556,557],{},"yay -Qu","或者",[30,560,561],{},"wc -l","来代替它。",[464,564,566],{"id":565},"s-stats",[30,567,568],{},"-s(--stats)",[14,570,571],{},"会展示一大堆信息，如下",[39,573,576],{"className":574,"code":575,"language":407},[405],"[zhullyb@Archlinux ~]$ yay -Ps\n==> Yay version v10.2.0                             #yay版本\n===========================================\n==> Total installed packages: 1240                  #总共安装了多少包\n==> Total foreign installed packages: 24            #多少包不是从源里安装的\n==> Explicitly installed packages: 271              #有多少包是你自己主动安装的(而不是作为依赖安装的)\n==> Total Size occupied by packages: 14.3 GiB       #安装的所有包合在一起一共占了你多少空间\n===========================================\n==> Ten biggest packages:                           #十个体积最大的包\nwps-office-cn: 990.9 MiB\nttf-sarasa-gothic: 855.5 MiB\nlinux-firmware: 652.3 MiB\nbaidunetdisk-bin: 494.7 MiB\ncom.antutu.benchmark: 412.0 MiB\nwine: 402.2 MiB\nlinux-xanmod-cacule-uksm-cjktty: 324.4 MiB\nmicrosoft-edge-dev-bin: 316.4 MiB\nwine-mono: 316.2 MiB\ndeepin-wine5-i386: 259.5 MiB\n===========================================\n:: Querying AUR...\n -> Missing AUR Packages:  zhullyb-archlinux-git    #AUR里找不到的包\n -> Flagged Out Of Date AUR Packages:  xml2         #AUR中被人标注过期的包\n",[30,577,575],{"__ignoreMap":44},[464,579,581],{"id":580},"u-upgrades",[30,582,583],{},"-u(--upgrades)",[14,585,586],{},"展示你所有待更新的包。",[464,588,590],{"id":589},"w-news",[30,591,592],{},"-w(--news)",[14,594,595,596,599,600,603],{},"展示来自archlinux.org的新闻。需要注意的是，这里的新闻是具有时效性的，只有在你的Arch最后一次更新以后发出来的新闻才会被显示出来。如果你不想要yay判断新闻时效性，你可以通过",[30,597,598],{},"yay -Pww","（即两个",[30,601,602],{},"w","）来获取所有能获得的新闻。",[464,605,607],{"id":606},"q-quiet",[30,608,609],{},"-q(--quiet)",[14,611,612,613,616,617,462],{},"在输出新闻的时候，仅输出新闻的标题。该功能需要与",[30,614,615],{},"-w","连用，即",[30,618,619],{},"yay -Pwq",[447,621,623],{"id":622},"g-getpkgbuild",[30,624,625],{},"-G(--getpkgbuild)",[14,627,628,629,632],{},"后跟包名。需要注意的是，如果指定的包不存在于官方源，则无法输出，后跟",[30,630,631],{},"-f、-p","参数。",[14,634,635],{},[636,637,638,639,632],"em",{},"如果希望仅获取来自AUR（即排除第三方源的干扰）的PKGBUILD，后需跟",[30,640,641],{},"-a",[464,643,645],{"id":644},"f-force",[30,646,647],{},"-f(--force)",[14,649,650],{},"强制下载AUR中的PKGBUILD，如果它在yay缓存目录已经存在了，那就覆盖它！",[464,652,654],{"id":653},"p-print",[30,655,656],{},"-p(--print)",[14,658,659],{},"Print指定包的PKGBUILD。",[372,661,663],{"id":662},"pacman-拓展用法","pacman 拓展用法",[14,665,666],{},"yay虽然可以使用pacman的所有\u003Coperation>，但是它远不仅于此。在这一段，我将向你介绍yay中包含的那些pacman不包括的pacman \u003Coperation",[447,668,670],{"id":669},"s",[30,671,672],{},"-S",[464,674,676],{"id":675},"s-si-sl-ss-su-sc-qu",[30,677,678],{},"-S, -Si, -Sl, -Ss, -Su, -Sc, -Qu",[14,680,681,682,685],{},"这些操作pacman都支持，而与pacman不同的是，yay的这些操作可以涵盖到",[172,683,684],{},"官方源/第三方源和AUR","中的所有包。",[447,687,689],{"id":688},"sc",[30,690,691],{},"-Sc",[14,693,694,695,698],{},"yay将会清除AUR包构建时的缓存和没有被track的文件。没有被track的文件在这里指AUR包构建时下载的sources或者构建完成的pkg包，但是vcs sources会被保留（比如.",[30,696,697],{},"git","文件夹）",[447,700,702,703],{"id":701},"全局的options","全局的",[48,704,423],{},[14,706,707],{},"全局是指在所有\u003Coperation>下都可以加啦。",[464,709,711],{"id":710},"repo",[30,712,713],{},"--repo",[14,715,716],{},"假定你给出的包名只存在源里（忽视AUR的存在）",[464,718,720],{"id":719},"a-aur",[30,721,722],{},"-a(--aur)",[14,724,725],{},"假定你给出的包名只存在AUR中（忽视源的存在）",[351,727,728],{"id":728},"配置设置",[14,730,731],{},"原版的man手册排的比较混乱，我这里自己细分了几个类型，或许不是特别专业，但我希望能够帮助你们理解。",[372,733,734],{"id":734},"自定义调用命令型",[464,736,738],{"id":737},"editor-command",[30,739,740],{},"--editor \u003Ccommand>",[14,742,743],{},"设置编辑时调用的编辑器。",[464,745,747],{"id":746},"makepkg-command",[30,748,749],{},"--makepkg \u003Ccommand>",[14,751,752],{},"设置makepkg时需要调用makepkg命令（一般情况下用不到）",[464,754,756],{"id":755},"pacman-command",[30,757,758],{},"--pacman \u003Ccommand>",[14,760,761],{},"设置运行pacman时需要调用pacman命令（一般情况下用不到）",[464,763,765],{"id":764},"tar-command",[30,766,767],{},"--tar \u003Ccommand>",[14,769,770],{},"设置makepkg解压tar资源时调用的tar命令（一般情况下用不到）",[464,772,774],{"id":773},"git-command",[30,775,776],{},"--git \u003Ccommand>",[14,778,779,780,783],{},"设置makepkg clone git资源时调用的git命令（比如你可以安装AUR中的fgit-go，使用",[30,781,782],{},"--git fgit","参数来让fastgit代理clone的过程）",[464,785,787],{"id":786},"gpg-command",[30,788,789],{},"--gpg \u003Ccommand>",[14,791,792],{},"设置gpg验证资源时调用的gpg命令",[464,794,796],{"id":795},"sudo-command",[30,797,798],{},"--sudo \u003Ccommand>",[14,800,801],{},"设置调用sudo获取su权限安装pkg时所调用的sudo命令。",[372,803,804],{"id":804},"自定义配置文件型",[464,806,808],{"id":807},"config-file",[30,809,810],{},"--config \u003Cfile>",[14,812,813],{},"设置读取的pacman配置文件。",[464,815,817],{"id":816},"makepkgconf-file",[30,818,819],{},"--makepkgconf \u003Cfile>",[14,821,822],{},"设置读取的makepkg配置文件。",[464,824,826],{"id":825},"nomakepkgconf",[30,827,828],{},"--nomakepkgconf",[14,830,831],{},"不读取系统中的makepkg.conf，仅使用Arch默认状态下的配置文件。",[372,833,834],{"id":834},"自定义路径类型",[464,836,838],{"id":837},"builddir-dir",[30,839,840],{},"--builddir \u003Cdir>",[14,842,843,844],{},"设置build路径，默认路径为",[30,845,480],{},[464,847,849],{"id":848},"absdir-dir",[30,850,851],{},"--absdir \u003Cdir>",[14,853,854,855],{},"设置abs路径，默认路径为",[30,856,857],{},"~/.cache/yay/abs/",[372,859,860],{"id":860},"参数传递型",[464,862,864],{"id":863},"editorflags-flags",[30,865,866],{},"--editorflags \u003Cflags>",[14,868,869],{},"后跟需要跟随传递给编辑器的参数。如果需要传递多个参数，可以使用引号。",[464,871,873],{"id":872},"mflags-flags",[30,874,875],{},"--mflags \u003Cflags>",[14,877,878],{},"后跟需要跟随传递给makepkg的参数。如果需要传递多个参数，可以使用引号。",[14,880,881,882,885,886,889],{},"这个用的人不多，但其实是非常好用的一个功能。在我们安装",[30,883,884],{},"deepin-wine-tim","等包的时候，很可能会遇到文件明明完整但checksum不通过的情况，这时我们可以跟一个",[30,887,888],{},"--skipchecksums","参数传递给makepkg以跳过checksum的过程。",[464,891,893],{"id":892},"gpgflags-flags",[30,894,895],{},"--gpgflags \u003Cflags>",[14,897,898],{},"后跟需要跟随传递给pgp的参数。如果需要传递多个参数，可以使用引号。",[464,900,902],{"id":901},"sudoflags-flags",[30,903,904],{},"--sudoflags \u003Cflags>",[14,906,907],{},"后跟需要跟随传递给sudo的参数。如果需要传递多个参数，可以使用引号。",[372,909,910],{"id":910},"菜单配置型",[447,912,913],{"id":913},"clean菜单",[464,915,917,918],{"id":916},"cleanmenu","*",[30,919,920],{},"--cleanmenu",[14,922,923],{},"启用清除询问菜单。（询问你是否需要清除已存在的文件）",[464,925,927],{"id":926},"nocleanmenu",[30,928,929],{},"--nocleanmenu",[14,931,932],{},"禁用清除询问菜单。（不询问你是否需要清除已存在的文件）",[464,934,936],{"id":935},"answerclean",[30,937,938],{},"--answerclean",[14,940,941,942,632],{},"自动回答cleanmenu，后跟",[30,943,944],{},"\u003CAll|None|Installed|NotInstalled>",[464,946,917,948],{"id":947},"noanswerclean",[30,949,950],{},"--noanswerclean",[14,952,953],{},"不设置自动回答。",[447,955,956],{"id":956},"diff菜单",[464,958,917,960],{"id":959},"diffmenu",[30,961,962],{},"--diffmenu",[14,964,965],{},"启用对比询问菜单。（询问你是否需要对比本地文件和AUR文件）",[464,967,969],{"id":968},"nodiffmenu",[30,970,971],{},"--nodiffmenu",[14,973,974],{},"禁用对比询问菜单。（不询问你是否需要对比本地文件和AUR文件）",[464,976,978],{"id":977},"answerdiff",[30,979,980],{},"--answerdiff",[14,982,941,983,632],{},[30,984,944],{},[464,986,917,988],{"id":987},"noanswerdiff",[30,989,990],{},"--noanswerdiff",[14,992,953],{},[447,994,995],{"id":995},"edit菜单",[464,997,999],{"id":998},"editmenu",[30,1000,1001],{},"--editmenu",[14,1003,1004],{},"启用修改询问菜单。（询问你是否需要修改PKGBUILD以及相关文件）",[464,1006,917,1008],{"id":1007},"noeditmenu",[30,1009,1010],{},"--noeditmenu",[14,1012,1013],{},"禁用修改询问菜单。（不询问你是否需要修改PKGBUILD以及相关文件）",[464,1015,1017],{"id":1016},"answeredit",[30,1018,1019],{},"--answeredit",[14,1021,1022,1023,632],{},"自动回答editmenu，后跟",[30,1024,944],{},[464,1026,917,1028],{"id":1027},"noansweredit",[30,1029,1030],{},"--noansweredit",[14,1032,953],{},[447,1034,1035],{"id":1035},"upgrade菜单",[464,1037,917,1039],{"id":1038},"upgrademenu",[30,1040,1041],{},"--upgrademenu",[14,1043,1044],{},"启用更新询问菜单。（询问你是否需要更新AUR包）",[464,1046,1048],{"id":1047},"noupgrademenu",[30,1049,1050],{},"--noupgrademenu",[14,1052,1053],{},"禁用更新询问菜单。（不询问你是否需要更新AUR包）",[464,1055,1057],{"id":1056},"answerupgrade",[30,1058,1059],{},"--answerupgrade",[14,1061,1062,1063,632],{},"自动回答upgrademenu，后跟",[30,1064,944],{},[464,1066,917,1068],{"id":1067},"noanswerupgrade",[30,1069,1070],{},"--noanswerupgrade",[14,1072,953],{},[447,1074,1075],{"id":1075},"removemake菜单",[464,1077,917,1079],{"id":1078},"askremovemake",[30,1080,1081],{},"--askremovemake",[14,1083,1084],{},"在编译结束后，询问是否删除make depend。",[464,1086,1088],{"id":1087},"removemake",[30,1089,1090],{},"--removemake",[14,1092,1093],{},"在编译结束后，删除make depend。",[464,1095,1097],{"id":1096},"noremovemake",[30,1098,1099],{},"--noremovemake",[14,1101,1102],{},"在编译结束后，不删除make depend。",[447,1104,1105],{"id":1105},"provides菜单",[464,1107,917,1109],{"id":1108},"provides",[30,1110,1111],{},"--provides",[14,1113,1114],{},"搜索AUR包时，一同寻找其在AUR上的依赖程序。 当找到多个提供该依赖的包时，将出现一个菜单，提示您选择一个。尽管这不会引起注意，但这会增加依赖项解决时间。",[464,1116,1118],{"id":1117},"noprovides",[30,1119,1120],{},"--noprovides",[14,1122,1123],{},"搜索AUR包时，不在AUR上寻找其依赖程序。尽管yay不会再次弹出依赖菜单供你选择，yay调用pacman时依然会出现pacman的选择菜单让你选择。",[447,1125,1126],{"id":1126},"pgpfetch菜单",[464,1128,917,1130],{"id":1129},"pgpfetch",[30,1131,1132],{},"--pgpfetch",[14,1134,1135],{},"询问你是否从每个PKGBUILD的validpgpkeys字段导入未知的PGP密钥。",[464,1137,1139],{"id":1138},"nopgpfetch",[30,1140,1141],{},"--nopgpfetch",[14,1143,1144],{},"不自动导入陌生的PGP密钥。",[447,1146,1147],{"id":1147},"useask选项",[464,1149,917,1151],{"id":1150},"useask",[30,1152,1153],{},"--useask",[14,1155,1156],{},"调用pacman的--ask询问用户是否删除系统中与当前包冲突的软件包。",[464,1158,1160],{"id":1159},"nouseask",[30,1161,1162],{},"--nouseask",[14,1164,1165],{},"不调用pacman的--ask询问用户是否删除系统中与当前包冲突的软件包，遇到冲突的软件包时直接报错，由用户来手动解决。",[447,1167,1168],{"id":1168},"combinedupgrade菜单",[464,1170,1172],{"id":1171},"combinedupgrade",[30,1173,1174],{},"--combinedupgrade",[14,1176,1177],{},"在系统更新期间，将源内包和AUR包的更新菜单合并到一起。",[464,1179,917,1181],{"id":1180},"nocombinedupgrade",[30,1182,1183],{},"--nocombinedupgrade",[14,1185,1186],{},"在系统更新期间，先支持源内包的升级，完成后再进行AUR包的升级。",[372,1188,1190],{"id":1189},"t-or-f-型","T or F 型",[447,1192,1193],{"id":1193},"devel",[464,1195,1196],{"id":1193},[30,1197,1198],{},"--devel",[14,1200,1201,1202,1205],{},"在系统更新期间，检查AUR的vcs包是否有更新，当前仅支持AUR的-git包。 devel查询是使用",[30,1203,1204],{},"git ls-remote","对比安装时和现在最新的commit_id完成的。",[464,1207,917,1209],{"id":1208},"nodevel",[30,1210,1211],{},"--nodevel",[14,1213,1214],{},"在系统更新期间， 不检查AUR的vcs包是否有更新。",[447,1216,1217],{"id":1217},"timeupdate",[464,1219,1220],{"id":1217},[30,1221,1222],{},"--timeupdate",[14,1224,1225],{},"在系统更新期间，将已安装软件包的构建时间与每个软件包的AUR的最后修改时间进行比较。",[464,1227,917,1229],{"id":1228},"notimeupdate",[30,1230,1231],{},"--notimeupdate",[14,1233,1234],{},"在系统更新期间，不将已安装软件包的构建时间与每个软件包的AUR的最后修改时间进行比较。",[447,1236,1237],{"id":1237},"redownload",[464,1239,1240],{"id":1237},[30,1241,1242],{},"--redownload",[14,1244,1245],{},"就算PKGBUILD已经存在，也要重新从AUR上获取一份新的PKGBUILD并覆盖原有PKGBUILD。",[464,1247,1249],{"id":1248},"redownloadall",[30,1250,1251],{},"--redownloadall",[14,1253,1254],{},"就算PKGBUILD已经存在，也要重新从AUR上获取所有AUR包的PKGBUILD并覆盖原有PKGBUILD。",[464,1256,917,1258],{"id":1257},"noredownload",[30,1259,1260],{},"--noredownload",[14,1262,1263],{},"当下载PKGBUILD时，，如果发现cache中的PKGBUILD版本＞＝AUR上的版本时，直接使用本地的PKGBUILD。",[447,1265,1266],{"id":1266},"rebuild",[464,1268,1269],{"id":1266},[30,1270,1271],{},"--rebuild",[14,1273,1274],{},"即使在cache中有可用的二进制包的情况下，也始终要重新编译目标软件包。",[464,1276,1278],{"id":1277},"rebuildall",[30,1279,1280],{},"--rebuildall",[14,1282,1283],{},"即使在cache中有可用的二进制包的情况下，也始终要重新编译所有的AUR包。",[464,1285,1287],{"id":1286},"rebuildtree",[30,1288,1289],{},"--rebuildtree",[14,1291,1292],{},"安装AUR包时，以递归方式重新编译并重新安装其所有AUR依赖包，即使已安装的依赖项也是如此。 该选项使您可以轻松地针对当前系统的库重新构建软件包，如果它们变得不兼容。（比如python3.8->3.9）",[464,1294,917,1296],{"id":1295},"norebuild",[30,1297,1298],{},"--norebuild",[14,1300,1301],{},"构建软件包时，如果在缓存中找到该软件包并且该软件包与想要的软件包的版本相同，则跳过软件包的编译过程并使用现有的二进制程序。",[447,1303,1304],{"id":1304},"sudoloop",[464,1306,1307],{"id":1304},[30,1308,1309],{},"--sudoloop",[14,1311,1312],{},"在后台循环调用sudo，以防止sudo授权在长时间构建期间超时。",[464,1314,917,1316],{"id":1315},"nosudoloop",[30,1317,1318],{},"--nosudoloop",[14,1320,1321],{},"不在后台循环调用sudo，可能会导致sudo授权在长时间构建期间超时。",[447,1323,1324],{"id":1324},"batchinstall",[464,1326,1327],{"id":1324},[30,1328,1329],{},"--batchinstall",[14,1331,1332],{},"在构建和安装AUR包时，对每个软件包的安装进行排序，而并非在构建之后立刻安装每个软件包时。 需要注意的是，一旦构建了所有软件包，或者需要构建队列中的软件包作为构建另一个软件包的依赖项，应当在安装队列中安装所有软件包。",[464,1334,917,1336],{"id":1335},"nobatchinstall",[30,1337,1338],{},"--nobatchinstall",[14,1340,1341],{},"在构建AUR包成功后立即安装。",[447,1343,1344],{"id":1344},"clearafter",[464,1346,1348],{"id":1347},"cleanafter",[30,1349,1350],{},"--cleanafter",[14,1352,1353],{},"在构建AUR包完成以后清除cache文件。",[464,1355,917,1357],{"id":1356},"nocleanafter",[30,1358,1359],{},"--nocleanafter",[14,1361,1362],{},"在构建AUR包完成以后不清除cache文件。",[372,1364,1365],{"id":1365},"其他型",[464,1367,1369],{"id":1368},"save",[30,1370,1371],{},"--save",[14,1373,1374],{},"把你这一次执行yay后面跟的配置参数永久保存下来。",[464,1376,1378],{"id":1377},"aururl",[30,1379,1380],{},"--aururl",[14,1382,1383,1384,1388,1389],{},"更改aur源地址（默认为 ",[21,1385,1386],{"href":1386,"rel":1387},"https://aur.archlinux.org",[25]," ），",[84,1390,1391],{},"适用于中国用户，可以使用此参数将AUR的地址设置成清华的反代，具体的配置命令为",[39,1393,1395],{"className":95,"code":1394,"language":97,"meta":44,"style":44},"yay --aururl \"https://aur.tuna.tsinghua.edu.cn\" --save\n",[30,1396,1397],{"__ignoreMap":44},[48,1398,1399,1401,1404,1407],{"class":50,"line":51},[48,1400,366],{"class":185},[48,1402,1403],{"class":54}," --aururl",[48,1405,1406],{"class":58}," \"https://aur.tuna.tsinghua.edu.cn\"",[48,1408,1409],{"class":54}," --save\n",[14,1411,1412],{},"TUNA 的反代已经取消，可以使用如下命令设置回 AUR 官方源",[39,1414,1416],{"className":95,"code":1415,"language":97,"meta":44,"style":44},"yay --aururl \"https://aur.archlinux.org\" --save\n",[30,1417,1418],{"__ignoreMap":44},[48,1419,1420,1422,1424,1427],{"class":50,"line":51},[48,1421,366],{"class":185},[48,1423,1403],{"class":54},[48,1425,1426],{"class":58}," \"https://aur.archlinux.org\"",[48,1428,1409],{"class":54},[464,1430,1432],{"id":1431},"sortby",[30,1433,1434],{},"--sortby",[14,1436,1437,1438,1441,1442,462],{},"在搜索过程中，按特定条件对AUR结果进行排序，后跟",[30,1439,1440],{},"\u003Cvotes|popularity|id|baseid|name|base|submitted|modified","参数，默认为",[30,1443,1444],{},"votes",[464,1446,1448],{"id":1447},"searchby",[30,1449,1450],{},"--searchby",[14,1452,1453,1454,1441,1457,462],{},"通过指定查询类型来搜索AUR软件包，后跟",[30,1455,1456],{},"\u003Cname|name-desc|maintainer|depends|checkdepends|makedepends|optdepends",[30,1458,1459],{},"name-desc",[464,1461,917,1463],{"id":1462},"topdown",[30,1464,1465],{},"--topdown",[14,1467,1468],{},"优先展示源内包，其次才是AUR包",[464,1470,1472],{"id":1471},"bottomup",[30,1473,1474],{},"--bottomup",[14,1476,1477],{},"优先展示AUR包，其次才是源内包",[464,1479,1481],{"id":1480},"requestsplitn-number",[30,1482,1483],{},"--requestsplitn \u003Cnumber>",[14,1485,1486],{},"设置在每次向AUR的请求的最大数值（默认150）。数值越高，请求时间越短，但是单次请求的数值过大会导致error。当这个数值＞500时你应当特别注意这一点。",[464,1488,1490],{"id":1489},"completioninterval-days",[30,1491,1492],{},"--completioninterval \u003Cdays>",[14,1494,1495],{},"刷新完成高速缓存的时间（以天为单位,默认为7）。 将此值设置为0将导致每次刷新缓存，而将其设置为-1将导致永远不刷新缓存。",[351,1497,1498],{"id":1498},"我个人的常用命令",[39,1500,1503],{"className":1501,"code":1502,"language":407},[405],"yay\nyay foo\nyay -Sa foo\nyay -Scc\nyay -Ps\nyay -Pww\nyay -Gpa\nyay -Ga\n",[30,1504,1502],{"__ignoreMap":44},[14,1506,1507],{},[636,1508,1509,1510,1515],{},"本文同时发布于「",[21,1511,1514],{"href":1512,"rel":1513},"https://zhuanlan.zhihu.com/p/363666022",[25],"知乎专栏","」，如果你恰好有知乎帐号的话或许可以考虑帮我点个赞？",[225,1517,1518],{},"html pre.shiki code .sScJk, html code.shiki .sScJk{--shiki-default:#6F42C1;--shiki-dark:#B392F0}html pre.shiki code .sj4cs, html code.shiki .sj4cs{--shiki-default:#005CC5;--shiki-dark:#79B8FF}html pre.shiki code .sZZnC, html code.shiki .sZZnC{--shiki-default:#032F62;--shiki-dark:#9ECBFF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":44,"searchDepth":3,"depth":3,"links":1520},[1521,1527,1536],{"id":353,"depth":3,"text":353,"children":1522},[1523,1524,1525,1526],{"id":366,"depth":123,"text":366},{"id":388,"depth":123,"text":363},{"id":415,"depth":123,"text":359},{"id":662,"depth":123,"text":663},{"id":728,"depth":3,"text":728,"children":1528},[1529,1530,1531,1532,1533,1534,1535],{"id":734,"depth":123,"text":734},{"id":804,"depth":123,"text":804},{"id":834,"depth":123,"text":834},{"id":860,"depth":123,"text":860},{"id":910,"depth":123,"text":910},{"id":1189,"depth":123,"text":1190},{"id":1365,"depth":123,"text":1365},{"id":1498,"depth":3,"text":1498},{"title":1538,"date":1539,"path":1540,"tags":1541,"body":1542},"抛弃DisplayManager，拥抱startx","2021-03-14","/2021/03/14/lets-fuck-dm-and-use-startx","Linux",{"type":11,"value":1543,"toc":1654},[1544,1547,1550,1572,1575,1592,1595,1610,1613,1619,1627,1632,1635,1641,1644,1651],[14,1545,1546],{},"在正常情况下，我们会给Linux装上一个DisplayManager以方便我们输入账号密码来进入图形化系统，但是我不想要额外装一个DM来启动我的图形化系统（而且之前我一直用的sddm也出过一小阵子的问题）",[14,1548,1549],{},"首先卸载我的sddm",[39,1551,1553],{"className":41,"code":1552,"language":43,"meta":44,"style":44},"sudo pacman -Rsnc sddm sddm-kcm\n",[30,1554,1555],{"__ignoreMap":44},[48,1556,1557,1560,1563,1566,1569],{"class":50,"line":51},[48,1558,1559],{"class":185},"sudo",[48,1561,1562],{"class":58}," pacman",[48,1564,1565],{"class":54}," -Rsnc",[48,1567,1568],{"class":58}," sddm",[48,1570,1571],{"class":58}," sddm-kcm\n",[14,1573,1574],{},"安装startx所在的软件包",[39,1576,1578],{"className":41,"code":1577,"language":43,"meta":44,"style":44},"sudo pacman -S xorg-xinit\n",[30,1579,1580],{"__ignoreMap":44},[48,1581,1582,1584,1586,1589],{"class":50,"line":51},[48,1583,1559],{"class":185},[48,1585,1562],{"class":58},[48,1587,1588],{"class":54}," -S",[48,1590,1591],{"class":58}," xorg-xinit\n",[14,1593,1594],{},"从/etc/X11/xinit/xinitrc拷贝一份.xinitrc",[39,1596,1598],{"className":41,"code":1597,"language":43,"meta":44,"style":44},"cp /etc/X11/xinit/xinitrc ~/.xinitrc\n",[30,1599,1600],{"__ignoreMap":44},[48,1601,1602,1604,1607],{"class":50,"line":51},[48,1603,200],{"class":185},[48,1605,1606],{"class":58}," /etc/X11/xinit/xinitrc",[48,1608,1609],{"class":58}," ~/.xinitrc\n",[14,1611,1612],{},"注释掉最后5行",[39,1614,1617],{"className":1615,"code":1616,"language":407},[405],"#twm &\n#xclock -geometry 50x50-1+1 &\n#xterm -geometry 80x50+494+51 &\n#xterm -geometry 80x20+494-0 &\n#exec xterm -geometry 80x66+0+0 -name login\n",[30,1618,1616],{"__ignoreMap":44},[14,1620,1621,1622],{},"然后需要在结尾处写上我们的配置。我用的桌面是Plasma，查询",[21,1623,1626],{"href":1624,"rel":1625},"https://wiki.archlinux.org/index.php/KDE#From_the_console",[25],"wiki",[241,1628,1629],{},[14,1630,1631],{},"To start Plasma with xinit/startx, append export DESKTOP_SESSION=plasma and exec startplasma-x11 to your .xinitrc file. If you want to start Xorg at login, please see Start X at login.",[14,1633,1634],{},"然后在xinitrx文件末尾处写上我们的配置",[39,1636,1639],{"className":1637,"code":1638,"language":407},[405],"export DESKTOP_SESSION=plasma\nstartplasma-x11\n",[30,1640,1638],{"__ignoreMap":44},[14,1642,1643],{},"Ps: 在第二行中，wiki中让我们使用exec，代表当xorg桌面会话结束后自动退出当前用户，而我不想退出，所以没加",[14,1645,1646,1647,1650],{},"至此，我们的startx就已经配置完成了，重启后只需要在tty界面登录用户后输入",[30,1648,1649],{},"startx","并回车即可进入图形化界面。",[225,1652,1653],{},"html pre.shiki code .sScJk, html code.shiki .sScJk{--shiki-default:#6F42C1;--shiki-dark:#B392F0}html pre.shiki code .sZZnC, html code.shiki .sZZnC{--shiki-default:#032F62;--shiki-dark:#9ECBFF}html pre.shiki code .sj4cs, html code.shiki .sj4cs{--shiki-default:#005CC5;--shiki-dark:#79B8FF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":44,"searchDepth":3,"depth":3,"links":1655},[],{"title":1657,"date":1658,"path":1659,"tags":1660,"body":1662},"FireFox? IceDoge!!!","2021-02-27","/2021/02/27/change-your-firefox-icon-into-a-bluedoge",[1541,1661],"Fun",{"type":11,"value":1663,"toc":1946},[1664,1667,1697,1700,1706,1713,1716,1719,1943],[14,1665,1666],{},"事情的起因是这样的。",[241,1668,1669,1672,1682],{},[14,1670,1671],{},"Solidot",[14,1673,1674],{},[172,1675,1676,1681],{},[21,1677,1680],{"href":1678,"rel":1679},"https://www.solidot.org/story?sid=67051",[25],"Mozilla 强调 Firefox 的 logo 仍然包含小狐狸 "," 2021-02-27 20:02",[14,1683,1684,1685,1690,1691,1696],{},"#Firefox 过去几天一个广泛流传的 meme 宣称，Firefox 著名的红色小狐狸 logo 正被逐渐简化直至消失。Mozilla 官方博客",[21,1686,1689],{"href":1687,"rel":1688},"https://blog.mozilla.org/firefox/the-fox-is-still-in-the-firefox-logo/",[25],"对此做出了回应","，强调 Firefox 的 logo 将会始终包含小狐狸，他们没有消除狐狸的计划。作为反击这一 meme 行动的一部分，Mozilla 修改了",[21,1692,1695],{"href":1693,"rel":1694},"https://www.mozilla.org/en-US/firefox/nightly/firstrun/",[25],"Firefox Nightly"," 的 logo，将著名的网络 meme 狗币中的柴犬图像与红色小狐狸 logo 整合在一起。如果你下载安装 Nightly 版本，你会看到狗狗在看着你。",[14,1698,1699],{},"这只狗是非常可爱，大概是长下图这个样子。",[14,1701,1702],{},[78,1703],{"alt":1704,"src":1705},"非常可爱对吧","https://www.mozilla.org/media/img/logos/firefox/logo-nightdoge-lg-high-res.14f40a7985fe.png",[14,1707,1708,1709],{},"但是我是一个将Firefox当成主浏览器的用户，咱不可能去用Nightly，所以我就打算把我这里这只稳定版的红色小狐狸",[78,1710],{"alt":1711,"src":1712},"这只我都看烦了的小狐狸","https://www.mozilla.org/media/protocol/img/logos/firefox/browser/logo-lg-high-res.fbc7ffbb50fd.png",[14,1714,1715],{},"换成上面的那只狗。",[14,1717,1718],{},"通过直接写入用户目录下的icon可以在不覆盖浏览器原图标、不给包管理器惹麻烦的情况下实现我们的目标，所以，代码如下",[39,1720,1722],{"className":95,"code":1721,"language":97,"meta":44,"style":44},"#/usr/bin/sh\n\n# This script will change icon of you Firefox Browser into a bluedoge\n# Depend on imagemagick\n\ncd ~\ncurl https://www.mozilla.org/media/img/logos/firefox/logo-nightdoge-lg-high-res.14f40a7985fe.png > logo-nightdoge-lg-high-res.14f40a7985fe.png\n\nfor _resolution in 16 22 24 32 48 64 128 192 256 384\ndo\n    mkdir -p ~/.local/share/icons/hicolor/${_resolution}x${_resolution}/apps/\n    convert -resize \"${_resolution}x${_resolution}\" \"logo-nightdoge-lg-high-res.14f40a7985fe.png\" \"firefox${_resolution}.png\"\n    mv \"firefox${_resolution}.png\" ~/.local/share/icons/hicolor/${_resolution}x${_resolution}/apps/firefox.png\ndone\n\nrm logo-nightdoge-lg-high-res.14f40a7985fe.png\n\n# If you want to change back your icons, run the command bellow\n# rm ~/.local/share/icons/hicolor/*/apps/firefox.png\n",[30,1723,1724,1729,1735,1740,1745,1750,1759,1774,1779,1821,1827,1849,1883,1907,1913,1918,1926,1931,1937],{"__ignoreMap":44},[48,1725,1726],{"class":50,"line":51},[48,1727,1728],{"class":104},"#/usr/bin/sh\n",[48,1730,1731],{"class":50,"line":3},[48,1732,1734],{"emptyLinePlaceholder":1733},true,"\n",[48,1736,1737],{"class":50,"line":123},[48,1738,1739],{"class":104},"# This script will change icon of you Firefox Browser into a bluedoge\n",[48,1741,1742],{"class":50,"line":136},[48,1743,1744],{"class":104},"# Depend on imagemagick\n",[48,1746,1748],{"class":50,"line":1747},5,[48,1749,1734],{"emptyLinePlaceholder":1733},[48,1751,1753,1756],{"class":50,"line":1752},6,[48,1754,1755],{"class":54},"cd",[48,1757,1758],{"class":58}," ~\n",[48,1760,1762,1765,1768,1771],{"class":50,"line":1761},7,[48,1763,1764],{"class":185},"curl",[48,1766,1767],{"class":58}," https://www.mozilla.org/media/img/logos/firefox/logo-nightdoge-lg-high-res.14f40a7985fe.png",[48,1769,1770],{"class":67}," >",[48,1772,1773],{"class":58}," logo-nightdoge-lg-high-res.14f40a7985fe.png\n",[48,1775,1777],{"class":50,"line":1776},8,[48,1778,1734],{"emptyLinePlaceholder":1733},[48,1780,1782,1785,1788,1791,1794,1797,1800,1803,1806,1809,1812,1815,1818],{"class":50,"line":1781},9,[48,1783,1784],{"class":67},"for",[48,1786,1787],{"class":113}," _resolution ",[48,1789,1790],{"class":67},"in",[48,1792,1793],{"class":58}," 16",[48,1795,1796],{"class":58}," 22",[48,1798,1799],{"class":58}," 24",[48,1801,1802],{"class":58}," 32",[48,1804,1805],{"class":58}," 48",[48,1807,1808],{"class":58}," 64",[48,1810,1811],{"class":58}," 128",[48,1813,1814],{"class":58}," 192",[48,1816,1817],{"class":58}," 256",[48,1819,1820],{"class":58}," 384\n",[48,1822,1824],{"class":50,"line":1823},10,[48,1825,1826],{"class":67},"do\n",[48,1828,1830,1833,1835,1838,1841,1844,1846],{"class":50,"line":1829},11,[48,1831,1832],{"class":185},"    mkdir",[48,1834,189],{"class":54},[48,1836,1837],{"class":58}," ~/.local/share/icons/hicolor/",[48,1839,1840],{"class":113},"${_resolution}",[48,1842,1843],{"class":58},"x",[48,1845,1840],{"class":113},[48,1847,1848],{"class":58},"/apps/\n",[48,1850,1852,1855,1858,1861,1864,1867,1869,1872,1875,1878,1880],{"class":50,"line":1851},12,[48,1853,1854],{"class":185},"    convert",[48,1856,1857],{"class":54}," -resize",[48,1859,1860],{"class":58}," \"${",[48,1862,1863],{"class":113},"_resolution",[48,1865,1866],{"class":58},"}x${",[48,1868,1863],{"class":113},[48,1870,1871],{"class":58},"}\"",[48,1873,1874],{"class":58}," \"logo-nightdoge-lg-high-res.14f40a7985fe.png\"",[48,1876,1877],{"class":58}," \"firefox${",[48,1879,1863],{"class":113},[48,1881,1882],{"class":58},"}.png\"\n",[48,1884,1886,1889,1891,1893,1896,1898,1900,1902,1904],{"class":50,"line":1885},13,[48,1887,1888],{"class":185},"    mv",[48,1890,1877],{"class":58},[48,1892,1863],{"class":113},[48,1894,1895],{"class":58},"}.png\"",[48,1897,1837],{"class":58},[48,1899,1840],{"class":113},[48,1901,1843],{"class":58},[48,1903,1840],{"class":113},[48,1905,1906],{"class":58},"/apps/firefox.png\n",[48,1908,1910],{"class":50,"line":1909},14,[48,1911,1912],{"class":67},"done\n",[48,1914,1916],{"class":50,"line":1915},15,[48,1917,1734],{"emptyLinePlaceholder":1733},[48,1919,1921,1924],{"class":50,"line":1920},16,[48,1922,1923],{"class":185},"rm",[48,1925,1773],{"class":58},[48,1927,1929],{"class":50,"line":1928},17,[48,1930,1734],{"emptyLinePlaceholder":1733},[48,1932,1934],{"class":50,"line":1933},18,[48,1935,1936],{"class":104},"# If you want to change back your icons, run the command bellow\n",[48,1938,1940],{"class":50,"line":1939},19,[48,1941,1942],{"class":104},"# rm ~/.local/share/icons/hicolor/*/apps/firefox.png\n",[225,1944,1945],{},"html pre.shiki code .sJ8bj, html code.shiki .sJ8bj{--shiki-default:#6A737D;--shiki-dark:#6A737D}html pre.shiki code .sj4cs, html code.shiki .sj4cs{--shiki-default:#005CC5;--shiki-dark:#79B8FF}html pre.shiki code .sZZnC, html code.shiki .sZZnC{--shiki-default:#032F62;--shiki-dark:#9ECBFF}html pre.shiki code .sScJk, html code.shiki .sScJk{--shiki-default:#6F42C1;--shiki-dark:#B392F0}html pre.shiki code .szBVR, html code.shiki .szBVR{--shiki-default:#D73A49;--shiki-dark:#F97583}html pre.shiki code .sVt8B, html code.shiki .sVt8B{--shiki-default:#24292E;--shiki-dark:#E1E4E8}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":44,"searchDepth":3,"depth":3,"links":1947},[],{"title":1949,"date":1950,"path":1951,"tags":1952,"body":1956},"在Archlinux上解包A/B机型的payload.bin","2021-02-07","/2021/02/07/extract-payload-dot-bin-on-archlinux",[1953,319,1954,1955],"Android","Rom编译","Python",{"type":11,"value":1957,"toc":2030},[1958,1961,1982,2025,2028],[14,1959,1960],{},"解包A/B机型的OTA更新包时，会发现zip文件中只有一个payload.bin文件",[14,1962,1963,1964,1969,1970,33,1973,1976,1977],{},"解包这个文件，我们需要用到这个叫",[21,1965,1968],{"href":1966,"rel":1967},"https://github.com/vm03/payload_dumper/blob/master/payload_dumper.py",[25],"payload_dumper","的python脚本，同时需要安装依赖: ",[30,1971,1972],{},"community/python-google-api-core",[30,1974,1975],{},"python-bsdiff4","，我解包的时候发现缺少python3版本的python-bsdiff4，因此已经打包上传至",[21,1978,1981],{"href":1979,"rel":1980},"https://aur.archlinux.org/packages/python-bsdiff4",[25],"AUR",[39,1983,1985],{"className":95,"code":1984,"language":97,"meta":44,"style":44},"git clone https://github.com/vm03/payload_dumper.git\ncd payload_dumper\nmv path/to/payload.bin payload_dumper\npython payload_dumper.py payload.bin\n",[30,1986,1987,1997,2004,2014],{"__ignoreMap":44},[48,1988,1989,1991,1994],{"class":50,"line":51},[48,1990,697],{"class":185},[48,1992,1993],{"class":58}," clone",[48,1995,1996],{"class":58}," https://github.com/vm03/payload_dumper.git\n",[48,1998,1999,2001],{"class":50,"line":3},[48,2000,1755],{"class":54},[48,2002,2003],{"class":58}," payload_dumper\n",[48,2005,2006,2009,2012],{"class":50,"line":123},[48,2007,2008],{"class":185},"mv",[48,2010,2011],{"class":58}," path/to/payload.bin",[48,2013,2003],{"class":58},[48,2015,2016,2019,2022],{"class":50,"line":136},[48,2017,2018],{"class":185},"python",[48,2020,2021],{"class":58}," payload_dumper.py",[48,2023,2024],{"class":58}," payload.bin\n",[14,2026,2027],{},"然后就可以在该项目文件夹的output路径下找到解包后的img镜像",[225,2029,1653],{},{"title":44,"searchDepth":3,"depth":3,"links":2031},[],{"title":2033,"date":2034,"path":2035,"tags":2036,"body":2037},"如何解决adb未授权的问题","2021-01-25","/2021/01/25/how-to-solve-the-adb-devices-unauthorized-problem",[1953,1541,1954],{"type":11,"value":2038,"toc":2136},[2039,2042,2052,2055,2133],[14,2040,2041],{},"在调试安卓设备的时候，我们经常会遇到adb未授权的问题，本方案适用于未开机时遇到以下两种情况。",[2043,2044,2045,2049],"ol",{},[2046,2047,2048],"li",{},"当我们编译eng的时候，adb应该会默认授权所有设备，但是有部分Rom并不会。",[2046,2050,2051],{},"当我们编译userdebug的时候，adb就不会授权给所有设备了，如果卡开机，使用adb抓取log将会是非常麻烦的事情。",[14,2053,2054],{},"此时我们需要手动导入我们的adbkey",[2043,2056,2057,2060,2066,2126],{},[2046,2058,2059],{},"手机重启到Recovery模式",[2046,2061,2062,2063],{},"找到你电脑的adbkey公钥，一般叫做",[30,2064,2065],{},"adbkey.pub",[2046,2067,2068,2108,2109],{},[39,2069,2071],{"className":95,"code":2070,"language":97,"meta":44,"style":44},"adb push ${the/location/to/your/key} /data/misc/adb/adb_keys\n",[30,2072,2073],{"__ignoreMap":44},[48,2074,2075,2078,2081,2084,2087,2090,2092,2095,2097,2100,2102,2105],{"class":50,"line":51},[48,2076,2077],{"class":185},"adb",[48,2079,2080],{"class":58}," push",[48,2082,2083],{"class":113}," ${the",[48,2085,2086],{"class":67},"/",[48,2088,2089],{"class":113},"location",[48,2091,2086],{"class":67},[48,2093,2094],{"class":113},"to",[48,2096,2086],{"class":67},[48,2098,2099],{"class":113},"your",[48,2101,2086],{"class":67},[48,2103,2104],{"class":113},"key} ",[48,2106,2107],{"class":58},"/data/misc/adb/adb_keys\n","比如我就是",[39,2110,2112],{"className":95,"code":2111,"language":97,"meta":44,"style":44},"adb push ~/.android/adbkey.pub /data/misc/adb/adb_keys\n",[30,2113,2114],{"__ignoreMap":44},[48,2115,2116,2118,2120,2123],{"class":50,"line":51},[48,2117,2077],{"class":185},[48,2119,2080],{"class":58},[48,2121,2122],{"class":58}," ~/.android/adbkey.pub",[48,2124,2125],{"class":58}," /data/misc/adb/adb_keys\n",[2046,2127,2128,2129,2132],{},"重启手机，",[84,2130,2131],{},"愉快","苦逼地去抓log",[225,2134,2135],{},"html pre.shiki code .sScJk, html code.shiki .sScJk{--shiki-default:#6F42C1;--shiki-dark:#B392F0}html pre.shiki code .sZZnC, html code.shiki .sZZnC{--shiki-default:#032F62;--shiki-dark:#9ECBFF}html pre.shiki code .sVt8B, html code.shiki .sVt8B{--shiki-default:#24292E;--shiki-dark:#E1E4E8}html pre.shiki code .szBVR, html code.shiki .szBVR{--shiki-default:#D73A49;--shiki-dark:#F97583}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":44,"searchDepth":3,"depth":3,"links":2137},[],{"title":2139,"date":2140,"path":2141,"tags":2142,"body":2143},"虚拟Python环境","2021-01-20","/2021/01/20/python-virtualenv",[1954,1955,1541],{"type":11,"value":2144,"toc":2514},[2145,2148,2151,2155,2158,2165,2168,2203,2206,2223,2226,2230,2281,2284,2336,2339,2342,2372,2375,2381,2384,2387,2390,2412,2415,2453,2456,2477,2480,2489,2492,2511],[14,2146,2147],{},"在python使用中，我们经常会遇到本地默认python版本与程序所需要的python版本不一致的问题，此时我们需要创建一个虚拟的python环境。",[351,2149,2150],{"id":2150},"安装目标python版本",[372,2152,2154],{"id":2153},"ubuntu系","Ubuntu系",[447,2156,2157],{"id":2157},"主程序",[14,2159,2160,2161],{},"参考",[21,2162,2163],{"href":2163,"rel":2164},"https://www.cnblogs.com/m3721w/articles/10344887.html",[25],[447,2166,2167],{"id":2167},"pip",[39,2169,2171],{"className":95,"code":2170,"language":97,"meta":44,"style":44},"sudo apt isntall python-pip     #python2\nsudo apt isntall python3-pip    #python3\n",[30,2172,2173,2189],{"__ignoreMap":44},[48,2174,2175,2177,2180,2183,2186],{"class":50,"line":51},[48,2176,1559],{"class":185},[48,2178,2179],{"class":58}," apt",[48,2181,2182],{"class":58}," isntall",[48,2184,2185],{"class":58}," python-pip",[48,2187,2188],{"class":104},"     #python2\n",[48,2190,2191,2193,2195,2197,2200],{"class":50,"line":3},[48,2192,1559],{"class":185},[48,2194,2179],{"class":58},[48,2196,2182],{"class":58},[48,2198,2199],{"class":58}," python3-pip",[48,2201,2202],{"class":104},"    #python3\n",[372,2204,319],{"id":2205},"archlinux",[39,2207,2209],{"className":95,"code":2208,"language":97,"meta":44,"style":44},"yay -S python【xx】       #如yay -S python38\n",[30,2210,2211],{"__ignoreMap":44},[48,2212,2213,2215,2217,2220],{"class":50,"line":51},[48,2214,366],{"class":185},[48,2216,1588],{"class":54},[48,2218,2219],{"class":58}," python【xx】",[48,2221,2222],{"class":104},"       #如yay -S python38\n",[372,2224,2225],{"id":2225},"源码安装",[447,2227,2229],{"id":2228},"主程序-1","主程序:",[39,2231,2233],{"className":95,"code":2232,"language":97,"meta":44,"style":44},"wget https://www.python.org/ftp/python/【x.x.x】/Python-【x.x.x】.tgz\ntar xzvf Python-【x.x.x】.tgz\ncd Python-x.x.x\n./configure\nmake\nsudo make install\n",[30,2234,2235,2243,2254,2261,2266,2271],{"__ignoreMap":44},[48,2236,2237,2240],{"class":50,"line":51},[48,2238,2239],{"class":185},"wget",[48,2241,2242],{"class":58}," https://www.python.org/ftp/python/【x.x.x】/Python-【x.x.x】.tgz\n",[48,2244,2245,2248,2251],{"class":50,"line":3},[48,2246,2247],{"class":185},"tar",[48,2249,2250],{"class":58}," xzvf",[48,2252,2253],{"class":58}," Python-【x.x.x】.tgz\n",[48,2255,2256,2258],{"class":50,"line":123},[48,2257,1755],{"class":54},[48,2259,2260],{"class":58}," Python-x.x.x\n",[48,2262,2263],{"class":50,"line":136},[48,2264,2265],{"class":185},"./configure\n",[48,2267,2268],{"class":50,"line":1747},[48,2269,2270],{"class":185},"make\n",[48,2272,2273,2275,2278],{"class":50,"line":1752},[48,2274,1559],{"class":185},[48,2276,2277],{"class":58}," make",[48,2279,2280],{"class":58}," install\n",[447,2282,2167],{"id":2283},"pip-1",[39,2285,2287],{"className":95,"code":2286,"language":97,"meta":44,"style":44},"curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py\nsudo python【x.x】 get-pip.py -i  https://mirrors.bfsu.edu.cn/pypi/web/simple\npip config set global.index-url https://mirrors.bfsu.edu.cn/pypi/web/simple     #换源\n",[30,2288,2289,2302,2317],{"__ignoreMap":44},[48,2290,2291,2293,2296,2299],{"class":50,"line":51},[48,2292,1764],{"class":185},[48,2294,2295],{"class":58}," https://bootstrap.pypa.io/get-pip.py",[48,2297,2298],{"class":54}," -o",[48,2300,2301],{"class":58}," get-pip.py\n",[48,2303,2304,2306,2309,2312,2314],{"class":50,"line":3},[48,2305,1559],{"class":185},[48,2307,2308],{"class":58}," python【x.x】",[48,2310,2311],{"class":58}," get-pip.py",[48,2313,215],{"class":54},[48,2315,2316],{"class":58},"  https://mirrors.bfsu.edu.cn/pypi/web/simple\n",[48,2318,2319,2321,2324,2327,2330,2333],{"class":50,"line":123},[48,2320,2167],{"class":185},[48,2322,2323],{"class":58}," config",[48,2325,2326],{"class":58}," set",[48,2328,2329],{"class":58}," global.index-url",[48,2331,2332],{"class":58}," https://mirrors.bfsu.edu.cn/pypi/web/simple",[48,2334,2335],{"class":104},"     #换源\n",[351,2337,2338],{"id":2338},"安装virtualenv",[372,2340,2341],{"id":2341},"常规发行版",[39,2343,2345],{"className":95,"code":2344,"language":97,"meta":44,"style":44},"pip install virtualenv          #python2\npip3 install virtualenv         #python3\n",[30,2346,2347,2360],{"__ignoreMap":44},[48,2348,2349,2351,2354,2357],{"class":50,"line":51},[48,2350,2167],{"class":185},[48,2352,2353],{"class":58}," install",[48,2355,2356],{"class":58}," virtualenv",[48,2358,2359],{"class":104},"          #python2\n",[48,2361,2362,2365,2367,2369],{"class":50,"line":3},[48,2363,2364],{"class":185},"pip3",[48,2366,2353],{"class":58},[48,2368,2356],{"class":58},[48,2370,2371],{"class":104},"         #python3\n",[372,2373,319],{"id":2374},"archlinux-1",[39,2376,2379],{"className":2377,"code":2378,"language":407},[405],"sudo pacman -S python2-virtualenv   #python2\nsudo pacman -S python-virtualenv    #python3\n",[30,2380,2378],{"__ignoreMap":44},[351,2382,2383],{"id":2383},"使用virtualenv",[372,2385,2386],{"id":2386},"创建virtualenv环境",[447,2388,2341],{"id":2389},"常规发行版-1",[39,2391,2393],{"className":95,"code":2392,"language":97,"meta":44,"style":44},"virtualenv $(TRAGET_PATH) python=python【x.x】\n",[30,2394,2395],{"__ignoreMap":44},[48,2396,2397,2400,2403,2406,2409],{"class":50,"line":51},[48,2398,2399],{"class":185},"virtualenv",[48,2401,2402],{"class":113}," $(",[48,2404,2405],{"class":185},"TRAGET_PATH",[48,2407,2408],{"class":113},") ",[48,2410,2411],{"class":58},"python=python【x.x】\n",[447,2413,319],{"id":2414},"archlinux-2",[39,2416,2418],{"className":95,"code":2417,"language":97,"meta":44,"style":44},"virtualenv2 $(TRAGET_PATH) python=python2.【x】       #python2\nvirtualenv $(TRAGET_PATH) python=python3.【x】        #python3\n",[30,2419,2420,2437],{"__ignoreMap":44},[48,2421,2422,2425,2427,2429,2431,2434],{"class":50,"line":51},[48,2423,2424],{"class":185},"virtualenv2",[48,2426,2402],{"class":113},[48,2428,2405],{"class":185},[48,2430,2408],{"class":113},[48,2432,2433],{"class":58},"python=python2.【x】",[48,2435,2436],{"class":104},"       #python2\n",[48,2438,2439,2441,2443,2445,2447,2450],{"class":50,"line":3},[48,2440,2399],{"class":185},[48,2442,2402],{"class":113},[48,2444,2405],{"class":185},[48,2446,2408],{"class":113},[48,2448,2449],{"class":58},"python=python3.【x】",[48,2451,2452],{"class":104},"        #python3\n",[372,2454,2455],{"id":2455},"启用virtualenv环境",[39,2457,2459],{"className":95,"code":2458,"language":97,"meta":44,"style":44},"source $(TARGET_PATH)/bin/activate\n",[30,2460,2461],{"__ignoreMap":44},[48,2462,2463,2466,2468,2471,2474],{"class":50,"line":51},[48,2464,2465],{"class":54},"source",[48,2467,2402],{"class":113},[48,2469,2470],{"class":185},"TARGET_PATH",[48,2472,2473],{"class":113},")",[48,2475,2476],{"class":58},"/bin/activate\n",[372,2478,2479],{"id":2479},"退出virtualenv环境",[39,2481,2483],{"className":95,"code":2482,"language":97,"meta":44,"style":44},"deactivate\n",[30,2484,2485],{"__ignoreMap":44},[48,2486,2487],{"class":50,"line":51},[48,2488,2482],{"class":185},[372,2490,2491],{"id":2491},"删除virtualenv环境",[39,2493,2495],{"className":95,"code":2494,"language":97,"meta":44,"style":44},"rm -rf $(TRAGET_PATH)\n",[30,2496,2497],{"__ignoreMap":44},[48,2498,2499,2501,2504,2506,2508],{"class":50,"line":51},[48,2500,1923],{"class":185},[48,2502,2503],{"class":54}," -rf",[48,2505,2402],{"class":113},[48,2507,2405],{"class":185},[48,2509,2510],{"class":113},")\n",[225,2512,2513],{},"html pre.shiki code .sScJk, html code.shiki .sScJk{--shiki-default:#6F42C1;--shiki-dark:#B392F0}html pre.shiki code .sZZnC, html code.shiki .sZZnC{--shiki-default:#032F62;--shiki-dark:#9ECBFF}html pre.shiki code .sJ8bj, html code.shiki .sJ8bj{--shiki-default:#6A737D;--shiki-dark:#6A737D}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sj4cs, html code.shiki .sj4cs{--shiki-default:#005CC5;--shiki-dark:#79B8FF}html pre.shiki code .sVt8B, html code.shiki .sVt8B{--shiki-default:#24292E;--shiki-dark:#E1E4E8}",{"title":44,"searchDepth":3,"depth":3,"links":2515},[2516,2521,2525],{"id":2150,"depth":3,"text":2150,"children":2517},[2518,2519,2520],{"id":2153,"depth":123,"text":2154},{"id":2205,"depth":123,"text":319},{"id":2225,"depth":123,"text":2225},{"id":2338,"depth":3,"text":2338,"children":2522},[2523,2524],{"id":2341,"depth":123,"text":2341},{"id":2374,"depth":123,"text":319},{"id":2383,"depth":3,"text":2383,"children":2526},[2527,2528,2529,2530],{"id":2386,"depth":123,"text":2386},{"id":2455,"depth":123,"text":2455},{"id":2479,"depth":123,"text":2479},{"id":2491,"depth":123,"text":2491},{"title":2532,"date":2533,"path":2534,"tags":1541,"body":2535},"为什么我不推荐Manjaro","2021-01-01","/2021/01/01/why-i-dont-recommend-manjaro",{"type":11,"value":2536,"toc":2691},[2537,2540,2543,2547,2551,2554,2559,2562,2564,2567,2571,2574,2578,2581,2584,2588,2591,2597,2600,2603,2606,2611,2614,2639,2643,2663,2666,2672],[14,2538,2539],{},"说起Linux发行版，很多人都会去推荐Manjaro给新手使用，原因很简单——安装简单、有庞大的AUR和ArchlinuxCN提供软件、有丰富的ArchWiki以供新手查阅。那么，为什么大多数Archlinux用户（包括我）始终不推荐Manjaro作为自己使用的发行版呢。",[2541,2542],"hr",{},[372,2544,2546],{"id":2545},"首先来了解一下两款linux发行版","首先来了解一下两款Linux发行版",[14,2548,2549],{},[172,2550,319],{},[14,2552,2553],{},"Archlinux是一款滚动发行版，所有的软件全部都基于上游最新的源代码进行编译，源内也仅仅保留最新版本，是最为激进的发行版之一，甚至或许没有之一。",[14,2555,2556],{},[172,2557,2558],{},"Manjaro",[14,2560,2561],{},"Manjaro是一款基于Archlinux的滚动发行版，部分软件同样基于上游源代码编译，同时也有部分软件包直接从Archlinux源内直接拿二进制包。与Archlinux不同的是，Manjaro大部分软件更新相比Archlinux会滞后一个星期，一些比较重要的软件甚至会滞后两个星期以上（比如Python3.9就滞后了19天）以保证稳定性。（虽然我目前观察下来这个稳定性就是出现Bug和修复Bug都比Archlinux慢一个礼拜）",[2541,2563],{},[372,2565,2566],{"id":2566},"接下来就是正文",[447,2568,2570],{"id":2569},"archlinux-和-manjaro-都不适合linux小白","Archlinux 和 Manjaro 都不适合Linux小白",[14,2572,2573],{},"Archlinux和Manjaro都是激进的滚动发行版，作为一个滚动发行版都会有滚坏的风险，这就要求用户有一定的Linux使用基础，能够多关注更新动态，在系统罢工后有修复系统的能力，因此我不会给小白推荐Archlinux/Manjaro这样的发行版（虽说能够用纯cli界面安装Archlinux的用户其实已经有一定的水平了）。",[447,2575,2577],{"id":2576},"archwiki-不是-manjarowiki","ArchWiki 不是 ManjaroWiki",[14,2579,2580],{},"Manjaro官方为了最大限度地降低用户的使用门槛，为用户打造了一套开箱即用的环境，这听起来很好。",[14,2582,2583],{},"但是Manjaro官方为了降低用户使用门槛，不得不替用户去做一些选择，写上一些默认配置，在必要的地方对系统进行魔改。因此，ArchWiki上面的解决方案并非在Manjaro上能够100%适用，因此不要指望在系统使用过程中ArchWiki能够解决你所有的问题，有相当一部分问题你需要去查阅纯英文版的ManjaroWiki。",[447,2585,2587],{"id":2586},"aurarchlinux-user-repositoryarchlinuxcn-并不是为-manjaro-准备的","AUR(Archlinux User Repository)&ArchlinuxCN 并不是为 Manjaro 准备的",[14,2589,2590],{},"AUR和ArchlinuxCN源都是Archlinux用户为Archlinux打包的常用软件，因此所有的软件都是选择Archlinux最新的软件作为依赖来编译/打包的。上文中我们提到过，Manjaro源内的软件会滞后更新。因此AUR和ArchlinuxCN内一些对于依赖版本要求比较苛刻的软件会在Manjaro这个更新比较落后的发行版上不工作。",[14,2592,2593],{},[78,2594],{"alt":2595,"src":2596},"我们甚至还有一张表情包来调侃这种情况的","https://static.031130.xyz/uploads/2024/08/12/62f36d8eb724a.webp",[14,2598,2599],{},"我知道这听起来会有些荒唐，不过我可以举出一个就发生在不久之前的生动的例子。",[14,2601,2602],{},"Archlinux在2020年10月17日将grpc从1.30更新到了1.32，qv2ray开发者反应迅速，在几个小时内直接更新了基于grpc-1.32的qv2ray，接着是仍然在使用grpc-1.30的Manjaro用户的一片哀嚎。。。",[14,2604,2605],{},"解决方法有很多，比如临时使用Archlinux源把grpc更新到1.32、通过AppImage安装qv2ray等等，但是如你所见，Manjaro用户使用AUR&ArchlinuxCN确实容易出现问题。",[241,2607,2608],{},[14,2609,2610],{},"附：AUR上需要下载源码的自己编译的包不会碰到依赖的版本问题，但是仍然有部分情况下PKGBUILD会直接因为依赖版本号被写死而编译出错。而ArchlinuxCN清一色是编译好的二进制包，所以Manjaro用户使用ArchlinuxCN相比AUR出问题的几率更加大一点。",[14,2612,2613],{},"此外，他们延迟两周，并不是在测试 Arch 包打包本身的质量，而是在测试他们拿来 Arch 的包和他们自己乱改的核心包之间的兼容性。以下内容来自于一位 Archlinux Trusted User",[241,2615,2616,2619,2627,2630,2633,2636],{},[14,2617,2618],{},"manjaro 這個分三個 channel 延遲兩週的做法，原因出於兩點他們處理打包方面非常存疑的做法",[2043,2620,2621,2624],{},[2046,2622,2623],{},"他們想要自己打包一部分非常核心的包，包括 glibc 內核 驅動 systemd",[2046,2625,2626],{},"他們不想重新打整個發行版所有包，想直接從 Arch 拿二進制來用。",[14,2628,2629],{},"這兩個做法單獨只做一個沒啥事，放一起做就很容易導致他們自己打包的核心包破壞了二進制兼容，以至於他們從 Arch 拿的二進制包壞掉。所以他們延遲兩週，並不是在測試 Arch 包打包本身的質量，而是在測試他們拿來 Arch 的包和他們自己亂改的核心包之間的兼容性。Arch 本身有一套機制保證 Arch 打包放出來的時候是測試好相互兼容的，被他們替換掉幾個核心包之後就不一定兼容了，他們也沒有渠道涉足 Arch 內部打包機制，從 Arch 組織內部了解什麼時候放出包之類的信息。綜合這些情況，對他們來說合理的做法就是延遲一陣子讓他們自己的人測試一下。",[14,2631,2632],{},"所以作為證據你看他們的打包者開發者很少會向 Arch 上游反饋測試打包遇到的問題…因為 manjaro unstable 和 manjaro testing 會遇到的問題大部分都是他們自己造成的問題而不是 Arch 的問題。",[14,2634,2635],{},"要是他們誠實地把這個情況傳達給他們用戶的話我不責怪他們。Arch整個滾動發布的生態也不利於下游發行版。Debian 這種上游打包時可以約定版本兼容性的範圍，可以鎖 abi ，Arch 打包本身就不考慮這些，作為Arch下游就的確很難操作。我反感 manjaro 的點在於他們把這種難看的做法宣傳成他們的優勢，還為了這個看起來是優勢故意去抹黑 Arch 作為上游的打包質量…做法就很難看了。",[14,2637,2638],{},"—— farseerfc",[447,2640,2642],{"id":2641},"manjaro-没有-archive-源","Manjaro 没有 Archive 源",[14,2644,2645,2646,2651,2652,33,2657,2662],{},"Archlinux拥有一个",[21,2647,2650],{"href":2648,"rel":2649},"https://archive.archlinux.org/",[25],"archive源","，通过Archive源，你可以将你的系统滚到任何一天的状态，比如在你不知道更新了什么滚炸了以后，你可以用Archive源回滚到三天前的状态，等bug修复完以后再用回正常的Archlinux源。况且，这个Archive源在国内拥有",[21,2653,2656],{"href":2654,"rel":2655},"https://arch-archive.tuna.tsinghua.edu.cn/",[25],"tuna",[21,2658,2661],{"href":2659,"rel":2660},"https://mirrors.bfsu.edu.cn/archlinux-archive/",[25],"bfsu","两个镜像源（虽然这两个镜像源并不是完整的镜像，而是每隔7天镜像一次），不会存在访问速度过慢的状况。有名的downgrade软件也是基于Archive源使用的。而Manjaro？很遗憾，没有。",[372,2664,2665],{"id":2665},"写在最后",[14,2667,2668,2669,462],{},"如果你有一定的Linux基础，阅读了我上面的科普以后仍然要去使用Manjaro也没有关系，但是记得",[172,2670,2671],{},"遵守以下几点以确保你在Arch社区不会被打死",[2673,2674,2675,2678,2681,2688],"ul",{},[2046,2676,2677],{},"谨慎使用AUR和ArchlinuxCN",[2046,2679,2680],{},"使用AUR和ArchlinuxCN时遇到问题请不要反馈",[2046,2682,2683,2684,2687],{},"在Arch社区提问时请",[172,2685,2686],{},"提前","说明自己在使用Manjaro",[2046,2689,2690],{},"不要根据Manjaro的使用经验随意编辑ArchWiki",{"title":44,"searchDepth":3,"depth":3,"links":2692},[2693,2694,2695],{"id":2545,"depth":123,"text":2546},{"id":2566,"depth":123,"text":2566},{"id":2665,"depth":123,"text":2665},127,1761697385402]