[{"data":1,"prerenderedAt":458},["ShallowReactive",2],{"post-2024-10-23-follow-cert-for-hexo-feed":3,"surround-2024-10-23-follow-cert-for-hexo-feed":446,"randomIndex/2024/10/23/follow-cert-for-hexo-feed/":457},{"id":4,"title":5,"body":6,"date":432,"description":22,"extension":433,"meta":434,"navigation":436,"path":437,"rawbody":438,"seo":439,"stem":440,"sticky":441,"tags":442,"__hash__":445},"posts/posts/follow-cert-for-hexo-feed.md","为 Hexo 添加 follow 认证",{"type":7,"value":8,"toc":428},"minimark",[9,13,17,24,27,30,40,47,53,59,70,103,162,165,168,179,190,289,295,300,303,355,408,411,414,416,424],[10,11,12],"h2",{"id":12},"前言",[14,15,16],"p",{},"Follow 从今天开始不需要邀请码就可以开始使用部分功能了，除了只能订阅五个订阅源、成就系统没开放、签到不能获得 power 以外，还有部分功能没有解锁（如下图）",[14,18,19],{},[20,21],"img",{"alt":22,"src":23},"","https://static.031130.xyz/uploads/2024/10/23/d3a69a7bcde58.webp",[14,25,26],{},"我注意到 Follow 的认证机制目前对于 Hexo 用户还是相对不友好的，起码对于 Hexo 用户来说。",[14,28,29],{},"「内容」方案要我们在网页（也可能是 rss，follow 没有给出非常明确的指示）上添加非常明显的一段文本，我并不是很喜欢这种行为。",[31,32,37],"pre",{"className":33,"code":35,"language":36},[34],"language-text","This message is used to verify that this feed (feedId:56144913816835091) belongs to me (userId:70410173045150720). Join me in enjoying the next generation information browser https://follow.is.\n","text",[38,39,35],"code",{"__ignoreMap":22},[14,41,42,43,46],{},"「描述」方案要求我们在 rss 的 xml 文件的 ",[38,44,45],{},"\u003Cdescription />"," 字段添加一段丑丑的代码。无论是使用 follow 的读者还是其他 rss reader 的读者都会看到博客的 description 中含有一段丑丑的代码，这对于强迫症的我来说是无法忍受的，更别提 atom 类型的订阅根本没有这个字段。",[31,48,51],{"className":49,"code":50,"language":36},[34],"feedId:56144913816835091+userId:70410173045150720\n",[38,52,50],{"__ignoreMap":22},[14,54,55],{},[20,56],{"alt":57,"src":58},"即使是在 follow 中，这样的文字也是非常眨眼","https://static.031130.xyz/uploads/2024/10/23/10dfda54f4dcc.webp",[14,60,61,62,65,66,69],{},"「RSS 标签」方案是我唯一能接受的方案，这个方案需要我们在 rss 的 xml 文件中添加一个名为 ",[38,63,64],{},"\u003Cfollow_challenge>"," 的标签，或者是 json 文件中的一个 ",[38,67,68],{},"follow_challenge"," 对象。虽然具有一定的侵入性，但对于读者来说不会受到影响——应该没有除了 follow 以外的 rss reader 对这个字段进行解析。",[31,71,75],{"className":72,"code":73,"language":74,"meta":22,"style":22},"language-xml shiki shiki-themes one-light one-dark-pro","\u003Cfollow_challenge>\n    \u003CfeedId>56144913816835091\u003C/feedId>\n    \u003CuserId>70410173045150720\u003C/userId>\n\u003C/follow_challenge>\n","xml",[38,76,77,85,91,97],{"__ignoreMap":22},[78,79,82],"span",{"class":80,"line":81},"line",1,[78,83,84],{},"\u003Cfollow_challenge>\n",[78,86,88],{"class":80,"line":87},2,[78,89,90],{},"    \u003CfeedId>56144913816835091\u003C/feedId>\n",[78,92,94],{"class":80,"line":93},3,[78,95,96],{},"    \u003CuserId>70410173045150720\u003C/userId>\n",[78,98,100],{"class":80,"line":99},4,[78,101,102],{},"\u003C/follow_challenge>\n",[31,104,108],{"className":105,"code":106,"language":107,"meta":22,"style":22},"language-json shiki shiki-themes one-light one-dark-pro","{\n  \"follow_challenge\": {\n    \"feed_id\": \"56144913816835091\",\n    \"user_id\": \"70410173045150720\"\n  }\n}\n","json",[38,109,110,116,125,140,150,156],{"__ignoreMap":22},[78,111,112],{"class":80,"line":81},[78,113,115],{"class":114},"s5ixo","{\n",[78,117,118,122],{"class":80,"line":87},[78,119,121],{"class":120},"sJa8x","  \"follow_challenge\"",[78,123,124],{"class":114},": {\n",[78,126,127,130,133,137],{"class":80,"line":93},[78,128,129],{"class":120},"    \"feed_id\"",[78,131,132],{"class":114},": ",[78,134,136],{"class":135},"sDhpE","\"56144913816835091\"",[78,138,139],{"class":114},",\n",[78,141,142,145,147],{"class":80,"line":99},[78,143,144],{"class":120},"    \"user_id\"",[78,146,132],{"class":114},[78,148,149],{"class":135},"\"70410173045150720\"\n",[78,151,153],{"class":80,"line":152},5,[78,154,155],{"class":114},"  }\n",[78,157,159],{"class":80,"line":158},6,[78,160,161],{"class":114},"}\n",[10,163,164],{"id":164},"正篇",[14,166,167],{},"那么问题来了，Hexo 用户应该如何使用「RSS 标签」的方案给我们的博客进行 Follow 认证呢？",[14,169,170,171,178],{},"首先确认前提，我在使用 ",[172,173,177],"a",{"href":174,"rel":175},"https://github.com/hexojs/hexo-generator-feed",[176],"nofollow","hexo-generator-feed"," 这个 npm 库来生成 Hexo 博客的 rss 订阅文件。",[14,180,181,182,185,186,189],{},"在项目的 README 文件中，我们知道可以在 ",[38,183,184],{},"_config.yml"," 文件中指定 rss 生成时使用的模板文件。模板文件位于 ",[38,187,188],{},"./node_modules/hexo-generator-feed"," 路径下，atom.xml 和 rss2.xml 就是这个库所使用的模板文件。我正在使用 atom，所以我把 atom.xml 复制一份放到博客的根目录下魔改模板。下面是 _config.yml 的 feed 配置，你可以看到我在最后两行指定了 template 模板文件。",[31,191,195],{"className":192,"code":193,"language":194,"meta":22,"style":22},"language-yml shiki shiki-themes one-light one-dark-pro","feed:\n    type: atom\n    path: rss.xml\n    limit: 0\n    hub:\n    content: true\n    content_limit:\n    content_limit_delim: ' '\n    template:\n      - atom.xml\n","yml",[38,196,197,205,215,225,236,243,253,261,272,280],{"__ignoreMap":22},[78,198,199,202],{"class":80,"line":81},[78,200,201],{"class":120},"feed",[78,203,204],{"class":114},":\n",[78,206,207,210,212],{"class":80,"line":87},[78,208,209],{"class":120},"    type",[78,211,132],{"class":114},[78,213,214],{"class":135},"atom\n",[78,216,217,220,222],{"class":80,"line":93},[78,218,219],{"class":120},"    path",[78,221,132],{"class":114},[78,223,224],{"class":135},"rss.xml\n",[78,226,227,230,232],{"class":80,"line":99},[78,228,229],{"class":120},"    limit",[78,231,132],{"class":114},[78,233,235],{"class":234},"sAGMh","0\n",[78,237,238,241],{"class":80,"line":152},[78,239,240],{"class":120},"    hub",[78,242,204],{"class":114},[78,244,245,248,250],{"class":80,"line":158},[78,246,247],{"class":120},"    content",[78,249,132],{"class":114},[78,251,252],{"class":234},"true\n",[78,254,256,259],{"class":80,"line":255},7,[78,257,258],{"class":120},"    content_limit",[78,260,204],{"class":114},[78,262,264,267,269],{"class":80,"line":263},8,[78,265,266],{"class":120},"    content_limit_delim",[78,268,132],{"class":114},[78,270,271],{"class":135},"' '\n",[78,273,275,278],{"class":80,"line":274},9,[78,276,277],{"class":120},"    template",[78,279,204],{"class":114},[78,281,283,286],{"class":80,"line":282},10,[78,284,285],{"class":114},"      - ",[78,287,288],{"class":135},"atom.xml\n",[14,290,291,292,294],{},"如果是个人用途，其实可以直接硬编码，在文件的倒数第二行把我们复制的 ",[38,293,64],{}," 放进去。",[14,296,297],{},[20,298],{"alt":22,"src":299},"https://static.031130.xyz/uploads/2024/10/23/fae341d7985ea.webp",[14,301,302],{},"或者如果我们想要写得考究一些，那么可以是下面这个样子的",[31,304,306],{"className":192,"code":305,"language":194,"meta":22,"style":22},"feed:\n  template:\n    - atom.xml\n  follow_challenge:\n    feedId: 56144913816835091\n    userId: 70410173045150720\n",[38,307,308,314,321,328,335,345],{"__ignoreMap":22},[78,309,310,312],{"class":80,"line":81},[78,311,201],{"class":120},[78,313,204],{"class":114},[78,315,316,319],{"class":80,"line":87},[78,317,318],{"class":120},"  template",[78,320,204],{"class":114},[78,322,323,326],{"class":80,"line":93},[78,324,325],{"class":114},"    - ",[78,327,288],{"class":135},[78,329,330,333],{"class":80,"line":99},[78,331,332],{"class":120},"  follow_challenge",[78,334,204],{"class":114},[78,336,337,340,342],{"class":80,"line":152},[78,338,339],{"class":120},"    feedId",[78,341,132],{"class":114},[78,343,344],{"class":234},"56144913816835091\n",[78,346,347,350,352],{"class":80,"line":158},[78,348,349],{"class":120},"    userId",[78,351,132],{"class":114},[78,353,354],{"class":234},"70410173045150720\n",[31,356,358],{"className":72,"code":357,"language":74,"meta":22,"style":22},"\u003C!-- //... -->\n  {% endfor %}\n  {% if config.feed.follow_challenge %}\n    \u003Cfollow_challenge>\n      \u003CfeedId>{{ config.feed.follow_challenge.feedId }}\u003C/feedId>\n      \u003CuserId>{{ config.feed.follow_challenge.userId }}\u003C/userId>\n    \u003C/follow_challenge>\n  {% endif %}\n\u003C/feed>\n",[38,359,360,368,373,378,383,388,393,398,403],{"__ignoreMap":22},[78,361,362,365],{"class":80,"line":81},[78,363,364],{},"\u003C!--",[78,366,367],{}," //... -->\n",[78,369,370],{"class":80,"line":87},[78,371,372],{},"  {% endfor %}\n",[78,374,375],{"class":80,"line":93},[78,376,377],{},"  {% if config.feed.follow_challenge %}\n",[78,379,380],{"class":80,"line":99},[78,381,382],{},"    \u003Cfollow_challenge>\n",[78,384,385],{"class":80,"line":152},[78,386,387],{},"      \u003CfeedId>{{ config.feed.follow_challenge.feedId }}\u003C/feedId>\n",[78,389,390],{"class":80,"line":158},[78,391,392],{},"      \u003CuserId>{{ config.feed.follow_challenge.userId }}\u003C/userId>\n",[78,394,395],{"class":80,"line":255},[78,396,397],{},"    \u003C/follow_challenge>\n",[78,399,400],{"class":80,"line":263},[78,401,402],{},"  {% endif %}\n",[78,404,405],{"class":80,"line":274},[78,406,407],{},"\u003C/feed>\n",[409,410],"hr",{},[14,412,413],{},"（说起来，这两个小改动一改，其实完全可以上传 npmjs.com 作为一个新的插件，不过我有点懒了）",[409,415],{},[14,417,418,419],{},"文末附一个 follow 邀请码: ",[78,420,423],{"className":421},[422],"heimu","6O0oBazB9s",[425,426,427],"style",{},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html pre.shiki code .sJa8x, html code.shiki .sJa8x{--shiki-default:#E45649;--shiki-dark:#E06C75}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}",{"title":22,"searchDepth":87,"depth":87,"links":429},[430,431],{"id":12,"depth":87,"text":12},{"id":164,"depth":87,"text":164},"2024-10-23 23:11:32","md",{"index_img":435},"https://static.031130.xyz/uploads/2024/10/24/a93fd67a5419d.png",true,"/2024/10/23/follow-cert-for-hexo-feed","---\ntitle: 为 Hexo 添加 follow 认证\ndate: 2024-10-23 23:11:32\nsticky:\nindex_img: https://static.031130.xyz/uploads/2024/10/24/a93fd67a5419d.png\ntags:\n- Hexo\n- Follow\n---\n\n## 前言\n\nFollow 从今天开始不需要邀请码就可以开始使用部分功能了，除了只能订阅五个订阅源、成就系统没开放、签到不能获得 power 以外，还有部分功能没有解锁（如下图）\n\n![](https://static.031130.xyz/uploads/2024/10/23/d3a69a7bcde58.webp)\n\n我注意到 Follow 的认证机制目前对于 Hexo 用户还是相对不友好的，起码对于 Hexo 用户来说。\n\n「内容」方案要我们在网页（也可能是 rss，follow 没有给出非常明确的指示）上添加非常明显的一段文本，我并不是很喜欢这种行为。\n\n```\nThis message is used to verify that this feed (feedId:56144913816835091) belongs to me (userId:70410173045150720). Join me in enjoying the next generation information browser https://follow.is.\n```\n\n「描述」方案要求我们在 rss 的 xml 文件的 `\u003Cdescription />` 字段添加一段丑丑的代码。无论是使用 follow 的读者还是其他 rss reader 的读者都会看到博客的 description 中含有一段丑丑的代码，这对于强迫症的我来说是无法忍受的，更别提 atom 类型的订阅根本没有这个字段。\n\n```\nfeedId:56144913816835091+userId:70410173045150720\n```\n\n![即使是在 follow 中，这样的文字也是非常眨眼](https://static.031130.xyz/uploads/2024/10/23/10dfda54f4dcc.webp)\n\n「RSS 标签」方案是我唯一能接受的方案，这个方案需要我们在 rss 的 xml 文件中添加一个名为 `\u003Cfollow_challenge>` 的标签，或者是 json 文件中的一个 `follow_challenge` 对象。虽然具有一定的侵入性，但对于读者来说不会受到影响——应该没有除了 follow 以外的 rss reader 对这个字段进行解析。\n\n```xml\n\u003Cfollow_challenge>\n    \u003CfeedId>56144913816835091\u003C/feedId>\n    \u003CuserId>70410173045150720\u003C/userId>\n\u003C/follow_challenge>\n```\n\n```json\n{\n  \"follow_challenge\": {\n    \"feed_id\": \"56144913816835091\",\n    \"user_id\": \"70410173045150720\"\n  }\n}\n```\n\n## 正篇\n\n那么问题来了，Hexo 用户应该如何使用「RSS 标签」的方案给我们的博客进行 Follow 认证呢？\n\n首先确认前提，我在使用 [hexo-generator-feed](https://github.com/hexojs/hexo-generator-feed) 这个 npm 库来生成 Hexo 博客的 rss 订阅文件。\n\n在项目的 README 文件中，我们知道可以在 `_config.yml` 文件中指定 rss 生成时使用的模板文件。模板文件位于 `./node_modules/hexo-generator-feed` 路径下，atom.xml 和 rss2.xml 就是这个库所使用的模板文件。我正在使用 atom，所以我把 atom.xml 复制一份放到博客的根目录下魔改模板。下面是 _config.yml 的 feed 配置，你可以看到我在最后两行指定了 template 模板文件。\n\n```yml\nfeed:\n    type: atom\n    path: rss.xml\n    limit: 0\n    hub:\n    content: true\n    content_limit:\n    content_limit_delim: ' '\n    template:\n      - atom.xml\n```\n\n如果是个人用途，其实可以直接硬编码，在文件的倒数第二行把我们复制的 `\u003Cfollow_challenge>` 放进去。\n\n![](https://static.031130.xyz/uploads/2024/10/23/fae341d7985ea.webp)\n\n或者如果我们想要写得考究一些，那么可以是下面这个样子的\n\n```yml\nfeed:\n  template:\n    - atom.xml\n  follow_challenge:\n    feedId: 56144913816835091\n    userId: 70410173045150720\n```\n\n```xml\n\u003C!-- //... -->\n  {% endfor %}\n  {% if config.feed.follow_challenge %}\n    \u003Cfollow_challenge>\n      \u003CfeedId>{{ config.feed.follow_challenge.feedId }}\u003C/feedId>\n      \u003CuserId>{{ config.feed.follow_challenge.userId }}\u003C/userId>\n    \u003C/follow_challenge>\n  {% endif %}\n\u003C/feed>\n```\n\n***\n\n（说起来，这两个小改动一改，其实完全可以上传 npmjs.com 作为一个新的插件，不过我有点懒了）\n\n***\n\n文末附一个 follow 邀请码: \u003Cspan class=\"heimu\">6O0oBazB9s\u003C/span>\n\n",{"title":5,"description":22},"posts/follow-cert-for-hexo-feed",false,[443,444],"Hexo","Follow","okU0epeeqFVqZBpgWDuEi9sLs6D1bZk-mnZTCAjS45g",[447,452],{"title":448,"path":449,"stem":450,"date":451,"children":-1},"给家里云装上 Fedora 41 KDE 后，我是如何配置的","/2024/11/01/my-config-for-fedora-kde-41","posts/my-config-for-fedora-kde-41","2024-11-01 23:35:08",{"title":453,"path":454,"stem":455,"date":456,"children":-1},"使用 GPT 对 waline 的评论进行审查","/2024/10/12/use-gpt-to-review-waline-comments","posts/use-gpt-to-review-waline-comments","2024-10-12 16:11:06",14,1761738551326]