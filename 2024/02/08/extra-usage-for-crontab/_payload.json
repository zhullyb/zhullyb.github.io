[{"data":1,"prerenderedAt":246},["ShallowReactive",2],{"post-2024-02-08-extra-usage-for-crontab":3,"surround-2024-02-08-extra-usage-for-crontab":234,"randomIndex/2024/02/08/extra-usage-for-crontab/":245},{"id":4,"title":5,"body":6,"date":220,"description":221,"extension":222,"meta":223,"navigation":224,"path":225,"rawbody":226,"seo":227,"stem":228,"sticky":229,"tags":230,"__hash__":233},"posts/posts/extra-usage-for-crontab.md","crontab 中简单的@语法糖",{"type":7,"value":8,"toc":217},"minimark",[9,17,33,156,159,162,213],[10,11,12,13],"p",{},"说来惭愧，其实我用了这么久的 Linux，一直没有学会编写 crontab 脚本。一行的开头写上五位莫名其妙的数字或星号，后面跟上需要执行的命令，看上去很 kiss，",[14,15,16],"del",{},"但我确实记不住，以至于我现在每次写 crontab 都是让 ChatGPT 来帮我写。",[10,18,19,20,24,25,32],{},"不过我最近查阅 Linux 下设置开机自启脚本的方案的时候，意外地看到 crontab 中居然可以用 ",[21,22,23],"code",{},"@reboot command"," 的方式去写，这让我意识到 crontab 也是有一些简单的语法糖的。在查阅了 ",[26,27,31],"a",{"href":28,"rel":29},"https://man.archlinux.org/man/crontab.5.en#EXTENSIONS",[30],"nofollow","crontab 的 manual"," 后，我发现一共有下面这么几种 @ 写法的语法糖。这是在全网大部分的 crontab 中文教程中是没有的。",[34,35,36,52],"table",{},[37,38,39],"thead",{},[40,41,42,46,49],"tr",{},[43,44,45],"th",{},"语法糖",[43,47,48],{},"执行条件",[43,50,51],{},"等效表达式",[53,54,55,68,83,96,111,126,141],"tbody",{},[40,56,57,63,66],{},[58,59,60],"td",{},[21,61,62],{},"@reboot",[58,64,65],{},"开机时候运行",[58,67],{},[40,69,70,75,78],{},[58,71,72],{},[21,73,74],{},"@yearly",[58,76,77],{},"一年一次",[58,79,80],{},[21,81,82],{},"0 0 1 1 *",[40,84,85,90,92],{},[58,86,87],{},[21,88,89],{},"@annually",[58,91,77],{},[58,93,94],{},[21,95,82],{},[40,97,98,103,106],{},[58,99,100],{},[21,101,102],{},"@monthly",[58,104,105],{},"一月一次",[58,107,108],{},[21,109,110],{},"0 0 1 * *",[40,112,113,118,121],{},[58,114,115],{},[21,116,117],{},"@weekly",[58,119,120],{},"一周一次",[58,122,123],{},[21,124,125],{},"0 0 * * 0",[40,127,128,133,136],{},[58,129,130],{},[21,131,132],{},"@daily",[58,134,135],{},"一天一次",[58,137,138],{},[21,139,140],{},"0 0 * * *",[40,142,143,148,151],{},[58,144,145],{},[21,146,147],{},"@hourly",[58,149,150],{},"一小时一次",[58,152,153],{},[21,154,155],{},"0 * * * *",[10,157,158],{},"这几个简单的语法糖可以满足大部分 crontab 的情况，免去了对使用者学习并记忆 crontab 的表达式的要求。",[10,160,161],{},"比如说，如果我希望我的系统在每次开机时都用 TG Bot 发送一条上线信息，那就是",[163,164,169],"pre",{"className":165,"code":166,"language":167,"meta":168,"style":168},"language-bash shiki shiki-themes one-light one-dark-pro","@reboot curl -s -X POST https://api.telegram.org/bot{id}:{apikey}/sendMessage -d chat_id={uid} -d text=\"`date`\"\n","bash","",[21,170,171],{"__ignoreMap":168},[172,173,176,179,183,187,190,193,196,199,202,204,207,210],"span",{"class":174,"line":175},"line",1,[172,177,62],{"class":178},"sAdtL",[172,180,182],{"class":181},"sDhpE"," curl",[172,184,186],{"class":185},"sAGMh"," -s",[172,188,189],{"class":185}," -X",[172,191,192],{"class":181}," POST",[172,194,195],{"class":181}," https://api.telegram.org/bot{id}:{apikey}/sendMessage",[172,197,198],{"class":185}," -d",[172,200,201],{"class":181}," chat_id={uid}",[172,203,198],{"class":185},[172,205,206],{"class":181}," text=\"`",[172,208,209],{"class":178},"date",[172,211,212],{"class":181},"`\"\n",[214,215,216],"style",{},"html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":168,"searchDepth":218,"depth":218,"links":219},2,[],"2024-02-08 17:21:31","说来惭愧，其实我用了这么久的 Linux，一直没有学会编写 crontab 脚本。一行的开头写上五位莫名其妙的数字或星号，后面跟上需要执行的命令，看上去很 kiss，但我确实记不住，以至于我现在每次写 crontab 都是让 ChatGPT 来帮我写。","md",{},true,"/2024/02/08/extra-usage-for-crontab","---\ntitle: crontab 中简单的@语法糖\ndate: 2024-02-08 17:21:31\nsticky:\ntags:\n- Linux\n- crontab\n---\n\n说来惭愧，其实我用了这么久的 Linux，一直没有学会编写 crontab 脚本。一行的开头写上五位莫名其妙的数字或星号，后面跟上需要执行的命令，看上去很 kiss，~~但我确实记不住，以至于我现在每次写 crontab 都是让 ChatGPT 来帮我写。~~\n\n不过我最近查阅 Linux 下设置开机自启脚本的方案的时候，意外地看到 crontab 中居然可以用 `@reboot command` 的方式去写，这让我意识到 crontab 也是有一些简单的语法糖的。在查阅了 [crontab 的 manual](https://man.archlinux.org/man/crontab.5.en#EXTENSIONS) 后，我发现一共有下面这么几种 @ 写法的语法糖。这是在全网大部分的 crontab 中文教程中是没有的。\n\n| 语法糖      | 执行条件     | 等效表达式  |\n| ----------- | ------------ | ----------- |\n| `@reboot`   | 开机时候运行 |             |\n| `@yearly`   | 一年一次     | `0 0 1 1 *` |\n| `@annually` | 一年一次     | `0 0 1 1 *` |\n| `@monthly`  | 一月一次     | `0 0 1 * *` |\n| `@weekly`   | 一周一次     | `0 0 * * 0` |\n| `@daily`    | 一天一次     | `0 0 * * *` |\n| `@hourly`   | 一小时一次   | `0 * * * *` |\n\n这几个简单的语法糖可以满足大部分 crontab 的情况，免去了对使用者学习并记忆 crontab 的表达式的要求。\n\n比如说，如果我希望我的系统在每次开机时都用 TG Bot 发送一条上线信息，那就是\n\n```bash\n@reboot curl -s -X POST https://api.telegram.org/bot{id}:{apikey}/sendMessage -d chat_id={uid} -d text=\"`date`\"\n```\n\n",{"title":5,"description":221},"posts/extra-usage-for-crontab",false,[231,232],"Linux","crontab","PoHEKw85fm5znhscHIcDZqdH5vAK5QFG08jGEa7jUF8",[235,240],{"title":236,"path":237,"stem":238,"date":239,"children":-1},"如何使用 docker 部署 onemanager","/2024/02/11/how-to-deploy-onemanager-with-docker","posts/how-to-deploy-onemanager-with-docker","2024-02-11 16:30:29",{"title":241,"path":242,"stem":243,"date":244,"children":-1},"备份 umami 数据库，并使用 TG Bot 保存 dump 文件","/2024/02/01/backup-umami-database-and-send-it-by-tg-bot","posts/backup-umami-database-and-send-it-by-tg-bot","2024-02-01 00:00:01",16,1761739882081]