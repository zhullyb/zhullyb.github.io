[{"data":1,"prerenderedAt":225},["ShallowReactive",2],{"post-2024-08-12-new-picbed-based-on-cloudflare-and-upyun":3,"surround-2024-08-12-new-picbed-based-on-cloudflare-and-upyun":213,"randomIndex/2024/08/12/new-picbed-based-on-cloudflare-and-upyun/":224},{"id":4,"title":5,"body":6,"date":198,"description":188,"extension":199,"meta":200,"navigation":201,"path":202,"rawbody":203,"seo":204,"stem":205,"sticky":206,"tags":207,"__hash__":212},"posts/posts/new-picbed-based-on-cloudflare-and-upyun.md","自建图床小记一——图床架构与 DNS 解析",{"type":7,"value":8,"toc":187},"minimark",[9,16,19,23,30,33,36,47,61,65,68,71,94,100,104,110,113,125,131,134,140,145,148,152,158,161,167,175,178],[10,11,12],"blockquote",{},[13,14,15],"p",{},"一直以来，我使用的都是使用付费的第三方图床，可惜最近几年为了节省成本，境内的稳定性出现了一些问题。过去一年中光是我本人遇到的无法访问的情况就有三四次，其中两次持续时间超过 2 小时，甚至有网友特意来 at 我告知我博客使用的图床出问题了，还有两次是在我作品验收前 24 小时内出现，幸亏我及时切换了资源链接。此外，境外 CDN 也从原先的 Cloudflare 换掉了，目前海外的解析结果似乎只有一个在美国的节点，其余地区（尤其是日本香港新加坡等常用的落地地区）的访问质量不佳，Google 的 page speed test 甚至提示我的图片拖慢了网站加载速度。",[13,17,18],{},"基于上述种种原因，我开始选择自建图床，前前后后折腾了快一周后，新图床终于投入使用，目前我的博客已经完成了所有图片资源的切换。",[20,21,22],"h2",{"id":22},"架构设计",[13,24,25],{},[26,27],"img",{"alt":28,"src":29},"图床架构设计图","https://static.031130.xyz/uploads/2024/08/12/80402e4da4ef7.webp",[13,31,32],{},"这一套架构使用 Dnspod 免费版实现在境内外的解析分流，将境内的流量导向又拍云 CDN 为境内的访客提供服务，在境外使用量大管饱的 Cloudflare CDN 节省成本，为全球提供加速访问。",[20,34,35],{"id":35},"为什么是又拍云",[13,37,38,39,46],{},"如你所见，我的博客底部挂了又拍云的 logo。",[40,41,45],"a",{"href":42,"rel":43},"https://www.upyun.com/league",[44],"nofollow","又拍云联盟","为个人开发者提供了每个月 10GB 存储和 15GB 的免费 CDN 流量，在每年通过申请后会以 67 元无门槛代金券的形式发放到账号，也不用担心某个月超了一点点而付出额外的费用。",[13,48,49,50,55,56],{},"相比之下，七牛云虽然控制台的前端 UI 不错，但出了这种事情导致其在我心里印象分极差: 「",[40,51,54],{"href":52,"rel":53},"https://blog.hanlin.press/2024/07/From-Shanxi-to-Qiniu/",[44],"从山西联通到组播IP：七牛云的奇怪视角（附分析和后日谈）","」",[40,57,60],{"href":58,"rel":59},"https://archive.md/ONeu3",[44],"Archived Here",[20,62,64],{"id":63},"为什么是-cloudflare-r2","为什么是 Cloudflare R2",[13,66,67],{},"作为自己的图床，必须要保证稳定性，境内访问的稳定性可以先放到一边，最重要的就是保证源文件的稳定性。不同于在自己的 VPS 上存储图片的方案，使用 Cloudflare R2 作为储存不需要关注 VPS 到期以后的图片迁移问题。使用 Cloudflare R2 作为储存，免费用量对于个人站点来说绰绰有余，在 10GB 存储容量超出之前不用考虑别的问题，也不用担心资金支持不下去导致的麻烦。而不使用又拍云提供的 10GB 存储也可以节省这部分的代金券金额，让代金券尽可能多的抵扣境内 CDN 流量带来的费用。",[20,69,70],{"id":70},"需要的东西",[72,73,74,78,81,88],"ul",{},[75,76,77],"li",{},"两个或两个以上的域名（其中一个需要备案）",[75,79,80],{},"Cloudflare 所支持的境外支付方式（PayPal 账号 / Visa Card / Master Card），用于开通 Cloudflare R2 和 Cloudflare SaaS 接入",[75,82,83,87],{},[84,85,86],"del",{},"很多很多钱","（其实没有很多，又拍云联盟每年的 67 元抵用券在我这里看来完全是够用的）",[75,89,90,91],{},"聪明的大脑，能够快速敲击键盘的双手，",[84,92,93],{},"能够支持你熬夜的心脏",[13,95,96],{},[97,98,99],"em",{},"* 在这一套架构中引入了香港 VPS 进行反向代理，一来是防止国内 CDN 与 Cloudflare 的网络连接质量过差导致的回源失败，二来也是方便我在没有国际联网的情况下进行图片的上传，但如果没有条件其实是可以去掉的。",[20,101,103],{"id":102},"dns-解析","DNS 解析",[13,105,106],{},[26,107],{"alt":108,"src":109},"DNS 解析方案 1","https://static.031130.xyz/uploads/2024/08/13/03d8243b67593.webp",[13,111,112],{},"如上图，将图床域名 NS 接入 DnsPod，工具人域名 NS 接入 Cloudflare 即可实现境内外分流的效果。",[114,115,116,119,122],"ol",{},[75,117,118],{},"图床访问域名在境外 CNAME 解析到工具人域名",[75,120,121],{},"图床访问域名在境内 CNAME 解析到境内 CDN 服务商",[75,123,124],{},"工具人域名在 Cloudflare 上解析到任何站点都行，只需点亮解析时 Cloudflare CDN 代理按钮即可生效。",[13,126,127],{},[26,128],{"alt":129,"src":130},"代理按钮","https://static.031130.xyz/uploads/2024/08/13/a0387d2919850.webp",[13,132,133],{},"但如果你的备案域名已经通过 NS 接入了 Cloudflare，可以采用下面这套架构。",[13,135,136],{},[26,137],{"alt":138,"src":139},"DNS 解析方案 2","https://static.031130.xyz/uploads/2024/08/13/d03d7b3155514.webp",[13,141,142],{},[97,143,144],{},"* 解析方案 2 中的图床访问域名和工具人域名可以是同属于同一二级域名的不同子域名",[13,146,147],{},"这种方案要多一步，把图床访问域名 CNAME 解析到用于分流的工具人域名。",[20,149,151],{"id":150},"cloudflare-saas-接入","Cloudflare SaaS 接入",[13,153,154],{},[26,155],{"alt":156,"src":157},"SaaS 接入","https://static.031130.xyz/uploads/2024/08/13/eb7186205b380.webp",[13,159,160],{},"SaaS 接入大概就是如图所示，此外还要配置 Cloudflare Workers 的域名访问",[13,162,163],{},[26,164],{"alt":165,"src":166},"Cloudflare Workers 域名访问","https://static.031130.xyz/uploads/2024/08/13/782a665cabe05.webp",[13,168,169,170,174],{},"这样就能保证在境外访问图床域名时将请求打到 Cloudflare Workers 上了，关于使用 Cloudflare Workers 构建图床 Restful API 相关的内容我放在",[40,171,173],{"href":172},"/2024/08/13/build-restful-api-for-cloudflare-r2-with-cloudflare-workers/","下一篇博客","讲。",[20,176,177],{"id":177},"参见",[72,179,180],{},[75,181,182],{},[40,183,186],{"href":184,"rel":185},"https://www.eallion.com/cdn-cname-cloudflare/",[44],"图床 CDN CNAME 接入 Cloudflare SaaS 实现分流",{"title":188,"searchDepth":189,"depth":189,"links":190},"",2,[191,192,193,194,195,196,197],{"id":22,"depth":189,"text":22},{"id":35,"depth":189,"text":35},{"id":63,"depth":189,"text":64},{"id":70,"depth":189,"text":70},{"id":102,"depth":189,"text":103},{"id":150,"depth":189,"text":151},{"id":177,"depth":189,"text":177},"2024-08-12 17:07:11","md",{},true,"/2024/08/12/new-picbed-based-on-cloudflare-and-upyun","---\ntitle: 自建图床小记一——图床架构与 DNS 解析\ndate: 2024-08-12 17:07:11\nsticky:\ntags:\n- CDN\n- 图床\n- Network\n- Cloudflare\n---\n\n> 一直以来，我使用的都是使用付费的第三方图床，可惜最近几年为了节省成本，境内的稳定性出现了一些问题。过去一年中光是我本人遇到的无法访问的情况就有三四次，其中两次持续时间超过 2 小时，甚至有网友特意来 at 我告知我博客使用的图床出问题了，还有两次是在我作品验收前 24 小时内出现，幸亏我及时切换了资源链接。此外，境外 CDN 也从原先的 Cloudflare 换掉了，目前海外的解析结果似乎只有一个在美国的节点，其余地区（尤其是日本香港新加坡等常用的落地地区）的访问质量不佳，Google 的 page speed test 甚至提示我的图片拖慢了网站加载速度。\n\n基于上述种种原因，我开始选择自建图床，前前后后折腾了快一周后，新图床终于投入使用，目前我的博客已经完成了所有图片资源的切换。\n\n## 架构设计\n\n![图床架构设计图](https://static.031130.xyz/uploads/2024/08/12/80402e4da4ef7.webp)\n\n这一套架构使用 Dnspod 免费版实现在境内外的解析分流，将境内的流量导向又拍云 CDN 为境内的访客提供服务，在境外使用量大管饱的 Cloudflare CDN 节省成本，为全球提供加速访问。\n\n## 为什么是又拍云\n\n如你所见，我的博客底部挂了又拍云的 logo。[又拍云联盟](https://www.upyun.com/league)为个人开发者提供了每个月 10GB 存储和 15GB 的免费 CDN 流量，在每年通过申请后会以 67 元无门槛代金券的形式发放到账号，也不用担心某个月超了一点点而付出额外的费用。\n\n相比之下，七牛云虽然控制台的前端 UI 不错，但出了这种事情导致其在我心里印象分极差: 「[从山西联通到组播IP：七牛云的奇怪视角（附分析和后日谈）](https://blog.hanlin.press/2024/07/From-Shanxi-to-Qiniu/)」[Archived Here](https://archive.md/ONeu3)\n\n## 为什么是 Cloudflare R2\n\n作为自己的图床，必须要保证稳定性，境内访问的稳定性可以先放到一边，最重要的就是保证源文件的稳定性。不同于在自己的 VPS 上存储图片的方案，使用 Cloudflare R2 作为储存不需要关注 VPS 到期以后的图片迁移问题。使用 Cloudflare R2 作为储存，免费用量对于个人站点来说绰绰有余，在 10GB 存储容量超出之前不用考虑别的问题，也不用担心资金支持不下去导致的麻烦。而不使用又拍云提供的 10GB 存储也可以节省这部分的代金券金额，让代金券尽可能多的抵扣境内 CDN 流量带来的费用。\n\n## 需要的东西\n\n- 两个或两个以上的域名（其中一个需要备案）\n- Cloudflare 所支持的境外支付方式（PayPal 账号 / Visa Card / Master Card），用于开通 Cloudflare R2 和 Cloudflare SaaS 接入\n- ~~很多很多钱~~（其实没有很多，又拍云联盟每年的 67 元抵用券在我这里看来完全是够用的）\n- 聪明的大脑，能够快速敲击键盘的双手，~~能够支持你熬夜的心脏~~\n\n*\\* 在这一套架构中引入了香港 VPS 进行反向代理，一来是防止国内 CDN 与 Cloudflare 的网络连接质量过差导致的回源失败，二来也是方便我在没有国际联网的情况下进行图片的上传，但如果没有条件其实是可以去掉的。*\n\n## DNS 解析\n\n![DNS 解析方案 1](https://static.031130.xyz/uploads/2024/08/13/03d8243b67593.webp)\n\n如上图，将图床域名 NS 接入 DnsPod，工具人域名 NS 接入 Cloudflare 即可实现境内外分流的效果。\n\n1. 图床访问域名在境外 CNAME 解析到工具人域名\n2. 图床访问域名在境内 CNAME 解析到境内 CDN 服务商\n3. 工具人域名在 Cloudflare 上解析到任何站点都行，只需点亮解析时 Cloudflare CDN 代理按钮即可生效。\n\n![代理按钮](https://static.031130.xyz/uploads/2024/08/13/a0387d2919850.webp)\n\n但如果你的备案域名已经通过 NS 接入了 Cloudflare，可以采用下面这套架构。\n\n![DNS 解析方案 2](https://static.031130.xyz/uploads/2024/08/13/d03d7b3155514.webp)\n\n*\\* 解析方案 2 中的图床访问域名和工具人域名可以是同属于同一二级域名的不同子域名*\n\n这种方案要多一步，把图床访问域名 CNAME 解析到用于分流的工具人域名。\n\n## Cloudflare SaaS 接入\n\n![SaaS 接入](https://static.031130.xyz/uploads/2024/08/13/eb7186205b380.webp)\n\nSaaS 接入大概就是如图所示，此外还要配置 Cloudflare Workers 的域名访问\n\n![Cloudflare Workers 域名访问](https://static.031130.xyz/uploads/2024/08/13/782a665cabe05.webp)\n\n这样就能保证在境外访问图床域名时将请求打到 Cloudflare Workers 上了，关于使用 Cloudflare Workers 构建图床 Restful API 相关的内容我放在[下一篇博客](/2024/08/13/build-restful-api-for-cloudflare-r2-with-cloudflare-workers/)讲。\n\n## 参见\n\n- [图床 CDN CNAME 接入 Cloudflare SaaS 实现分流](https://www.eallion.com/cdn-cname-cloudflare/)\n",{"title":5,"description":188},"posts/new-picbed-based-on-cloudflare-and-upyun",false,[208,209,210,211],"CDN","图床","Network","Cloudflare","7TTBpsOqE1c09niKspp8VtSXYd1pLtpylnwJSY1MotQ",[214,219],{"title":215,"path":216,"stem":217,"date":218},"自建图床小记二——使用 Workers 为 R2 构建 Restful API","/2024/08/13/build-restful-api-for-cloudflare-r2-with-cloudflare-workers","posts/build-restful-api-for-cloudflare-r2-with-cloudflare-workers","2024-08-13 22:58:26",{"title":220,"path":221,"stem":222,"date":223},"在 Linux 下使用 mitmproxy 抓取安卓手机上的 HTTPS 流量","/2024/07/31/capture-android-https-traffic-on-linux-with-mitmproxy","posts/capture-android-https-traffic-on-linux-with-mitmproxy","2024-07-31 16:02:28",14,1761696887550]