[{"data":1,"prerenderedAt":1709},["ShallowReactive",2],{"post-2024-08-20-picbed-upload-script-and-image-migration":3,"surround-2024-08-20-picbed-upload-script-and-image-migration":1698,"randomIndex/2024/08/20/picbed-upload-script-and-image-migration/":303},{"id":4,"title":5,"body":6,"date":1682,"description":1683,"extension":1684,"meta":1685,"navigation":67,"path":1686,"rawbody":1687,"seo":1688,"stem":1689,"sticky":1690,"tags":1691,"__hash__":1697},"posts/posts/picbed-upload-script-and-image-migration.md","自建图床小记四——上传脚本编写与图片迁移",{"type":7,"value":8,"toc":1678},"minimark",[9,29,33,36,43,1142,1169,1207,1217,1220,1320,1341,1349,1352,1355,1358,1674],[10,11,12,13,18,19,23,24,28],"p",{},"前面三篇小记分别讲述了",[14,15,17],"a",{"href":16},"/2024/08/12/new-picbed-based-on-cloudflare-and-upyun/","图床的整体架构","、",[14,20,22],{"href":21},"/2024/08/13/build-restful-api-for-cloudflare-r2-with-cloudflare-workers/","用 Workers 构建 Restful API"," 和 ",[14,25,27],{"href":26},"/2024/08/14/auto-renew-ssl-certificate-and-deploy-to-upyun-with-github-action/","自动更新部署 SSL 证书","，这一篇c处理由此带来的图片上传问题，主要是要为 Typora 编写自动上传脚本，并为博客原有的图片进行迁移。",[30,31,32],"h2",{"id":32},"自动上传脚本",[10,34,35],{},"主要还是给 Typora 用，实现这种效果",[10,37,38],{},[39,40],"img",{"alt":41,"src":42},"Typora 自动上传","https://static.031130.xyz/uploads/2024/08/12/62f3b881e3c4c.gif",[44,45,50],"pre",{"className":46,"code":47,"language":48,"meta":49,"style":49},"language-bash shiki shiki-themes one-light one-dark-pro","#!/bin/bash\n\nHOST=\"upload.example.com\"\nCDN_HOST=\"cdn.example.com\"\nUPLOAD_PATH=\"uploads/$(date +%Y/%m/%d)\"\n\nAUTH_TOKEN=\"1145141919810\"\n\nwebp=false\nmarkdown=false\nforce=false\nkeep=false\n\nwhile getopts \":mwfkp:\" opt; do\n    case $opt in\n        m|markdown) markdown=true ;;\n        w|webp) webp=true ;;\n        f|force) force=true ;;\n        k|keep) keep=true ;;\n        p|path) UPLOAD_PATH=$OPTARG ;;\n        \\?) echo \"Invalid option: -$OPTARG\" ;;\n    esac\ndone\nshift $((OPTIND - 1))\n\nUPLOAD_URL=\"https://$HOST/$UPLOAD_PATH\"\nif [[ \"$UPLOAD_URL\" == */ ]]; then\n    UPLOAD_URL=\"${UPLOAD_URL%?}\"\nfi\n\nfor image in \"$@\"; do\n    if [ \"$webp\" = true ]; then\n        cwebp -quiet \"$image\" -o \"${image%.*}.webp\"\n        image=\"${image%.*}.webp\"\n    fi\n\n    if [ \"$keep\" = true ]; then\n        FILENAME=$(basename \"$image\")\n    else\n        FILENAME=\"$(md5sum $image | cut -c 1-13).$(basename $image | cut -d. -f2)\"\n    fi\n\n    if [ \"$force\" = true ]; then\n        UPLOAD_RESPONSE=$(curl -s -X PUT \"${UPLOAD_URL}/$FILENAME\" \\\n            -w \"%{http_code}\" \\\n            --data-binary @\"$image\" \\\n            -H \"X-Custom-Auth-Key: $AUTH_TOKEN\" \\\n            -H \"Overwrite: true\" \\\n        )\n    else\n        UPLOAD_RESPONSE=$(curl -s -X PUT \"${UPLOAD_URL}/$FILENAME\" \\\n            -w \"%{http_code}\" \\\n            --data-binary @\"$image\" \\\n            -H \"X-Custom-Auth-Key: $AUTH_TOKEN\" \\\n        )\n    fi\n\n    UPLOAD_HTTP_CODE=$(echo \"$UPLOAD_RESPONSE\" | tail -n1)\n    \n    if [ -n \"$UPLOAD_PATH\" ]; then\n        CDN_URL=\"https://$CDN_HOST/$UPLOAD_PATH/$FILENAME\"\n    else\n        CDN_URL=\"https://$CDN_HOST/$FILENAME\"\n    fi\n\n    if [ \"$UPLOAD_HTTP_CODE\" != \"200\" ]; then\n        echo \"上传失败: $UPLOAD_RESPONSE\"\n        continue\n    fi\n\n    if [ \"$markdown\" = true ]; then\n        echo \"![](${CDN_URL})\"\n    else\n        echo \"${CDN_URL}\"\n    fi\ndone\n","bash","",[51,52,53,62,69,84,95,113,118,129,134,145,155,165,175,180,204,216,241,261,281,301,323,344,350,356,378,383,406,431,458,464,469,494,521,560,584,590,595,617,640,646,691,696,701,723,763,774,789,805,815,821,826,859,868,881,894,899,904,909,939,945,965,988,993,1010,1015,1020,1044,1057,1063,1068,1073,1095,1112,1117,1132,1137],"code",{"__ignoreMap":49},[54,55,58],"span",{"class":56,"line":57},"line",1,[54,59,61],{"class":60},"sW2Sy","#!/bin/bash\n",[54,63,65],{"class":56,"line":64},2,[54,66,68],{"emptyLinePlaceholder":67},true,"\n",[54,70,72,76,80],{"class":56,"line":71},3,[54,73,75],{"class":74},"sJa8x","HOST",[54,77,79],{"class":78},"sknuh","=",[54,81,83],{"class":82},"sDhpE","\"upload.example.com\"\n",[54,85,87,90,92],{"class":56,"line":86},4,[54,88,89],{"class":74},"CDN_HOST",[54,91,79],{"class":78},[54,93,94],{"class":82},"\"cdn.example.com\"\n",[54,96,98,101,103,106,110],{"class":56,"line":97},5,[54,99,100],{"class":74},"UPLOAD_PATH",[54,102,79],{"class":78},[54,104,105],{"class":82},"\"uploads/$(",[54,107,109],{"class":108},"sAdtL","date",[54,111,112],{"class":82}," +%Y/%m/%d)\"\n",[54,114,116],{"class":56,"line":115},6,[54,117,68],{"emptyLinePlaceholder":67},[54,119,121,124,126],{"class":56,"line":120},7,[54,122,123],{"class":74},"AUTH_TOKEN",[54,125,79],{"class":78},[54,127,128],{"class":82},"\"1145141919810\"\n",[54,130,132],{"class":56,"line":131},8,[54,133,68],{"emptyLinePlaceholder":67},[54,135,137,140,142],{"class":56,"line":136},9,[54,138,139],{"class":74},"webp",[54,141,79],{"class":78},[54,143,144],{"class":82},"false\n",[54,146,148,151,153],{"class":56,"line":147},10,[54,149,150],{"class":74},"markdown",[54,152,79],{"class":78},[54,154,144],{"class":82},[54,156,158,161,163],{"class":56,"line":157},11,[54,159,160],{"class":74},"force",[54,162,79],{"class":78},[54,164,144],{"class":82},[54,166,168,171,173],{"class":56,"line":167},12,[54,169,170],{"class":74},"keep",[54,172,79],{"class":78},[54,174,144],{"class":82},[54,176,178],{"class":56,"line":177},13,[54,179,68],{"emptyLinePlaceholder":67},[54,181,183,187,191,194,197,201],{"class":56,"line":182},14,[54,184,186],{"class":185},"sLKXg","while",[54,188,190],{"class":189},"s_Sar"," getopts",[54,192,193],{"class":82}," \":mwfkp:\"",[54,195,196],{"class":82}," opt",[54,198,200],{"class":199},"s5ixo","; ",[54,202,203],{"class":185},"do\n",[54,205,207,210,213],{"class":56,"line":206},15,[54,208,209],{"class":185},"    case",[54,211,212],{"class":74}," $opt",[54,214,215],{"class":185}," in\n",[54,217,219,223,226,228,231,233,235,238],{"class":56,"line":218},16,[54,220,222],{"class":221},"sDaw7","        m",[54,224,225],{"class":199},"|",[54,227,150],{"class":221},[54,229,230],{"class":199},") ",[54,232,150],{"class":74},[54,234,79],{"class":78},[54,236,237],{"class":82},"true",[54,239,240],{"class":199}," ;;\n",[54,242,244,247,249,251,253,255,257,259],{"class":56,"line":243},17,[54,245,246],{"class":221},"        w",[54,248,225],{"class":199},[54,250,139],{"class":221},[54,252,230],{"class":199},[54,254,139],{"class":74},[54,256,79],{"class":78},[54,258,237],{"class":82},[54,260,240],{"class":199},[54,262,264,267,269,271,273,275,277,279],{"class":56,"line":263},18,[54,265,266],{"class":221},"        f",[54,268,225],{"class":199},[54,270,160],{"class":221},[54,272,230],{"class":199},[54,274,160],{"class":74},[54,276,79],{"class":78},[54,278,237],{"class":82},[54,280,240],{"class":199},[54,282,284,287,289,291,293,295,297,299],{"class":56,"line":283},19,[54,285,286],{"class":221},"        k",[54,288,225],{"class":199},[54,290,170],{"class":221},[54,292,230],{"class":199},[54,294,170],{"class":74},[54,296,79],{"class":78},[54,298,237],{"class":82},[54,300,240],{"class":199},[54,302,304,307,309,312,314,316,318,321],{"class":56,"line":303},20,[54,305,306],{"class":221},"        p",[54,308,225],{"class":199},[54,310,311],{"class":221},"path",[54,313,230],{"class":199},[54,315,100],{"class":74},[54,317,79],{"class":78},[54,319,320],{"class":74},"$OPTARG",[54,322,240],{"class":199},[54,324,326,329,331,334,337,339,342],{"class":56,"line":325},21,[54,327,328],{"class":189},"        \\?",[54,330,230],{"class":199},[54,332,333],{"class":189},"echo",[54,335,336],{"class":82}," \"Invalid option: -",[54,338,320],{"class":74},[54,340,341],{"class":82},"\"",[54,343,240],{"class":199},[54,345,347],{"class":56,"line":346},22,[54,348,349],{"class":185},"    esac\n",[54,351,353],{"class":56,"line":352},23,[54,354,355],{"class":185},"done\n",[54,357,359,362,365,368,371,375],{"class":56,"line":358},24,[54,360,361],{"class":189},"shift",[54,363,364],{"class":199}," $((",[54,366,367],{"class":108},"OPTIND",[54,369,370],{"class":82}," -",[54,372,374],{"class":373},"sAGMh"," 1",[54,376,377],{"class":199},"))\n",[54,379,381],{"class":56,"line":380},25,[54,382,68],{"emptyLinePlaceholder":67},[54,384,386,389,391,394,397,400,403],{"class":56,"line":385},26,[54,387,388],{"class":74},"UPLOAD_URL",[54,390,79],{"class":78},[54,392,393],{"class":82},"\"https://",[54,395,396],{"class":74},"$HOST",[54,398,399],{"class":82},"/",[54,401,402],{"class":74},"$UPLOAD_PATH",[54,404,405],{"class":82},"\"\n",[54,407,409,412,415,417,420,422,425,428],{"class":56,"line":408},27,[54,410,411],{"class":185},"if",[54,413,414],{"class":199}," [[ ",[54,416,341],{"class":82},[54,418,419],{"class":74},"$UPLOAD_URL",[54,421,341],{"class":82},[54,423,424],{"class":78}," ==",[54,426,427],{"class":199}," */ ]]; ",[54,429,430],{"class":185},"then\n",[54,432,434,437,439,441,445,447,450,453,456],{"class":56,"line":433},28,[54,435,436],{"class":74},"    UPLOAD_URL",[54,438,79],{"class":78},[54,440,341],{"class":82},[54,442,444],{"class":443},"sTIpt","${",[54,446,388],{"class":74},[54,448,449],{"class":199},"%",[54,451,452],{"class":82},"?",[54,454,455],{"class":443},"}",[54,457,405],{"class":82},[54,459,461],{"class":56,"line":460},29,[54,462,463],{"class":185},"fi\n",[54,465,467],{"class":56,"line":466},30,[54,468,68],{"emptyLinePlaceholder":67},[54,470,472,475,478,481,484,488,490,492],{"class":56,"line":471},31,[54,473,474],{"class":185},"for",[54,476,477],{"class":74}," image",[54,479,480],{"class":185}," in",[54,482,483],{"class":82}," \"",[54,485,487],{"class":486},"s8iYz","$@",[54,489,341],{"class":82},[54,491,200],{"class":199},[54,493,203],{"class":185},[54,495,497,500,503,505,508,510,513,516,519],{"class":56,"line":496},32,[54,498,499],{"class":185},"    if",[54,501,502],{"class":199}," [ ",[54,504,341],{"class":82},[54,506,507],{"class":74},"$webp",[54,509,341],{"class":82},[54,511,512],{"class":78}," =",[54,514,515],{"class":373}," true",[54,517,518],{"class":199}," ]; ",[54,520,430],{"class":185},[54,522,524,527,530,532,535,537,540,542,544,547,549,552,555,557],{"class":56,"line":523},33,[54,525,526],{"class":108},"        cwebp",[54,528,529],{"class":373}," -quiet",[54,531,483],{"class":82},[54,533,534],{"class":74},"$image",[54,536,341],{"class":82},[54,538,539],{"class":373}," -o",[54,541,483],{"class":82},[54,543,444],{"class":443},[54,545,546],{"class":74},"image",[54,548,449],{"class":199},[54,550,551],{"class":82},".",[54,553,554],{"class":199},"*",[54,556,455],{"class":443},[54,558,559],{"class":82},".webp\"\n",[54,561,563,566,568,570,572,574,576,578,580,582],{"class":56,"line":562},34,[54,564,565],{"class":74},"        image",[54,567,79],{"class":78},[54,569,341],{"class":82},[54,571,444],{"class":443},[54,573,546],{"class":74},[54,575,449],{"class":199},[54,577,551],{"class":82},[54,579,554],{"class":199},[54,581,455],{"class":443},[54,583,559],{"class":82},[54,585,587],{"class":56,"line":586},35,[54,588,589],{"class":185},"    fi\n",[54,591,593],{"class":56,"line":592},36,[54,594,68],{"emptyLinePlaceholder":67},[54,596,598,600,602,604,607,609,611,613,615],{"class":56,"line":597},37,[54,599,499],{"class":185},[54,601,502],{"class":199},[54,603,341],{"class":82},[54,605,606],{"class":74},"$keep",[54,608,341],{"class":82},[54,610,512],{"class":78},[54,612,515],{"class":373},[54,614,518],{"class":199},[54,616,430],{"class":185},[54,618,620,623,625,628,631,633,635,637],{"class":56,"line":619},38,[54,621,622],{"class":74},"        FILENAME",[54,624,79],{"class":78},[54,626,627],{"class":199},"$(",[54,629,630],{"class":108},"basename",[54,632,483],{"class":82},[54,634,534],{"class":74},[54,636,341],{"class":82},[54,638,639],{"class":199},")\n",[54,641,643],{"class":56,"line":642},39,[54,644,645],{"class":185},"    else\n",[54,647,649,651,653,656,659,662,665,668,671,674,676,678,680,682,685,688],{"class":56,"line":648},40,[54,650,622],{"class":74},[54,652,79],{"class":78},[54,654,655],{"class":82},"\"$(",[54,657,658],{"class":108},"md5sum",[54,660,661],{"class":74}," $image",[54,663,664],{"class":199}," |",[54,666,667],{"class":108}," cut",[54,669,670],{"class":373}," -c",[54,672,673],{"class":82}," 1-13).$(",[54,675,630],{"class":108},[54,677,661],{"class":74},[54,679,664],{"class":199},[54,681,667],{"class":108},[54,683,684],{"class":373}," -d.",[54,686,687],{"class":373}," -f2",[54,689,690],{"class":82},")\"\n",[54,692,694],{"class":56,"line":693},41,[54,695,589],{"class":185},[54,697,699],{"class":56,"line":698},42,[54,700,68],{"emptyLinePlaceholder":67},[54,702,704,706,708,710,713,715,717,719,721],{"class":56,"line":703},43,[54,705,499],{"class":185},[54,707,502],{"class":199},[54,709,341],{"class":82},[54,711,712],{"class":74},"$force",[54,714,341],{"class":82},[54,716,512],{"class":78},[54,718,515],{"class":373},[54,720,518],{"class":199},[54,722,430],{"class":185},[54,724,726,729,731,733,736,739,742,745,747,749,751,753,755,758,760],{"class":56,"line":725},44,[54,727,728],{"class":74},"        UPLOAD_RESPONSE",[54,730,79],{"class":78},[54,732,627],{"class":199},[54,734,735],{"class":108},"curl",[54,737,738],{"class":373}," -s",[54,740,741],{"class":373}," -X",[54,743,744],{"class":82}," PUT",[54,746,483],{"class":82},[54,748,444],{"class":443},[54,750,388],{"class":74},[54,752,455],{"class":443},[54,754,399],{"class":82},[54,756,757],{"class":74},"$FILENAME",[54,759,341],{"class":82},[54,761,762],{"class":189}," \\\n",[54,764,766,769,772],{"class":56,"line":765},45,[54,767,768],{"class":373},"            -w",[54,770,771],{"class":82}," \"%{http_code}\"",[54,773,762],{"class":189},[54,775,777,780,783,785,787],{"class":56,"line":776},46,[54,778,779],{"class":373},"            --data-binary",[54,781,782],{"class":82}," @\"",[54,784,534],{"class":74},[54,786,341],{"class":82},[54,788,762],{"class":189},[54,790,792,795,798,801,803],{"class":56,"line":791},47,[54,793,794],{"class":373},"            -H",[54,796,797],{"class":82}," \"X-Custom-Auth-Key: ",[54,799,800],{"class":74},"$AUTH_TOKEN",[54,802,341],{"class":82},[54,804,762],{"class":189},[54,806,808,810,813],{"class":56,"line":807},48,[54,809,794],{"class":373},[54,811,812],{"class":82}," \"Overwrite: true\"",[54,814,762],{"class":189},[54,816,818],{"class":56,"line":817},49,[54,819,820],{"class":199},"        )\n",[54,822,824],{"class":56,"line":823},50,[54,825,645],{"class":185},[54,827,829,831,833,835,837,839,841,843,845,847,849,851,853,855,857],{"class":56,"line":828},51,[54,830,728],{"class":74},[54,832,79],{"class":78},[54,834,627],{"class":199},[54,836,735],{"class":108},[54,838,738],{"class":373},[54,840,741],{"class":373},[54,842,744],{"class":82},[54,844,483],{"class":82},[54,846,444],{"class":443},[54,848,388],{"class":74},[54,850,455],{"class":443},[54,852,399],{"class":82},[54,854,757],{"class":74},[54,856,341],{"class":82},[54,858,762],{"class":189},[54,860,862,864,866],{"class":56,"line":861},52,[54,863,768],{"class":373},[54,865,771],{"class":82},[54,867,762],{"class":189},[54,869,871,873,875,877,879],{"class":56,"line":870},53,[54,872,779],{"class":373},[54,874,782],{"class":82},[54,876,534],{"class":74},[54,878,341],{"class":82},[54,880,762],{"class":189},[54,882,884,886,888,890,892],{"class":56,"line":883},54,[54,885,794],{"class":373},[54,887,797],{"class":82},[54,889,800],{"class":74},[54,891,341],{"class":82},[54,893,762],{"class":189},[54,895,897],{"class":56,"line":896},55,[54,898,820],{"class":199},[54,900,902],{"class":56,"line":901},56,[54,903,589],{"class":185},[54,905,907],{"class":56,"line":906},57,[54,908,68],{"emptyLinePlaceholder":67},[54,910,912,915,917,919,921,923,926,928,931,934,937],{"class":56,"line":911},58,[54,913,914],{"class":74},"    UPLOAD_HTTP_CODE",[54,916,79],{"class":78},[54,918,627],{"class":199},[54,920,333],{"class":189},[54,922,483],{"class":82},[54,924,925],{"class":74},"$UPLOAD_RESPONSE",[54,927,341],{"class":82},[54,929,930],{"class":199}," | ",[54,932,933],{"class":108},"tail",[54,935,936],{"class":373}," -n1",[54,938,639],{"class":199},[54,940,942],{"class":56,"line":941},59,[54,943,944],{"class":199},"    \n",[54,946,948,950,952,955,957,959,961,963],{"class":56,"line":947},60,[54,949,499],{"class":185},[54,951,502],{"class":199},[54,953,954],{"class":78},"-n",[54,956,483],{"class":82},[54,958,402],{"class":74},[54,960,341],{"class":82},[54,962,518],{"class":199},[54,964,430],{"class":185},[54,966,968,971,973,975,978,980,982,984,986],{"class":56,"line":967},61,[54,969,970],{"class":74},"        CDN_URL",[54,972,79],{"class":78},[54,974,393],{"class":82},[54,976,977],{"class":74},"$CDN_HOST",[54,979,399],{"class":82},[54,981,402],{"class":74},[54,983,399],{"class":82},[54,985,757],{"class":74},[54,987,405],{"class":82},[54,989,991],{"class":56,"line":990},62,[54,992,645],{"class":185},[54,994,996,998,1000,1002,1004,1006,1008],{"class":56,"line":995},63,[54,997,970],{"class":74},[54,999,79],{"class":78},[54,1001,393],{"class":82},[54,1003,977],{"class":74},[54,1005,399],{"class":82},[54,1007,757],{"class":74},[54,1009,405],{"class":82},[54,1011,1013],{"class":56,"line":1012},64,[54,1014,589],{"class":185},[54,1016,1018],{"class":56,"line":1017},65,[54,1019,68],{"emptyLinePlaceholder":67},[54,1021,1023,1025,1027,1029,1032,1034,1037,1040,1042],{"class":56,"line":1022},66,[54,1024,499],{"class":185},[54,1026,502],{"class":199},[54,1028,341],{"class":82},[54,1030,1031],{"class":74},"$UPLOAD_HTTP_CODE",[54,1033,341],{"class":82},[54,1035,1036],{"class":78}," !=",[54,1038,1039],{"class":82}," \"200\"",[54,1041,518],{"class":199},[54,1043,430],{"class":185},[54,1045,1047,1050,1053,1055],{"class":56,"line":1046},67,[54,1048,1049],{"class":189},"        echo",[54,1051,1052],{"class":82}," \"上传失败: ",[54,1054,925],{"class":74},[54,1056,405],{"class":82},[54,1058,1060],{"class":56,"line":1059},68,[54,1061,1062],{"class":185},"        continue\n",[54,1064,1066],{"class":56,"line":1065},69,[54,1067,589],{"class":185},[54,1069,1071],{"class":56,"line":1070},70,[54,1072,68],{"emptyLinePlaceholder":67},[54,1074,1076,1078,1080,1082,1085,1087,1089,1091,1093],{"class":56,"line":1075},71,[54,1077,499],{"class":185},[54,1079,502],{"class":199},[54,1081,341],{"class":82},[54,1083,1084],{"class":74},"$markdown",[54,1086,341],{"class":82},[54,1088,512],{"class":78},[54,1090,515],{"class":373},[54,1092,518],{"class":199},[54,1094,430],{"class":185},[54,1096,1098,1100,1103,1105,1108,1110],{"class":56,"line":1097},72,[54,1099,1049],{"class":189},[54,1101,1102],{"class":82}," \"![](",[54,1104,444],{"class":443},[54,1106,1107],{"class":74},"CDN_URL",[54,1109,455],{"class":443},[54,1111,690],{"class":82},[54,1113,1115],{"class":56,"line":1114},73,[54,1116,645],{"class":185},[54,1118,1120,1122,1124,1126,1128,1130],{"class":56,"line":1119},74,[54,1121,1049],{"class":189},[54,1123,483],{"class":82},[54,1125,444],{"class":443},[54,1127,1107],{"class":74},[54,1129,455],{"class":443},[54,1131,405],{"class":82},[54,1133,1135],{"class":56,"line":1134},75,[54,1136,589],{"class":185},[54,1138,1140],{"class":56,"line":1139},76,[54,1141,355],{"class":185},[10,1143,1144,1145,18,1148,23,1151,1154,1155,1157,1158,23,1160,1162,1163,23,1165,1168],{},"这一次使用 Cloudflare Workers 构建的 Restful API 很有意思，使用了 ",[51,1146,1147],{},"GET",[51,1149,1150],{},"PUT",[51,1152,1153],{},"DELETE"," 三个请求类型。",[51,1156,1147],{}," 请求很常见，是用来获取图片的，",[51,1159,1150],{},[51,1161,1153],{}," 在 web 开发就不如 ",[51,1164,1147],{},[51,1166,1167],{},"POST"," 常见了，这一次也是让我体会到了这两个 http verb 在 Storage Bucket 操作中是有多么形象了。",[1170,1171,1172,1196],"ul",{},[1173,1174,1175,1177,1178,1181,1182,1185,1186,1189,1190,1192,1193,1195],"li",{},[51,1176,1150],{}," - 从直观上来讲，就是将某个文件放到目标位置",[1179,1180],"br",{},"打个比方，我向 ",[51,1183,1184],{},"https://cdn.example.com/img/avatar.webp"," 打了一个请求，并带上了要上传的文件，那就意味着我将这个文件放到了 Storage Bucket 的 ",[51,1187,1188],{},"/img/avatar.webp"," 这个位置，所以我在上传后，应该就能用 ",[51,1191,1147],{}," 请求我刚才 ",[51,1194,1150],{}," 的那个 URL 获取我刚才上传的东西。如果那个路径存在文件，那么默认行为是直接覆盖。",[1173,1197,1198,1200,1201,1203,1204,1206],{},[51,1199,1153],{}," - 删除目标路径的文件",[1179,1202],{},"和 ",[51,1205,1150],{}," 一样，我在请求对应 URL 后，Storage Bucket 中对应 URL 路径的资源应该被删除。",[10,1208,1209,23,1211,1213,1214,1216],{},[51,1210,1150],{},[51,1212,1153],{}," 这两个 Http Verb 让我们更像是在对一个真实的文件系统进行操作，而非那种传统的使用 ",[51,1215,1167],{}," 上传的图床那样，我们并不通过 POST 请求上传一个文件，然后获取资源最终被放置位置的 URL —— 我们自己决定资源被存放的位置。",[10,1218,1219],{},"在这个 Shell 脚本中，引入了四个可选选项",[44,1221,1223],{"className":46,"code":1222,"language":48,"meta":49,"style":49},"    m|markdown) markdown=true ;;\n    w|webp) webp=true ;;\n    f|force) force=true ;;\n    k|keep) keep=true ;;\n    p|path) UPLOAD_PATH=$OPTARG ;;\n",[51,1224,1225,1244,1263,1282,1301],{"__ignoreMap":49},[54,1226,1227,1230,1232,1234,1236,1238,1240,1242],{"class":56,"line":57},[54,1228,1229],{"class":108},"    m",[54,1231,225],{"class":199},[54,1233,150],{"class":108},[54,1235,230],{"class":199},[54,1237,150],{"class":74},[54,1239,79],{"class":78},[54,1241,237],{"class":82},[54,1243,240],{"class":199},[54,1245,1246,1249,1251,1253,1255,1257,1259,1261],{"class":56,"line":64},[54,1247,1248],{"class":108},"    w",[54,1250,225],{"class":199},[54,1252,139],{"class":108},[54,1254,230],{"class":199},[54,1256,139],{"class":74},[54,1258,79],{"class":78},[54,1260,237],{"class":82},[54,1262,240],{"class":199},[54,1264,1265,1268,1270,1272,1274,1276,1278,1280],{"class":56,"line":71},[54,1266,1267],{"class":108},"    f",[54,1269,225],{"class":199},[54,1271,160],{"class":108},[54,1273,230],{"class":199},[54,1275,160],{"class":74},[54,1277,79],{"class":78},[54,1279,237],{"class":82},[54,1281,240],{"class":199},[54,1283,1284,1287,1289,1291,1293,1295,1297,1299],{"class":56,"line":86},[54,1285,1286],{"class":108},"    k",[54,1288,225],{"class":199},[54,1290,170],{"class":108},[54,1292,230],{"class":199},[54,1294,170],{"class":74},[54,1296,79],{"class":78},[54,1298,237],{"class":82},[54,1300,240],{"class":199},[54,1302,1303,1306,1308,1310,1312,1314,1316,1318],{"class":56,"line":97},[54,1304,1305],{"class":108},"    p",[54,1307,225],{"class":199},[54,1309,311],{"class":108},[54,1311,230],{"class":199},[54,1313,100],{"class":74},[54,1315,79],{"class":78},[54,1317,320],{"class":74},[54,1319,240],{"class":199},[1170,1321,1322,1329,1332,1335,1338],{},[1173,1323,1324,1325,1328],{},"markdown 选项决定返回值是否以 ",[51,1326,1327],{},"![]()"," 这种 URL 格式返回",[1173,1330,1331],{},"webp 决定上传过程中是否将图片转为 webp 后再上传",[1173,1333,1334],{},"force 决定如果遇到文件路径冲突，是否强制覆盖云端的文件",[1173,1336,1337],{},"keep 决定是否保留文件原有的文件名进行上传",[1173,1339,1340],{},"path 决定文件具体被存放的路径（或者使用默认的路径）",[10,1342,1343,1345,1346,1348],{},[51,1344,75],{}," 是图床用于上传的地址，",[51,1347,89],{}," 是图床用于被方可访问的地址。",[10,1350,1351],{},"由于急着用，也没考虑协程的处理方式，等等看后期有没有时间用 Python 重写吧。",[30,1353,1354],{"id":1354},"博客图床迁移脚本",[10,1356,1357],{},"因为只用一次，所以也没使用协程或者多线程的方式去上传文件——毕竟图片不多，也就两三百张。",[44,1359,1363],{"className":1360,"code":1361,"language":1362,"meta":49,"style":49},"language-python shiki shiki-themes one-light one-dark-pro","import os\nimport re\nimport requests\n\n# 哪些后缀的文件需要检测是否存在老图床的 URL 并进行迁移？\nfile_extension = [\n    '.md',\n    '.yml',\n    '.html'\n]\n\npic_urls = []\n\n_files = []\n\n# 用于匹配老图床的正则表达式，这里是按照 lsky pro 的格式编写的\npattern = r'https://cdn.example.com/\\d{4}/\\d{2}/\\d{2}/[a-z0-9]{13}\\.[a-z]{3,4}'\n\n# 图片的上传部分，需要先从原 url 中下载图片，在上传到新图床中，如果需要的话可以在中途转换为 webp 格式\ndef upload(url):\n    \"\"\"\n    此处的返回值应该是新的 url\n    \"\"\"\n\n# 遍历目标后缀文件名的文件，如果存在老图床的 url，则将 url 加入到 pic_urls 列表中，并将这个文件的文件名（相对路径）添加到 _files 列表中\nfor root, dirs, files in os.walk(\".\"):\n    for file in files:\n        if file.endswith(tuple(file_extension)):\n            file_name = os.path.join(root, file)\n            with open(file_name, 'r') as f:\n                content = f.read()\n            urls = re.findall(pattern, content)\n            if urls:\n                pic_urls.extend(urls)\n                _files.append(file_name)\n\n# 先转为集合，再转回列表，进行去重\npic_urls = list(set(pic_urls))\nprint(\"共找到图片：\", len(pic_urls))\n\nurl_dict = {}\n\n# 将列表中的图片进行上传，每张图片最多尝试三次上传，如果三次都失败，则保留原连接\nfor i,u in enumerate(pci_urls, start=1):\n    for t in range(1,4):\n        try:\n            new_u = upload(u)\n            continue\n        except:\n            if t == 3:\n                new_u = u\n                print(f\"{u} 无法上传：{e}\")\n    url_dict[u] = new_u\n    print(f\"{i} / {len(pic_urls)}\")\n\n# 对 _files 列表中的文件一一完成替换\nfor file in _files:\n    with open(file, 'r') as f:\n        content = f.read()\n    for k, v in url_dict.items():\n        content = content.replace(k, v)\n    with open(file, 'w') as f:\n        f.write(content)\n    print(\"完成替换：\", file)\n","python",[51,1364,1365,1370,1375,1380,1384,1389,1394,1399,1404,1409,1414,1418,1423,1427,1432,1436,1441,1446,1450,1455,1460,1465,1470,1474,1478,1483,1488,1493,1498,1503,1508,1513,1518,1523,1528,1533,1537,1542,1547,1552,1556,1561,1565,1570,1575,1580,1585,1590,1595,1600,1605,1610,1615,1620,1625,1629,1634,1639,1644,1649,1654,1659,1664,1669],{"__ignoreMap":49},[54,1366,1367],{"class":56,"line":57},[54,1368,1369],{},"import os\n",[54,1371,1372],{"class":56,"line":64},[54,1373,1374],{},"import re\n",[54,1376,1377],{"class":56,"line":71},[54,1378,1379],{},"import requests\n",[54,1381,1382],{"class":56,"line":86},[54,1383,68],{"emptyLinePlaceholder":67},[54,1385,1386],{"class":56,"line":97},[54,1387,1388],{},"# 哪些后缀的文件需要检测是否存在老图床的 URL 并进行迁移？\n",[54,1390,1391],{"class":56,"line":115},[54,1392,1393],{},"file_extension = [\n",[54,1395,1396],{"class":56,"line":120},[54,1397,1398],{},"    '.md',\n",[54,1400,1401],{"class":56,"line":131},[54,1402,1403],{},"    '.yml',\n",[54,1405,1406],{"class":56,"line":136},[54,1407,1408],{},"    '.html'\n",[54,1410,1411],{"class":56,"line":147},[54,1412,1413],{},"]\n",[54,1415,1416],{"class":56,"line":157},[54,1417,68],{"emptyLinePlaceholder":67},[54,1419,1420],{"class":56,"line":167},[54,1421,1422],{},"pic_urls = []\n",[54,1424,1425],{"class":56,"line":177},[54,1426,68],{"emptyLinePlaceholder":67},[54,1428,1429],{"class":56,"line":182},[54,1430,1431],{},"_files = []\n",[54,1433,1434],{"class":56,"line":206},[54,1435,68],{"emptyLinePlaceholder":67},[54,1437,1438],{"class":56,"line":218},[54,1439,1440],{},"# 用于匹配老图床的正则表达式，这里是按照 lsky pro 的格式编写的\n",[54,1442,1443],{"class":56,"line":243},[54,1444,1445],{},"pattern = r'https://cdn.example.com/\\d{4}/\\d{2}/\\d{2}/[a-z0-9]{13}\\.[a-z]{3,4}'\n",[54,1447,1448],{"class":56,"line":263},[54,1449,68],{"emptyLinePlaceholder":67},[54,1451,1452],{"class":56,"line":283},[54,1453,1454],{},"# 图片的上传部分，需要先从原 url 中下载图片，在上传到新图床中，如果需要的话可以在中途转换为 webp 格式\n",[54,1456,1457],{"class":56,"line":303},[54,1458,1459],{},"def upload(url):\n",[54,1461,1462],{"class":56,"line":325},[54,1463,1464],{},"    \"\"\"\n",[54,1466,1467],{"class":56,"line":346},[54,1468,1469],{},"    此处的返回值应该是新的 url\n",[54,1471,1472],{"class":56,"line":352},[54,1473,1464],{},[54,1475,1476],{"class":56,"line":358},[54,1477,68],{"emptyLinePlaceholder":67},[54,1479,1480],{"class":56,"line":380},[54,1481,1482],{},"# 遍历目标后缀文件名的文件，如果存在老图床的 url，则将 url 加入到 pic_urls 列表中，并将这个文件的文件名（相对路径）添加到 _files 列表中\n",[54,1484,1485],{"class":56,"line":385},[54,1486,1487],{},"for root, dirs, files in os.walk(\".\"):\n",[54,1489,1490],{"class":56,"line":408},[54,1491,1492],{},"    for file in files:\n",[54,1494,1495],{"class":56,"line":433},[54,1496,1497],{},"        if file.endswith(tuple(file_extension)):\n",[54,1499,1500],{"class":56,"line":460},[54,1501,1502],{},"            file_name = os.path.join(root, file)\n",[54,1504,1505],{"class":56,"line":466},[54,1506,1507],{},"            with open(file_name, 'r') as f:\n",[54,1509,1510],{"class":56,"line":471},[54,1511,1512],{},"                content = f.read()\n",[54,1514,1515],{"class":56,"line":496},[54,1516,1517],{},"            urls = re.findall(pattern, content)\n",[54,1519,1520],{"class":56,"line":523},[54,1521,1522],{},"            if urls:\n",[54,1524,1525],{"class":56,"line":562},[54,1526,1527],{},"                pic_urls.extend(urls)\n",[54,1529,1530],{"class":56,"line":586},[54,1531,1532],{},"                _files.append(file_name)\n",[54,1534,1535],{"class":56,"line":592},[54,1536,68],{"emptyLinePlaceholder":67},[54,1538,1539],{"class":56,"line":597},[54,1540,1541],{},"# 先转为集合，再转回列表，进行去重\n",[54,1543,1544],{"class":56,"line":619},[54,1545,1546],{},"pic_urls = list(set(pic_urls))\n",[54,1548,1549],{"class":56,"line":642},[54,1550,1551],{},"print(\"共找到图片：\", len(pic_urls))\n",[54,1553,1554],{"class":56,"line":648},[54,1555,68],{"emptyLinePlaceholder":67},[54,1557,1558],{"class":56,"line":693},[54,1559,1560],{},"url_dict = {}\n",[54,1562,1563],{"class":56,"line":698},[54,1564,68],{"emptyLinePlaceholder":67},[54,1566,1567],{"class":56,"line":703},[54,1568,1569],{},"# 将列表中的图片进行上传，每张图片最多尝试三次上传，如果三次都失败，则保留原连接\n",[54,1571,1572],{"class":56,"line":725},[54,1573,1574],{},"for i,u in enumerate(pci_urls, start=1):\n",[54,1576,1577],{"class":56,"line":765},[54,1578,1579],{},"    for t in range(1,4):\n",[54,1581,1582],{"class":56,"line":776},[54,1583,1584],{},"        try:\n",[54,1586,1587],{"class":56,"line":791},[54,1588,1589],{},"            new_u = upload(u)\n",[54,1591,1592],{"class":56,"line":807},[54,1593,1594],{},"            continue\n",[54,1596,1597],{"class":56,"line":817},[54,1598,1599],{},"        except:\n",[54,1601,1602],{"class":56,"line":823},[54,1603,1604],{},"            if t == 3:\n",[54,1606,1607],{"class":56,"line":828},[54,1608,1609],{},"                new_u = u\n",[54,1611,1612],{"class":56,"line":861},[54,1613,1614],{},"                print(f\"{u} 无法上传：{e}\")\n",[54,1616,1617],{"class":56,"line":870},[54,1618,1619],{},"    url_dict[u] = new_u\n",[54,1621,1622],{"class":56,"line":883},[54,1623,1624],{},"    print(f\"{i} / {len(pic_urls)}\")\n",[54,1626,1627],{"class":56,"line":896},[54,1628,68],{"emptyLinePlaceholder":67},[54,1630,1631],{"class":56,"line":901},[54,1632,1633],{},"# 对 _files 列表中的文件一一完成替换\n",[54,1635,1636],{"class":56,"line":906},[54,1637,1638],{},"for file in _files:\n",[54,1640,1641],{"class":56,"line":911},[54,1642,1643],{},"    with open(file, 'r') as f:\n",[54,1645,1646],{"class":56,"line":941},[54,1647,1648],{},"        content = f.read()\n",[54,1650,1651],{"class":56,"line":947},[54,1652,1653],{},"    for k, v in url_dict.items():\n",[54,1655,1656],{"class":56,"line":967},[54,1657,1658],{},"        content = content.replace(k, v)\n",[54,1660,1661],{"class":56,"line":990},[54,1662,1663],{},"    with open(file, 'w') as f:\n",[54,1665,1666],{"class":56,"line":995},[54,1667,1668],{},"        f.write(content)\n",[54,1670,1671],{"class":56,"line":1012},[54,1672,1673],{},"    print(\"完成替换：\", file)\n",[1675,1676,1677],"style",{},"html pre.shiki code .sW2Sy, html code.shiki .sW2Sy{--shiki-default:#A0A1A7;--shiki-default-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic}html pre.shiki code .sJa8x, html code.shiki .sJa8x{--shiki-default:#E45649;--shiki-dark:#E06C75}html pre.shiki code .sknuh, html code.shiki .sknuh{--shiki-default:#383A42;--shiki-dark:#56B6C2}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .sLKXg, html code.shiki .sLKXg{--shiki-default:#A626A4;--shiki-dark:#C678DD}html pre.shiki code .s_Sar, html code.shiki .s_Sar{--shiki-default:#0184BC;--shiki-dark:#56B6C2}html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html pre.shiki code .sDaw7, html code.shiki .sDaw7{--shiki-default:#0184BC;--shiki-dark:#E06C75}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}html pre.shiki code .sTIpt, html code.shiki .sTIpt{--shiki-default:#E45649;--shiki-dark:#98C379}html pre.shiki code .s8iYz, html code.shiki .s8iYz{--shiki-default:#383A42;--shiki-default-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":49,"searchDepth":64,"depth":64,"links":1679},[1680,1681],{"id":32,"depth":64,"text":32},{"id":1354,"depth":64,"text":1354},"2024-08-20 23:12:30","前面三篇小记分别讲述了图床的整体架构、用 Workers 构建 Restful API 和 自动更新部署 SSL 证书，这一篇c处理由此带来的图片上传问题，主要是要为 Typora 编写自动上传脚本，并为博客原有的图片进行迁移。","md",{},"/2024/08/20/picbed-upload-script-and-image-migration","---\ntitle: 自建图床小记四——上传脚本编写与图片迁移\ndate: 2024-08-20 23:12:30\nsticky:\ntags:\n- Python\n- 图床\n- Linux\n- Network\n- Shell Script\n---\n\n前面三篇小记分别讲述了[图床的整体架构](/2024/08/12/new-picbed-based-on-cloudflare-and-upyun/)、[用 Workers 构建 Restful API](/2024/08/13/build-restful-api-for-cloudflare-r2-with-cloudflare-workers/) 和 [自动更新部署 SSL 证书](/2024/08/14/auto-renew-ssl-certificate-and-deploy-to-upyun-with-github-action/)，这一篇c处理由此带来的图片上传问题，主要是要为 Typora 编写自动上传脚本，并为博客原有的图片进行迁移。\n\n## 自动上传脚本\n\n主要还是给 Typora 用，实现这种效果\n\n![Typora 自动上传](https://static.031130.xyz/uploads/2024/08/12/62f3b881e3c4c.gif)\n\n```bash\n#!/bin/bash\n\nHOST=\"upload.example.com\"\nCDN_HOST=\"cdn.example.com\"\nUPLOAD_PATH=\"uploads/$(date +%Y/%m/%d)\"\n\nAUTH_TOKEN=\"1145141919810\"\n\nwebp=false\nmarkdown=false\nforce=false\nkeep=false\n\nwhile getopts \":mwfkp:\" opt; do\n    case $opt in\n        m|markdown) markdown=true ;;\n        w|webp) webp=true ;;\n        f|force) force=true ;;\n        k|keep) keep=true ;;\n        p|path) UPLOAD_PATH=$OPTARG ;;\n        \\?) echo \"Invalid option: -$OPTARG\" ;;\n    esac\ndone\nshift $((OPTIND - 1))\n\nUPLOAD_URL=\"https://$HOST/$UPLOAD_PATH\"\nif [[ \"$UPLOAD_URL\" == */ ]]; then\n    UPLOAD_URL=\"${UPLOAD_URL%?}\"\nfi\n\nfor image in \"$@\"; do\n    if [ \"$webp\" = true ]; then\n        cwebp -quiet \"$image\" -o \"${image%.*}.webp\"\n        image=\"${image%.*}.webp\"\n    fi\n\n    if [ \"$keep\" = true ]; then\n        FILENAME=$(basename \"$image\")\n    else\n        FILENAME=\"$(md5sum $image | cut -c 1-13).$(basename $image | cut -d. -f2)\"\n    fi\n\n    if [ \"$force\" = true ]; then\n        UPLOAD_RESPONSE=$(curl -s -X PUT \"${UPLOAD_URL}/$FILENAME\" \\\n            -w \"%{http_code}\" \\\n            --data-binary @\"$image\" \\\n            -H \"X-Custom-Auth-Key: $AUTH_TOKEN\" \\\n            -H \"Overwrite: true\" \\\n        )\n    else\n        UPLOAD_RESPONSE=$(curl -s -X PUT \"${UPLOAD_URL}/$FILENAME\" \\\n            -w \"%{http_code}\" \\\n            --data-binary @\"$image\" \\\n            -H \"X-Custom-Auth-Key: $AUTH_TOKEN\" \\\n        )\n    fi\n\n    UPLOAD_HTTP_CODE=$(echo \"$UPLOAD_RESPONSE\" | tail -n1)\n    \n    if [ -n \"$UPLOAD_PATH\" ]; then\n        CDN_URL=\"https://$CDN_HOST/$UPLOAD_PATH/$FILENAME\"\n    else\n        CDN_URL=\"https://$CDN_HOST/$FILENAME\"\n    fi\n\n    if [ \"$UPLOAD_HTTP_CODE\" != \"200\" ]; then\n        echo \"上传失败: $UPLOAD_RESPONSE\"\n        continue\n    fi\n\n    if [ \"$markdown\" = true ]; then\n        echo \"![](${CDN_URL})\"\n    else\n        echo \"${CDN_URL}\"\n    fi\ndone\n```\n\n这一次使用 Cloudflare Workers 构建的 Restful API 很有意思，使用了 `GET`、`PUT` 和 `DELETE` 三个请求类型。`GET` 请求很常见，是用来获取图片的，`PUT` 和 `DELETE` 在 web 开发就不如 `GET` 和 `POST` 常见了，这一次也是让我体会到了这两个 http verb 在 Storage Bucket 操作中是有多么形象了。\n\n- `PUT` - 从直观上来讲，就是将某个文件放到目标位置\n\n  打个比方，我向 `https://cdn.example.com/img/avatar.webp` 打了一个请求，并带上了要上传的文件，那就意味着我将这个文件放到了 Storage Bucket 的 `/img/avatar.webp` 这个位置，所以我在上传后，应该就能用 `GET` 请求我刚才 `PUT` 的那个 URL 获取我刚才上传的东西。如果那个路径存在文件，那么默认行为是直接覆盖。\n\n- `DELETE` - 删除目标路径的文件\n\n  和 `PUT` 一样，我在请求对应 URL 后，Storage Bucket 中对应 URL 路径的资源应该被删除。\n\n`PUT` 和 `DELETE` 这两个 Http Verb 让我们更像是在对一个真实的文件系统进行操作，而非那种传统的使用 `POST` 上传的图床那样，我们并不通过 POST 请求上传一个文件，然后获取资源最终被放置位置的 URL —— 我们自己决定资源被存放的位置。\n\n在这个 Shell 脚本中，引入了四个可选选项\n\n```bash\n    m|markdown) markdown=true ;;\n    w|webp) webp=true ;;\n    f|force) force=true ;;\n    k|keep) keep=true ;;\n    p|path) UPLOAD_PATH=$OPTARG ;;\n```\n\n- markdown 选项决定返回值是否以 `![]()` 这种 URL 格式返回\n- webp 决定上传过程中是否将图片转为 webp 后再上传\n- force 决定如果遇到文件路径冲突，是否强制覆盖云端的文件\n- keep 决定是否保留文件原有的文件名进行上传\n- path 决定文件具体被存放的路径（或者使用默认的路径）\n\n`HOST` 是图床用于上传的地址，`CDN_HOST` 是图床用于被方可访问的地址。\n\n由于急着用，也没考虑协程的处理方式，等等看后期有没有时间用 Python 重写吧。\n\n## 博客图床迁移脚本\n\n因为只用一次，所以也没使用协程或者多线程的方式去上传文件——毕竟图片不多，也就两三百张。\n\n```python\nimport os\nimport re\nimport requests\n\n# 哪些后缀的文件需要检测是否存在老图床的 URL 并进行迁移？\nfile_extension = [\n    '.md',\n    '.yml',\n    '.html'\n]\n\npic_urls = []\n\n_files = []\n\n# 用于匹配老图床的正则表达式，这里是按照 lsky pro 的格式编写的\npattern = r'https://cdn.example.com/\\d{4}/\\d{2}/\\d{2}/[a-z0-9]{13}\\.[a-z]{3,4}'\n\n# 图片的上传部分，需要先从原 url 中下载图片，在上传到新图床中，如果需要的话可以在中途转换为 webp 格式\ndef upload(url):\n    \"\"\"\n    此处的返回值应该是新的 url\n    \"\"\"\n\n# 遍历目标后缀文件名的文件，如果存在老图床的 url，则将 url 加入到 pic_urls 列表中，并将这个文件的文件名（相对路径）添加到 _files 列表中\nfor root, dirs, files in os.walk(\".\"):\n    for file in files:\n        if file.endswith(tuple(file_extension)):\n            file_name = os.path.join(root, file)\n            with open(file_name, 'r') as f:\n                content = f.read()\n            urls = re.findall(pattern, content)\n            if urls:\n                pic_urls.extend(urls)\n                _files.append(file_name)\n\n# 先转为集合，再转回列表，进行去重\npic_urls = list(set(pic_urls))\nprint(\"共找到图片：\", len(pic_urls))\n\nurl_dict = {}\n\n# 将列表中的图片进行上传，每张图片最多尝试三次上传，如果三次都失败，则保留原连接\nfor i,u in enumerate(pci_urls, start=1):\n    for t in range(1,4):\n        try:\n            new_u = upload(u)\n            continue\n        except:\n            if t == 3:\n                new_u = u\n                print(f\"{u} 无法上传：{e}\")\n\turl_dict[u] = new_u\n    print(f\"{i} / {len(pic_urls)}\")\n\n# 对 _files 列表中的文件一一完成替换\nfor file in _files:\n    with open(file, 'r') as f:\n        content = f.read()\n    for k, v in url_dict.items():\n        content = content.replace(k, v)\n    with open(file, 'w') as f:\n        f.write(content)\n    print(\"完成替换：\", file)\n```\n\n",{"title":5,"description":1683},"posts/picbed-upload-script-and-image-migration",false,[1692,1693,1694,1695,1696],"Python","图床","Linux","Network","Shell Script","K9WKDGKf3NAQCn2bwvkF0a2btsdJOE2Z3fFZsZecplo",[1699,1704],{"title":1700,"path":1701,"stem":1702,"date":1703,"children":-1},"自建图床小记五——费用","/2024/08/21/self-host-cdn-expense","posts/self-host-cdn-expense","2024-08-21 00:05:15",{"title":1705,"path":1706,"stem":1707,"date":1708,"children":-1},"自建图床小记三—— SSL 证书的自动更新与部署","/2024/08/14/auto-renew-ssl-certificate-and-deploy-to-upyun-with-github-action","posts/auto-renew-ssl-certificate-and-deploy-to-upyun-with-github-action","2024-08-14 10:35:18",1761897609920]