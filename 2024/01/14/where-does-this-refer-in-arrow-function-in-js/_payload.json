[{"data":1,"prerenderedAt":503},["ShallowReactive",2],{"post-2024-01-14-where-does-this-refer-in-arrow-function-in-js":3,"surround-2024-01-14-where-does-this-refer-in-arrow-function-in-js":492,"randomIndex/2024/01/14/where-does-this-refer-in-arrow-function-in-js/":276},{"id":4,"title":5,"body":6,"date":480,"description":481,"extension":482,"meta":483,"navigation":167,"path":484,"rawbody":485,"seo":486,"stem":487,"sticky":488,"tags":489,"__hash__":491},"posts/posts/where-does-this-refer-in-arrow-function-in-js.md","在 JavaScript 中，箭头函数中的 this 指针到底指向哪里？",{"type":7,"value":8,"toc":477},"minimark",[9,18,366,369,376,383,394,397,400,411,418,434,441,447,451,459,466,473],[10,11,12,13,17],"p",{},"这学期期末复习的时候，学校里负责上 JavaScript 的老师给我们提出了一个问题。下面这段代码中，",[14,15,16],"code",{},"a.u2()"," 在 ES Module 下执行会抛出 TypeError 的异常，在 CommonJS 下运行则会输出 undefined，而 B 这个类的 u2 函数则能够在对象实例化以后正常运行。",[19,20,25],"pre",{"className":21,"code":22,"language":23,"meta":24,"style":24},"language-javascript shiki shiki-themes one-light one-dark-pro","const a = {\n    x: 3,\n    u1: function () {\n        console.log(this.x)\n    },\n    u2: () => {\n        console.log(this.x)\n    }\n}\n\nclass b {\n    x = 3\n\n    u1 = function () {\n        console.log(this.x)\n    }\n\n    u2 = () => {\n        console.log(this.x)\n    }\n}\n\na.u1()\n// 3\na.u2()\n// undefined\n\nnew b().u1()\n// 3\nnew b().u2()\n// 3\n","javascript","",[14,26,27,48,66,81,109,115,131,150,156,162,169,181,192,197,208,227,232,237,250,269,274,279,284,298,305,317,323,328,343,348,361],{"__ignoreMap":24},[28,29,32,36,40,44],"span",{"class":30,"line":31},"line",1,[28,33,35],{"class":34},"sLKXg","const",[28,37,39],{"class":38},"sNmU0"," a",[28,41,43],{"class":42},"s_Sar"," =",[28,45,47],{"class":46},"s5ixo"," {\n",[28,49,51,55,59,63],{"class":30,"line":50},2,[28,52,54],{"class":53},"sJa8x","    x",[28,56,58],{"class":57},"st7oF",":",[28,60,62],{"class":61},"sAGMh"," 3",[28,64,65],{"class":46},",\n",[28,67,69,73,75,78],{"class":30,"line":68},3,[28,70,72],{"class":71},"sAdtL","    u1",[28,74,58],{"class":57},[28,76,77],{"class":34}," function",[28,79,80],{"class":46}," () {\n",[28,82,84,88,91,94,97,101,103,106],{"class":30,"line":83},4,[28,85,87],{"class":86},"s7GmK","        console",[28,89,90],{"class":46},".",[28,92,93],{"class":71},"log",[28,95,96],{"class":46},"(",[28,98,100],{"class":99},"s2QsP","this",[28,102,90],{"class":46},[28,104,105],{"class":53},"x",[28,107,108],{"class":46},")\n",[28,110,112],{"class":30,"line":111},5,[28,113,114],{"class":46},"    },\n",[28,116,118,121,123,126,129],{"class":30,"line":117},6,[28,119,120],{"class":71},"    u2",[28,122,58],{"class":57},[28,124,125],{"class":46}," () ",[28,127,128],{"class":34},"=>",[28,130,47],{"class":46},[28,132,134,136,138,140,142,144,146,148],{"class":30,"line":133},7,[28,135,87],{"class":86},[28,137,90],{"class":46},[28,139,93],{"class":71},[28,141,96],{"class":46},[28,143,100],{"class":99},[28,145,90],{"class":46},[28,147,105],{"class":53},[28,149,108],{"class":46},[28,151,153],{"class":30,"line":152},8,[28,154,155],{"class":46},"    }\n",[28,157,159],{"class":30,"line":158},9,[28,160,161],{"class":46},"}\n",[28,163,165],{"class":30,"line":164},10,[28,166,168],{"emptyLinePlaceholder":167},true,"\n",[28,170,172,175,179],{"class":30,"line":171},11,[28,173,174],{"class":34},"class",[28,176,178],{"class":177},"sC09Y"," b",[28,180,47],{"class":46},[28,182,184,187,189],{"class":30,"line":183},12,[28,185,54],{"class":186},"sz0mV",[28,188,43],{"class":42},[28,190,191],{"class":61}," 3\n",[28,193,195],{"class":30,"line":194},13,[28,196,168],{"emptyLinePlaceholder":167},[28,198,200,202,204,206],{"class":30,"line":199},14,[28,201,72],{"class":71},[28,203,43],{"class":42},[28,205,77],{"class":34},[28,207,80],{"class":46},[28,209,211,213,215,217,219,221,223,225],{"class":30,"line":210},15,[28,212,87],{"class":86},[28,214,90],{"class":46},[28,216,93],{"class":71},[28,218,96],{"class":46},[28,220,100],{"class":99},[28,222,90],{"class":46},[28,224,105],{"class":53},[28,226,108],{"class":46},[28,228,230],{"class":30,"line":229},16,[28,231,155],{"class":46},[28,233,235],{"class":30,"line":234},17,[28,236,168],{"emptyLinePlaceholder":167},[28,238,240,242,244,246,248],{"class":30,"line":239},18,[28,241,120],{"class":71},[28,243,43],{"class":42},[28,245,125],{"class":46},[28,247,128],{"class":34},[28,249,47],{"class":46},[28,251,253,255,257,259,261,263,265,267],{"class":30,"line":252},19,[28,254,87],{"class":86},[28,256,90],{"class":46},[28,258,93],{"class":71},[28,260,96],{"class":46},[28,262,100],{"class":99},[28,264,90],{"class":46},[28,266,105],{"class":53},[28,268,108],{"class":46},[28,270,272],{"class":30,"line":271},20,[28,273,155],{"class":46},[28,275,277],{"class":30,"line":276},21,[28,278,161],{"class":46},[28,280,282],{"class":30,"line":281},22,[28,283,168],{"emptyLinePlaceholder":167},[28,285,287,290,292,295],{"class":30,"line":286},23,[28,288,289],{"class":86},"a",[28,291,90],{"class":46},[28,293,294],{"class":71},"u1",[28,296,297],{"class":46},"()\n",[28,299,301],{"class":30,"line":300},24,[28,302,304],{"class":303},"sW2Sy","// 3\n",[28,306,308,310,312,315],{"class":30,"line":307},25,[28,309,289],{"class":86},[28,311,90],{"class":46},[28,313,314],{"class":71},"u2",[28,316,297],{"class":46},[28,318,320],{"class":30,"line":319},26,[28,321,322],{"class":303},"// undefined\n",[28,324,326],{"class":30,"line":325},27,[28,327,168],{"emptyLinePlaceholder":167},[28,329,331,334,336,339,341],{"class":30,"line":330},28,[28,332,333],{"class":34},"new",[28,335,178],{"class":71},[28,337,338],{"class":46},"().",[28,340,294],{"class":71},[28,342,297],{"class":46},[28,344,346],{"class":30,"line":345},29,[28,347,304],{"class":303},[28,349,351,353,355,357,359],{"class":30,"line":350},30,[28,352,333],{"class":34},[28,354,178],{"class":71},[28,356,338],{"class":46},[28,358,314],{"class":71},[28,360,297],{"class":46},[28,362,364],{"class":30,"line":363},31,[28,365,304],{"class":303},[10,367,368],{},"这个问题涉及到 JavaScript 中箭头函数的作用域以及 this 指向。",[10,370,371,372,375],{},"**在 JS 中使用 function 关键字定义的普通函数中，this 指针遵循一个规则：谁调用指向谁。**即 ",[14,373,374],{},"obj.func()"," 这种调用情况下，func 方法内部的this指向obj；如果没有调用者，则严格模式下 this 为 undefined，非严格模式下 this 指向window(浏览器)或者global(node环境)。",[10,377,378,379],{},"而箭头函数比较特殊，",[380,381,382],"strong",{},"箭头函数的 this 在定义时就被绑定，绑定的是定义时所在作用域中的 this。",[10,384,385,386,389,390,393],{},"在老师给的示例代码中，第一行定义了 a 这个对象字面量，而",[380,387,388],{},"定义对象字面量不会创建新的作用域","，因此 a 中定义的 u2 的 this 指向的是全局对象。因此在 Es Module 默认启用 strict mode 的情况下，全局对象的 this 指向 undefined，进而导致 a 的 u2 内 this 也指向 undefined，this.x 就抛了 TypeError；而在 ",[380,391,392],{},"CommonJS 未启用 strict mode 的情况下，全局对象的 this 指向全局对象","，因而 u2 内的 this 也指向全局对象，因此 this 存在，this.x 就不会抛 TypeError，只会报 undefined。",[10,395,396],{},"而 B 类在对象初始化阶段拥有一个新的作用域，因此箭头函数的 this 能够正确指向 B 被实例化出来的对象，因此也就能够正确读取到 this.x 的值。",[10,398,399],{},"理论上来说，我们可以给全局对象也赋一个不一样的 x 值，这样 a.u2() 就能够读取到全局对象中的 x 值，验证我们的结论。",[10,401,402,403,406,407,410],{},"在浏览器中，可以在代码的头部加一行 ",[14,404,405],{},"var x = 10"," 或者 ",[14,408,409],{},"window.x = 10","，可以看到a.u2() 顺利的输出了 10，验证了我的结论。",[10,412,413],{},[414,415],"img",{"alt":416,"src":417},"浏览器控制台调试","https://static.031130.xyz/uploads/2024/08/12/65a2e1d093b78.webp",[10,419,420,421,406,423,426,427,429,430,433],{},"但在 Node.js 中，直接使用 ",[14,422,405],{},[14,424,425],{},"global.x = 10"," 并不能达到我们想要的效果。因为Node.js 中的每个 CommonJS 模块都有其自己的模块作用域，即模块的顶层作用域不是全局作用域。在模块内部，",[14,428,100],{}," 关键字不是指向 ",[14,431,432],{},"global"," 对象，而是指向模块的导出对象。这是为了确保模块内部的作用域隔离和模块的封装性。",[10,435,436,437,440],{},"那么我们可以通过为模块的导出对象添加一个 x 属性来验证我们的结论，我们可以使用 ",[14,438,439],{},"exports.x = 10"," 来为模块的顶层作用域添加一个值为 10 的 x 属性。",[10,442,443],{},[414,444],{"alt":445,"src":446},"nodejs 环境运行","https://static.031130.xyz/uploads/2024/08/12/65a2e379ba89e.webp",[448,449,450],"h2",{"id":450},"参考文章",[10,452,453],{},[289,454,458],{"href":455,"rel":456},"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/Arrow_functions",[457],"nofollow","箭头函数表达式 - JavaScript | MDN",[10,460,461],{},[289,462,465],{"href":463,"rel":464},"https://segmentfault.com/q/1010000022948115",[457],"ES6箭头函数作用域的问题",[10,467,468],{},[289,469,472],{"href":470,"rel":471},"https://www.zhihu.com/tardis/zm/art/57204184",[457],"ES6箭头函数的this指向详解",[474,475,476],"style",{},"html pre.shiki code .sLKXg, html code.shiki .sLKXg{--shiki-default:#A626A4;--shiki-dark:#C678DD}html pre.shiki code .sNmU0, html code.shiki .sNmU0{--shiki-default:#986801;--shiki-dark:#E5C07B}html pre.shiki code .s_Sar, html code.shiki .s_Sar{--shiki-default:#0184BC;--shiki-dark:#56B6C2}html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html pre.shiki code .sJa8x, html code.shiki .sJa8x{--shiki-default:#E45649;--shiki-dark:#E06C75}html pre.shiki code .st7oF, html code.shiki .st7oF{--shiki-default:#0184BC;--shiki-dark:#ABB2BF}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .s7GmK, html code.shiki .s7GmK{--shiki-default:#383A42;--shiki-dark:#E5C07B}html pre.shiki code .s2QsP, html code.shiki .s2QsP{--shiki-default:#E45649;--shiki-dark:#E5C07B}html pre.shiki code .sC09Y, html code.shiki .sC09Y{--shiki-default:#C18401;--shiki-dark:#E5C07B}html pre.shiki code .sz0mV, html code.shiki .sz0mV{--shiki-default:#383A42;--shiki-dark:#E06C75}html pre.shiki code .sW2Sy, html code.shiki .sW2Sy{--shiki-default:#A0A1A7;--shiki-default-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":24,"searchDepth":50,"depth":50,"links":478},[479],{"id":450,"depth":50,"text":450},"2024-01-14 02:50:03","这学期期末复习的时候，学校里负责上 JavaScript 的老师给我们提出了一个问题。下面这段代码中，a.u2() 在 ES Module 下执行会抛出 TypeError 的异常，在 CommonJS 下运行则会输出 undefined，而 B 这个类的 u2 函数则能够在对象实例化以后正常运行。","md",{},"/2024/01/14/where-does-this-refer-in-arrow-function-in-js","---\ntitle: 在 JavaScript 中，箭头函数中的 this 指针到底指向哪里？\ndate: 2024-01-14 02:50:03\nsticky:\ntags:\n- JavaScript\n---\n\n这学期期末复习的时候，学校里负责上 JavaScript 的老师给我们提出了一个问题。下面这段代码中，`a.u2()` 在 ES Module 下执行会抛出 TypeError 的异常，在 CommonJS 下运行则会输出 undefined，而 B 这个类的 u2 函数则能够在对象实例化以后正常运行。\n\n```javascript\nconst a = {\n    x: 3,\n    u1: function () {\n        console.log(this.x)\n    },\n    u2: () => {\n        console.log(this.x)\n    }\n}\n\nclass b {\n    x = 3\n\n    u1 = function () {\n        console.log(this.x)\n    }\n\n    u2 = () => {\n        console.log(this.x)\n    }\n}\n\na.u1()\n// 3\na.u2()\n// undefined\n\nnew b().u1()\n// 3\nnew b().u2()\n// 3\n```\n\n这个问题涉及到 JavaScript 中箭头函数的作用域以及 this 指向。\n\n**在 JS 中使用 function 关键字定义的普通函数中，this 指针遵循一个规则：谁调用指向谁。**即 `obj.func()` 这种调用情况下，func 方法内部的this指向obj；如果没有调用者，则严格模式下 this 为 undefined，非严格模式下 this 指向window(浏览器)或者global(node环境)。\n\n而箭头函数比较特殊，**箭头函数的 this 在定义时就被绑定，绑定的是定义时所在作用域中的 this。**\n\n在老师给的示例代码中，第一行定义了 a 这个对象字面量，而**定义对象字面量不会创建新的作用域**，因此 a 中定义的 u2 的 this 指向的是全局对象。因此在 Es Module 默认启用 strict mode 的情况下，全局对象的 this 指向 undefined，进而导致 a 的 u2 内 this 也指向 undefined，this.x 就抛了 TypeError；而在 **CommonJS 未启用 strict mode 的情况下，全局对象的 this 指向全局对象**，因而 u2 内的 this 也指向全局对象，因此 this 存在，this.x 就不会抛 TypeError，只会报 undefined。\n\n而 B 类在对象初始化阶段拥有一个新的作用域，因此箭头函数的 this 能够正确指向 B 被实例化出来的对象，因此也就能够正确读取到 this.x 的值。\n\n理论上来说，我们可以给全局对象也赋一个不一样的 x 值，这样 a.u2() 就能够读取到全局对象中的 x 值，验证我们的结论。\n\n在浏览器中，可以在代码的头部加一行 `var x = 10` 或者 `window.x = 10`，可以看到a.u2() 顺利的输出了 10，验证了我的结论。\n\n![浏览器控制台调试](https://static.031130.xyz/uploads/2024/08/12/65a2e1d093b78.webp)\n\n但在 Node.js 中，直接使用 `var x = 10` 或者 `global.x = 10` 并不能达到我们想要的效果。因为Node.js 中的每个 CommonJS 模块都有其自己的模块作用域，即模块的顶层作用域不是全局作用域。在模块内部，`this` 关键字不是指向 `global` 对象，而是指向模块的导出对象。这是为了确保模块内部的作用域隔离和模块的封装性。\n\n那么我们可以通过为模块的导出对象添加一个 x 属性来验证我们的结论，我们可以使用 `exports.x = 10` 来为模块的顶层作用域添加一个值为 10 的 x 属性。\n\n![nodejs 环境运行](https://static.031130.xyz/uploads/2024/08/12/65a2e379ba89e.webp)\n\n## 参考文章\n\n[箭头函数表达式 - JavaScript | MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/Arrow_functions)\n\n[ES6箭头函数作用域的问题](https://segmentfault.com/q/1010000022948115)\n\n[ES6箭头函数的this指向详解](https://www.zhihu.com/tardis/zm/art/57204184)\n",{"title":5,"description":481},"posts/where-does-this-refer-in-arrow-function-in-js",false,[490],"JavaScript","g4-2JAS1ZuVkSQNCwlO5RsTpaPuD95eeJqunqNfeTtw",[493,498],{"title":494,"path":495,"stem":496,"date":497,"children":-1},"备份 umami 数据库，并使用 TG Bot 保存 dump 文件","/2024/02/01/backup-umami-database-and-send-it-by-tg-bot","posts/backup-umami-database-and-send-it-by-tg-bot","2024-02-01 00:00:01",{"title":499,"path":500,"stem":501,"date":502,"children":-1},"结合 Vue.js 与 php 完成的 web 期末大作业，讲讲前后端分离站点开发与部署中可能遇到的 CORS 跨域问题","/2024/01/10/cors-when-using-splited-frontend-and-backend","posts/cors-when-using-splited-frontend-and-backend","2024-01-10 23:55:36",1761836960124]