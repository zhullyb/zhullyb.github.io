[{"data":1,"prerenderedAt":229},["ShallowReactive",2],{"post-2024-04-24-generate-gantt-chart-with-python":3,"surround-2024-04-24-generate-gantt-chart-with-python":217,"randomIndex/2024/04/24/generate-gantt-chart-with-python/":228},{"id":4,"title":5,"body":6,"date":206,"description":12,"extension":207,"meta":208,"navigation":80,"path":209,"rawbody":210,"seo":211,"stem":212,"sticky":213,"tags":214,"__hash__":216},"posts/posts/generate-gantt-chart-with-python.md","使用 Python 生成甘特图(Gantt Chart)",{"type":7,"value":8,"toc":204},"minimark",[9,13,16,23,34,37,43,46,49,52,140,145,147,195,200],[10,11,12],"p",{},"在写操作系统的作业的时候有几道题给出了几个进程的相关信息，要求我们画出几种简单调度的甘特图。操作系统的作业一直是电子版，上传 pdf 即可的。我觉得手画甘特图拍照嵌入 pdf 中不太优雅，过于掉价，因此就想直接生成甘特图嵌入。",[10,14,15],{},"在谷歌搜寻了一番，我发现现在的甘特图生成网站都太现代化了，根本不是操作系统课上教的样子了。",[10,17,18],{},[19,20],"img",{"alt":21,"src":22},"现代化的甘特图","https://static.031130.xyz/uploads/2024/08/12/662888bd5a0af.webp",[10,24,25,26,33],{},"所幸我找到了 ",[27,28,32],"a",{"href":29,"rel":30},"https://github.com/gao-keyong/matplotlib-gantt/",[31],"nofollow","gao-keyong/matplotlib-gantt","，虽然只有两个 star（没事，加上我就 3 stars 了），但确实能用，README 中的样例也是我期望的样子。",[10,35,36],{},"项目中自带了一个 jupyter 的示例，算得上是非常简单易上手的了，依赖方面只要装好 matplotlib 就可以使用，不存在依赖地狱。尽管是三年前的项目，在我本机的 Python 3.11 上仍然能够正常运行。",[10,38,39],{},[19,40],{"alt":41,"src":42},"","https://static.031130.xyz/uploads/2024/08/12/66288ba6414d4.webp",[10,44,45],{},"tuple 中的第一个数字表示从当前时间开始，第二个数字表示持续时间。每一个表示 category 的 list 中可以存在多个 tuple。",[10,47,48],{},"给一些咱生成的例子。",[50,51],"hr",{},[53,54,58],"pre",{"className":55,"code":56,"language":57,"meta":41,"style":41},"language-python shiki shiki-themes one-light one-dark-pro","from gantt import *\ncategory_names = ['P1', 'P2', 'P3', 'P4', 'P5']\n\nresults = {\n    'FCFS': [[(0,2)], [(2,1)], [(3,8)], [(11,4)], [(15,5)]],\n    'SJF': [[(1,2)], [(0,1)], [(12,8)], [(3,4)], [(7,5)]],\n    'non-compreemptive priority': [[(13,2)],[(19,1)],[(0,8)],[(15,4)],[(8,5)]],\n    'RR (quantum=2)': [[(0,2)], [(2,1)],[(3,2),(9,2),(15,2),(18,2)], [(5,2),(11,2)], [(7,2),(13,2),(17,1)]]\n}\n\narrival_t = [0, 0, 0, 0]\n\ngantt(category_names, results, arrival_t).show()\n\n","python",[59,60,61,69,75,82,88,94,100,106,112,118,123,129,134],"code",{"__ignoreMap":41},[62,63,66],"span",{"class":64,"line":65},"line",1,[62,67,68],{},"from gantt import *\n",[62,70,72],{"class":64,"line":71},2,[62,73,74],{},"category_names = ['P1', 'P2', 'P3', 'P4', 'P5']\n",[62,76,78],{"class":64,"line":77},3,[62,79,81],{"emptyLinePlaceholder":80},true,"\n",[62,83,85],{"class":64,"line":84},4,[62,86,87],{},"results = {\n",[62,89,91],{"class":64,"line":90},5,[62,92,93],{},"    'FCFS': [[(0,2)], [(2,1)], [(3,8)], [(11,4)], [(15,5)]],\n",[62,95,97],{"class":64,"line":96},6,[62,98,99],{},"    'SJF': [[(1,2)], [(0,1)], [(12,8)], [(3,4)], [(7,5)]],\n",[62,101,103],{"class":64,"line":102},7,[62,104,105],{},"    'non-compreemptive priority': [[(13,2)],[(19,1)],[(0,8)],[(15,4)],[(8,5)]],\n",[62,107,109],{"class":64,"line":108},8,[62,110,111],{},"    'RR (quantum=2)': [[(0,2)], [(2,1)],[(3,2),(9,2),(15,2),(18,2)], [(5,2),(11,2)], [(7,2),(13,2),(17,1)]]\n",[62,113,115],{"class":64,"line":114},9,[62,116,117],{},"}\n",[62,119,121],{"class":64,"line":120},10,[62,122,81],{"emptyLinePlaceholder":80},[62,124,126],{"class":64,"line":125},11,[62,127,128],{},"arrival_t = [0, 0, 0, 0]\n",[62,130,132],{"class":64,"line":131},12,[62,133,81],{"emptyLinePlaceholder":80},[62,135,137],{"class":64,"line":136},13,[62,138,139],{},"gantt(category_names, results, arrival_t).show()\n",[10,141,142],{},[19,143],{"alt":41,"src":144},"https://static.031130.xyz/uploads/2024/08/12/662890f78f1da.webp",[50,146],{},[53,148,150],{"className":55,"code":149,"language":57,"meta":41,"style":41},"from gantt import *\ncategory_names = ['P1', 'P2', 'P3', 'P4', 'P5', 'P6']\n\nresults = {\n    '': [[(0,20)], [(25,10),(45,10),(75,5)], [(35,10),(55,5),(80,10)], [(60,15)], [(100,5),(115,5)],[(105,10)]],\n}\n\narrival_t = [0]\n\ngantt(category_names, results, arrival_t).show()\n\n",[59,151,152,156,161,165,169,174,178,182,187,191],{"__ignoreMap":41},[62,153,154],{"class":64,"line":65},[62,155,68],{},[62,157,158],{"class":64,"line":71},[62,159,160],{},"category_names = ['P1', 'P2', 'P3', 'P4', 'P5', 'P6']\n",[62,162,163],{"class":64,"line":77},[62,164,81],{"emptyLinePlaceholder":80},[62,166,167],{"class":64,"line":84},[62,168,87],{},[62,170,171],{"class":64,"line":90},[62,172,173],{},"    '': [[(0,20)], [(25,10),(45,10),(75,5)], [(35,10),(55,5),(80,10)], [(60,15)], [(100,5),(115,5)],[(105,10)]],\n",[62,175,176],{"class":64,"line":96},[62,177,117],{},[62,179,180],{"class":64,"line":102},[62,181,81],{"emptyLinePlaceholder":80},[62,183,184],{"class":64,"line":108},[62,185,186],{},"arrival_t = [0]\n",[62,188,189],{"class":64,"line":114},[62,190,81],{"emptyLinePlaceholder":80},[62,192,193],{"class":64,"line":120},[62,194,139],{},[10,196,197],{},[19,198],{"alt":41,"src":199},"https://static.031130.xyz/uploads/2024/08/12/662891bfa52fc.webp",[201,202,203],"style",{},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":41,"searchDepth":71,"depth":71,"links":205},[],"2024-04-24 12:02:58","md",{"index_img":144},"/2024/04/24/generate-gantt-chart-with-python","---\ntitle: 使用 Python 生成甘特图(Gantt Chart)\ndate: 2024-04-24 12:02:58\nsticky:\nindex_img: https://static.031130.xyz/uploads/2024/08/12/662890f78f1da.webp\ntags:\n- Python\n---\n\n在写操作系统的作业的时候有几道题给出了几个进程的相关信息，要求我们画出几种简单调度的甘特图。操作系统的作业一直是电子版，上传 pdf 即可的。我觉得手画甘特图拍照嵌入 pdf 中不太优雅，过于掉价，因此就想直接生成甘特图嵌入。\n\n在谷歌搜寻了一番，我发现现在的甘特图生成网站都太现代化了，根本不是操作系统课上教的样子了。\n\n![现代化的甘特图](https://static.031130.xyz/uploads/2024/08/12/662888bd5a0af.webp)\n\n所幸我找到了 [gao-keyong/matplotlib-gantt](https://github.com/gao-keyong/matplotlib-gantt/)，虽然只有两个 star（没事，加上我就 3 stars 了），但确实能用，README 中的样例也是我期望的样子。\n\n项目中自带了一个 jupyter 的示例，算得上是非常简单易上手的了，依赖方面只要装好 matplotlib 就可以使用，不存在依赖地狱。尽管是三年前的项目，在我本机的 Python 3.11 上仍然能够正常运行。\n\n![](https://static.031130.xyz/uploads/2024/08/12/66288ba6414d4.webp)\n\n\n\ntuple 中的第一个数字表示从当前时间开始，第二个数字表示持续时间。每一个表示 category 的 list 中可以存在多个 tuple。\n\n给一些咱生成的例子。\n\n***\n\n```python\nfrom gantt import *\ncategory_names = ['P1', 'P2', 'P3', 'P4', 'P5']\n\nresults = {\n    'FCFS': [[(0,2)], [(2,1)], [(3,8)], [(11,4)], [(15,5)]],\n    'SJF': [[(1,2)], [(0,1)], [(12,8)], [(3,4)], [(7,5)]],\n    'non-compreemptive priority': [[(13,2)],[(19,1)],[(0,8)],[(15,4)],[(8,5)]],\n    'RR (quantum=2)': [[(0,2)], [(2,1)],[(3,2),(9,2),(15,2),(18,2)], [(5,2),(11,2)], [(7,2),(13,2),(17,1)]]\n}\n\narrival_t = [0, 0, 0, 0]\n\ngantt(category_names, results, arrival_t).show()\n\n```\n\n![](https://static.031130.xyz/uploads/2024/08/12/662890f78f1da.webp)\n\n***\n\n```python\nfrom gantt import *\ncategory_names = ['P1', 'P2', 'P3', 'P4', 'P5', 'P6']\n\nresults = {\n    '': [[(0,20)], [(25,10),(45,10),(75,5)], [(35,10),(55,5),(80,10)], [(60,15)], [(100,5),(115,5)],[(105,10)]],\n}\n\narrival_t = [0]\n\ngantt(category_names, results, arrival_t).show()\n\n```\n\n![](https://static.031130.xyz/uploads/2024/08/12/662891bfa52fc.webp)\n",{"title":5,"description":12},"posts/generate-gantt-chart-with-python",false,[215],"Python","ypY_wTrVfPvrVNzwa2_majT9Sw2Ik2dgpkQJ0MIamu4",[218,223],{"title":219,"path":220,"stem":221,"date":222,"children":-1},"使用 Github Action 更新用于 rpm 打包的 spec 文件","/2024/04/29/update-a-rpm-spec-by-github-action","posts/update-a-rpm-spec-by-github-action","2024-04-29 19:19:54",{"title":224,"path":225,"stem":226,"date":227,"children":-1},"uniapp 中的图片预加载","/2024/04/01/image-preload-in-uniapp","posts/image-preload-in-uniapp","2024-04-01 05:31:25",0,1761883466249]