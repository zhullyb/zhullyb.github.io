[{"data":1,"prerenderedAt":332},["ShallowReactive",2],{"post-2024-04-01-image-preload-in-uniapp":3,"surround-2024-04-01-image-preload-in-uniapp":321,"randomIndex/2024/04/01/image-preload-in-uniapp/":171},{"id":4,"title":5,"body":6,"date":306,"description":12,"extension":307,"meta":308,"navigation":309,"path":310,"rawbody":311,"seo":312,"stem":313,"sticky":314,"tags":315,"__hash__":320},"posts/posts/image-preload-in-uniapp.md","uniapp 中的图片预加载",{"type":7,"value":8,"toc":304},"minimark",[9,13,16,32,34,43,53,63,70,76,78,85,288,293,300],[10,11,12],"p",{},"最近在做微信小程序的时候遇到了图片资源过大无法正常打包的问题，没什么太好的方法，只能是使用图床托管这些图片资源。但部分图片的体积实在太大，即使是采用了境内 cdn 的图床，即使是采用 webp 对图片进行了压缩，部分图片都需要小几秒去把图片加载出来，这导致的用户体验就不是很好了，因此我们需要实现图片预加载的功能。",[14,15],"hr",{},[10,17,18,19,26,27,31],{},"在 ",[20,21,25],"a",{"href":22,"rel":23},"https://uniapp.dcloud.net.cn/api/preload-page.html#preloadpage",[24],"nofollow","uniapp 的官方文档","中，我找到了 ",[28,29,30],"code",{},"uni.preloadPage(OBJECT)"," 方法。很可惜，这个方法并不支持微信小程序，自然不能完成被预加载页面的图片资源预加载。",[14,33],{},[10,35,36,37,42],{},"经过搜索，在",[20,38,41],{"href":39,"rel":40},"https://frontend.mimiwuqi.com/qianduan/202517.html",[24],"一篇奇奇怪怪的文章","中提到：",[44,45,46],"blockquote",{},[10,47,48,49,52],{},"在UniApp中，图片预加载可以通过使用",[28,50,51],{},"uni.getImageInfo","方法来实现。这个方法可以获取图片的信息，包括宽度、高度等。可以在应用启动时就开始加载图片，以提高后续图片显示的速度。",[10,54,55,56,59,60,62],{},"很遗憾，经过实测，提前使用 ",[28,57,58],{},"getImageInfo()"," 方法并不能实现图片的预加载。",[28,61,58],{}," 获取时的 Type 是 xhr，而后续图片加载时的 Type 为 webp，图片会被重复下载，并没有实现预加载的作用。",[10,64,65],{},[66,67],"img",{"alt":68,"src":69},"下载测试","https://static.031130.xyz/uploads/2024/08/12/6609d97bc4f7f.webp",[10,71,72,73,75],{},"上图中，蓝色部分是 ",[28,74,58],{}," 的网络请求，红色部分是真正的图片加载请求，可谓是一点用都没有，该加载慢还是加载慢。",[14,77],{},[10,79,80,81,84],{},"那有没有什么办法能够实现预加载呢？我没找到优雅的方法，选择在应用的首页创建一个 ",[28,82,83],{},"display: none"," 的 view 将所有的图片先加载一遍。",[86,87,92],"pre",{"className":88,"code":89,"language":90,"meta":91,"style":91},"language-vue shiki shiki-themes one-light one-dark-pro","\u003Ctemplate>\n    \u003Cview style=\"display: none;\">\n        \u003Cimage\n            v-for=\"image in imageToPreload\"\n            :src=\"image\"\n        />\n    \u003C/view>\n\u003C/template>\n\u003Cscript setup lang=\"ts\">\nconst imageToPreload = [\n    \"https://http.cat/100\",\n    \"https://http.cat/200\",\n    \"https://http.cat/300\",\n    \"https://http.cat/400\",\n    \"https://http.cat/500\"\n]\n\u003C/script>\n","vue","",[28,93,94,110,138,147,158,169,175,185,195,216,234,243,251,259,267,273,279],{"__ignoreMap":91},[95,96,99,103,107],"span",{"class":97,"line":98},"line",1,[95,100,102],{"class":101},"s5ixo","\u003C",[95,104,106],{"class":105},"sJa8x","template",[95,108,109],{"class":101},">\n",[95,111,113,116,119,123,126,130,134,136],{"class":97,"line":112},2,[95,114,115],{"class":101},"    \u003C",[95,117,118],{"class":105},"view",[95,120,122],{"class":121},"sAGMh"," style",[95,124,125],{"class":101},"=",[95,127,129],{"class":128},"sDhpE","\"",[95,131,133],{"class":132},"s-4uI","display: none;",[95,135,129],{"class":128},[95,137,109],{"class":101},[95,139,141,144],{"class":97,"line":140},3,[95,142,143],{"class":101},"        \u003C",[95,145,146],{"class":105},"image\n",[95,148,150,153,155],{"class":97,"line":149},4,[95,151,152],{"class":121},"            v-for",[95,154,125],{"class":101},[95,156,157],{"class":128},"\"image in imageToPreload\"\n",[95,159,161,164,166],{"class":97,"line":160},5,[95,162,163],{"class":121},"            :src",[95,165,125],{"class":101},[95,167,168],{"class":128},"\"image\"\n",[95,170,172],{"class":97,"line":171},6,[95,173,174],{"class":101},"        />\n",[95,176,178,181,183],{"class":97,"line":177},7,[95,179,180],{"class":101},"    \u003C/",[95,182,118],{"class":105},[95,184,109],{"class":101},[95,186,188,191,193],{"class":97,"line":187},8,[95,189,190],{"class":101},"\u003C/",[95,192,106],{"class":105},[95,194,109],{"class":101},[95,196,198,200,203,206,209,211,214],{"class":97,"line":197},9,[95,199,102],{"class":101},[95,201,202],{"class":105},"script",[95,204,205],{"class":121}," setup",[95,207,208],{"class":121}," lang",[95,210,125],{"class":101},[95,212,213],{"class":128},"\"ts\"",[95,215,109],{"class":101},[95,217,219,223,227,231],{"class":97,"line":218},10,[95,220,222],{"class":221},"sLKXg","const",[95,224,226],{"class":225},"sNmU0"," imageToPreload",[95,228,230],{"class":229},"s_Sar"," =",[95,232,233],{"class":101}," [\n",[95,235,237,240],{"class":97,"line":236},11,[95,238,239],{"class":128},"    \"https://http.cat/100\"",[95,241,242],{"class":101},",\n",[95,244,246,249],{"class":97,"line":245},12,[95,247,248],{"class":128},"    \"https://http.cat/200\"",[95,250,242],{"class":101},[95,252,254,257],{"class":97,"line":253},13,[95,255,256],{"class":128},"    \"https://http.cat/300\"",[95,258,242],{"class":101},[95,260,262,265],{"class":97,"line":261},14,[95,263,264],{"class":128},"    \"https://http.cat/400\"",[95,266,242],{"class":101},[95,268,270],{"class":97,"line":269},15,[95,271,272],{"class":128},"    \"https://http.cat/500\"\n",[95,274,276],{"class":97,"line":275},16,[95,277,278],{"class":101},"]\n",[95,280,282,284,286],{"class":97,"line":281},17,[95,283,190],{"class":101},[95,285,202],{"class":105},[95,287,109],{"class":101},[10,289,290],{},[66,291],{"alt":68,"src":292},"https://static.031130.xyz/uploads/2024/08/12/6609db8a213da.webp",[10,294,295,296,299],{},"可以看到，红色部分的资源在 size 那一栏变成了 ",[28,297,298],{},"(disk cache)","，加载时间也明显降低，虽然方法不优雅，但起码实现了图片资源的预加载。",[301,302,303],"style",{},"html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html pre.shiki code .sJa8x, html code.shiki .sJa8x{--shiki-default:#E45649;--shiki-dark:#E06C75}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .s-4uI, html code.shiki .s-4uI{--shiki-default:#383A42;--shiki-dark:#98C379}html pre.shiki code .sLKXg, html code.shiki .sLKXg{--shiki-default:#A626A4;--shiki-dark:#C678DD}html pre.shiki code .sNmU0, html code.shiki .sNmU0{--shiki-default:#986801;--shiki-dark:#E5C07B}html pre.shiki code .s_Sar, html code.shiki .s_Sar{--shiki-default:#0184BC;--shiki-dark:#56B6C2}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":91,"searchDepth":112,"depth":112,"links":305},[],"2024-04-01 05:31:25","md",{},true,"/2024/04/01/image-preload-in-uniapp","---\ntitle: uniapp 中的图片预加载\ndate: 2024-04-01 05:31:25\nsticky:\ntags:\n- uniapp\n- Vue.js\n- Web\n- JavaScript\n---\n\n最近在做微信小程序的时候遇到了图片资源过大无法正常打包的问题，没什么太好的方法，只能是使用图床托管这些图片资源。但部分图片的体积实在太大，即使是采用了境内 cdn 的图床，即使是采用 webp 对图片进行了压缩，部分图片都需要小几秒去把图片加载出来，这导致的用户体验就不是很好了，因此我们需要实现图片预加载的功能。\n\n***\n\n在 [uniapp 的官方文档](https://uniapp.dcloud.net.cn/api/preload-page.html#preloadpage)中，我找到了 `uni.preloadPage(OBJECT)` 方法。很可惜，这个方法并不支持微信小程序，自然不能完成被预加载页面的图片资源预加载。\n\n***\n\n经过搜索，在[一篇奇奇怪怪的文章](https://frontend.mimiwuqi.com/qianduan/202517.html)中提到：\n\n> 在UniApp中，图片预加载可以通过使用`uni.getImageInfo`方法来实现。这个方法可以获取图片的信息，包括宽度、高度等。可以在应用启动时就开始加载图片，以提高后续图片显示的速度。\n\n很遗憾，经过实测，提前使用 `getImageInfo()` 方法并不能实现图片的预加载。`getImageInfo()` 获取时的 Type 是 xhr，而后续图片加载时的 Type 为 webp，图片会被重复下载，并没有实现预加载的作用。\n\n![下载测试](https://static.031130.xyz/uploads/2024/08/12/6609d97bc4f7f.webp)\n\n上图中，蓝色部分是 `getImageInfo()` 的网络请求，红色部分是真正的图片加载请求，可谓是一点用都没有，该加载慢还是加载慢。\n\n***\n\n那有没有什么办法能够实现预加载呢？我没找到优雅的方法，选择在应用的首页创建一个 `display: none` 的 view 将所有的图片先加载一遍。\n\n```vue\n\u003Ctemplate>\n    \u003Cview style=\"display: none;\">\n        \u003Cimage\n            v-for=\"image in imageToPreload\"\n            :src=\"image\"\n        />\n    \u003C/view>\n\u003C/template>\n\u003Cscript setup lang=\"ts\">\nconst imageToPreload = [\n    \"https://http.cat/100\",\n    \"https://http.cat/200\",\n    \"https://http.cat/300\",\n    \"https://http.cat/400\",\n    \"https://http.cat/500\"\n]\n\u003C/script>\n```\n\n![下载测试](https://static.031130.xyz/uploads/2024/08/12/6609db8a213da.webp)\n\n可以看到，红色部分的资源在 size 那一栏变成了 `(disk cache)`，加载时间也明显降低，虽然方法不优雅，但起码实现了图片资源的预加载。\n",{"title":5,"description":12},"posts/image-preload-in-uniapp",false,[316,317,318,319],"uniapp","Vue.js","Web","JavaScript","-0239s7iU8BqkV2SoLbsL-ZCkH9msfz-52lpmr4x64A",[322,327],{"title":323,"path":324,"stem":325,"date":326,"children":-1},"使用 Python 生成甘特图(Gantt Chart)","/2024/04/24/generate-gantt-chart-with-python","posts/generate-gantt-chart-with-python","2024-04-24 12:02:58",{"title":328,"path":329,"stem":330,"date":331,"children":-1},"小记 - 尝试拼凑出 apt 仓库中的 deb 包下载地址","/2024/03/13/try-to-compose-download-links-of-deb-packages-in-apt-repository","posts/try-to-compose-download-links-of-deb-packages-in-apt-repository","2024-03-13 21:55:04",1761883463991]