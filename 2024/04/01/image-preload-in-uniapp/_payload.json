[{"data":1,"prerenderedAt":356},["ShallowReactive",2],{"post-2024-04-01-image-preload-in-uniapp":3,"surround-2024-04-01-image-preload-in-uniapp":344,"randomIndex/2024/04/01/image-preload-in-uniapp/":355},{"id":4,"title":5,"body":6,"date":329,"description":12,"extension":330,"meta":331,"navigation":332,"path":333,"rawbody":334,"seo":335,"stem":336,"sticky":337,"tags":338,"__hash__":343},"posts/posts/image-preload-in-uniapp.md","uniapp 中的图片预加载",{"type":7,"value":8,"toc":327},"minimark",[9,13,16,32,34,43,53,63,70,76,78,85,311,316,323],[10,11,12],"p",{},"最近在做微信小程序的时候遇到了图片资源过大无法正常打包的问题，没什么太好的方法，只能是使用图床托管这些图片资源。但部分图片的体积实在太大，即使是采用了境内 cdn 的图床，即使是采用 webp 对图片进行了压缩，部分图片都需要小几秒去把图片加载出来，这导致的用户体验就不是很好了，因此我们需要实现图片预加载的功能。",[14,15],"hr",{},[10,17,18,19,26,27,31],{},"在 ",[20,21,25],"a",{"href":22,"rel":23},"https://uniapp.dcloud.net.cn/api/preload-page.html#preloadpage",[24],"nofollow","uniapp 的官方文档","中，我找到了 ",[28,29,30],"code",{},"uni.preloadPage(OBJECT)"," 方法。很可惜，这个方法并不支持微信小程序，自然不能完成被预加载页面的图片资源预加载。",[14,33],{},[10,35,36,37,42],{},"经过搜索，在",[20,38,41],{"href":39,"rel":40},"https://frontend.mimiwuqi.com/qianduan/202517.html",[24],"一篇奇奇怪怪的文章","中提到：",[44,45,46],"blockquote",{},[10,47,48,49,52],{},"在UniApp中，图片预加载可以通过使用",[28,50,51],{},"uni.getImageInfo","方法来实现。这个方法可以获取图片的信息，包括宽度、高度等。可以在应用启动时就开始加载图片，以提高后续图片显示的速度。",[10,54,55,56,59,60,62],{},"很遗憾，经过实测，提前使用 ",[28,57,58],{},"getImageInfo()"," 方法并不能实现图片的预加载。",[28,61,58],{}," 获取时的 Type 是 xhr，而后续图片加载时的 Type 为 webp，图片会被重复下载，并没有实现预加载的作用。",[10,64,65],{},[66,67],"img",{"alt":68,"src":69},"下载测试","https://static.031130.xyz/uploads/2024/08/12/6609d97bc4f7f.webp",[10,71,72,73,75],{},"上图中，蓝色部分是 ",[28,74,58],{}," 的网络请求，红色部分是真正的图片加载请求，可谓是一点用都没有，该加载慢还是加载慢。",[14,77],{},[10,79,80,81,84],{},"那有没有什么办法能够实现预加载呢？我没找到优雅的方法，选择在应用的首页创建一个 ",[28,82,83],{},"display: none"," 的 view 将所有的图片先加载一遍。",[86,87,92],"pre",{"className":88,"code":89,"language":90,"meta":91,"style":91},"language-vue shiki shiki-themes one-light one-dark-pro","\u003Ctemplate>\n    \u003Cview style=\"display: none;\">\n        \u003Cimage\n            v-for=\"image in imageToPreload\"\n            :src=\"image\"\n        />\n    \u003C/view>\n\u003C/template>\n\u003Cscript setup lang=\"ts\">\nconst imageToPreload = [\n    \"https://http.cat/100\",\n    \"https://http.cat/200\",\n    \"https://http.cat/300\",\n    \"https://http.cat/400\",\n    \"https://http.cat/500\"\n]\n\u003C/script>\n","vue","",[28,93,94,110,143,152,176,193,199,209,219,241,257,266,274,282,290,296,302],{"__ignoreMap":91},[95,96,99,103,107],"span",{"class":97,"line":98},"line",1,[95,100,102],{"class":101},"s5ixo","\u003C",[95,104,106],{"class":105},"sJa8x","template",[95,108,109],{"class":101},">\n",[95,111,113,116,119,123,126,129,132,136,139,141],{"class":97,"line":112},2,[95,114,115],{"class":101},"    \u003C",[95,117,118],{"class":105},"view",[95,120,122],{"class":121},"sAGMh"," style",[95,124,125],{"class":101},"=",[95,127,128],{"class":101},"\"",[95,130,131],{"class":101},"display: ",[95,133,135],{"class":134},"sYebD","none",[95,137,138],{"class":101},";",[95,140,128],{"class":101},[95,142,109],{"class":101},[95,144,146,149],{"class":97,"line":145},3,[95,147,148],{"class":101},"        \u003C",[95,150,151],{"class":105},"image\n",[95,153,155,159,161,163,167,170,173],{"class":97,"line":154},4,[95,156,158],{"class":157},"sLKXg","            v-for",[95,160,125],{"class":101},[95,162,128],{"class":101},[95,164,166],{"class":165},"sz0mV","image",[95,168,169],{"class":157}," in",[95,171,172],{"class":165}," imageToPreload",[95,174,175],{"class":101},"\"\n",[95,177,179,182,185,187,189,191],{"class":97,"line":178},5,[95,180,181],{"class":101},"            :",[95,183,184],{"class":121},"src",[95,186,125],{"class":101},[95,188,128],{"class":101},[95,190,166],{"class":165},[95,192,175],{"class":101},[95,194,196],{"class":97,"line":195},6,[95,197,198],{"class":101},"        />\n",[95,200,202,205,207],{"class":97,"line":201},7,[95,203,204],{"class":101},"    \u003C/",[95,206,118],{"class":105},[95,208,109],{"class":101},[95,210,212,215,217],{"class":97,"line":211},8,[95,213,214],{"class":101},"\u003C/",[95,216,106],{"class":105},[95,218,109],{"class":101},[95,220,222,224,227,230,233,235,239],{"class":97,"line":221},9,[95,223,102],{"class":101},[95,225,226],{"class":105},"script",[95,228,229],{"class":121}," setup",[95,231,232],{"class":121}," lang",[95,234,125],{"class":101},[95,236,238],{"class":237},"sDhpE","\"ts\"",[95,240,109],{"class":101},[95,242,244,247,250,254],{"class":97,"line":243},10,[95,245,246],{"class":157},"const",[95,248,172],{"class":249},"sNmU0",[95,251,253],{"class":252},"s_Sar"," =",[95,255,256],{"class":101}," [\n",[95,258,260,263],{"class":97,"line":259},11,[95,261,262],{"class":237},"    \"https://http.cat/100\"",[95,264,265],{"class":101},",\n",[95,267,269,272],{"class":97,"line":268},12,[95,270,271],{"class":237},"    \"https://http.cat/200\"",[95,273,265],{"class":101},[95,275,277,280],{"class":97,"line":276},13,[95,278,279],{"class":237},"    \"https://http.cat/300\"",[95,281,265],{"class":101},[95,283,285,288],{"class":97,"line":284},14,[95,286,287],{"class":237},"    \"https://http.cat/400\"",[95,289,265],{"class":101},[95,291,293],{"class":97,"line":292},15,[95,294,295],{"class":237},"    \"https://http.cat/500\"\n",[95,297,299],{"class":97,"line":298},16,[95,300,301],{"class":101},"]\n",[95,303,305,307,309],{"class":97,"line":304},17,[95,306,214],{"class":101},[95,308,226],{"class":105},[95,310,109],{"class":101},[10,312,313],{},[66,314],{"alt":68,"src":315},"https://static.031130.xyz/uploads/2024/08/12/6609db8a213da.webp",[10,317,318,319,322],{},"可以看到，红色部分的资源在 size 那一栏变成了 ",[28,320,321],{},"(disk cache)","，加载时间也明显降低，虽然方法不优雅，但起码实现了图片资源的预加载。",[324,325,326],"style",{},"html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html pre.shiki code .sJa8x, html code.shiki .sJa8x{--shiki-default:#E45649;--shiki-dark:#E06C75}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}html pre.shiki code .sYebD, html code.shiki .sYebD{--shiki-default:#383A42;--shiki-dark:#D19A66}html pre.shiki code .sLKXg, html code.shiki .sLKXg{--shiki-default:#A626A4;--shiki-dark:#C678DD}html pre.shiki code .sz0mV, html code.shiki .sz0mV{--shiki-default:#383A42;--shiki-dark:#E06C75}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .sNmU0, html code.shiki .sNmU0{--shiki-default:#986801;--shiki-dark:#E5C07B}html pre.shiki code .s_Sar, html code.shiki .s_Sar{--shiki-default:#0184BC;--shiki-dark:#56B6C2}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":91,"searchDepth":112,"depth":112,"links":328},[],"2024-04-01 05:31:25","md",{},true,"/2024/04/01/image-preload-in-uniapp","---\ntitle: uniapp 中的图片预加载\ndate: 2024-04-01 05:31:25\nsticky:\ntags:\n- uniapp\n- Vue.js\n- Web\n- JavaScript\n---\n\n最近在做微信小程序的时候遇到了图片资源过大无法正常打包的问题，没什么太好的方法，只能是使用图床托管这些图片资源。但部分图片的体积实在太大，即使是采用了境内 cdn 的图床，即使是采用 webp 对图片进行了压缩，部分图片都需要小几秒去把图片加载出来，这导致的用户体验就不是很好了，因此我们需要实现图片预加载的功能。\n\n***\n\n在 [uniapp 的官方文档](https://uniapp.dcloud.net.cn/api/preload-page.html#preloadpage)中，我找到了 `uni.preloadPage(OBJECT)` 方法。很可惜，这个方法并不支持微信小程序，自然不能完成被预加载页面的图片资源预加载。\n\n***\n\n经过搜索，在[一篇奇奇怪怪的文章](https://frontend.mimiwuqi.com/qianduan/202517.html)中提到：\n\n> 在UniApp中，图片预加载可以通过使用`uni.getImageInfo`方法来实现。这个方法可以获取图片的信息，包括宽度、高度等。可以在应用启动时就开始加载图片，以提高后续图片显示的速度。\n\n很遗憾，经过实测，提前使用 `getImageInfo()` 方法并不能实现图片的预加载。`getImageInfo()` 获取时的 Type 是 xhr，而后续图片加载时的 Type 为 webp，图片会被重复下载，并没有实现预加载的作用。\n\n![下载测试](https://static.031130.xyz/uploads/2024/08/12/6609d97bc4f7f.webp)\n\n上图中，蓝色部分是 `getImageInfo()` 的网络请求，红色部分是真正的图片加载请求，可谓是一点用都没有，该加载慢还是加载慢。\n\n***\n\n那有没有什么办法能够实现预加载呢？我没找到优雅的方法，选择在应用的首页创建一个 `display: none` 的 view 将所有的图片先加载一遍。\n\n```vue\n\u003Ctemplate>\n    \u003Cview style=\"display: none;\">\n        \u003Cimage\n            v-for=\"image in imageToPreload\"\n            :src=\"image\"\n        />\n    \u003C/view>\n\u003C/template>\n\u003Cscript setup lang=\"ts\">\nconst imageToPreload = [\n    \"https://http.cat/100\",\n    \"https://http.cat/200\",\n    \"https://http.cat/300\",\n    \"https://http.cat/400\",\n    \"https://http.cat/500\"\n]\n\u003C/script>\n```\n\n![下载测试](https://static.031130.xyz/uploads/2024/08/12/6609db8a213da.webp)\n\n可以看到，红色部分的资源在 size 那一栏变成了 `(disk cache)`，加载时间也明显降低，虽然方法不优雅，但起码实现了图片资源的预加载。\n",{"title":5,"description":12},"posts/image-preload-in-uniapp",false,[339,340,341,342],"uniapp","Vue.js","Web","JavaScript","7nEmN_qYpX-zsZhXIH2CpZ__bVfktOlPxrJnoWkVPtc",[345,350],{"title":346,"path":347,"stem":348,"date":349,"children":-1},"使用 Python 生成甘特图(Gantt Chart)","/2024/04/24/generate-gantt-chart-with-python","posts/generate-gantt-chart-with-python","2024-04-24 12:02:58",{"title":351,"path":352,"stem":353,"date":354,"children":-1},"小记 - 尝试拼凑出 apt 仓库中的 deb 包下载地址","/2024/03/13/try-to-compose-download-links-of-deb-packages-in-apt-repository","posts/try-to-compose-download-links-of-deb-packages-in-apt-repository","2024-03-13 21:55:04",27,1761739878963]