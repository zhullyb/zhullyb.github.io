[{"data":1,"prerenderedAt":276},["ShallowReactive",2],{"post-2024-03-13-try-to-compose-download-links-of-deb-packages-in-apt-repository":3,"surround-2024-03-13-try-to-compose-download-links-of-deb-packages-in-apt-repository":264,"randomIndex/2024/03/13/try-to-compose-download-links-of-deb-packages-in-apt-repository/":275},{"id":4,"title":5,"body":6,"date":250,"description":12,"extension":251,"meta":252,"navigation":253,"path":254,"rawbody":255,"seo":256,"stem":257,"sticky":258,"tags":259,"__hash__":263},"posts/posts/try-to-compose-download-links-of-deb-packages-in-apt-repository.md","小记 - 尝试拼凑出 apt 仓库中的 deb 包下载地址",{"type":7,"value":8,"toc":247},"minimark",[9,13,24,27,30,37,45,48,51,59,75,144,151,157,168,174,177,180,217,223,234,237,243],[10,11,12],"p",{},"大概一周前，有一个来源不明的 Linux 微信，从包的结构来看是基于 qt 实现的图形化界面，deb 包中的 control 信息表明是腾讯团队官方出品的。今天听人说 UOS 的商店上架了最新的微信，便尝试从 UOS 的官方仓库提取下载链接，帮助 AUR Maintainer 获取到新的地址。",[10,14,15,16,23],{},"在我的",[17,18,22],"a",{"href":19,"rel":20},"https://zhul.in/2021/11/20/what-is-deepin-elf-verify/",[21],"nofollow","《deepin-elf-verify究竟是何物？》","这篇文章中，我成功从 uos.deepin.cn 下载到了来自 UOS 中的软件包。可惜，当我采用同样的方法搜索 weixin 或者 wechat 字样时，没有得到任何结果。",[10,25,26],{},"UOS 上的软件来源起码来自两个仓库，一个是与系统有关的软件，比如 Linux Kernel，GCC 一类开源软件，应该就是来自我之前下载到 deepin-elf-verify 的那个源。除此之外，还有一个 appstore 源，里面存放的都是应用商店中上架的软件（大部分可能是闭源的）。",[10,28,29],{},"在 chinauos.com 下载到最新的 ISO 安装镜像后，直接在虚拟机中走完正常的安装流畅，然后直捣黄龙。",[10,31,32],{},[33,34],"img",{"alt":35,"src":36},"源地址","https://static.031130.xyz/uploads/2024/08/12/65f1b344e5581.webp",[10,38,39,40,44],{},"可以看出，",[41,42,43],"code",{},"/etc/apt/sources.list.d/appstore.list"," 文件中列出的源很有可能就是我们要找的新版微信的所在源。",[10,46,47],{},"可惜直接访问的时候，源地址给出了 403。他们似乎不愿意公开源地址的 filelist index。",[10,49,50],{},"不过没关系，既然 UOS Desktop 目前仍然依赖 APT 实现软件安装，那它的源应该仍然符合 Debian 的 APT Repository 目录结构。",[10,52,53,54],{},"根据 ",[17,55,58],{"href":56,"rel":57},"https://wiki.debian.org/DebianRepository/Format",[21],"DebianWiki 中的描述",[60,61,62,65],"blockquote",{},[10,63,64],{},"gives an example:",[66,67,72],"pre",{"className":68,"code":70,"language":71},[69],"language-text","deb https://deb.debian.org/debian stable main contrib non-free\n","text",[41,73,70],{"__ignoreMap":74},"",[60,76,77,80,98,131],{},[10,78,79],{},"An archive can have either source packages or binary packages or both but they have to be specified separately to apt.",[10,81,82,83,89,90,93,94,97],{},"The uri, in this case ",[84,85,86],"em",{},[41,87,88],{},"https://deb.debian.org/debian"," specifies the root of the archive. Often Debian archives are in the ",[84,91,92],{},"debian/"," directory on the server but can be anywhere else (many mirrors for example have it in a ",[84,95,96],{},"pub/linux/debian"," directory, for example).",[10,99,100,101,104,105,109,110,113,114,117,118,121,122,125,126],{},"The distribution part (",[84,102,103],{},"stable"," in this case) specifies a subdirectory in ",[106,107,108],"strong",{},"$ARCHIVE_ROOT/dists",". It can contain additional slashes to specify subdirectories nested deeper, eg. ",[84,111,112],{},"stable/updates",". distribution typically corresponds to ",[106,115,116],{},"Suite"," or ",[106,119,120],{},"Codename"," specified in the ",[106,123,124],{},"Release"," files. ",[84,127,128],{},[106,129,130],{},"FIXME is this enforced anyhow?",[10,132,133,134,117,137,139,140,143],{},"To download packages from a repository apt would download an ",[106,135,136],{},"InRelease",[106,138,124],{}," file from the ",[106,141,142],{},"$ARCHIVE_ROOT/dists/$DISTRIBUTION"," directory.",[10,145,146,147,150],{},"我尝试了访问 ",[41,148,149],{},"https://pro-store-packages.uniontech.com/appstore/dists/eagle-pro/Release","，获得了一系列索引文件的索引。",[10,152,153],{},[33,154],{"alt":155,"src":156},"索引的索引（很拗口）","https://static.031130.xyz/uploads/2024/08/12/65f1b5166810a.webp",[10,158,159,160,163,164],{},"第一段中就能看到熟悉的 ",[41,161,162],{},"Packages"," 文件。根据我 deepin-elf-verify 相关博客中记载，这个文件中会保存 deb 文件的相对路径。我们先拼出 amd64 架构的 Packages 文件下载链接: ",[17,165,166],{"href":166,"rel":167},"https://pro-store-packages.uniontech.com/appstore/dists/eagle-pro/appstore/binary-amd64/Packages",[21],[10,169,170],{},[33,171],{"alt":172,"src":173},"deb 包详细信息","https://static.031130.xyz/uploads/2024/08/12/65f1b5faccc86.webp",[10,175,176],{},"这里可以看到源中每一个 deb 包的信息。图中红色方框框出的便是其中一个 deb 包在源中的相对路径。",[10,178,179],{},"我们可以使用 grep 命令去检索 weixin 或者 wechat 关键词",[66,181,185],{"className":182,"code":183,"language":184,"meta":74,"style":74},"language-bash shiki shiki-themes one-light one-dark-pro","curl -sL https://pro-store-packages.uniontech.com/appstore/dists/eagle-pro/appstore/binary-amd64/Packages | grep -E \"weixin|wechat\"\n","bash",[41,186,187],{"__ignoreMap":74},[188,189,192,196,200,204,208,211,214],"span",{"class":190,"line":191},"line",1,[188,193,195],{"class":194},"sAdtL","curl",[188,197,199],{"class":198},"sAGMh"," -sL",[188,201,203],{"class":202},"sDhpE"," https://pro-store-packages.uniontech.com/appstore/dists/eagle-pro/appstore/binary-amd64/Packages",[188,205,207],{"class":206},"s5ixo"," | ",[188,209,210],{"class":194},"grep",[188,212,213],{"class":198}," -E",[188,215,216],{"class":202}," \"weixin|wechat\"\n",[10,218,219],{},[33,220],{"alt":221,"src":222},"获取到我们想要的 deb 包的相对路径","https://static.031130.xyz/uploads/2024/08/12/65f1b6a4c3239.webp",[10,224,225,226,229,230],{},"在这个路径前加上之前 ",[41,227,228],{},"appstore.list"," 文件中给出的 url 前缀，即可拼凑出 deb 包的完整下载地址: ",[17,231,232],{"href":232,"rel":233},"https://pro-store-packages.uniontech.com/appstore/pool/appstore/c/com.tencent.wechat/com.tencent.wechat_1.0.0.236_amd64.deb",[21],[10,235,236],{},"放到浏览器中尝试，果然可以正常下载",[10,238,239],{},[33,240],{"alt":241,"src":242},"正常下载","https://static.031130.xyz/uploads/2024/08/12/65f1b73567121.webp",[244,245,246],"style",{},"html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}html pre.shiki code .sDhpE, html code.shiki .sDhpE{--shiki-default:#50A14F;--shiki-dark:#98C379}html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":74,"searchDepth":248,"depth":248,"links":249},2,[],"2024-03-13 21:55:04","md",{},true,"/2024/03/13/try-to-compose-download-links-of-deb-packages-in-apt-repository","---\ntitle: 小记 - 尝试拼凑出 apt 仓库中的 deb 包下载地址\ndate: 2024-03-13 21:55:04\nsticky:\ntags:\n- Linux\n- Apt\n- deepin\n---\n\n大概一周前，有一个来源不明的 Linux 微信，从包的结构来看是基于 qt 实现的图形化界面，deb 包中的 control 信息表明是腾讯团队官方出品的。今天听人说 UOS 的商店上架了最新的微信，便尝试从 UOS 的官方仓库提取下载链接，帮助 AUR Maintainer 获取到新的地址。\n\n在我的[《deepin-elf-verify究竟是何物？》](https://zhul.in/2021/11/20/what-is-deepin-elf-verify/)这篇文章中，我成功从 uos.deepin.cn 下载到了来自 UOS 中的软件包。可惜，当我采用同样的方法搜索 weixin 或者 wechat 字样时，没有得到任何结果。\n\nUOS 上的软件来源起码来自两个仓库，一个是与系统有关的软件，比如 Linux Kernel，GCC 一类开源软件，应该就是来自我之前下载到 deepin-elf-verify 的那个源。除此之外，还有一个 appstore 源，里面存放的都是应用商店中上架的软件（大部分可能是闭源的）。\n\n在 chinauos.com 下载到最新的 ISO 安装镜像后，直接在虚拟机中走完正常的安装流畅，然后直捣黄龙。\n\n![源地址](https://static.031130.xyz/uploads/2024/08/12/65f1b344e5581.webp)\n\n可以看出，`/etc/apt/sources.list.d/appstore.list` 文件中列出的源很有可能就是我们要找的新版微信的所在源。\n\n可惜直接访问的时候，源地址给出了 403。他们似乎不愿意公开源地址的 filelist index。\n\n不过没关系，既然 UOS Desktop 目前仍然依赖 APT 实现软件安装，那它的源应该仍然符合 Debian 的 APT Repository 目录结构。\n\n根据 [DebianWiki 中的描述](https://wiki.debian.org/DebianRepository/Format)\n\n> gives an example: \n>\n> ```\n> deb https://deb.debian.org/debian stable main contrib non-free\n> ```\n\n> An archive can have either source packages or binary packages or both but they have to be specified separately to apt. \n>\n> The uri, in this case *`https://deb.debian.org/debian`* specifies the root of the archive. Often Debian archives are in the *debian/* directory on the server but can be anywhere else (many mirrors for example have it in a *pub/linux/debian* directory, for example). \n>\n> The distribution part (*stable* in this case) specifies a subdirectory in **$ARCHIVE_ROOT/dists**. It can contain additional slashes to specify subdirectories nested deeper, eg. *stable/updates*. distribution typically corresponds to **Suite** or **Codename** specified in the **Release** files. ***FIXME is this enforced anyhow?*** \n>\n> To download packages from a repository apt would download an **InRelease** or **Release** file from the **$ARCHIVE_ROOT/dists/$DISTRIBUTION** directory. \n\n我尝试了访问 `https://pro-store-packages.uniontech.com/appstore/dists/eagle-pro/Release`，获得了一系列索引文件的索引。\n\n![索引的索引（很拗口）](https://static.031130.xyz/uploads/2024/08/12/65f1b5166810a.webp)\n\n第一段中就能看到熟悉的 `Packages` 文件。根据我 deepin-elf-verify 相关博客中记载，这个文件中会保存 deb 文件的相对路径。我们先拼出 amd64 架构的 Packages 文件下载链接: https://pro-store-packages.uniontech.com/appstore/dists/eagle-pro/appstore/binary-amd64/Packages\n\n![deb 包详细信息](https://static.031130.xyz/uploads/2024/08/12/65f1b5faccc86.webp)\n\n这里可以看到源中每一个 deb 包的信息。图中红色方框框出的便是其中一个 deb 包在源中的相对路径。\n\n我们可以使用 grep 命令去检索 weixin 或者 wechat 关键词\n\n```bash\ncurl -sL https://pro-store-packages.uniontech.com/appstore/dists/eagle-pro/appstore/binary-amd64/Packages | grep -E \"weixin|wechat\"\n```\n\n![获取到我们想要的 deb 包的相对路径](https://static.031130.xyz/uploads/2024/08/12/65f1b6a4c3239.webp)\n\n在这个路径前加上之前 `appstore.list` 文件中给出的 url 前缀，即可拼凑出 deb 包的完整下载地址: https://pro-store-packages.uniontech.com/appstore/pool/appstore/c/com.tencent.wechat/com.tencent.wechat_1.0.0.236_amd64.deb\n\n放到浏览器中尝试，果然可以正常下载\n\n![正常下载](https://static.031130.xyz/uploads/2024/08/12/65f1b73567121.webp)\n",{"title":5,"description":12},"posts/try-to-compose-download-links-of-deb-packages-in-apt-repository",false,[260,261,262],"Linux","Apt","deepin","_si14gSzqwzc_H3SAS-FO4m9H4LRmEkiRFZi3Rnxq2w",[265,270],{"title":266,"path":267,"stem":268,"date":269,"children":-1},"uniapp 中的图片预加载","/2024/04/01/image-preload-in-uniapp","posts/image-preload-in-uniapp","2024-04-01 05:31:25",{"title":271,"path":272,"stem":273,"date":274,"children":-1},"在 Linux 下使用 mitmproxy 抓取 HTTPS 流量","/2024/02/29/capture-https-traffic-on-linux-with-mitmproxy","posts/capture-https-traffic-on-linux-with-mitmproxy","2024-02-29 22:03:58",5,1761738775292]